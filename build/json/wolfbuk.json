{"io.wolfscript.0":{"namespace":"","title":"More generalized classes in the API.","description":"More generalized classes in the API.","name":"io.wolfscript","qualifiedname":"io.wolfscript.0","packagename":"io.wolfscript","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.Builder","io.wolfscript.Color","io.wolfscript.WolfScript","io.wolfscript.WorldCreator"],"interfaces":["io.wolfscript.BanEntry","io.wolfscript.BlockChangeDelegate","io.wolfscript.Chunk","io.wolfscript.ChunkSnapshot","io.wolfscript.Server","io.wolfscript.TravelAgent","io.wolfscript.UnsafeValues","io.wolfscript.WorldBorder"],"enums":["io.wolfscript.Achievement","io.wolfscript.Art","io.wolfscript.ChatColor","io.wolfscript.CoalType","io.wolfscript.CropState","io.wolfscript.Difficulty","io.wolfscript.DyeColor","io.wolfscript.EntityEffect","io.wolfscript.Environment","io.wolfscript.GameMode","io.wolfscript.GrassSpecies","io.wolfscript.Instrument","io.wolfscript.Material","io.wolfscript.NetherWartsState","io.wolfscript.PortalType","io.wolfscript.Rotation","io.wolfscript.SandstoneType","io.wolfscript.SkullType","io.wolfscript.Sound","io.wolfscript.Tone","io.wolfscript.TreeSpecies","io.wolfscript.TreeType","io.wolfscript.Type","io.wolfscript.WarningState","io.wolfscript.WeatherType","io.wolfscript.WorldType"],"namespaces":["io.wolfscript.block.0","io.wolfscript.command.0","io.wolfscript.configuration.0","io.wolfscript.conversations.0","io.wolfscript.enchantments.0","io.wolfscript.entity.0","io.wolfscript.event.0","io.wolfscript.generator.0","io.wolfscript.help.0","io.wolfscript.inventory.0","io.wolfscript.map.0","io.wolfscript.material.0","io.wolfscript.metadata.0","io.wolfscript.permissions.0","io.wolfscript.plugin.0","io.wolfscript.potion.0","io.wolfscript.projectiles.0","io.wolfscript.scheduler.0","io.wolfscript.scoreboard.0","io.wolfscript.util.0"],"properties":[]},"io.wolfscript.Achievement":{"namespace":"io.wolfscript","title":"Represents an achievement, which may be given to players.","description":"Represents an achievement, which may be given to players.","name":"Achievement","qualifiedname":"io.wolfscript.Achievement","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"OPEN_INVENTORY","value":"","title":"OPEN_INVENTORY Achievement","description":"OPEN_INVENTORY Achievement"},{"code":"MINE_WOOD","value":"OPEN_INVENTORY","title":"MINE_WOOD Achievement","description":"MINE_WOOD Achievement"},{"code":"BUILD_WORKBENCH","value":"MINE_WOOD","title":"BUILD_WORKBENCH Achievement","description":"BUILD_WORKBENCH Achievement"},{"code":"BUILD_PICKAXE","value":"BUILD_WORKBENCH","title":"BUILD_PICKAXE Achievement","description":"BUILD_PICKAXE Achievement"},{"code":"BUILD_FURNACE","value":"BUILD_PICKAXE","title":"BUILD_FURNACE Achievement","description":"BUILD_FURNACE Achievement"},{"code":"ACQUIRE_IRON","value":"BUILD_FURNACE","title":"ACQUIRE_IRON Achievement","description":"ACQUIRE_IRON Achievement"},{"code":"BUILD_HOE","value":"BUILD_WORKBENCH","title":"BUILD_HOE Achievement","description":"BUILD_HOE Achievement"},{"code":"MAKE_BREAD","value":"BUILD_HOE","title":"MAKE_BREAD Achievement","description":"MAKE_BREAD Achievement"},{"code":"BAKE_CAKE","value":"BUILD_HOE","title":"BAKE_CAKE Achievement","description":"BAKE_CAKE Achievement"},{"code":"BUILD_BETTER_PICKAXE","value":"BUILD_PICKAXE","title":"BUILD_BETTER_PICKAXE Achievement","description":"BUILD_BETTER_PICKAXE Achievement"},{"code":"COOK_FISH","value":"BUILD_FURNACE","title":"COOK_FISH Achievement","description":"COOK_FISH Achievement"},{"code":"ON_A_RAIL","value":"ACQUIRE_IRON","title":"ON_A_RAIL Achievement","description":"ON_A_RAIL Achievement"},{"code":"BUILD_SWORD","value":"BUILD_WORKBENCH","title":"BUILD_SWORD Achievement","description":"BUILD_SWORD Achievement"},{"code":"KILL_ENEMY","value":"BUILD_SWORD","title":"KILL_ENEMY Achievement","description":"KILL_ENEMY Achievement"},{"code":"KILL_COW","value":"BUILD_SWORD","title":"KILL_COW Achievement","description":"KILL_COW Achievement"},{"code":"FLY_PIG","value":"KILL_COW","title":"FLY_PIG Achievement","description":"FLY_PIG Achievement"},{"code":"SNIPE_SKELETON","value":"KILL_ENEMY","title":"SNIPE_SKELETON Achievement","description":"SNIPE_SKELETON Achievement"},{"code":"GET_DIAMONDS","value":"ACQUIRE_IRON","title":"GET_DIAMONDS Achievement","description":"GET_DIAMONDS Achievement"},{"code":"NETHER_PORTAL","value":"GET_DIAMONDS","title":"NETHER_PORTAL Achievement","description":"NETHER_PORTAL Achievement"},{"code":"GHAST_RETURN","value":"NETHER_PORTAL","title":"GHAST_RETURN Achievement","description":"GHAST_RETURN Achievement"},{"code":"GET_BLAZE_ROD","value":"NETHER_PORTAL","title":"GET_BLAZE_ROD Achievement","description":"GET_BLAZE_ROD Achievement"},{"code":"BREW_POTION","value":"GET_BLAZE_ROD","title":"BREW_POTION Achievement","description":"BREW_POTION Achievement"},{"code":"END_PORTAL","value":"GET_BLAZE_ROD","title":"END_PORTAL Achievement","description":"END_PORTAL Achievement"},{"code":"THE_END","value":"END_PORTAL","title":"THE_END Achievement","description":"THE_END Achievement"},{"code":"ENCHANTMENTS","value":"GET_DIAMONDS","title":"ENCHANTMENTS Achievement","description":"ENCHANTMENTS Achievement"},{"code":"OVERKILL","value":"ENCHANTMENTS","title":"OVERKILL Achievement","description":"OVERKILL Achievement"},{"code":"BOOKCASE","value":"ENCHANTMENTS","title":"BOOKCASE Achievement","description":"BOOKCASE Achievement"},{"code":"EXPLORE_ALL_BIOMES","value":"END_PORTAL","title":"EXPLORE_ALL_BIOMES Achievement","description":"EXPLORE_ALL_BIOMES Achievement"},{"code":"SPAWN_WITHER","value":"THE_END","title":"SPAWN_WITHER Achievement","description":"SPAWN_WITHER Achievement"},{"code":"KILL_WITHER","value":"SPAWN_WITHER","title":"KILL_WITHER Achievement","description":"KILL_WITHER Achievement"},{"code":"FULL_BEACON","value":"KILL_WITHER","title":"FULL_BEACON Achievement","description":"FULL_BEACON Achievement"},{"code":"BREED_COW","value":"KILL_COW","title":"BREED_COW Achievement","description":"BREED_COW Achievement"},{"code":"DIAMONDS_TO_YOU","value":"GET_DIAMONDS","title":"DIAMONDS_TO_YOU Achievement","description":"DIAMONDS_TO_YOU Achievement"}],"properties":[{"name":"Parent","modifier":"readonly","args":[],"description":"Get: Returns whether or not this achievement has a parent achievement.","doc":{"return":["whether the achievement has a parent achievement /\n    public boolean hasParent() {\n        return parent != null;\n    }\n\n    /** Returns the parent achievement of this achievement, or null if none.","the parent achievement or null"]},"return":"io.wolfscript.Achievement","scope":"public","title":"Get: Returns whether or not this achievement has a parent achievement."}]},"io.wolfscript.Art":{"namespace":"io.wolfscript","title":"Represents the art on a painting","description":"Represents the art on a painting","name":"Art","qualifiedname":"io.wolfscript.Art","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Gets the width of the painting, in blocks","description":"Gets the width of the painting, in blocks","doc":{"return":["The width of the painting, in blocks /\n    public int getBlockWidth() {\n        return width;\n    }\n\n    /** Gets the height of the painting, in blocks","The height of the painting, in blocks /\n    public int getBlockHeight() {\n        return height;\n    }\n\n    /** Get the ID of this painting.","The ID of this painting","The painting","The painting"],"deprecated":["Magic value /\n    @Deprecated\n    public int getId() {\n        return id;\n    }\n\n    /** Get a painting by its numeric ID","Magic value /\n    @Deprecated\n    public static Art getById(int id) {\n        return BY_ID.get(id);\n    }\n\n    /** Get a painting by its unique name <p> This ignores underscores and capitalization"]},"scope":"public","describe":"static","return":"io.wolfscript.Art","name":"getByName","args":[{"name":"name","type":"String","description":"The name"}]}],"imports":["java.util.HashMap","org.apache.commons.lang.Validate","com.google.common.collect.Maps"],"enum":[{"code":"0","value":"","title":"0 Art","description":"0 Art"},{"code":"1","value":"","title":"1 Art","description":"1 Art"},{"code":"1","value":"","title":"1 Art","description":"1 Art"},{"code":"1","value":"","title":"1 Art","description":"1 Art"},{"code":"2","value":"","title":"2 Art","description":"2 Art"},{"code":"1","value":"","title":"1 Art","description":"1 Art"},{"code":"3","value":"","title":"3 Art","description":"3 Art"},{"code":"1","value":"","title":"1 Art","description":"1 Art"},{"code":"4","value":"","title":"4 Art","description":"4 Art"},{"code":"1","value":"","title":"1 Art","description":"1 Art"},{"code":"5","value":"","title":"5 Art","description":"5 Art"},{"code":"1","value":"","title":"1 Art","description":"1 Art"},{"code":"6","value":"","title":"6 Art","description":"6 Art"},{"code":"1","value":"","title":"1 Art","description":"1 Art"},{"code":"7","value":"","title":"7 Art","description":"7 Art"},{"code":"2","value":"","title":"2 Art","description":"2 Art"},{"code":"8","value":"","title":"8 Art","description":"8 Art"},{"code":"2","value":"","title":"2 Art","description":"2 Art"},{"code":"9","value":"","title":"9 Art","description":"9 Art"},{"code":"2","value":"","title":"2 Art","description":"2 Art"},{"code":"10","value":"","title":"10 Art","description":"10 Art"},{"code":"2","value":"","title":"2 Art","description":"2 Art"},{"code":"11","value":"","title":"11 Art","description":"11 Art"},{"code":"2","value":"","title":"2 Art","description":"2 Art"},{"code":"12","value":"","title":"12 Art","description":"12 Art"},{"code":"1","value":"","title":"1 Art","description":"1 Art"},{"code":"13","value":"","title":"13 Art","description":"13 Art"},{"code":"1","value":"","title":"1 Art","description":"1 Art"},{"code":"14","value":"","title":"14 Art","description":"14 Art"},{"code":"2","value":"","title":"2 Art","description":"2 Art"},{"code":"15","value":"","title":"15 Art","description":"15 Art"},{"code":"2","value":"","title":"2 Art","description":"2 Art"},{"code":"16","value":"","title":"16 Art","description":"16 Art"},{"code":"2","value":"","title":"2 Art","description":"2 Art"},{"code":"17","value":"","title":"17 Art","description":"17 Art"},{"code":"2","value":"","title":"2 Art","description":"2 Art"},{"code":"18","value":"","title":"18 Art","description":"18 Art"},{"code":"2","value":"","title":"2 Art","description":"2 Art"},{"code":"19","value":"","title":"19 Art","description":"19 Art"},{"code":"2","value":"","title":"2 Art","description":"2 Art"},{"code":"20","value":"","title":"20 Art","description":"20 Art"},{"code":"4","value":"","title":"4 Art","description":"4 Art"},{"code":"21","value":"","title":"21 Art","description":"21 Art"},{"code":"4","value":"","title":"4 Art","description":"4 Art"},{"code":"22","value":"","title":"22 Art","description":"22 Art"},{"code":"4","value":"","title":"4 Art","description":"4 Art"},{"code":"23","value":"","title":"23 Art","description":"23 Art"},{"code":"4","value":"","title":"4 Art","description":"4 Art"},{"code":"24","value":"","title":"24 Art","description":"24 Art"},{"code":"4","value":"","title":"4 Art","description":"4 Art"},{"code":"25","value":"","title":"25 Art","description":"25 Art"},{"code":"4","value":"","title":"4 Art","description":"4 Art"}],"properties":[]},"io.wolfscript.BanEntry":{"namespace":"io.wolfscript","title":"A single entry from a ban list. This may represent either a player ban or","description":"A single entry from a ban list. This may represent either a player ban or an IP ban. <p> Ban entries include the following properties: <table border=1> <caption>Property information</caption> <tr> <th>Property</th> <th>Description</th> </tr><tr> <td>Target Name / IP Address</td> <td>The target name or IP address</td> </tr><tr> <td>Creation Date</td> <td>The creation date of the ban</td> </tr><tr> <td>Source</td> <td>The source of the ban, such as a player, console, plugin, etc</td> </tr><tr> <td>Expiration Date</td> <td>The expiration date of the ban</td> </tr><tr> <td>Reason</td> <td>The reason for the ban</td> </tr> </table> <p> Unsaved information is not automatically written to the implementation's ban list, instead, the {@link #save()} method must be called to write the changes to the ban list. If this ban entry has expired (such as from an unban) and is no longer found in the list, the {@link #save()} call will re-add it to the list, therefore banning the victim specified. <p> Likewise, changes to the associated {@link BanList} or other entries may or may not be reflected in this entry.","name":"BanEntry","qualifiedname":"io.wolfscript.BanEntry","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Gets the target involved. This may be in the form of an IP or a player","description":"Gets the target involved. This may be in the form of an IP or a player name.","doc":{"return":["the target name or IP address /\n    public String getTarget();\n\n    /** Gets the date this ban entry was created.","the creation date /\n    public Date getCreated();\n\n    /** Sets the date this ban entry was created.","the source of the ban /\n    public String getSource();\n\n    /** Sets the source of this ban. <p> Note: A source is considered any String, although this is generally a player name.","the expiration date /\n    public Date getExpiration();\n\n    /** Sets the date this ban expires on. Null values are considered \"infinite\" bans.","the ban reason, or null if not set /\n    public String getReason();\n\n    /** Sets the reason for this ban. Reasons must not be null."],"param":["created the new created date, cannot be null","source the new source where null values become empty strings","expiration the new expiration date, or null to indicate an eternity","reason the new reason, null values assume the implementation default"],"see":["#save() saving changes /\n    public void setCreated(Date created);\n\n    /** Gets the source of this ban. <p> Note: A source is considered any String, although this is generally a player name.","#save() saving changes /\n    public void setSource(String source);\n\n    /** Gets the date this ban expires on, or null for no defined end date.","#save() saving changes /\n    public void setExpiration(Date expiration);\n\n    /** Gets the reason for this ban.","#save() saving changes /\n    public void setReason(String reason);\n\n    /** Saves the ban entry, overwriting any previous data in the ban list. <p> Saving the ban entry of an unbanned player will cause the player to be banned once again."]},"scope":"public","return":"void","name":"save","args":[]}],"imports":["java.util.Date"],"properties":[]},"io.wolfscript.BlockChangeDelegate":{"namespace":"io.wolfscript","title":"A delegate for handling block changes. This serves as a direct interface","description":"A delegate for handling block changes. This serves as a direct interface between generation algorithms in the server implementation and utilizing code.","name":"BlockChangeDelegate","qualifiedname":"io.wolfscript.BlockChangeDelegate","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Set a block type at the specified coordinates without doing all world","description":"Set a block type at the specified coordinates without doing all world updates and notifications. <p> It is safe to have this call World.setTypeId, but it may be slower than World.setRawTypeId.","doc":{"return":["true if the block was set successfully","true if the block was set successfully","true if the block was set successfully","true if the block was set successfully","The block ID","Height of the world /\n    public int getHeight();\n\n    /** Checks if the specified block is empty (air) or not.","True if the block is considered empty."],"deprecated":["Magic value /\n    @Deprecated\n    public boolean setRawTypeId(int x, int y, int z, int typeId);\n\n    /** Set a block type and data at the specified coordinates without doing all world updates and notifications. <p> It is safe to have this call World.setTypeId, but it may be slower than World.setRawTypeId.","Magic value /\n    @Deprecated\n    public boolean setRawTypeIdAndData(int x, int y, int z, int typeId, int data);\n\n    /** Set a block type at the specified coordinates. <p> This method cannot call World.setRawTypeId, a full update is needed.","Magic value /\n    @Deprecated\n    public boolean setTypeId(int x, int y, int z, int typeId);\n\n    /** Set a block type and data at the specified coordinates. <p> This method cannot call World.setRawTypeId, a full update is needed.","Magic value /\n    @Deprecated\n    public boolean setTypeIdAndData(int x, int y, int z, int typeId, int data);\n\n    /** Get the block type at the location.","Magic value /\n    @Deprecated\n    public int getTypeId(int x, int y, int z);\n\n    /** Gets the height of the world."]},"scope":"public","return":"boolean","name":"isEmpty","args":[{"name":"x","type":"int","description":"X coordinate"},{"name":"y","type":"int","description":"Y coordinate"},{"name":"z","type":"int","description":"Z coordinate"}]}],"imports":[],"properties":[]},"io.wolfscript.Builder":{"namespace":"io.wolfscript","title":"Represents a single firework effect.","description":"Represents a single firework effect. /\n@SerializableAs(\"Firework\")\npublic final class FireworkEffect implements ConfigurationSerializable {\n\n    /** The type or shape of the effect. /\n    public enum Type {\n        /** A small ball effect. /\n        BALL,\n        /** A large ball effect. /\n        BALL_LARGE,\n        /** A star-shaped effect. /\n        STAR,\n        /** A burst effect. /\n        BURST,\n        /** A creeper-face effect. /\n        CREEPER,\n        ;\n    }\n\n    /** Construct a firework effect.","doc":{"return":["A utility object for building a firework effect /\n    public static Builder builder() {\n        return new Builder();\n    }\n\n    /** This is a builder for FireworkEffects."],"see":["FireworkEffect#builder()"]},"name":"Builder","qualifiedname":"io.wolfscript.Builder","type":"class","scope":"public","describe":"static final","constructors":[],"methods":[{"title":"Specify the type of the firework effect.","description":"Specify the type of the firework effect.","doc":{"param":["type The effect type","flicker true if it should flicker, false if not","trail true if it should have a trail, false for no trail","color The color to add","colors The colors to add","colors An iterable object whose iterator yields the desired colors","color The color to add","colors The colors to add","colors An iterable object whose iterator yields the desired colors"],"return":["This object, for chaining","This object, for chaining /\n        public Builder withFlicker() {\n            flicker = true;\n            return this;\n        }\n\n        /** Set whether the firework effect should flicker.","This object, for chaining /\n        public Builder flicker(boolean flicker) {\n            this.flicker = flicker;\n            return this;\n        }\n\n        /** Add a trail to the firework effect.","This object, for chaining /\n        public Builder withTrail() {\n            trail = true;\n            return this;\n        }\n\n        /** Set whether the firework effect should have a trail.","This object, for chaining /\n        public Builder trail(boolean trail) {\n            this.trail = trail;\n            return this;\n        }\n\n        /** Add a primary color to the firework effect.","This object, for chaining","This object, for chaining","This object, for chaining","This object, for chaining","This object, for chaining","This object, for chaining","The representative firework effect"],"throws":["IllegalArgumentException If type is null /\n        public Builder with(Type type) throws IllegalArgumentException {\n            Validate.notNull(type, \"Cannot have null type\");\n            this.type = type;\n            return this;\n        }\n\n        /** Add a flicker to the firework effect.","IllegalArgumentException If color is null /\n        public Builder withColor(Color color) throws IllegalArgumentException {\n            Validate.notNull(color, \"Cannot have null color\");\n\n            colors.add(color);\n\n            return this;\n        }\n\n        /** Add several primary colors to the firework effect.","IllegalArgumentException If colors is null","IllegalArgumentException If any color is null (may be thrown after changes have occurred) /\n        public Builder withColor(Color...colors) throws IllegalArgumentException {\n            Validate.notNull(colors, \"Cannot have null colors\");\n            if (colors.length == 0) {\n                return this;\n            }\n\n            ImmutableList.Builder<Color> list = this.colors;\n            for (Color color : colors) {\n                Validate.notNull(color, \"Color cannot be null\");\n                list.add(color);\n            }\n\n            return this;\n        }\n\n        /** Add several primary colors to the firework effect.","IllegalArgumentException If colors is null","IllegalArgumentException If any color is null (may be thrown after changes have occurred) /\n        public Builder withColor(Iterable<?> colors) throws IllegalArgumentException {\n            Validate.notNull(colors, \"Cannot have null colors\");\n\n            ImmutableList.Builder<Color> list = this.colors;\n            for (Object color : colors) {\n                if (!(color instanceof Color)) {\n                    throw new IllegalArgumentException(color + \" is not a Color in \" + colors);\n                }\n                list.add((Color) color);\n            }\n\n            return this;\n        }\n\n        /** Add a fade color to the firework effect.","IllegalArgumentException If colors is null","IllegalArgumentException If any color is null (may be thrown after changes have occurred) /\n        public Builder withFade(Color color) throws IllegalArgumentException {\n            Validate.notNull(color, \"Cannot have null color\");\n\n            if (fadeColors == null) {\n                fadeColors = ImmutableList.builder();\n            }\n\n            fadeColors.add(color);\n\n            return this;\n        }\n\n        /** Add several fade colors to the firework effect.","IllegalArgumentException If colors is null","IllegalArgumentException If any color is null (may be thrown after changes have occurred) /\n        public Builder withFade(Color...colors) throws IllegalArgumentException {\n            Validate.notNull(colors, \"Cannot have null colors\");\n            if (colors.length == 0) {\n                return this;\n            }\n\n            ImmutableList.Builder<Color> list = this.fadeColors;\n            if (list == null) {\n                list = this.fadeColors = ImmutableList.builder();\n            }\n\n            for (Color color : colors) {\n                Validate.notNull(color, \"Color cannot be null\");\n                list.add(color);\n            }\n\n            return this;\n        }\n\n        /** Add several fade colors to the firework effect.","IllegalArgumentException If colors is null","IllegalArgumentException If any color is null (may be thrown after changes have occurred) /\n        public Builder withFade(Iterable<?> colors) throws IllegalArgumentException {\n            Validate.notNull(colors, \"Cannot have null colors\");\n\n            ImmutableList.Builder<Color> list = this.fadeColors;\n            if (list == null) {\n                list = this.fadeColors = ImmutableList.builder();\n            }\n\n            for (Object color : colors) {\n                if (!(color instanceof Color)) {\n                    throw new IllegalArgumentException(color + \" is not a Color in \" + colors);\n                }\n                list.add((Color) color);\n            }\n\n            return this;\n        }\n\n        /** Create a {@link FireworkEffect} from the current contents of this builder. <p> To successfully build, you must have specified at least one color."]},"scope":"public","return":"FireworkEffect","name":"build","args":[]}],"imports":["java.util.List","java.util.Map","org.apache.commons.lang.Validate","io.wolfscript.configuration.serialization.ConfigurationSerializable","io.wolfscript.configuration.serialization.SerializableAs","com.google.common.collect.ImmutableList","com.google.common.collect.ImmutableMap"],"properties":[]},"io.wolfscript.ChatColor":{"namespace":"io.wolfscript","title":"All supported color values for chat","description":"All supported color values for chat","name":"ChatColor","qualifiedname":"io.wolfscript.ChatColor","type":"enum","scope":"public","constructors":[],"fields":[{"title":"Represents black","description":"Represents black /\n    BLACK('0', 0x00),\n    /** Represents dark blue /\n    DARK_BLUE('1', 0x1),\n    /** Represents dark green /\n    DARK_GREEN('2', 0x2),\n    /** Represents dark blue (aqua) /\n    DARK_AQUA('3', 0x3),\n    /** Represents dark red /\n    DARK_RED('4', 0x4),\n    /** Represents dark purple /\n    DARK_PURPLE('5', 0x5),\n    /** Represents gold /\n    GOLD('6', 0x6),\n    /** Represents gray /\n    GRAY('7', 0x7),\n    /** Represents dark gray /\n    DARK_GRAY('8', 0x8),\n    /** Represents blue /\n    BLUE('9', 0x9),\n    /** Represents green /\n    GREEN('a', 0xA),\n    /** Represents aqua /\n    AQUA('b', 0xB),\n    /** Represents red /\n    RED('c', 0xC),\n    /** Represents light purple /\n    LIGHT_PURPLE('d', 0xD),\n    /** Represents yellow /\n    YELLOW('e', 0xE),\n    /** Represents white /\n    WHITE('f', 0xF),\n    /** Represents magical characters that change around randomly /\n    MAGIC('k', 0x10, true),\n    /** Makes the text bold. /\n    BOLD('l', 0x11, true),\n    /** Makes a line appear through the text. /\n    STRIKETHROUGH('m', 0x12, true),\n    /** Makes the text appear underlined. /\n    UNDERLINE('n', 0x13, true),\n    /** Makes the text italic. /\n    ITALIC('o', 0x14, true),\n    /** Resets all previous chat colors or formats. /\n    RESET('r', 0x15);\n\n    /** The special character which prefixes all chat colour codes. Use this if you need to dynamically convert colour codes from your custom format.","doc":{},"name":"COLOR","scope":"public","type":"char","describe":"static final"}],"methods":[{"title":"Represents black","description":"Represents black /\n    BLACK('0', 0x00),\n    /** Represents dark blue /\n    DARK_BLUE('1', 0x1),\n    /** Represents dark green /\n    DARK_GREEN('2', 0x2),\n    /** Represents dark blue (aqua) /\n    DARK_AQUA('3', 0x3),\n    /** Represents dark red /\n    DARK_RED('4', 0x4),\n    /** Represents dark purple /\n    DARK_PURPLE('5', 0x5),\n    /** Represents gold /\n    GOLD('6', 0x6),\n    /** Represents gray /\n    GRAY('7', 0x7),\n    /** Represents dark gray /\n    DARK_GRAY('8', 0x8),\n    /** Represents blue /\n    BLUE('9', 0x9),\n    /** Represents green /\n    GREEN('a', 0xA),\n    /** Represents aqua /\n    AQUA('b', 0xB),\n    /** Represents red /\n    RED('c', 0xC),\n    /** Represents light purple /\n    LIGHT_PURPLE('d', 0xD),\n    /** Represents yellow /\n    YELLOW('e', 0xE),\n    /** Represents white /\n    WHITE('f', 0xF),\n    /** Represents magical characters that change around randomly /\n    MAGIC('k', 0x10, true),\n    /** Makes the text bold. /\n    BOLD('l', 0x11, true),\n    /** Makes a line appear through the text. /\n    STRIKETHROUGH('m', 0x12, true),\n    /** Makes the text appear underlined. /\n    UNDERLINE('n', 0x13, true),\n    /** Makes the text italic. /\n    ITALIC('o', 0x14, true),\n    /** Resets all previous chat colors or formats. /\n    RESET('r', 0x15);\n\n    /** The special character which prefixes all chat colour codes. Use this if you need to dynamically convert colour codes from your custom format. /\n    public static final char COLOR_CHAR = '\\u00A7';\n    private static final Pattern STRIP_COLOR_PATTERN = Pattern.compile(\"(?i)\" + String.valueOf(COLOR_CHAR) + \"[0-9A-FK-OR]\");\n\n    private final int intCode;\n    private final char code;\n    private final boolean isFormat;\n    private final String toString;\n    private final static Map<Integer, ChatColor> BY_ID = Maps.newHashMap();\n    private final static Map<Character, ChatColor> BY_CHAR = Maps.newHashMap();\n\n    private ChatColor(char code, int intCode) {\n        this(code, intCode, false);\n    }\n\n    private ChatColor(char code, int intCode, boolean isFormat) {\n        this.code = code;\n        this.intCode = intCode;\n        this.isFormat = isFormat;\n        this.toString = new String(new char[] {COLOR_CHAR, code});\n    }\n\n    /** Gets the char value associated with this color","doc":{"return":["A char value of this color code /\n    public char getChar() {\n        return code;\n    }\n\n    @Override\n    public String toString() {\n        return toString;\n    }\n\n    /** Checks if this code is a format code as opposed to a color code.","whether this ChatColor is a format code /\n    public boolean isFormat() {\n        return isFormat;\n    }\n\n    /** Checks if this code is a color code as opposed to a format code.","whether this ChatColor is a color code /\n    public boolean isColor() {\n        return !isFormat && this != RESET;\n    }\n\n    /** Gets the color represented by the specified color code","Associative {@link io.wolfscript.ChatColor} with the given code, or null if it doesn't exist /\n    public static ChatColor getByChar(char code) {\n        return BY_CHAR.get(code);\n    }\n\n    /** Gets the color represented by the specified color code","Associative {@link io.wolfscript.ChatColor} with the given code, or null if it doesn't exist /\n    public static ChatColor getByChar(String code) {\n        Validate.notNull(code, \"Code cannot be null\");\n        Validate.isTrue(code.length() > 0, \"Code must have at least one char\");\n\n        return BY_CHAR.get(code.charAt(0));\n    }\n\n    /** Strips the given message of all color codes","A copy of the input string, without any coloring /\n    public static String stripColor(final String input) {\n        if (input == null) {\n            return null;\n        }\n\n        return STRIP_COLOR_PATTERN.matcher(input).replaceAll(\"\");\n    }\n\n    /** Translates a string using an alternate color code character into a string that uses the internal ChatColor.COLOR_CODE color code character. The alternate color code character will only be replaced if it is immediately followed by 0-9, A-F, a-f, K-O, k-o, R or r.","Text containing the ChatColor.COLOR_CODE color code character. /\n    public static String translateAlternateColorCodes(char altColorChar, String textToTranslate) {\n        char[] b = textToTranslate.toCharArray();\n        for (int i = 0; i < b.length - 1; i++) {\n            if (b[i] == altColorChar && \"0123456789AaBbCcDdEeFfKkLlMmNnOoRr\".indexOf(b[i+1]) > -1) {\n                b[i] = ChatColor.COLOR_CHAR;\n                b[i+1] = Character.toLowerCase(b[i+1]);\n            }\n        }\n        return new String(b);\n    }\n\n    /** Gets the ChatColors used at the end of the given input string.","Any remaining ChatColors to pass onto the next line."]},"scope":"public","describe":"static","return":"String","name":"getLastColors","args":[{"name":"input","type":"String","description":"String to strip of color"}]}],"imports":["java.util.Map","java.util.regex.Pattern","org.apache.commons.lang.Validate","com.google.common.collect.Maps"],"enum":[{"code":"'0'","value":"","title":"'0' ChatColor","description":"'0' ChatColor"},{"code":"'1'","value":"","title":"'1' ChatColor","description":"'1' ChatColor"},{"code":"'2'","value":"","title":"'2' ChatColor","description":"'2' ChatColor"},{"code":"'3'","value":"","title":"'3' ChatColor","description":"'3' ChatColor"},{"code":"'4'","value":"","title":"'4' ChatColor","description":"'4' ChatColor"},{"code":"'5'","value":"","title":"'5' ChatColor","description":"'5' ChatColor"},{"code":"'6'","value":"","title":"'6' ChatColor","description":"'6' ChatColor"},{"code":"'7'","value":"","title":"'7' ChatColor","description":"'7' ChatColor"},{"code":"'8'","value":"","title":"'8' ChatColor","description":"'8' ChatColor"},{"code":"'9'","value":"","title":"'9' ChatColor","description":"'9' ChatColor"},{"code":"'a'","value":"","title":"'a' ChatColor","description":"'a' ChatColor"},{"code":"'b'","value":"","title":"'b' ChatColor","description":"'b' ChatColor"},{"code":"'c'","value":"","title":"'c' ChatColor","description":"'c' ChatColor"},{"code":"'d'","value":"","title":"'d' ChatColor","description":"'d' ChatColor"},{"code":"'e'","value":"","title":"'e' ChatColor","description":"'e' ChatColor"},{"code":"'f'","value":"","title":"'f' ChatColor","description":"'f' ChatColor"},{"code":"'k'","value":"","title":"'k' ChatColor","description":"'k' ChatColor"},{"code":"0x10","value":"","title":"0x10 ChatColor","description":"0x10 ChatColor"},{"code":"'l'","value":"","title":"'l' ChatColor","description":"'l' ChatColor"},{"code":"0x11","value":"","title":"0x11 ChatColor","description":"0x11 ChatColor"},{"code":"'m'","value":"","title":"'m' ChatColor","description":"'m' ChatColor"},{"code":"0x12","value":"","title":"0x12 ChatColor","description":"0x12 ChatColor"},{"code":"'n'","value":"","title":"'n' ChatColor","description":"'n' ChatColor"},{"code":"0x13","value":"","title":"0x13 ChatColor","description":"0x13 ChatColor"},{"code":"'o'","value":"","title":"'o' ChatColor","description":"'o' ChatColor"},{"code":"0x14","value":"","title":"0x14 ChatColor","description":"0x14 ChatColor"},{"code":"'r'","value":"","title":"'r' ChatColor","description":"'r' ChatColor"}],"properties":[]},"io.wolfscript.Chunk":{"namespace":"io.wolfscript","title":"Represents a chunk of blocks","description":"Represents a chunk of blocks","name":"Chunk","qualifiedname":"io.wolfscript.Chunk","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.block.BlockState","io.wolfscript.entity.Entity"],"properties":[]},"io.wolfscript.ChunkSnapshot":{"namespace":"io.wolfscript","title":"Represents a static, thread-safe snapshot of chunk of blocks.","description":"Represents a static, thread-safe snapshot of chunk of blocks. <p> Purpose is to allow clean, efficient copy of a chunk data to be made, and then handed off for processing in another thread (e.g. map rendering)","name":"ChunkSnapshot","qualifiedname":"io.wolfscript.ChunkSnapshot","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.block.Biome"],"properties":[]},"io.wolfscript.CoalType":{"namespace":"io.wolfscript","title":"Represents the two types of coal","description":"Represents the two types of coal","name":"CoalType","qualifiedname":"io.wolfscript.CoalType","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Gets the associated data value representing this type of coal","description":"Gets the associated data value representing this type of coal","doc":{"return":["A byte containing the data value of this coal type","The {@link io.wolfscript.CoalType} representing the given value, or null if it doesn't exist"],"deprecated":["Magic value /\n    @Deprecated\n    public byte getData() {\n        return data;\n    }\n\n    /** Gets the type of coal with the given data value","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.CoalType","name":"getByData","deprecated":true,"args":[{"name":"byte","type":"final","description":"byte argument"}]}],"imports":["java.util.Map","com.google.common.collect.Maps"],"enum":[{"code":"COAL","value":"0x0","title":"COAL CoalType","description":"COAL CoalType"},{"code":"CHARCOAL","value":"0x1","title":"CHARCOAL CoalType","description":"CHARCOAL CoalType"}],"properties":[]},"io.wolfscript.Color":{"namespace":"io.wolfscript","title":"A container for a color palette. This class is immutable; the set methods","description":"A container for a color palette. This class is immutable; the set methods return a new color. The color names listed as fields are HTML4 standards, but subject to change.","name":"Color","qualifiedname":"io.wolfscript.Color","type":"class","scope":"public","describe":"final","implements":["io.wolfscript.configuration.serialization.ConfigurationSerializable"],"constructors":[],"fields":[{"title":"WHITE field","description":"WHITE field","name":"WHITE","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"SILVER field","description":"SILVER field","name":"SILVER","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"GRAY field","description":"GRAY field","name":"GRAY","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"BLACK field","description":"BLACK field","name":"BLACK","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"RED field","description":"RED field","name":"RED","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"MAROON field","description":"MAROON field","name":"MAROON","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"YELLOW field","description":"YELLOW field","name":"YELLOW","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"OLIVE field","description":"OLIVE field","name":"OLIVE","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"LIME field","description":"LIME field","name":"LIME","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"GREEN field","description":"GREEN field","name":"GREEN","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"AQUA field","description":"AQUA field","name":"AQUA","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"TEAL field","description":"TEAL field","name":"TEAL","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"BLUE field","description":"BLUE field","name":"BLUE","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"NAVY field","description":"NAVY field","name":"NAVY","scope":"public","type":"io.wolfscript.Color","describe":"static final"},{"title":"Fuchsia, or (0xFF,0x00,0xFF) in (R,G,B)","description":"Fuchsia, or (0xFF,0x00,0xFF) in (R,G,B) /\n    public static final Color FUCHSIA = fromRGB(0xFF00FF);\n\n    /** Purple, or (0x80,0x00,0x80) in (R,G,B) /\n    public static final Color PURPLE = fromRGB(0x800080);\n\n    /** Orange, or (0xFF,0xA5,0x00) in (R,G,B)","doc":{},"name":"ORANGE","scope":"public","type":"io.wolfscript.Color","describe":"static final"}],"methods":[{"title":"White, or (0xFF,0xFF,0xFF) in (R,G,B)","description":"White, or (0xFF,0xFF,0xFF) in (R,G,B) /\n    public static final Color WHITE = fromRGB(0xFFFFFF);\n\n    /** Silver, or (0xC0,0xC0,0xC0) in (R,G,B) /\n    public static final Color SILVER = fromRGB(0xC0C0C0);\n\n    /** Gray, or (0x80,0x80,0x80) in (R,G,B) /\n    public static final Color GRAY = fromRGB(0x808080);\n\n    /** Black, or (0x00,0x00,0x00) in (R,G,B) /\n    public static final Color BLACK = fromRGB(0x000000);\n\n    /** Red, or (0xFF,0x00,0x00) in (R,G,B) /\n    public static final Color RED = fromRGB(0xFF0000);\n\n    /** Maroon, or (0x80,0x00,0x00) in (R,G,B) /\n    public static final Color MAROON = fromRGB(0x800000);\n\n    /** Yellow, or (0xFF,0xFF,0x00) in (R,G,B) /\n    public static final Color YELLOW = fromRGB(0xFFFF00);\n\n    /** Olive, or (0x80,0x80,0x00) in (R,G,B) /\n    public static final Color OLIVE = fromRGB(0x808000);\n\n    /** Lime, or (0x00,0xFF,0x00) in (R,G,B) /\n    public static final Color LIME = fromRGB(0x00FF00);\n\n    /** Green, or (0x00,0x80,0x00) in (R,G,B) /\n    public static final Color GREEN = fromRGB(0x008000);\n\n    /** Aqua, or (0x00,0xFF,0xFF) in (R,G,B) /\n    public static final Color AQUA = fromRGB(0x00FFFF);\n\n    /** Teal, or (0x00,0x80,0x80) in (R,G,B) /\n    public static final Color TEAL = fromRGB(0x008080);\n\n    /** Blue, or (0x00,0x00,0xFF) in (R,G,B) /\n    public static final Color BLUE = fromRGB(0x0000FF);\n\n    /** Navy, or (0x00,0x00,0x80) in (R,G,B) /\n    public static final Color NAVY = fromRGB(0x000080);\n\n    /** Fuchsia, or (0xFF,0x00,0xFF) in (R,G,B) /\n    public static final Color FUCHSIA = fromRGB(0xFF00FF);\n\n    /** Purple, or (0x80,0x00,0x80) in (R,G,B) /\n    public static final Color PURPLE = fromRGB(0x800080);\n\n    /** Orange, or (0xFF,0xA5,0x00) in (R,G,B) /\n    public static final Color ORANGE = fromRGB(0xFFA500);\n\n    private final byte red;\n    private final byte green;\n    private final byte blue;\n\n    /** Creates a new Color object from a red, green, and blue","doc":{"param":["red integer from 0-255","green integer from 0-255","blue integer from 0-255","blue integer from 0-255","green integer from 0-255","red integer from 0-255","rgb the integer storing the red, green, and blue values","bgr the integer storing the blue, green, and red values","red the red component, from 0 to 255","green the red component, from 0 to 255","blue the red component, from 0 to 255"],"return":["a new Color object for the red, green, blue","a new Color object for the red, green, blue","a new color object for specified values","a new color object for specified values","red component, from 0 to 255 /\n    public int getRed() {\n        return BIT_MASK & red;\n    }\n\n    /** Creates a new Color object with specified component","a new color object with the red component /\n    public Color setRed(int red) {\n        return fromRGB(red, getGreen(), getBlue());\n    }\n\n    /** Gets the green component","green component, from 0 to 255 /\n    public int getGreen() {\n        return BIT_MASK & green;\n    }\n\n    /** Creates a new Color object with specified component","a new color object with the red component /\n    public Color setGreen(int green) {\n        return fromRGB(getRed(), green, getBlue());\n    }\n\n    /** Gets the blue component","blue component, from 0 to 255 /\n    public int getBlue() {\n        return BIT_MASK & blue;\n    }\n\n    /** Creates a new Color object with specified component","a new color object with the red component /\n    public Color setBlue(int blue) {\n        return fromRGB(getRed(), getGreen(), blue);\n    }\n\n    /**","An integer representation of this color, as 0xRRGGBB /\n    public int asRGB() {\n        return getRed() << 16 | getGreen() << 8 | getBlue() << 0;\n    }\n\n    /**","An integer representation of this color, as 0xBBGGRR"],"throws":["IllegalArgumentException if any value is strictly {@literal >255 or <0} /\n    public static Color fromRGB(int red, int green, int blue) throws IllegalArgumentException {\n        return new Color(red, green, blue);\n    }\n\n    /** Creates a new Color object from a blue, green, and red","IllegalArgumentException if any value is strictly {@literal >255 or <0} /\n    public static Color fromBGR(int blue, int green, int red) throws IllegalArgumentException {\n        return new Color(red, green, blue);\n    }\n\n    /** Creates a new color object from an integer that contains the red, green, and blue bytes in the lowest order 24 bits.","IllegalArgumentException if any data is in the highest order 8 bits /\n    public static Color fromRGB(int rgb) throws IllegalArgumentException {\n        Validate.isTrue((rgb >> 24) == 0, \"Extrenuous data in: \", rgb);\n        return fromRGB(rgb >> 16 & BIT_MASK, rgb >> 8 & BIT_MASK, rgb >> 0 & BIT_MASK);\n    }\n\n    /** Creates a new color object from an integer that contains the blue, green, and red bytes in the lowest order 24 bits.","IllegalArgumentException if any data is in the highest order 8 bits /\n    public static Color fromBGR(int bgr) throws IllegalArgumentException {\n        Validate.isTrue((bgr >> 24) == 0, \"Extrenuous data in: \", bgr);\n        return fromBGR(bgr >> 16 & BIT_MASK, bgr >> 8 & BIT_MASK, bgr >> 0 & BIT_MASK);\n    }\n\n    private Color(int red, int green, int blue) {\n        Validate.isTrue(red >= 0 && red <= BIT_MASK, \"Red is not between 0-255: \", red);\n        Validate.isTrue(green >= 0 && green <= BIT_MASK, \"Green is not between 0-255: \", green);\n        Validate.isTrue(blue >= 0 && blue <= BIT_MASK, \"Blue is not between 0-255: \", blue);\n\n        this.red = (byte) red;\n        this.green = (byte) green;\n        this.blue = (byte) blue;\n    }\n\n    /** Gets the red component"]},"scope":"public","return":"int","name":"asBGR","args":[]},{"title":"deserialize method","description":"deserialize method","scope":"public","describe":"static","return":"io.wolfscript.Color","name":"deserialize","args":[]},{"title":"equals method","description":"equals method","scope":"public","return":"boolean","name":"equals","args":[{"name":"o","type":"Object","description":"o argument"}]},{"title":"hashCode method","description":"hashCode method","scope":"public","return":"int","name":"hashCode","args":[]},{"title":"mixColors method","description":"mixColors method","scope":"public","return":"io.wolfscript.Color","name":"mixColors","args":[]},{"title":"mixDyes method","description":"mixDyes method","scope":"public","return":"io.wolfscript.Color","name":"mixDyes","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["java.util.Map","org.apache.commons.lang.Validate","io.wolfscript.configuration.serialization.ConfigurationSerializable","io.wolfscript.configuration.serialization.SerializableAs","com.google.common.collect.ImmutableMap"],"properties":[]},"io.wolfscript.CropState":{"namespace":"io.wolfscript","title":"Represents the different growth states of crops","description":"Represents the different growth states of crops","name":"CropState","qualifiedname":"io.wolfscript.CropState","type":"enum","scope":"public","constructors":[],"methods":[{"title":"State when first seeded","description":"State when first seeded /\n    SEEDED(0x0),\n    /** First growth stage /\n    GERMINATED(0x1),\n    /** Second growth stage /\n    VERY_SMALL(0x2),\n    /** Third growth stage /\n    SMALL(0x3),\n    /** Fourth growth stage /\n    MEDIUM(0x4),\n    /** Fifth growth stage /\n    TALL(0x5),\n    /** Almost ripe stage /\n    VERY_TALL(0x6),\n    /** Ripe stage /\n    RIPE(0x7);\n\n    private final byte data;\n    private final static Map<Byte, CropState> BY_DATA = Maps.newHashMap();\n\n    private CropState(final int data) {\n        this.data = (byte) data;\n    }\n\n    /** Gets the associated data value representing this growth state","doc":{"return":["A byte containing the data value of this growth state","The {@link io.wolfscript.CropState} representing the given value, or null if it doesn't exist"],"deprecated":["Magic value /\n    @Deprecated\n    public byte getData() {\n        return data;\n    }\n\n    /** Gets the CropState with the given data value","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.CropState","name":"getByData","deprecated":true,"args":[{"name":"byte","type":"final","description":"byte argument"}]}],"imports":["java.util.Map","com.google.common.collect.Maps"],"enum":[{"code":"RIPE","value":"0x7","title":"State when first seeded","description":"State when first seeded /\n    SEEDED(0x0),\n    /** First growth stage /\n    GERMINATED(0x1),\n    /** Second growth stage /\n    VERY_SMALL(0x2),\n    /** Third growth stage /\n    SMALL(0x3),\n    /** Fourth growth stage /\n    MEDIUM(0x4),\n    /** Fifth growth stage /\n    TALL(0x5),\n    /** Almost ripe stage /\n    VERY_TALL(0x6),\n    /** Ripe stage","doc":{}}],"properties":[]},"io.wolfscript.Difficulty":{"namespace":"io.wolfscript","title":"Represents the various difficulty levels that are available.","description":"Represents the various difficulty levels that are available.","name":"Difficulty","qualifiedname":"io.wolfscript.Difficulty","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Players regain health over time, hostile mobs don't spawn, the hunger","description":"Players regain health over time, hostile mobs don't spawn, the hunger bar does not deplete. /\n    PEACEFUL(0),\n\n    /** Hostile mobs spawn, enemies deal less damage than on normal difficulty, the hunger bar does deplete and starving deals up to 5 hearts of damage. (Default value) /\n    EASY(1),\n\n    /** Hostile mobs spawn, enemies deal normal amounts of damage, the hunger bar does deplete and starving deals up to 9.5 hearts of damage. /\n    NORMAL(2),\n\n    /** Hostile mobs spawn, enemies deal greater damage than on normal difficulty, the hunger bar does deplete and starving can kill players. /\n    HARD(3);\n\n    private final int value;\n    private final static Map<Integer, Difficulty> BY_ID = Maps.newHashMap();\n\n    private Difficulty(final int value) {\n        this.value = value;\n    }\n\n    /** Gets the difficulty value associated with this Difficulty.","doc":{"return":["An integer value of this difficulty","Associative {@link io.wolfscript.Difficulty} with the given value, or null if it doesn't exist"],"deprecated":["Magic value /\n    @Deprecated\n    public int getValue() {\n        return value;\n    }\n\n    /** Gets the Difficulty represented by the specified value","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.Difficulty","name":"getByValue","deprecated":true,"args":[{"name":"int","type":"final","description":"int argument"}]}],"imports":["java.util.Map","com.google.common.collect.Maps"],"enum":[{"code":"HARD","value":"3","title":"Players regain health over time, hostile mobs don't spawn, the hunger","description":"Players regain health over time, hostile mobs don't spawn, the hunger bar does not deplete. /\n    PEACEFUL(0),\n\n    /** Hostile mobs spawn, enemies deal less damage than on normal difficulty, the hunger bar does deplete and starving deals up to 5 hearts of damage. (Default value) /\n    EASY(1),\n\n    /** Hostile mobs spawn, enemies deal normal amounts of damage, the hunger bar does deplete and starving deals up to 9.5 hearts of damage. /\n    NORMAL(2),\n\n    /** Hostile mobs spawn, enemies deal greater damage than on normal difficulty, the hunger bar does deplete and starving can kill players.","doc":{}}],"properties":[]},"io.wolfscript.DyeColor":{"namespace":"io.wolfscript","title":"All supported color values for dyes and cloth","description":"All supported color values for dyes and cloth","name":"DyeColor","qualifiedname":"io.wolfscript.DyeColor","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Represents white dye.","description":"Represents white dye. /\n    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n    /** Represents orange dye. /\n    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n    /** Represents magenta dye. /\n    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n    /** Represents light blue dye. /\n    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n    /** Represents yellow dye. /\n    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n    /** Represents lime dye. /\n    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n    /** Represents pink dye. /\n    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n    /** Represents gray dye. /\n    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n    /** Represents silver dye. /\n    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n    /** Represents cyan dye. /\n    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n    /** Represents purple dye. /\n    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n    /** Represents blue dye. /\n    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n    /** Represents brown dye. /\n    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n    /** Represents green dye. /\n    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n    /** Represents red dye. /\n    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n    /** Represents black dye. /\n    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n\n    private final byte woolData;\n    private final byte dyeData;\n    private final Color color;\n    private final Color firework;\n    private final static DyeColor[] BY_WOOL_DATA;\n    private final static DyeColor[] BY_DYE_DATA;\n    private final static Map<Color, DyeColor> BY_COLOR;\n    private final static Map<Color, DyeColor> BY_FIREWORK;\n\n    private DyeColor(final int woolData, final int dyeData, Color color, Color firework) {\n        this.woolData = (byte) woolData;\n        this.dyeData = (byte) dyeData;\n        this.color = color;\n        this.firework = firework;\n    }\n\n    /** Gets the associated (wool) data value representing this color.","doc":{"return":["A byte containing the (wool) data value of this color","A byte containing the wool data value of this color","A byte containing the dye data value of this color","The {@link io.wolfscript.Color} that this dye represents /\n    public Color getColor() {\n        return color;\n    }\n\n    /** Gets the firework color that this dye represents.","The {@link io.wolfscript.Color} that this dye represents /\n    public Color getFireworkColor() {\n        return firework;\n    }\n\n    /** Gets the DyeColor with the given (wool) data value.","The {@link io.wolfscript.DyeColor} representing the given value, or null if it doesn't exist","The {@link io.wolfscript.DyeColor} representing the given value, or null if it doesn't exist","The {@link io.wolfscript.DyeColor} representing the given value, or null if it doesn't exist","The {@link io.wolfscript.DyeColor} representing the given value, or null if it doesn't exist /\n    public static DyeColor getByColor(final Color color) {\n        return BY_COLOR.get(color);\n    }\n\n    /** Gets the DyeColor with the given firework color value.","The {@link io.wolfscript.DyeColor} representing the given value, or null if it doesn't exist"],"deprecated":["The name is misleading. It would imply {@link Material#INK_SACK} but uses {@link Material#WOOL}","Magic value /\n    @Deprecated\n    public byte getWoolData() {\n        return woolData;\n    }\n\n    /** Gets the associated dye data value representing this color.","Magic value /\n    @Deprecated\n    public byte getDyeData() {\n        return dyeData;\n    }\n\n    /** Gets the color that this dye represents.","The name is misleading. It would imply {@link Material#INK_SACK} but uses {@link Material#WOOL}","Magic value /\n    @Deprecated\n    public static DyeColor getByWoolData(final byte data) {\n        int i = 0xff & data;\n        if (i >= BY_WOOL_DATA.length) {\n            return null;\n        }\n        return BY_WOOL_DATA[i];\n    }\n\n    /** Gets the DyeColor with the given dye data value.","Magic value /\n    @Deprecated\n    public static DyeColor getByDyeData(final byte data) {\n        int i = 0xff & data;\n        if (i >= BY_DYE_DATA.length) {\n            return null;\n        }\n        return BY_DYE_DATA[i];\n    }\n\n    /** Gets the DyeColor with the given color value."],"see":["#getWoolData()","#getDyeData() /\n    @Deprecated\n    public byte getData() {\n        return getWoolData();\n    }\n\n    /** Gets the associated wool data value representing this color.","#getDyeData()","#getWoolData()","#getByDyeData(byte)","#getByWoolData(byte) /\n    @Deprecated\n    public static DyeColor getByData(final byte data) {\n        return getByWoolData(data);\n    }\n\n    /** Gets the DyeColor with the given wool data value.","#getByDyeData(byte)","#getByWoolData(byte)"]},"scope":"public","describe":"static","return":"io.wolfscript.DyeColor","name":"getByFireworkColor","args":[{"name":"Color","type":"final","description":"Color argument"}]}],"imports":["java.util.Map","com.google.common.collect.ImmutableMap"],"enum":[{"code":"0x0","value":"","title":"0x0 DyeColor","description":"0x0 DyeColor"},{"code":"0xF","value":"","title":"0xF DyeColor","description":"0xF DyeColor"},{"code":"Color.WHITE","value":"","title":"Color.WHITE DyeColor","description":"Color.WHITE DyeColor"},{"code":"Color.fromRGB","value":"0xF0F0F0)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0x1","value":"","title":"0x1 DyeColor","description":"0x1 DyeColor"},{"code":"0xE","value":"","title":"0xE DyeColor","description":"0xE DyeColor"},{"code":"Color.fromRGB","value":"0xD87F33","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0xEB8844)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0x2","value":"","title":"0x2 DyeColor","description":"0x2 DyeColor"},{"code":"0xD","value":"","title":"0xD DyeColor","description":"0xD DyeColor"},{"code":"Color.fromRGB","value":"0xB24CD8","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0xC354CD)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0x3","value":"","title":"0x3 DyeColor","description":"0x3 DyeColor"},{"code":"0xC","value":"","title":"0xC DyeColor","description":"0xC DyeColor"},{"code":"Color.fromRGB","value":"0x6699D8","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0x6689D3)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0x4","value":"","title":"0x4 DyeColor","description":"0x4 DyeColor"},{"code":"0xB","value":"","title":"0xB DyeColor","description":"0xB DyeColor"},{"code":"Color.fromRGB","value":"0xE5E533","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0xDECF2A)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0x5","value":"","title":"0x5 DyeColor","description":"0x5 DyeColor"},{"code":"0xA","value":"","title":"0xA DyeColor","description":"0xA DyeColor"},{"code":"Color.fromRGB","value":"0x7FCC19","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0x41CD34)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0x6","value":"","title":"0x6 DyeColor","description":"0x6 DyeColor"},{"code":"0x9","value":"","title":"0x9 DyeColor","description":"0x9 DyeColor"},{"code":"Color.fromRGB","value":"0xF27FA5","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0xD88198)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0x7","value":"","title":"0x7 DyeColor","description":"0x7 DyeColor"},{"code":"0x8","value":"","title":"0x8 DyeColor","description":"0x8 DyeColor"},{"code":"Color.fromRGB","value":"0x4C4C4C","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0x434343)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0x8","value":"","title":"0x8 DyeColor","description":"0x8 DyeColor"},{"code":"0x7","value":"","title":"0x7 DyeColor","description":"0x7 DyeColor"},{"code":"Color.fromRGB","value":"0x999999","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0xABABAB)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0x9","value":"","title":"0x9 DyeColor","description":"0x9 DyeColor"},{"code":"0x6","value":"","title":"0x6 DyeColor","description":"0x6 DyeColor"},{"code":"Color.fromRGB","value":"0x4C7F99","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0x287697)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0xA","value":"","title":"0xA DyeColor","description":"0xA DyeColor"},{"code":"0x5","value":"","title":"0x5 DyeColor","description":"0x5 DyeColor"},{"code":"Color.fromRGB","value":"0x7F3FB2","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0x7B2FBE)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0xB","value":"","title":"0xB DyeColor","description":"0xB DyeColor"},{"code":"0x4","value":"","title":"0x4 DyeColor","description":"0x4 DyeColor"},{"code":"Color.fromRGB","value":"0x334CB2","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0x253192)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0xC","value":"","title":"0xC DyeColor","description":"0xC DyeColor"},{"code":"0x3","value":"","title":"0x3 DyeColor","description":"0x3 DyeColor"},{"code":"Color.fromRGB","value":"0x664C33","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0x51301A)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0xD","value":"","title":"0xD DyeColor","description":"0xD DyeColor"},{"code":"0x2","value":"","title":"0x2 DyeColor","description":"0x2 DyeColor"},{"code":"Color.fromRGB","value":"0x667F33","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0x3B511A)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0xE","value":"","title":"0xE DyeColor","description":"0xE DyeColor"},{"code":"0x1","value":"","title":"0x1 DyeColor","description":"0x1 DyeColor"},{"code":"Color.fromRGB","value":"0x993333","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0xB3312C)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"0xF","value":"","title":"0xF DyeColor","description":"0xF DyeColor"},{"code":"0x0","value":"","title":"0x0 DyeColor","description":"0x0 DyeColor"},{"code":"Color.fromRGB","value":"0x191919","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"},{"code":"Color.fromRGB","value":"0x1E1B1B)","title":"Color.fromRGB DyeColor","description":"Color.fromRGB DyeColor"}],"properties":[]},"io.wolfscript.EntityEffect":{"namespace":"io.wolfscript","title":"A list of all Effects that can happen to entities.","description":"A list of all Effects that can happen to entities.","name":"EntityEffect","qualifiedname":"io.wolfscript.EntityEffect","type":"enum","scope":"public","constructors":[],"methods":[{"title":"When mobs get hurt.","description":"When mobs get hurt. /\n    HURT(2),\n\n    /** When a mob dies. <p> <b>This will cause client-glitches!</b> /\n    DEATH(3),\n\n    /** The smoke when taming a wolf fails. <p> Without client-mods this will be ignored if the entity is not a wolf. /\n    WOLF_SMOKE(6),\n\n    /** The hearts when taming a wolf succeeds. <p> Without client-mods this will be ignored if the entity is not a wolf. /\n    WOLF_HEARTS(7),\n\n    /** When a wolf shakes (after being wet). <p> Without client-mods this will be ignored if the entity is not a wolf. /\n    WOLF_SHAKE(8),\n\n    /** When a sheep eats a LONG_GRASS block. /\n    SHEEP_EAT(10),\n\n    /** When an Iron Golem gives a rose. <p> This will not play an effect if the entity is not an iron golem. /\n    IRON_GOLEM_ROSE(11),\n\n    /** Hearts from a villager. <p> This will not play an effect if the entity is not a villager. /\n    VILLAGER_HEART(12),\n\n    /** When a villager is angry. <p> This will not play an effect if the entity is not a villager. /\n    VILLAGER_ANGRY(13),\n\n    /** Happy particles from a villager. <p> This will not play an effect if the entity is not a villager. /\n    VILLAGER_HAPPY(14),\n\n    /** Magic particles from a witch. <p> This will not play an effect if the entity is not a witch. /\n    WITCH_MAGIC(15),\n\n    /** When a zombie transforms into a villager by shaking violently. <p> This will not play an effect if the entity is not a zombie. /\n    ZOMBIE_TRANSFORM(16),\n\n    /** When a firework explodes. <p> This will not play an effect if the entity is not a firework. /\n    FIREWORK_EXPLODE(17);\n\n    private final byte data;\n    private final static Map<Byte, EntityEffect> BY_DATA = Maps.newHashMap();\n\n    EntityEffect(final int data) {\n        this.data = (byte) data;\n    }\n\n    /** Gets the data value of this EntityEffect","doc":{"return":["The data value","The {@link io.wolfscript.EntityEffect} representing the given value, or null if it doesn't exist"],"deprecated":["Magic value /\n    @Deprecated\n    public byte getData() {\n        return data;\n    }\n\n    /** Gets the EntityEffect with the given data value","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.EntityEffect","name":"getByData","deprecated":true,"args":[{"name":"byte","type":"final","description":"byte argument"}]}],"imports":["java.util.Map","com.google.common.collect.Maps"],"enum":[{"code":"FIREWORK_EXPLODE","value":"17","title":"When mobs get hurt.","description":"When mobs get hurt. /\n    HURT(2),\n\n    /** When a mob dies. <p> <b>This will cause client-glitches!</b> /\n    DEATH(3),\n\n    /** The smoke when taming a wolf fails. <p> Without client-mods this will be ignored if the entity is not a wolf. /\n    WOLF_SMOKE(6),\n\n    /** The hearts when taming a wolf succeeds. <p> Without client-mods this will be ignored if the entity is not a wolf. /\n    WOLF_HEARTS(7),\n\n    /** When a wolf shakes (after being wet). <p> Without client-mods this will be ignored if the entity is not a wolf. /\n    WOLF_SHAKE(8),\n\n    /** When a sheep eats a LONG_GRASS block. /\n    SHEEP_EAT(10),\n\n    /** When an Iron Golem gives a rose. <p> This will not play an effect if the entity is not an iron golem. /\n    IRON_GOLEM_ROSE(11),\n\n    /** Hearts from a villager. <p> This will not play an effect if the entity is not a villager. /\n    VILLAGER_HEART(12),\n\n    /** When a villager is angry. <p> This will not play an effect if the entity is not a villager. /\n    VILLAGER_ANGRY(13),\n\n    /** Happy particles from a villager. <p> This will not play an effect if the entity is not a villager. /\n    VILLAGER_HAPPY(14),\n\n    /** Magic particles from a witch. <p> This will not play an effect if the entity is not a witch. /\n    WITCH_MAGIC(15),\n\n    /** When a zombie transforms into a villager by shaking violently. <p> This will not play an effect if the entity is not a zombie. /\n    ZOMBIE_TRANSFORM(16),\n\n    /** When a firework explodes. <p> This will not play an effect if the entity is not a firework.","doc":{}}],"properties":[]},"io.wolfscript.Environment":{"namespace":"io.wolfscript","title":"Represents a world, which may contain entities, chunks and blocks","description":"Represents a world, which may contain entities, chunks and blocks /\npublic interface World extends PluginMessageRecipient, Metadatable {\n\n    /** Gets the {@link io.wolfscript.block.Block} at the given coordinates","doc":{"param":["x X-coordinate of the block","y Y-coordinate of the block","z Z-coordinate of the block","location Location of the block","x X-coordinate of the block","y Y-coordinate of the block","z Z-coordinate of the block","location Location of the block","x X-coordinate of the blocks","z Z-coordinate of the blocks","location Location of the blocks","x X-coordinate of the block","z Z-coordinate of the block","location Coordinates to get the highest block","x X-coordinate of the chunk","z Z-coordinate of the chunk","location Location of the chunk","block Block to get the containing chunk from","chunk The chunk to check","chunk The chunk to load /\n    public void loadChunk(Chunk chunk);\n\n    /** Checks if the {@link Chunk} at the specified coordinates is loaded","x X-coordinate of the chunk","z Z-coordinate of the chunk","x X-coordinate of the chunk","z Z-coordinate of the chunk","x X-coordinate of the chunk","z Z-coordinate of the chunk /\n    public void loadChunk(int x, int z);\n\n    /** Loads the {@link Chunk} at the specified coordinates","x X-coordinate of the chunk","z Z-coordinate of the chunk","generate Whether or not to generate a chunk if it doesn't already exist","chunk the chunk to unload","x X-coordinate of the chunk","z Z-coordinate of the chunk","x X-coordinate of the chunk","z Z-coordinate of the chunk","save Whether or not to save the chunk","x X-coordinate of the chunk","z Z-coordinate of the chunk","save Controls whether the chunk is saved","safe Controls whether to unload the chunk when players are nearby","x X-coordinate of the chunk","z Z-coordinate of the chunk","x X-coordinate of the chunk","z Z-coordinate of the chunk","safe Controls whether to queue the chunk when players are nearby","x X-coordinate of the chunk","z Z-coordinate of the chunk","x X-coordinate of the chunk","z Z-coordinate of the chunk","location Location to drop the item","item ItemStack to drop","location Location to drop the item","item ItemStack to drop","location Location to spawn the arrow","direction Direction to shoot the arrow in","speed Speed of the arrow. A recommend speed is 0.6","spread Spread of the arrow. A recommend spread is 12","location Location to spawn the tree","type Type of the tree to create","loc Location to spawn the tree","type Type of the tree to create","delegate A class to call for each block changed as a result of this method","loc The location to spawn the entity","type The entity to spawn","loc The location to spawn the creature","type The creature to spawn","loc The location to spawn the creature","type The creature to spawn","loc The location to strike lightning","loc The location to strike lightning","<T> an entity subclass","classes The classes representing the types of entity to match","<T> an entity subclass","cls The class representing the type of entity to match","classes The classes representing the types of entity to match","location The center of the bounding box","x 1/2 the size of the box along x axis","y 1/2 the size of the box along y axis","z 1/2 the size of the box along z axis","x X coordinate","y Y coordinate","z Z coordinate","time The new relative time to set the in-game time to (in hours*1000)","time The new absolute time to set this world to","hasStorm Whether there is rain and snow /\n    public void setStorm(boolean hasStorm);\n\n    /** Get the remaining time in ticks of the current conditions.","duration Time in ticks /\n    public void setWeatherDuration(int duration);\n\n    /** Returns whether there is thunder.","thundering Whether it is thundering /\n    public void setThundering(boolean thundering);\n\n    /** Get the thundering duration.","duration Duration in ticks /\n    public void setThunderDuration(int duration);\n\n    /** Creates explosion at given coordinates with given power","x X coordinate","y Y coordinate","z Z coordinate","power The power of explosion, where 4F is TNT","x X coordinate","y Y coordinate","z Z coordinate","power The power of explosion, where 4F is TNT","setFire Whether or not to set blocks on fire","x X coordinate","y Y coordinate","z Z coordinate","power The power of explosion, where 4F is TNT","setFire Whether or not to set blocks on fire","breakBlocks Whether or not to have blocks be destroyed","loc Location to blow up","power The power of explosion, where 4F is TNT","loc Location to blow up","power The power of explosion, where 4F is TNT","setFire Whether or not to set blocks on fire","pvp True/False whether PVP should be Enabled. /\n    public void setPVP(boolean pvp);\n\n    /** Gets the chunk generator for this world","location the {@link Location} to spawn the entity at","clazz the class of the {@link Entity} to spawn","<T> the class of the {@link Entity} to spawn","location The {@link Location} to spawn the FallingBlock","material The block {@link Material} type","data The block data","location The {@link Location} to spawn the FallingBlock","blockId The id of the intended material","blockData The block data","location the {@link Location} around which players must be to hear the sound","effect the {@link Effect}","data a data bit needed for some effects /\n    public void playEffect(Location location, Effect effect, int data);\n\n    /** Plays an effect to all players within a given radius around a location.","location the {@link Location} around which players must be to hear the effect","effect the {@link Effect}","data a data bit needed for some effects","radius the radius around the location /\n    public void playEffect(Location location, Effect effect, int data, int radius);\n\n    /** Plays an effect to all players within a default radius around a given location.","<T> data dependant on the type of effect","location the {@link Location} around which players must be to hear the sound","effect the {@link Effect}","data a data bit needed for some effects /\n    public <T> void playEffect(Location location, Effect effect, T data);\n\n    /** Plays an effect to all players within a given radius around a location.","<T> data dependant on the type of effect","location the {@link Location} around which players must be to hear the effect","effect the {@link Effect}","data a data bit needed for some effects","radius the radius around the location /\n    public <T> void playEffect(Location location, Effect effect, T data, int radius);\n\n    /** Get empty chunk snapshot (equivalent to all air blocks), optionally including valid biome data. Used for representing an ungenerated chunk, or for fetching only biome data without loading a chunk.","x - chunk x coordinate","z - chunk z coordinate","includeBiome - if true, snapshot includes per-coordinate biome type","includeBiomeTempRain - if true, snapshot includes per-coordinate raw biome temperature and rainfall","allowMonsters - if true, monsters are allowed to spawn in this world.","allowAnimals - if true, animals are allowed to spawn in this world. /\n    public void setSpawnFlags(boolean allowMonsters, boolean allowAnimals);\n\n    /** Gets whether animals can spawn in this world.","x X coordinate of the block","z Z coordinate of the block","x X coordinate of the block","z Z coordinate of the block","bio new Biome type for this block /\n    void setBiome(int x, int z, Biome bio);\n\n    /** Gets the temperature for the given block coordinates. <p> It is safe to run this method when the block does not exist, it will not create the block.","x X coordinate of the block","z Z coordinate of the block","x X coordinate of the block","z Z coordinate of the block","keepLoaded if true then the world's spawn area will be kept loaded into memory. /\n    public void setKeepSpawnInMemory(boolean keepLoaded);\n\n    /** Gets whether or not the world will automatically save","value true if the world should automatically save, otherwise false /\n    public void setAutoSave(boolean value);\n\n    /** Sets the Difficulty of the world.","difficulty the new difficulty you want to set the world to /\n    public void setDifficulty(Difficulty difficulty);\n\n    /** Gets the Difficulty of the world.","ticksPerAnimalSpawns the ticks per animal spawns value you want to set the world to /\n    public void setTicksPerAnimalSpawns(int ticksPerAnimalSpawns);\n\n    /** Gets the world's ticks per monster spawns value <p> This value determines how many ticks there are between attempts to spawn monsters. <p> <b>Example Usage:</b> <ul> <li>A value of 1 will mean the server will attempt to spawn monsters in this world every tick. <li>A value of 400 will mean the server will attempt to spawn monsters in this world every 400th tick. <li>A value below 0 will be reset back to Minecraft's default. </ul> <p> <b>Note:</b> If set to 0, monsters spawning will be disabled for this world. We recommend using {@link #setSpawnFlags(boolean, boolean)} to control this instead. <p> Minecraft default: 1.","ticksPerMonsterSpawns the ticks per monster spawns value you want to set the world to /\n    public void setTicksPerMonsterSpawns(int ticksPerMonsterSpawns);\n\n    /** Gets limit for number of monsters that can spawn in a chunk in this world","limit the new mob limit /\n    void setMonsterSpawnLimit(int limit);\n\n    /** Gets the limit for number of animals that can spawn in a chunk in this world","limit the new mob limit /\n    void setAnimalSpawnLimit(int limit);\n\n    /** Gets the limit for number of water animals that can spawn in a chunk in this world","limit the new mob limit /\n    void setWaterAnimalSpawnLimit(int limit);\n\n    /** Gets the limit for number of ambient mobs that can spawn in a chunk in this world","limit the new mob limit /\n    void setAmbientSpawnLimit(int limit);\n\n    /** Play a Sound at the provided Location in the World <p> This function will fail silently if Location or Sound are null.","location The location to play the sound","sound The sound to play","volume The volume of the sound","pitch The pitch of the sound /\n    void playSound(Location location, Sound sound, float volume, float pitch);\n\n    /** Get existing rules","rule Rule to look up value of","rule Rule to set","value Value to set rule to","rule Rule to check"],"return":["Block at the given coordinates","Block at the given location","Type ID of the block at the given coordinates","Type ID of the block at the given location","Y-coordinate of the highest non-air block /\n    public int getHighestBlockYAt(int x, int z);\n\n    /** Gets the highest non-air coordinate at the given {@link Location}","Y-coordinate of the highest non-air block /\n    public int getHighestBlockYAt(Location location);\n\n    /** Gets the highest non-empty block at the given coordinates","Highest non-empty block /\n    public Block getHighestBlockAt(int x, int z);\n\n    /** Gets the highest non-empty block at the given coordinates","Highest non-empty block /\n    public Block getHighestBlockAt(Location location);\n\n    /** Gets the {@link Chunk} at the given coordinates","Chunk at the given coordinates /\n    public Chunk getChunkAt(int x, int z);\n\n    /** Gets the {@link Chunk} at the given {@link Location}","Chunk at the given location /\n    public Chunk getChunkAt(Location location);\n\n    /** Gets the {@link Chunk} that contains the given {@link Block}","The chunk that contains the given block /\n    public Chunk getChunkAt(Block block);\n\n    /** Checks if the specified {@link Chunk} is loaded","true if the chunk is loaded, otherwise false /\n    public boolean isChunkLoaded(Chunk chunk);\n\n    /** Gets an array of all loaded {@link Chunk}s","Chunk[] containing all loaded chunks /\n    public Chunk[] getLoadedChunks();\n\n    /** Loads the specified {@link Chunk}","true if the chunk is loaded, otherwise false /\n    public boolean isChunkLoaded(int x, int z);\n\n    /** Checks if the {@link Chunk} at the specified coordinates is loaded and in use by one or more players","true if the chunk is loaded and in use by one or more players, otherwise false /\n    public boolean isChunkInUse(int x, int z);\n\n    /** Loads the {@link Chunk} at the specified coordinates <p> If the chunk does not exist, it will be generated. <p> This method is analogous to {@link #loadChunk(int, int, boolean)} where generate is true.","true if the chunk has loaded successfully, otherwise false /\n    public boolean loadChunk(int x, int z, boolean generate);\n\n    /** Safely unloads and saves the {@link Chunk} at the specified coordinates <p> This method is analogous to {@link #unloadChunk(int, int, boolean, boolean)} where safe and saveis true","true if the chunk has unloaded successfully, otherwise false /\n    public boolean unloadChunk(Chunk chunk);\n\n    /** Safely unloads and saves the {@link Chunk} at the specified coordinates <p> This method is analogous to {@link #unloadChunk(int, int, boolean, boolean)} where safe and saveis true","true if the chunk has unloaded successfully, otherwise false /\n    public boolean unloadChunk(int x, int z);\n\n    /** Safely unloads and optionally saves the {@link Chunk} at the specified coordinates <p> This method is analogous to {@link #unloadChunk(int, int, boolean, boolean)} where save is true","true if the chunk has unloaded successfully, otherwise false /\n    public boolean unloadChunk(int x, int z, boolean save);\n\n    /** Unloads and optionally saves the {@link Chunk} at the specified coordinates","true if the chunk has unloaded successfully, otherwise false /\n    public boolean unloadChunk(int x, int z, boolean save, boolean safe);\n\n    /** Safely queues the {@link Chunk} at the specified coordinates for unloading <p> This method is analogous to {@link #unloadChunkRequest(int, int, boolean)} where safe is true","true is the queue attempt was successful, otherwise false /\n    public boolean unloadChunkRequest(int x, int z);\n\n    /** Queues the {@link Chunk} at the specified coordinates for unloading","Whether the chunk was actually queued /\n    public boolean unloadChunkRequest(int x, int z, boolean safe);\n\n    /** Regenerates the {@link Chunk} at the specified coordinates","Whether the chunk was actually regenerated /\n    public boolean regenerateChunk(int x, int z);\n\n    /** Resends the {@link Chunk} to all clients","Whether the chunk was actually refreshed","ItemDrop entity created as a result of this method /\n    public Item dropItem(Location location, ItemStack item);\n\n    /** Drops an item at the specified {@link Location} with a random offset","ItemDrop entity created as a result of this method /\n    public Item dropItemNaturally(Location location, ItemStack item);\n\n    /** Creates an {@link Arrow} entity at the given {@link Location}","Arrow entity spawned as a result of this method /\n    public Arrow spawnArrow(Location location, Vector direction, float speed, float spread);\n\n    /** Creates a tree at the given {@link Location}","true if the tree was created successfully, otherwise false /\n    public boolean generateTree(Location location, TreeType type);\n\n    /** Creates a tree at the given {@link Location}","true if the tree was created successfully, otherwise false /\n    public boolean generateTree(Location loc, TreeType type, BlockChangeDelegate delegate);\n\n    /** Creates a entity at the given {@link Location}","Resulting Entity of this method, or null if it was unsuccessful /\n    public Entity spawnEntity(Location loc, EntityType type);\n\n    /** Creates a creature at the given {@link Location}","Resulting LivingEntity of this method, or null if it was unsuccessful","Resulting LivingEntity of this method, or null if it was unsuccessful /\n    @Deprecated\n    public LivingEntity spawnCreature(Location loc, CreatureType type);\n\n    /** Strikes lightning at the given {@link Location}","The lightning entity. /\n    public LightningStrike strikeLightning(Location loc);\n\n    /** Strikes lightning at the given {@link Location} without doing damage","The lightning entity. /\n    public LightningStrike strikeLightningEffect(Location loc);\n\n    /** Get a list of all entities in this World","A List of all Entities currently residing in this world /\n    public List<Entity> getEntities();\n\n    /** Get a list of all living entities in this World","A List of all LivingEntities currently residing in this world /\n    public List<LivingEntity> getLivingEntities();\n\n    /** Get a collection of all entities in this World matching the given class/interface","A List of all Entities currently residing in this world that match the given class/interface /\n    @Deprecated\n    public <T extends Entity> Collection<T> getEntitiesByClass(Class<T>... classes);\n\n    /** Get a collection of all entities in this World matching the given class/interface","A List of all Entities currently residing in this world that match the given class/interface /\n    public <T extends Entity> Collection<T> getEntitiesByClass(Class<T> cls);\n\n    /** Get a collection of all entities in this World matching any of the given classes/interfaces","A List of all Entities currently residing in this world that match one or more of the given classes/interfaces /\n    public Collection<Entity> getEntitiesByClasses(Class<?>... classes);\n\n    /** Get a list of all players in this World","A list of all Players currently residing in this world /\n    public List<Player> getPlayers();\n\n    /** Returns a list of entities within a bounding box centered around a Location. Some implementations may impose artificial restrictions on the size of the search bounding box.","the collection of entities near location. This will always be a non-null collection. /\n    public Collection<Entity> getNearbyEntities(Location location, double x, double y, double z);\n\n    /** Gets the unique name of this world","Name of this world /\n    public String getName();\n\n    /** Gets the Unique ID of this world","Unique ID of this world. /\n    public UUID getUID();\n\n    /** Gets the default spawn {@link Location} of this world","The spawn location of this world /\n    public Location getSpawnLocation();\n\n    /** Sets the spawn location of the world","True if it was successfully set. /\n    public boolean setSpawnLocation(int x, int y, int z);\n\n    /** Gets the relative in-game time of this world. <p> The relative time is analogous to hours 1000","The current relative time","The current absolute time","Whether there is an ongoing storm /\n    public boolean hasStorm();\n\n    /** Set whether there is a storm. A duration will be set for the new current conditions.","Time in ticks /\n    public int getWeatherDuration();\n\n    /** Set the remaining time in ticks of the current conditions.","Whether there is thunder /\n    public boolean isThundering();\n\n    /** Set whether it is thundering.","Duration in ticks /\n    public int getThunderDuration();\n\n    /** Set the thundering duration.","false if explosion was canceled, otherwise true /\n    public boolean createExplosion(double x, double y, double z, float power);\n\n    /** Creates explosion at given coordinates with given power and optionally setting blocks on fire.","false if explosion was canceled, otherwise true /\n    public boolean createExplosion(double x, double y, double z, float power, boolean setFire);\n\n    /** Creates explosion at given coordinates with given power and optionally setting blocks on fire or breaking blocks.","false if explosion was canceled, otherwise true /\n    public boolean createExplosion(double x, double y, double z, float power, boolean setFire, boolean breakBlocks);\n\n    /** Creates explosion at given coordinates with given power","false if explosion was canceled, otherwise true /\n    public boolean createExplosion(Location loc, float power);\n\n    /** Creates explosion at given coordinates with given power and optionally setting blocks on fire.","false if explosion was canceled, otherwise true /\n    public boolean createExplosion(Location loc, float power, boolean setFire);\n\n    /** Gets the {@link Environment} type of this world","This worlds Environment type /\n    public Environment getEnvironment();\n\n    /** Gets the Seed for this world.","This worlds Seed /\n    public long getSeed();\n\n    /** Gets the current PVP setting for this world.","True if PVP is enabled /\n    public boolean getPVP();\n\n    /** Sets the PVP setting for this world.","ChunkGenerator associated with this world /\n    public ChunkGenerator getGenerator();\n\n    /** Saves world to disk /\n    public void save();\n\n    /** Gets a list of all applied {@link BlockPopulator}s for this World","List containing any or none BlockPopulators /\n    public List<BlockPopulator> getPopulators();\n\n    /** Spawn an entity of a specific class at the given {@link Location}","an instance of the spawned {@link Entity}","The spawned {@link FallingBlock} instance","The spawned FallingBlock instance","The empty snapshot. /\n    public ChunkSnapshot getEmptyChunkSnapshot(int x, int z, boolean includeBiome, boolean includeBiomeTempRain);\n\n    /** Sets the spawn flags for this.","whether animals can spawn in this world. /\n    public boolean getAllowAnimals();\n\n    /** Gets whether monsters can spawn in this world.","whether monsters can spawn in this world. /\n    public boolean getAllowMonsters();\n\n    /** Gets the biome for the given block coordinates.","Biome of the requested block /\n    Biome getBiome(int x, int z);\n\n    /** Sets the biome for the given block coordinates","Temperature of the requested block /\n    public double getTemperature(int x, int z);\n\n    /** Gets the humidity for the given block coordinates. <p> It is safe to run this method when the block does not exist, it will not create the block.","Humidity of the requested block /\n    public double getHumidity(int x, int z);\n\n    /** Gets the maximum height of this world. <p> If the max height is 100, there are only blocks from y=0 to y=99.","Maximum height of the world /\n    public int getMaxHeight();\n\n    /** Gets the sea level for this world. <p> This is often half of {@link #getMaxHeight()}","Sea level /\n    public int getSeaLevel();\n\n    /** Gets whether the world's spawn area should be kept loaded into memory or not.","true if the world's spawn area will be kept loaded into memory. /\n    public boolean getKeepSpawnInMemory();\n\n    /** Sets whether the world's spawn area should be kept loaded into memory or not.","true if the world will automatically save, otherwise false /\n    public boolean isAutoSave();\n\n    /** Sets whether or not the world will automatically save","The difficulty of the world. /\n    public Difficulty getDifficulty();\n\n    /** Gets the folder of this world on disk.","The folder of this world. /\n    public File getWorldFolder();\n\n    /** Gets the type of this world.","Type of this world. /\n    public WorldType getWorldType();\n\n    /** Gets whether or not structures are being generated.","True if structures are being generated. /\n    public boolean canGenerateStructures();\n\n    /** Gets the world's ticks per animal spawns value <p> This value determines how many ticks there are between attempts to spawn animals. <p> <b>Example Usage:</b> <ul> <li>A value of 1 will mean the server will attempt to spawn animals in this world every tick. <li>A value of 400 will mean the server will attempt to spawn animals in this world every 400th tick. <li>A value below 0 will be reset back to Minecraft's default. </ul> <p> <b>Note:</b> If set to 0, animal spawning will be disabled for this world. We recommend using {@link #setSpawnFlags(boolean, boolean)} to control this instead. <p> Minecraft default: 400.","The world's ticks per animal spawns value /\n    public long getTicksPerAnimalSpawns();\n\n    /** Sets the world's ticks per animal spawns value <p> This value determines how many ticks there are between attempts to spawn animals. <p> <b>Example Usage:</b> <ul> <li>A value of 1 will mean the server will attempt to spawn animals in this world every tick. <li>A value of 400 will mean the server will attempt to spawn animals in this world every 400th tick. <li>A value below 0 will be reset back to Minecraft's default. </ul> <p> <b>Note:</b> If set to 0, animal spawning will be disabled for this world. We recommend using {@link #setSpawnFlags(boolean, boolean)} to control this instead. <p> Minecraft default: 400.","The world's ticks per monster spawns value /\n    public long getTicksPerMonsterSpawns();\n\n    /** Sets the world's ticks per monster spawns value <p> This value determines how many ticks there are between attempts to spawn monsters. <p> <b>Example Usage:</b> <ul> <li>A value of 1 will mean the server will attempt to spawn monsters in this world on every tick. <li>A value of 400 will mean the server will attempt to spawn monsters in this world every 400th tick. <li>A value below 0 will be reset back to Minecraft's default. </ul> <p> <b>Note:</b> If set to 0, monsters spawning will be disabled for this world. We recommend using {@link #setSpawnFlags(boolean, boolean)} to control this instead. <p> Minecraft default: 1.","The monster spawn limit /\n    int getMonsterSpawnLimit();\n\n    /** Sets the limit for number of monsters that can spawn in a chunk in this world <p> <b>Note:</b> If set to a negative number the world will use the server-wide spawn limit instead.","The animal spawn limit /\n    int getAnimalSpawnLimit();\n\n    /** Sets the limit for number of animals that can spawn in a chunk in this world <p> <b>Note:</b> If set to a negative number the world will use the server-wide spawn limit instead.","The water animal spawn limit /\n    int getWaterAnimalSpawnLimit();\n\n    /** Sets the limit for number of water animals that can spawn in a chunk in this world <p> <b>Note:</b> If set to a negative number the world will use the server-wide spawn limit instead.","The ambient spawn limit /\n    int getAmbientSpawnLimit();\n\n    /** Sets the limit for number of ambient mobs that can spawn in a chunk in this world <p> <b>Note:</b> If set to a negative number the world will use the server-wide spawn limit instead.","An array of rules /\n    public String[] getGameRules();\n\n    /** Gets the current state of the specified rule <p> Will return null if rule passed is null","String value of rule /\n    public String getGameRuleValue(String rule);\n\n    /** Set the specified gamerule to specified value. <p> The rule may attempt to validate the value passed, will return true if value was set. <p> If rule is null, the function will return false.","True if rule was set /\n    public boolean setGameRuleValue(String rule, String value);\n\n    /** Checks if string is a valid game rule","True if rule exists /\n    public boolean isGameRule(String rule);\n\n    /** Gets the world border for this world.","The world border for this world. /\n    public WorldBorder getWorldBorder();\n\n    /** Represents various map environment types that a world may be"],"see":["#getBlockTypeIdAt(int, int, int) Returns the current type ID of the block /\n    public Block getBlockAt(int x, int y, int z);\n\n    /** Gets the {@link Block} at the given {@link Location}","#getBlockTypeIdAt(io.wolfscript.Location) Returns the current type ID of the block /\n    public Block getBlockAt(Location location);\n\n    /** Gets the block type ID at the given coordinates","#getBlockAt(int, int, int) Returns a live Block object at the given location","#getBlockAt(io.wolfscript.Location) Returns a live Block object at the given location","#getFullTime() Returns an absolute time of this world /\n    public long getTime();\n\n    /** Sets the relative in-game time on the server. <p> The relative time is analogous to hours 1000 <p> Note that setting the relative time below the current relative time will actually move the clock forward a day. If you require to rewind time, please see {@link #setFullTime(long)}","#setFullTime(long) Sets the absolute time of this world /\n    public void setTime(long time);\n\n    /** Gets the full in-game time on this world","#getTime() Returns a relative time of this world /\n    public long getFullTime();\n\n    /** Sets the in-game time on the server <p> Note that this sets the full time of the world, which may cause adverse effects such as breaking redstone clocks and any scheduled events","#setTime(long) Sets the relative time of this world /\n    public void setFullTime(long time);\n\n    /** Returns whether the world has an ongoing storm.","#spawnFallingBlock(io.wolfscript.Location, io.wolfscript.Material, byte)"],"deprecated":["Magic value /\n    @Deprecated\n    public int getBlockTypeIdAt(int x, int y, int z);\n\n    /** Gets the block type ID at the given {@link Location}","Magic value /\n    @Deprecated\n    public int getBlockTypeIdAt(Location location);\n\n    /** Gets the highest non-air coordinate at the given coordinates","This method is not guaranteed to work suitably across all client implementations. /\n    @Deprecated\n    public boolean refreshChunk(int x, int z);\n\n    /** Drops an item at the specified {@link Location}","Has issues spawning non LivingEntities. Use {@link #spawnEntity(Location, EntityType) spawnEntity} instead. /\n    @Deprecated\n    public LivingEntity spawnCreature(Location loc, EntityType type);\n\n    /** Creates a creature at the given {@link Location}","Magic value /\n    @Deprecated\n    public FallingBlock spawnFallingBlock(Location location, Material material, byte data) throws IllegalArgumentException;\n\n    /** Spawn a {@link FallingBlock} entity at the given {@link Location} of the specified blockId (converted to {@link Material})","Magic value /\n    @Deprecated\n    public FallingBlock spawnFallingBlock(Location location, int blockId, byte blockData) throws IllegalArgumentException;\n\n    /** Plays an effect to all players within a default radius around a given location."],"throws":["IllegalArgumentException if either parameter is null or the {@link Entity} requested cannot be spawned /\n    public <T extends Entity> T spawn(Location location, Class<T> clazz) throws IllegalArgumentException;\n\n    /** Spawn a {@link FallingBlock} entity at the given {@link Location} of the specified {@link Material}. The material dictates what is falling. When the FallingBlock hits the ground, it will place that block. <p> The Material must be a block type, check with {@link Material#isBlock() material.isBlock()}. The Material may not be air.","IllegalArgumentException if {@link Location} or {@link Material} are null or {@link Material} is not a block","IllegalArgumentException if location is null, or blockId is invalid"]},"name":"Environment","qualifiedname":"io.wolfscript.Environment","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Represents the \"normal\"/\"surface world\" map","description":"Represents the \"normal\"/\"surface world\" map /\n        NORMAL(0),\n        /** Represents a nether based map (\"hell\") /\n        NETHER(-1),\n        /** Represents the \"end\" map /\n        THE_END(1);\n\n        private final int id;\n        private static final Map<Integer, Environment> lookup = new HashMap<Integer, Environment>();\n\n        private Environment(int id) {\n            this.id = id;\n        }\n\n        /** Gets the dimension ID of this environment","doc":{"return":["dimension ID","The environment"],"deprecated":["Magic value /\n        @Deprecated\n        public int getId() {\n            return id;\n        }\n\n        /** Get an environment by ID","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.Environment","name":"getEnvironment","deprecated":true,"args":[{"name":"id","type":"int","description":"The ID of the environment"}]}],"imports":["java.io.File","io.wolfscript.generator.ChunkGenerator","java.util.Collection","java.util.HashMap","java.util.List","java.util.Map","java.util.UUID","io.wolfscript.block.Biome","io.wolfscript.block.Block","io.wolfscript.entity.*","io.wolfscript.generator.BlockPopulator","io.wolfscript.inventory.ItemStack","io.wolfscript.metadata.Metadatable","io.wolfscript.plugin.messaging.PluginMessageRecipient","io.wolfscript.util.Vector"],"enum":[{"code":"THE_END","value":"1","title":"Represents the \"normal\"/\"surface world\" map","description":"Represents the \"normal\"/\"surface world\" map /\n        NORMAL(0),\n        /** Represents a nether based map (\"hell\") /\n        NETHER(-1),\n        /** Represents the \"end\" map","doc":{}}],"properties":[]},"io.wolfscript.GameMode":{"namespace":"io.wolfscript","title":"Represents the various type of game modes that {@link io.wolfscript.entity.HumanEntity}s may","description":"Represents the various type of game modes that {@link io.wolfscript.entity.HumanEntity}s may have","name":"GameMode","qualifiedname":"io.wolfscript.GameMode","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Creative mode may fly, build instantly, become invulnerable and create","description":"Creative mode may fly, build instantly, become invulnerable and create free items. /\n    CREATIVE(1),\n\n    /** Survival mode is the \"normal\" gameplay type, with no special features. /\n    SURVIVAL(0),\n\n    /** Adventure mode cannot break blocks without the correct tools. /\n    ADVENTURE(2),\n\n    /** Spectator mode cannot interact with the world in anyway and is invisible to normal players. This grants the player the ability to no-clip through the world. /\n    SPECTATOR(3);\n\n    private final int value;\n    private final static Map<Integer, GameMode> BY_ID = Maps.newHashMap();\n\n    private GameMode(final int value) {\n        this.value = value;\n    }\n\n    /** Gets the mode value associated with this GameMode","doc":{"return":["An integer value of this gamemode","Associative {@link io.wolfscript.GameMode} with the given value, or null if it doesn't exist"],"deprecated":["Magic value /\n    @Deprecated\n    public int getValue() {\n        return value;\n    }\n\n    /** Gets the GameMode represented by the specified value","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.GameMode","name":"getByValue","deprecated":true,"args":[{"name":"int","type":"final","description":"int argument"}]}],"imports":["java.util.Map","io.wolfscript.entity.HumanEntity","com.google.common.collect.Maps"],"enum":[{"code":"SPECTATOR","value":"3","title":"Creative mode may fly, build instantly, become invulnerable and create","description":"Creative mode may fly, build instantly, become invulnerable and create free items. /\n    CREATIVE(1),\n\n    /** Survival mode is the \"normal\" gameplay type, with no special features. /\n    SURVIVAL(0),\n\n    /** Adventure mode cannot break blocks without the correct tools. /\n    ADVENTURE(2),\n\n    /** Spectator mode cannot interact with the world in anyway and is invisible to normal players. This grants the player the ability to no-clip through the world.","doc":{}}],"properties":[]},"io.wolfscript.GrassSpecies":{"namespace":"io.wolfscript","title":"Represents the different types of grass.","description":"Represents the different types of grass.","name":"GrassSpecies","qualifiedname":"io.wolfscript.GrassSpecies","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Represents the dead looking grass.","description":"Represents the dead looking grass. /\n    DEAD(0x0),\n    /** Represents the normal grass species. /\n    NORMAL(0x1),\n    /** Represents the fern-looking grass species. /\n    FERN_LIKE(0x2);\n\n    private final byte data;\n    private final static Map<Byte, GrassSpecies> BY_DATA = Maps.newHashMap();\n\n    private GrassSpecies(final int data) {\n        this.data = (byte) data;\n    }\n\n    /** Gets the associated data value representing this species","doc":{"return":["A byte containing the data value of this grass species","The {@link io.wolfscript.GrassSpecies} representing the given value, or null if it doesn't exist"],"deprecated":["Magic value /\n    @Deprecated\n    public byte getData() {\n        return data;\n    }\n\n    /** Gets the GrassSpecies with the given data value","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.GrassSpecies","name":"getByData","deprecated":true,"args":[{"name":"byte","type":"final","description":"byte argument"}]}],"imports":["java.util.Map","com.google.common.collect.Maps"],"enum":[{"code":"FERN_LIKE","value":"0x2","title":"Represents the dead looking grass.","description":"Represents the dead looking grass. /\n    DEAD(0x0),\n    /** Represents the normal grass species. /\n    NORMAL(0x1),\n    /** Represents the fern-looking grass species.","doc":{}}],"properties":[]},"io.wolfscript.Instrument":{"namespace":"io.wolfscript","title":"enum Instrument","description":"enum Instrument","name":"Instrument","qualifiedname":"io.wolfscript.Instrument","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Piano is the standard instrument for a note block.","description":"Piano is the standard instrument for a note block. /\n    PIANO(0x0),\n    /** Bass drum is normally played when a note block is on top of a stone-like block /\n    BASS_DRUM(0x1),\n    /** Snare drum is normally played when a note block is on top of a sandy block. /\n    SNARE_DRUM(0x2),\n    /** Sticks are normally played when a note block is on top of a glass block. /\n    STICKS(0x3),\n    /** Bass guitar is normally played when a note block is on top of a wooden block. /\n    BASS_GUITAR(0x4);\n\n    private final byte type;\n    private final static Map<Byte, Instrument> BY_DATA = Maps.newHashMap();\n\n    private Instrument(final int type) {\n        this.type = (byte) type;\n    }\n\n    /**","doc":{"return":["The type ID of this instrument.","The instrument"],"deprecated":["Magic value /\n    @Deprecated\n    public byte getType() {\n        return this.type;\n    }\n\n    /** Get an instrument by its type ID.","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.Instrument","name":"getByType","deprecated":true,"args":[{"name":"byte","type":"final","description":"byte argument"}]}],"imports":["java.util.Map","com.google.common.collect.Maps"],"enum":[{"code":"BASS_GUITAR","value":"0x4","title":"Piano is the standard instrument for a note block.","description":"Piano is the standard instrument for a note block. /\n    PIANO(0x0),\n    /** Bass drum is normally played when a note block is on top of a stone-like block /\n    BASS_DRUM(0x1),\n    /** Snare drum is normally played when a note block is on top of a sandy block. /\n    SNARE_DRUM(0x2),\n    /** Sticks are normally played when a note block is on top of a glass block. /\n    STICKS(0x3),\n    /** Bass guitar is normally played when a note block is on top of a wooden block.","doc":{}}],"properties":[]},"io.wolfscript.Material":{"namespace":"io.wolfscript","title":"An enum of all material IDs accepted by the official server and client","description":"An enum of all material IDs accepted by the official server and client","name":"Material","qualifiedname":"io.wolfscript.Material","type":"enum","scope":"public","constructors":[],"methods":[{"title":"hasGravity method","description":"hasGravity method","doc":{"see":["MapView /\n    MAP(358, MaterialData.class),\n    SHEARS(359, 1, 238),\n    MELON(360),\n    PUMPKIN_SEEDS(361),\n    MELON_SEEDS(362),\n    RAW_BEEF(363),\n    COOKED_BEEF(364),\n    RAW_CHICKEN(365),\n    COOKED_CHICKEN(366),\n    ROTTEN_FLESH(367),\n    ENDER_PEARL(368, 16),\n    BLAZE_ROD(369),\n    GHAST_TEAR(370),\n    GOLD_NUGGET(371),\n    NETHER_STALK(372),\n    /**","Potion /\n    POTION(373, 1, MaterialData.class),\n    GLASS_BOTTLE(374),\n    SPIDER_EYE(375),\n    FERMENTED_SPIDER_EYE(376),\n    BLAZE_POWDER(377),\n    MAGMA_CREAM(378),\n    BREWING_STAND_ITEM(379),\n    CAULDRON_ITEM(380),\n    EYE_OF_ENDER(381),\n    SPECKLED_MELON(382),\n    MONSTER_EGG(383, 64, SpawnEgg.class),\n    EXP_BOTTLE(384, 64),\n    FIREBALL(385, 64),\n    BOOK_AND_QUILL(386, 1),\n    WRITTEN_BOOK(387, 16),\n    EMERALD(388, 64),\n    ITEM_FRAME(389),\n    FLOWER_POT_ITEM(390),\n    CARROT_ITEM(391),\n    POTATO_ITEM(392),\n    BAKED_POTATO(393),\n    POISONOUS_POTATO(394),\n    EMPTY_MAP(395),\n    GOLDEN_CARROT(396),\n    SKULL_ITEM(397),\n    CARROT_STICK(398, 1, 25),\n    NETHER_STAR(399),\n    PUMPKIN_PIE(400),\n    FIREWORK(401),\n    FIREWORK_CHARGE(402),\n    ENCHANTED_BOOK(403, 1),\n    REDSTONE_COMPARATOR(404),\n    NETHER_BRICK_ITEM(405),\n    QUARTZ(406),\n    EXPLOSIVE_MINECART(407, 1),\n    HOPPER_MINECART(408, 1),\n    PRISMARINE_SHARD(409),\n    PRISMARINE_CRYSTALS(410),\n    RABBIT(411),\n    COOKED_RABBIT(412),\n    RABBIT_STEW(413, 1),\n    RABBIT_FOOT(414),\n    RABBIT_HIDE(415),\n    ARMOR_STAND(416, 16),\n    IRON_BARDING(417, 1),\n    GOLD_BARDING(418, 1),\n    DIAMOND_BARDING(419, 1),\n    LEASH(420),\n    NAME_TAG(421),\n    COMMAND_MINECART(422, 1),\n    MUTTON(423),\n    COOKED_MUTTON(424),\n    BANNER(425, 16),\n    SPRUCE_DOOR_ITEM(427),\n    BIRCH_DOOR_ITEM(428),\n    JUNGLE_DOOR_ITEM(429),\n    ACACIA_DOOR_ITEM(430),\n    DARK_OAK_DOOR_ITEM(431),\n    GOLD_RECORD(2256, 1),\n    GREEN_RECORD(2257, 1),\n    RECORD_3(2258, 1),\n    RECORD_4(2259, 1),\n    RECORD_5(2260, 1),\n    RECORD_6(2261, 1),\n    RECORD_7(2262, 1),\n    RECORD_8(2263, 1),\n    RECORD_9(2264, 1),\n    RECORD_10(2265, 1),\n    RECORD_11(2266, 1),\n    RECORD_12(2267, 1),\n    ;\n\n    private final int id;\n    private final Constructor<? extends MaterialData> ctor;\n    private static Material[] byId = new Material[383];\n    private final static Map<String, Material> BY_NAME = Maps.newHashMap();\n    private final int maxStack;\n    private final short durability;\n\n    private Material(final int id) {\n        this(id, 64);\n    }\n\n    private Material(final int id, final int stack) {\n        this(id, stack, MaterialData.class);\n    }\n\n    private Material(final int id, final int stack, final int durability) {\n        this(id, stack, durability, MaterialData.class);\n    }\n\n    private Material(final int id, final Class<? extends MaterialData> data) {\n        this(id, 64, data);\n    }\n\n    private Material(final int id, final int stack, final Class<? extends MaterialData> data) {\n        this(id, stack, 0, data);\n    }\n\n    private Material(final int id, final int stack, final int durability, final Class<? extends MaterialData> data) {\n        this.id = id;\n        this.durability = (short) durability;\n        this.maxStack = stack;\n        // try to cache the constructor for this material\n        try {\n            this.ctor = data.getConstructor(int.class, byte.class);\n        } catch (NoSuchMethodException ex) {\n            throw new AssertionError(ex);\n        } catch (SecurityException ex) {\n            throw new AssertionError(ex);\n        }\n    }\n\n    /** Gets the item ID or block ID of this Material"],"return":["ID of this material","Maximum stack size for this material /\n    public int getMaxStackSize() {\n        return maxStack;\n    }\n\n    /** Gets the maximum durability of this material","Maximum durability for this material /\n    public short getMaxDurability() {\n        return durability;\n    }\n\n    /** Gets the MaterialData class associated with this Material","MaterialData associated with this Material /\n    public Class<? extends MaterialData> getData() {\n        return ctor.getDeclaringClass();\n    }\n\n    /** Constructs a new MaterialData relevant for this Material, with the given initial data","New MaterialData with the given data","true if this material is a block /\n    public boolean isBlock() {\n        return id < 256;\n    }\n\n    /** Checks if this Material is edible.","true if this Material is edible. /\n    public boolean isEdible() {\n        switch (this) {\n            case BREAD:\n            case CARROT_ITEM:\n            case BAKED_POTATO:\n            case POTATO_ITEM:\n            case POISONOUS_POTATO:\n            case GOLDEN_CARROT:\n            case PUMPKIN_PIE:\n            case COOKIE:\n            case MELON:\n            case MUSHROOM_SOUP:\n            case RAW_CHICKEN:\n            case COOKED_CHICKEN:\n            case RAW_BEEF:\n            case COOKED_BEEF:\n            case RAW_FISH:\n            case COOKED_FISH:\n            case PORK:\n            case GRILLED_PORK:\n            case APPLE:\n            case GOLDEN_APPLE:\n            case ROTTEN_FLESH:\n            case SPIDER_EYE:\n            case RABBIT:\n            case COOKED_RABBIT:\n            case RABBIT_STEW:\n            case MUTTON:\n            case COOKED_MUTTON:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /** Attempts to get the Material with the given ID","Material if found, or null","Material if found, or null /\n    public static Material getMaterial(final String name) {\n        return BY_NAME.get(name);\n    }\n\n    /** Attempts to match the Material with the given name. <p> This is a match lookup; names will be converted to uppercase, then stripped of special characters in an attempt to format it like the enum. <p> Using this for match by ID is deprecated.","Material if found, or null /\n    public static Material matchMaterial(final String name) {\n        Validate.notNull(name, \"Name cannot be null\");\n\n        Material result = null;\n\n        try {\n            result = getMaterial(Integer.parseInt(name));\n        } catch (NumberFormatException ex) {}\n\n        if (result == null) {\n            String filtered = name.toUpperCase();\n\n            filtered = filtered.replaceAll(\"\\\\s+\", \"_\").replaceAll(\"\\\\W\", \"\");\n            result = BY_NAME.get(filtered);\n        }\n\n        return result;\n    }\n\n    static {\n        for (Material material : values()) {\n            if (byId.length > material.id) {\n                byId[material.id] = material;\n            } else {\n                byId = Java15Compat.Arrays_copyOfRange(byId, 0, material.id + 2);\n                byId[material.id] = material;\n            }\n            BY_NAME.put(material.name(), material);\n        }\n    }\n\n    /**","True if this material represents a playable music disk. /\n    public boolean isRecord() {\n        return id >= GOLD_RECORD.id && id <= RECORD_12.id;\n    }\n\n    /** Check if the material is a block and solid (cannot be passed through by a player)","True if this material is a block and solid /\n    public boolean isSolid() {\n        if (!isBlock() || id == 0) {\n            return false;\n        }\n        switch (this) {\n            case STONE:\n            case GRASS:\n            case DIRT:\n            case COBBLESTONE:\n            case WOOD:\n            case BEDROCK:\n            case SAND:\n            case GRAVEL:\n            case GOLD_ORE:\n            case IRON_ORE:\n            case COAL_ORE:\n            case LOG:\n            case LEAVES:\n            case SPONGE:\n            case GLASS:\n            case LAPIS_ORE:\n            case LAPIS_BLOCK:\n            case DISPENSER:\n            case SANDSTONE:\n            case NOTE_BLOCK:\n            case BED_BLOCK:\n            case PISTON_STICKY_BASE:\n            case PISTON_BASE:\n            case PISTON_EXTENSION:\n            case WOOL:\n            case PISTON_MOVING_PIECE:\n            case GOLD_BLOCK:\n            case IRON_BLOCK:\n            case DOUBLE_STEP:\n            case STEP:\n            case BRICK:\n            case TNT:\n            case BOOKSHELF:\n            case MOSSY_COBBLESTONE:\n            case OBSIDIAN:\n            case MOB_SPAWNER:\n            case WOOD_STAIRS:\n            case CHEST:\n            case DIAMOND_ORE:\n            case DIAMOND_BLOCK:\n            case WORKBENCH:\n            case SOIL:\n            case FURNACE:\n            case BURNING_FURNACE:\n            case SIGN_POST:\n            case WOODEN_DOOR:\n            case COBBLESTONE_STAIRS:\n            case WALL_SIGN:\n            case STONE_PLATE:\n            case IRON_DOOR_BLOCK:\n            case WOOD_PLATE:\n            case REDSTONE_ORE:\n            case GLOWING_REDSTONE_ORE:\n            case ICE:\n            case SNOW_BLOCK:\n            case CACTUS:\n            case CLAY:\n            case JUKEBOX:\n            case FENCE:\n            case PUMPKIN:\n            case NETHERRACK:\n            case SOUL_SAND:\n            case GLOWSTONE:\n            case JACK_O_LANTERN:\n            case CAKE_BLOCK:\n            case STAINED_GLASS:\n            case TRAP_DOOR:\n            case MONSTER_EGGS:\n            case SMOOTH_BRICK:\n            case HUGE_MUSHROOM_1:\n            case HUGE_MUSHROOM_2:\n            case IRON_FENCE:\n            case THIN_GLASS:\n            case MELON_BLOCK:\n            case FENCE_GATE:\n            case BRICK_STAIRS:\n            case SMOOTH_STAIRS:\n            case MYCEL:\n            case NETHER_BRICK:\n            case NETHER_FENCE:\n            case NETHER_BRICK_STAIRS:\n            case ENCHANTMENT_TABLE:\n            case BREWING_STAND:\n            case CAULDRON:\n            case ENDER_PORTAL_FRAME:\n            case ENDER_STONE:\n            case DRAGON_EGG:\n            case REDSTONE_LAMP_OFF:\n            case REDSTONE_LAMP_ON:\n            case WOOD_DOUBLE_STEP:\n            case WOOD_STEP:\n            case SANDSTONE_STAIRS:\n            case EMERALD_ORE:\n            case ENDER_CHEST:\n            case EMERALD_BLOCK:\n            case SPRUCE_WOOD_STAIRS:\n            case BIRCH_WOOD_STAIRS:\n            case JUNGLE_WOOD_STAIRS:\n            case COMMAND:\n            case BEACON:\n            case COBBLE_WALL:\n            case ANVIL:\n            case TRAPPED_CHEST:\n            case GOLD_PLATE:\n            case IRON_PLATE:\n            case DAYLIGHT_DETECTOR:\n            case REDSTONE_BLOCK:\n            case QUARTZ_ORE:\n            case HOPPER:\n            case QUARTZ_BLOCK:\n            case QUARTZ_STAIRS:\n            case DROPPER:\n            case STAINED_CLAY:\n            case HAY_BLOCK:\n            case HARD_CLAY:\n            case COAL_BLOCK:\n            case STAINED_GLASS_PANE:\n            case LEAVES_2:\n            case LOG_2:\n            case ACACIA_STAIRS:\n            case DARK_OAK_STAIRS:\n            case PACKED_ICE:\n            case RED_SANDSTONE:\n            case SLIME_BLOCK:\n            case BARRIER:\n            case IRON_TRAPDOOR:\n            case PRISMARINE:\n            case SEA_LANTERN:\n            case DOUBLE_STONE_SLAB2:\n            case RED_SANDSTONE_STAIRS:\n            case STONE_SLAB2:\n            case SPRUCE_FENCE_GATE:\n            case BIRCH_FENCE_GATE:\n            case JUNGLE_FENCE_GATE:\n            case DARK_OAK_FENCE_GATE:\n            case ACACIA_FENCE_GATE:\n            case SPRUCE_FENCE:\n            case BIRCH_FENCE:\n            case JUNGLE_FENCE:\n            case DARK_OAK_FENCE:\n            case ACACIA_FENCE:\n            case STANDING_BANNER:\n            case WALL_BANNER:\n            case DAYLIGHT_DETECTOR_INVERTED:\n            case SPRUCE_DOOR:\n            case BIRCH_DOOR:\n            case JUNGLE_DOOR:\n            case ACACIA_DOOR:\n            case DARK_OAK_DOOR:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /** Check if the material is a block and does not block any light","True if this material is a block and does not block any light /\n    public boolean isTransparent() {\n        if (!isBlock()) {\n            return false;\n        }\n        switch (this) {\n            case AIR:\n            case SAPLING:\n            case POWERED_RAIL:\n            case DETECTOR_RAIL:\n            case LONG_GRASS:\n            case DEAD_BUSH:\n            case YELLOW_FLOWER:\n            case RED_ROSE:\n            case BROWN_MUSHROOM:\n            case RED_MUSHROOM:\n            case TORCH:\n            case FIRE:\n            case REDSTONE_WIRE:\n            case CROPS:\n            case LADDER:\n            case RAILS:\n            case LEVER:\n            case REDSTONE_TORCH_OFF:\n            case REDSTONE_TORCH_ON:\n            case STONE_BUTTON:\n            case SNOW:\n            case SUGAR_CANE_BLOCK:\n            case PORTAL:\n            case DIODE_BLOCK_OFF:\n            case DIODE_BLOCK_ON:\n            case PUMPKIN_STEM:\n            case MELON_STEM:\n            case VINE:\n            case WATER_LILY:\n            case NETHER_WARTS:\n            case ENDER_PORTAL:\n            case COCOA:\n            case TRIPWIRE_HOOK:\n            case TRIPWIRE:\n            case FLOWER_POT:\n            case CARROT:\n            case POTATO:\n            case WOOD_BUTTON:\n            case SKULL:\n            case REDSTONE_COMPARATOR_OFF:\n            case REDSTONE_COMPARATOR_ON:\n            case ACTIVATOR_RAIL:\n            case CARPET:\n            case DOUBLE_PLANT:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /** Check if the material is a block and can catch fire","True if this material is a block and can catch fire /\n    public boolean isFlammable() {\n        if (!isBlock()) {\n            return false;\n        }\n        switch (this) {\n            case WOOD:\n            case LOG:\n            case LEAVES:\n            case NOTE_BLOCK:\n            case BED_BLOCK:\n            case LONG_GRASS:\n            case DEAD_BUSH:\n            case WOOL:\n            case TNT:\n            case BOOKSHELF:\n            case WOOD_STAIRS:\n            case CHEST:\n            case WORKBENCH:\n            case SIGN_POST:\n            case WOODEN_DOOR:\n            case WALL_SIGN:\n            case WOOD_PLATE:\n            case JUKEBOX:\n            case FENCE:\n            case TRAP_DOOR:\n            case HUGE_MUSHROOM_1:\n            case HUGE_MUSHROOM_2:\n            case VINE:\n            case FENCE_GATE:\n            case WOOD_DOUBLE_STEP:\n            case WOOD_STEP:\n            case SPRUCE_WOOD_STAIRS:\n            case BIRCH_WOOD_STAIRS:\n            case JUNGLE_WOOD_STAIRS:\n            case TRAPPED_CHEST:\n            case DAYLIGHT_DETECTOR:\n            case CARPET:\n            case LEAVES_2:\n            case LOG_2:\n            case ACACIA_STAIRS:\n            case DARK_OAK_STAIRS:\n            case DOUBLE_PLANT:\n            case SPRUCE_FENCE_GATE:\n            case BIRCH_FENCE_GATE:\n            case JUNGLE_FENCE_GATE:\n            case DARK_OAK_FENCE_GATE:\n            case ACACIA_FENCE_GATE:\n            case SPRUCE_FENCE:\n            case BIRCH_FENCE:\n            case JUNGLE_FENCE:\n            case DARK_OAK_FENCE:\n            case ACACIA_FENCE:\n            case STANDING_BANNER:\n            case WALL_BANNER:\n            case DAYLIGHT_DETECTOR_INVERTED:\n            case SPRUCE_DOOR:\n            case BIRCH_DOOR:\n            case JUNGLE_DOOR:\n            case ACACIA_DOOR:\n            case DARK_OAK_DOOR:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /** Check if the material is a block and can burn away","True if this material is a block and can burn away /\n    public boolean isBurnable() {\n        if (!isBlock()) {\n            return false;\n        }\n        switch (this) {\n            case WOOD:\n            case LOG:\n            case LEAVES:\n            case LONG_GRASS:\n            case WOOL:\n            case YELLOW_FLOWER:\n            case RED_ROSE:\n            case TNT:\n            case BOOKSHELF:\n            case WOOD_STAIRS:\n            case FENCE:\n            case VINE:\n            case WOOD_DOUBLE_STEP:\n            case WOOD_STEP:\n            case SPRUCE_WOOD_STAIRS:\n            case BIRCH_WOOD_STAIRS:\n            case JUNGLE_WOOD_STAIRS:\n            case HAY_BLOCK:\n            case COAL_BLOCK:\n            case LEAVES_2:\n            case LOG_2:\n            case CARPET:\n            case DOUBLE_PLANT:\n            case DEAD_BUSH:\n            case FENCE_GATE:\n            case SPRUCE_FENCE_GATE:\n            case BIRCH_FENCE_GATE:\n            case JUNGLE_FENCE_GATE:\n            case DARK_OAK_FENCE_GATE:\n            case ACACIA_FENCE_GATE:\n            case SPRUCE_FENCE:\n            case BIRCH_FENCE:\n            case JUNGLE_FENCE:\n            case DARK_OAK_FENCE:\n            case ACACIA_FENCE:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /** Check if the material is a block and completely blocks vision","True if this material is a block and completely blocks vision /\n    public boolean isOccluding() {\n        if (!isBlock()) {\n            return false;\n        }\n        switch (this) {\n            case STONE:\n            case GRASS:\n            case DIRT:\n            case COBBLESTONE:\n            case WOOD:\n            case BEDROCK:\n            case SAND:\n            case GRAVEL:\n            case GOLD_ORE:\n            case IRON_ORE:\n            case COAL_ORE:\n            case LOG:\n            case SPONGE:\n            case LAPIS_ORE:\n            case LAPIS_BLOCK:\n            case DISPENSER:\n            case SANDSTONE:\n            case NOTE_BLOCK:\n            case WOOL:\n            case GOLD_BLOCK:\n            case IRON_BLOCK:\n            case DOUBLE_STEP:\n            case BRICK:\n            case BOOKSHELF:\n            case MOSSY_COBBLESTONE:\n            case OBSIDIAN:\n            case MOB_SPAWNER:\n            case DIAMOND_ORE:\n            case DIAMOND_BLOCK:\n            case WORKBENCH:\n            case FURNACE:\n            case BURNING_FURNACE:\n            case REDSTONE_ORE:\n            case GLOWING_REDSTONE_ORE:\n            case SNOW_BLOCK:\n            case CLAY:\n            case JUKEBOX:\n            case PUMPKIN:\n            case NETHERRACK:\n            case SOUL_SAND:\n            case JACK_O_LANTERN:\n            case MONSTER_EGGS:\n            case SMOOTH_BRICK:\n            case HUGE_MUSHROOM_1:\n            case HUGE_MUSHROOM_2:\n            case MELON_BLOCK:\n            case MYCEL:\n            case NETHER_BRICK:\n            case ENDER_PORTAL_FRAME:\n            case ENDER_STONE:\n            case REDSTONE_LAMP_OFF:\n            case REDSTONE_LAMP_ON:\n            case WOOD_DOUBLE_STEP:\n            case EMERALD_ORE:\n            case EMERALD_BLOCK:\n            case COMMAND:\n            case QUARTZ_ORE:\n            case QUARTZ_BLOCK:\n            case DROPPER:\n            case STAINED_CLAY:\n            case HAY_BLOCK:\n            case HARD_CLAY:\n            case COAL_BLOCK:\n            case LOG_2:\n            case PACKED_ICE:\n            case SLIME_BLOCK:\n            case BARRIER:\n            case PRISMARINE:\n            case RED_SANDSTONE:\n            case DOUBLE_STONE_SLAB2:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /**","True if this material is affected by gravity."],"deprecated":["Magic value /\n    @Deprecated\n    public int getId() {\n        return id;\n    }\n\n    /** Gets the maximum amount of this material that can be held in a stack","Magic value /\n    @Deprecated\n    public MaterialData getNewData(final byte raw) {\n        try {\n            return ctor.newInstance(id, raw);\n        } catch (InstantiationException ex) {\n            final Throwable t = ex.getCause();\n            if (t instanceof RuntimeException) {\n                throw (RuntimeException) t;\n            }\n            if (t instanceof Error) {\n                throw (Error) t;\n            }\n            throw new AssertionError(t);\n        } catch (Throwable t) {\n            throw new AssertionError(t);\n        }\n    }\n\n    /** Checks if this Material is a placable block","Magic value /\n    @Deprecated\n    public static Material getMaterial(final int id) {\n        if (byId.length > id && id >= 0) {\n            return byId[id];\n        } else {\n            return null;\n        }\n    }\n\n    /** Attempts to get the Material with the given name. <p> This is a normal lookup, names must be the precise name they are given in the enum."],"param":["raw Initial data to construct the MaterialData with","id ID of the material to get","name Name of the material to get","name Name of the material to get"]},"scope":"public","return":"boolean","name":"hasGravity","args":[]}],"imports":["java.lang.reflect.Constructor","java.util.Map","org.apache.commons.lang.Validate","io.wolfscript.map.MapView","io.wolfscript.material.Bed","io.wolfscript.material.Button","io.wolfscript.material.Cake","io.wolfscript.material.Cauldron","io.wolfscript.material.Chest","io.wolfscript.material.Coal","io.wolfscript.material.CocoaPlant","io.wolfscript.material.Command","io.wolfscript.material.Crops","io.wolfscript.material.DetectorRail","io.wolfscript.material.Diode","io.wolfscript.material.Dispenser","io.wolfscript.material.Door","io.wolfscript.material.Dye","io.wolfscript.material.EnderChest","io.wolfscript.material.FlowerPot","io.wolfscript.material.Furnace","io.wolfscript.material.Gate","io.wolfscript.material.Ladder","io.wolfscript.material.Lever","io.wolfscript.material.LongGrass","io.wolfscript.material.MaterialData","io.wolfscript.material.MonsterEggs","io.wolfscript.material.Mushroom","io.wolfscript.material.NetherWarts","io.wolfscript.material.PistonBaseMaterial","io.wolfscript.material.PistonExtensionMaterial","io.wolfscript.material.PoweredRail","io.wolfscript.material.PressurePlate","io.wolfscript.material.Pumpkin","io.wolfscript.material.Rails","io.wolfscript.material.RedstoneTorch","io.wolfscript.material.RedstoneWire","io.wolfscript.material.Sandstone","io.wolfscript.material.Sign","io.wolfscript.material.Skull","io.wolfscript.material.SmoothBrick","io.wolfscript.material.SpawnEgg","io.wolfscript.material.Stairs","io.wolfscript.material.Step","io.wolfscript.material.Torch","io.wolfscript.material.TrapDoor","io.wolfscript.material.Tree","io.wolfscript.material.Tripwire","io.wolfscript.material.TripwireHook","io.wolfscript.material.Vine","io.wolfscript.material.WoodenStep","io.wolfscript.material.Wool","io.wolfscript.potion.Potion","io.wolfscript.util.Java15Compat","com.google.common.collect.Maps","io.wolfscript.material.Banner"],"enum":[{"code":"0","value":"","title":"0 Material","description":"0 Material"},{"code":"STONE","value":"1","title":"STONE Material","description":"STONE Material"},{"code":"GRASS","value":"2","title":"GRASS Material","description":"GRASS Material"},{"code":"DIRT","value":"3","title":"DIRT Material","description":"DIRT Material"},{"code":"COBBLESTONE","value":"4","title":"COBBLESTONE Material","description":"COBBLESTONE Material"},{"code":"5","value":"","title":"5 Material","description":"5 Material"},{"code":"6","value":"","title":"6 Material","description":"6 Material"},{"code":"BEDROCK","value":"7","title":"BEDROCK Material","description":"BEDROCK Material"},{"code":"8","value":"","title":"8 Material","description":"8 Material"},{"code":"9","value":"","title":"9 Material","description":"9 Material"},{"code":"10","value":"","title":"10 Material","description":"10 Material"},{"code":"11","value":"","title":"11 Material","description":"11 Material"},{"code":"SAND","value":"12","title":"SAND Material","description":"SAND Material"},{"code":"GRAVEL","value":"13","title":"GRAVEL Material","description":"GRAVEL Material"},{"code":"GOLD_ORE","value":"14","title":"GOLD_ORE Material","description":"GOLD_ORE Material"},{"code":"IRON_ORE","value":"15","title":"IRON_ORE Material","description":"IRON_ORE Material"},{"code":"COAL_ORE","value":"16","title":"COAL_ORE Material","description":"COAL_ORE Material"},{"code":"17","value":"","title":"17 Material","description":"17 Material"},{"code":"18","value":"","title":"18 Material","description":"18 Material"},{"code":"SPONGE","value":"19","title":"SPONGE Material","description":"SPONGE Material"},{"code":"GLASS","value":"20","title":"GLASS Material","description":"GLASS Material"},{"code":"LAPIS_ORE","value":"21","title":"LAPIS_ORE Material","description":"LAPIS_ORE Material"},{"code":"LAPIS_BLOCK","value":"22","title":"LAPIS_BLOCK Material","description":"LAPIS_BLOCK Material"},{"code":"23","value":"","title":"23 Material","description":"23 Material"},{"code":"24","value":"","title":"24 Material","description":"24 Material"},{"code":"NOTE_BLOCK","value":"25","title":"NOTE_BLOCK Material","description":"NOTE_BLOCK Material"},{"code":"26","value":"","title":"26 Material","description":"26 Material"},{"code":"27","value":"","title":"27 Material","description":"27 Material"},{"code":"28","value":"","title":"28 Material","description":"28 Material"},{"code":"29","value":"","title":"29 Material","description":"29 Material"},{"code":"WEB","value":"30","title":"WEB Material","description":"WEB Material"},{"code":"31","value":"","title":"31 Material","description":"31 Material"},{"code":"DEAD_BUSH","value":"32","title":"DEAD_BUSH Material","description":"DEAD_BUSH Material"},{"code":"33","value":"","title":"33 Material","description":"33 Material"},{"code":"34","value":"","title":"34 Material","description":"34 Material"},{"code":"35","value":"","title":"35 Material","description":"35 Material"},{"code":"PISTON_MOVING_PIECE","value":"36","title":"PISTON_MOVING_PIECE Material","description":"PISTON_MOVING_PIECE Material"},{"code":"YELLOW_FLOWER","value":"37","title":"YELLOW_FLOWER Material","description":"YELLOW_FLOWER Material"},{"code":"RED_ROSE","value":"38","title":"RED_ROSE Material","description":"RED_ROSE Material"},{"code":"BROWN_MUSHROOM","value":"39","title":"BROWN_MUSHROOM Material","description":"BROWN_MUSHROOM Material"},{"code":"RED_MUSHROOM","value":"40","title":"RED_MUSHROOM Material","description":"RED_MUSHROOM Material"},{"code":"GOLD_BLOCK","value":"41","title":"GOLD_BLOCK Material","description":"GOLD_BLOCK Material"},{"code":"IRON_BLOCK","value":"42","title":"IRON_BLOCK Material","description":"IRON_BLOCK Material"},{"code":"43","value":"","title":"43 Material","description":"43 Material"},{"code":"44","value":"","title":"44 Material","description":"44 Material"},{"code":"BRICK","value":"45","title":"BRICK Material","description":"BRICK Material"},{"code":"TNT","value":"46","title":"TNT Material","description":"TNT Material"},{"code":"BOOKSHELF","value":"47","title":"BOOKSHELF Material","description":"BOOKSHELF Material"},{"code":"MOSSY_COBBLESTONE","value":"48","title":"MOSSY_COBBLESTONE Material","description":"MOSSY_COBBLESTONE Material"},{"code":"OBSIDIAN","value":"49","title":"OBSIDIAN Material","description":"OBSIDIAN Material"},{"code":"50","value":"","title":"50 Material","description":"50 Material"},{"code":"FIRE","value":"51","title":"FIRE Material","description":"FIRE Material"},{"code":"MOB_SPAWNER","value":"52","title":"MOB_SPAWNER Material","description":"MOB_SPAWNER Material"},{"code":"53","value":"","title":"53 Material","description":"53 Material"},{"code":"54","value":"","title":"54 Material","description":"54 Material"},{"code":"55","value":"","title":"55 Material","description":"55 Material"},{"code":"DIAMOND_ORE","value":"56","title":"DIAMOND_ORE Material","description":"DIAMOND_ORE Material"},{"code":"DIAMOND_BLOCK","value":"57","title":"DIAMOND_BLOCK Material","description":"DIAMOND_BLOCK Material"},{"code":"WORKBENCH","value":"58","title":"WORKBENCH Material","description":"WORKBENCH Material"},{"code":"59","value":"","title":"59 Material","description":"59 Material"},{"code":"60","value":"","title":"60 Material","description":"60 Material"},{"code":"61","value":"","title":"61 Material","description":"61 Material"},{"code":"62","value":"","title":"62 Material","description":"62 Material"},{"code":"63","value":"","title":"63 Material","description":"63 Material"},{"code":"64","value":"","title":"64 Material","description":"64 Material"},{"code":"64","value":"","title":"64 Material","description":"64 Material"},{"code":"65","value":"","title":"65 Material","description":"65 Material"},{"code":"66","value":"","title":"66 Material","description":"66 Material"},{"code":"67","value":"","title":"67 Material","description":"67 Material"},{"code":"68","value":"","title":"68 Material","description":"68 Material"},{"code":"64","value":"","title":"64 Material","description":"64 Material"},{"code":"69","value":"","title":"69 Material","description":"69 Material"},{"code":"70","value":"","title":"70 Material","description":"70 Material"},{"code":"71","value":"","title":"71 Material","description":"71 Material"},{"code":"72","value":"","title":"72 Material","description":"72 Material"},{"code":"REDSTONE_ORE","value":"73","title":"REDSTONE_ORE Material","description":"REDSTONE_ORE Material"},{"code":"GLOWING_REDSTONE_ORE","value":"74","title":"GLOWING_REDSTONE_ORE Material","description":"GLOWING_REDSTONE_ORE Material"},{"code":"75","value":"","title":"75 Material","description":"75 Material"},{"code":"76","value":"","title":"76 Material","description":"76 Material"},{"code":"77","value":"","title":"77 Material","description":"77 Material"},{"code":"SNOW","value":"78","title":"SNOW Material","description":"SNOW Material"},{"code":"ICE","value":"79","title":"ICE Material","description":"ICE Material"},{"code":"SNOW_BLOCK","value":"80","title":"SNOW_BLOCK Material","description":"SNOW_BLOCK Material"},{"code":"81","value":"","title":"81 Material","description":"81 Material"},{"code":"CLAY","value":"82","title":"CLAY Material","description":"CLAY Material"},{"code":"83","value":"","title":"83 Material","description":"83 Material"},{"code":"JUKEBOX","value":"84","title":"JUKEBOX Material","description":"JUKEBOX Material"},{"code":"FENCE","value":"85","title":"FENCE Material","description":"FENCE Material"},{"code":"86","value":"","title":"86 Material","description":"86 Material"},{"code":"NETHERRACK","value":"87","title":"NETHERRACK Material","description":"NETHERRACK Material"},{"code":"SOUL_SAND","value":"88","title":"SOUL_SAND Material","description":"SOUL_SAND Material"},{"code":"GLOWSTONE","value":"89","title":"GLOWSTONE Material","description":"GLOWSTONE Material"},{"code":"PORTAL","value":"90","title":"PORTAL Material","description":"PORTAL Material"},{"code":"91","value":"","title":"91 Material","description":"91 Material"},{"code":"92","value":"","title":"92 Material","description":"92 Material"},{"code":"64","value":"","title":"64 Material","description":"64 Material"},{"code":"93","value":"","title":"93 Material","description":"93 Material"},{"code":"94","value":"","title":"94 Material","description":"94 Material"},{"code":"STAINED_GLASS","value":"95","title":"STAINED_GLASS Material","description":"STAINED_GLASS Material"},{"code":"96","value":"","title":"96 Material","description":"96 Material"},{"code":"97","value":"","title":"97 Material","description":"97 Material"},{"code":"98","value":"","title":"98 Material","description":"98 Material"},{"code":"99","value":"","title":"99 Material","description":"99 Material"},{"code":"100","value":"","title":"100 Material","description":"100 Material"},{"code":"IRON_FENCE","value":"101","title":"IRON_FENCE Material","description":"IRON_FENCE Material"},{"code":"THIN_GLASS","value":"102","title":"THIN_GLASS Material","description":"THIN_GLASS Material"},{"code":"MELON_BLOCK","value":"103","title":"MELON_BLOCK Material","description":"MELON_BLOCK Material"},{"code":"104","value":"","title":"104 Material","description":"104 Material"},{"code":"105","value":"","title":"105 Material","description":"105 Material"},{"code":"106","value":"","title":"106 Material","description":"106 Material"},{"code":"107","value":"","title":"107 Material","description":"107 Material"},{"code":"108","value":"","title":"108 Material","description":"108 Material"},{"code":"109","value":"","title":"109 Material","description":"109 Material"},{"code":"MYCEL","value":"110","title":"MYCEL Material","description":"MYCEL Material"},{"code":"WATER_LILY","value":"111","title":"WATER_LILY Material","description":"WATER_LILY Material"},{"code":"NETHER_BRICK","value":"112","title":"NETHER_BRICK Material","description":"NETHER_BRICK Material"},{"code":"NETHER_FENCE","value":"113","title":"NETHER_FENCE Material","description":"NETHER_FENCE Material"},{"code":"114","value":"","title":"114 Material","description":"114 Material"},{"code":"115","value":"","title":"115 Material","description":"115 Material"},{"code":"ENCHANTMENT_TABLE","value":"116","title":"ENCHANTMENT_TABLE Material","description":"ENCHANTMENT_TABLE Material"},{"code":"117","value":"","title":"117 Material","description":"117 Material"},{"code":"118","value":"","title":"118 Material","description":"118 Material"},{"code":"ENDER_PORTAL","value":"119","title":"ENDER_PORTAL Material","description":"ENDER_PORTAL Material"},{"code":"ENDER_PORTAL_FRAME","value":"120","title":"ENDER_PORTAL_FRAME Material","description":"ENDER_PORTAL_FRAME Material"},{"code":"ENDER_STONE","value":"121","title":"ENDER_STONE Material","description":"ENDER_STONE Material"},{"code":"DRAGON_EGG","value":"122","title":"DRAGON_EGG Material","description":"DRAGON_EGG Material"},{"code":"REDSTONE_LAMP_OFF","value":"123","title":"REDSTONE_LAMP_OFF Material","description":"REDSTONE_LAMP_OFF Material"},{"code":"REDSTONE_LAMP_ON","value":"124","title":"REDSTONE_LAMP_ON Material","description":"REDSTONE_LAMP_ON Material"},{"code":"125","value":"","title":"125 Material","description":"125 Material"},{"code":"126","value":"","title":"126 Material","description":"126 Material"},{"code":"127","value":"","title":"127 Material","description":"127 Material"},{"code":"128","value":"","title":"128 Material","description":"128 Material"},{"code":"EMERALD_ORE","value":"129","title":"EMERALD_ORE Material","description":"EMERALD_ORE Material"},{"code":"130","value":"","title":"130 Material","description":"130 Material"},{"code":"131","value":"","title":"131 Material","description":"131 Material"},{"code":"132","value":"","title":"132 Material","description":"132 Material"},{"code":"EMERALD_BLOCK","value":"133","title":"EMERALD_BLOCK Material","description":"EMERALD_BLOCK Material"},{"code":"134","value":"","title":"134 Material","description":"134 Material"},{"code":"135","value":"","title":"135 Material","description":"135 Material"},{"code":"136","value":"","title":"136 Material","description":"136 Material"},{"code":"137","value":"","title":"137 Material","description":"137 Material"},{"code":"BEACON","value":"138","title":"BEACON Material","description":"BEACON Material"},{"code":"COBBLE_WALL","value":"139","title":"COBBLE_WALL Material","description":"COBBLE_WALL Material"},{"code":"140","value":"","title":"140 Material","description":"140 Material"},{"code":"CARROT","value":"141","title":"CARROT Material","description":"CARROT Material"},{"code":"POTATO","value":"142","title":"POTATO Material","description":"POTATO Material"},{"code":"143","value":"","title":"143 Material","description":"143 Material"},{"code":"144","value":"","title":"144 Material","description":"144 Material"},{"code":"ANVIL","value":"145","title":"ANVIL Material","description":"ANVIL Material"},{"code":"TRAPPED_CHEST","value":"146","title":"TRAPPED_CHEST Material","description":"TRAPPED_CHEST Material"},{"code":"GOLD_PLATE","value":"147","title":"GOLD_PLATE Material","description":"GOLD_PLATE Material"},{"code":"IRON_PLATE","value":"148","title":"IRON_PLATE Material","description":"IRON_PLATE Material"},{"code":"REDSTONE_COMPARATOR_OFF","value":"149","title":"REDSTONE_COMPARATOR_OFF Material","description":"REDSTONE_COMPARATOR_OFF Material"},{"code":"REDSTONE_COMPARATOR_ON","value":"150","title":"REDSTONE_COMPARATOR_ON Material","description":"REDSTONE_COMPARATOR_ON Material"},{"code":"DAYLIGHT_DETECTOR","value":"151","title":"DAYLIGHT_DETECTOR Material","description":"DAYLIGHT_DETECTOR Material"},{"code":"REDSTONE_BLOCK","value":"152","title":"REDSTONE_BLOCK Material","description":"REDSTONE_BLOCK Material"},{"code":"QUARTZ_ORE","value":"153","title":"QUARTZ_ORE Material","description":"QUARTZ_ORE Material"},{"code":"HOPPER","value":"154","title":"HOPPER Material","description":"HOPPER Material"},{"code":"QUARTZ_BLOCK","value":"155","title":"QUARTZ_BLOCK Material","description":"QUARTZ_BLOCK Material"},{"code":"156","value":"","title":"156 Material","description":"156 Material"},{"code":"157","value":"","title":"157 Material","description":"157 Material"},{"code":"158","value":"","title":"158 Material","description":"158 Material"},{"code":"STAINED_CLAY","value":"159","title":"STAINED_CLAY Material","description":"STAINED_CLAY Material"},{"code":"STAINED_GLASS_PANE","value":"160","title":"STAINED_GLASS_PANE Material","description":"STAINED_GLASS_PANE Material"},{"code":"LEAVES_2","value":"161","title":"LEAVES_2 Material","description":"LEAVES_2 Material"},{"code":"LOG_2","value":"162","title":"LOG_2 Material","description":"LOG_2 Material"},{"code":"163","value":"","title":"163 Material","description":"163 Material"},{"code":"164","value":"","title":"164 Material","description":"164 Material"},{"code":"SLIME_BLOCK","value":"165","title":"SLIME_BLOCK Material","description":"SLIME_BLOCK Material"},{"code":"BARRIER","value":"166","title":"BARRIER Material","description":"BARRIER Material"},{"code":"167","value":"","title":"167 Material","description":"167 Material"},{"code":"PRISMARINE","value":"168","title":"PRISMARINE Material","description":"PRISMARINE Material"},{"code":"SEA_LANTERN","value":"169","title":"SEA_LANTERN Material","description":"SEA_LANTERN Material"},{"code":"HAY_BLOCK","value":"170","title":"HAY_BLOCK Material","description":"HAY_BLOCK Material"},{"code":"CARPET","value":"171","title":"CARPET Material","description":"CARPET Material"},{"code":"HARD_CLAY","value":"172","title":"HARD_CLAY Material","description":"HARD_CLAY Material"},{"code":"COAL_BLOCK","value":"173","title":"COAL_BLOCK Material","description":"COAL_BLOCK Material"},{"code":"PACKED_ICE","value":"174","title":"PACKED_ICE Material","description":"PACKED_ICE Material"},{"code":"DOUBLE_PLANT","value":"175","title":"DOUBLE_PLANT Material","description":"DOUBLE_PLANT Material"},{"code":"176","value":"","title":"176 Material","description":"176 Material"},{"code":"177","value":"","title":"177 Material","description":"177 Material"},{"code":"DAYLIGHT_DETECTOR_INVERTED","value":"178","title":"DAYLIGHT_DETECTOR_INVERTED Material","description":"DAYLIGHT_DETECTOR_INVERTED Material"},{"code":"RED_SANDSTONE","value":"179","title":"RED_SANDSTONE Material","description":"RED_SANDSTONE Material"},{"code":"180","value":"","title":"180 Material","description":"180 Material"},{"code":"DOUBLE_STONE_SLAB2","value":"181","title":"DOUBLE_STONE_SLAB2 Material","description":"DOUBLE_STONE_SLAB2 Material"},{"code":"STONE_SLAB2","value":"182","title":"STONE_SLAB2 Material","description":"STONE_SLAB2 Material"},{"code":"183","value":"","title":"183 Material","description":"183 Material"},{"code":"184","value":"","title":"184 Material","description":"184 Material"},{"code":"185","value":"","title":"185 Material","description":"185 Material"},{"code":"186","value":"","title":"186 Material","description":"186 Material"},{"code":"187","value":"","title":"187 Material","description":"187 Material"},{"code":"SPRUCE_FENCE","value":"188","title":"SPRUCE_FENCE Material","description":"SPRUCE_FENCE Material"},{"code":"BIRCH_FENCE","value":"189","title":"BIRCH_FENCE Material","description":"BIRCH_FENCE Material"},{"code":"JUNGLE_FENCE","value":"190","title":"JUNGLE_FENCE Material","description":"JUNGLE_FENCE Material"},{"code":"DARK_OAK_FENCE","value":"191","title":"DARK_OAK_FENCE Material","description":"DARK_OAK_FENCE Material"},{"code":"ACACIA_FENCE","value":"192","title":"ACACIA_FENCE Material","description":"ACACIA_FENCE Material"},{"code":"SPRUCE_DOOR","value":"193","title":"SPRUCE_DOOR Material","description":"SPRUCE_DOOR Material"},{"code":"BIRCH_DOOR","value":"194","title":"BIRCH_DOOR Material","description":"BIRCH_DOOR Material"},{"code":"JUNGLE_DOOR","value":"195","title":"JUNGLE_DOOR Material","description":"JUNGLE_DOOR Material"},{"code":"ACACIA_DOOR","value":"196","title":"ACACIA_DOOR Material","description":"ACACIA_DOOR Material"},{"code":"DARK_OAK_DOOR","value":"197","title":"DARK_OAK_DOOR Material","description":"DARK_OAK_DOOR Material"},{"code":"256","value":"","title":"256 Material","description":"256 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"257","value":"","title":"257 Material","description":"257 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"258","value":"","title":"258 Material","description":"258 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"259","value":"","title":"259 Material","description":"259 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"APPLE","value":"260","title":"APPLE Material","description":"APPLE Material"},{"code":"261","value":"","title":"261 Material","description":"261 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"ARROW","value":"262","title":"ARROW Material","description":"ARROW Material"},{"code":"263","value":"","title":"263 Material","description":"263 Material"},{"code":"DIAMOND","value":"264","title":"DIAMOND Material","description":"DIAMOND Material"},{"code":"IRON_INGOT","value":"265","title":"IRON_INGOT Material","description":"IRON_INGOT Material"},{"code":"GOLD_INGOT","value":"266","title":"GOLD_INGOT Material","description":"GOLD_INGOT Material"},{"code":"267","value":"","title":"267 Material","description":"267 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"268","value":"","title":"268 Material","description":"268 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"269","value":"","title":"269 Material","description":"269 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"270","value":"","title":"270 Material","description":"270 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"271","value":"","title":"271 Material","description":"271 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"272","value":"","title":"272 Material","description":"272 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"273","value":"","title":"273 Material","description":"273 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"274","value":"","title":"274 Material","description":"274 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"275","value":"","title":"275 Material","description":"275 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"276","value":"","title":"276 Material","description":"276 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"277","value":"","title":"277 Material","description":"277 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"278","value":"","title":"278 Material","description":"278 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"279","value":"","title":"279 Material","description":"279 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"STICK","value":"280","title":"STICK Material","description":"STICK Material"},{"code":"BOWL","value":"281","title":"BOWL Material","description":"BOWL Material"},{"code":"282","value":"","title":"282 Material","description":"282 Material"},{"code":"283","value":"","title":"283 Material","description":"283 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"284","value":"","title":"284 Material","description":"284 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"285","value":"","title":"285 Material","description":"285 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"286","value":"","title":"286 Material","description":"286 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"STRING","value":"287","title":"STRING Material","description":"STRING Material"},{"code":"FEATHER","value":"288","title":"FEATHER Material","description":"FEATHER Material"},{"code":"SULPHUR","value":"289","title":"SULPHUR Material","description":"SULPHUR Material"},{"code":"290","value":"","title":"290 Material","description":"290 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"291","value":"","title":"291 Material","description":"291 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"292","value":"","title":"292 Material","description":"292 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"293","value":"","title":"293 Material","description":"293 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"294","value":"","title":"294 Material","description":"294 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"SEEDS","value":"295","title":"SEEDS Material","description":"SEEDS Material"},{"code":"WHEAT","value":"296","title":"WHEAT Material","description":"WHEAT Material"},{"code":"BREAD","value":"297","title":"BREAD Material","description":"BREAD Material"},{"code":"298","value":"","title":"298 Material","description":"298 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"299","value":"","title":"299 Material","description":"299 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"300","value":"","title":"300 Material","description":"300 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"301","value":"","title":"301 Material","description":"301 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"302","value":"","title":"302 Material","description":"302 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"303","value":"","title":"303 Material","description":"303 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"304","value":"","title":"304 Material","description":"304 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"305","value":"","title":"305 Material","description":"305 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"306","value":"","title":"306 Material","description":"306 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"307","value":"","title":"307 Material","description":"307 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"308","value":"","title":"308 Material","description":"308 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"309","value":"","title":"309 Material","description":"309 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"310","value":"","title":"310 Material","description":"310 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"311","value":"","title":"311 Material","description":"311 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"312","value":"","title":"312 Material","description":"312 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"313","value":"","title":"313 Material","description":"313 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"314","value":"","title":"314 Material","description":"314 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"315","value":"","title":"315 Material","description":"315 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"316","value":"","title":"316 Material","description":"316 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"317","value":"","title":"317 Material","description":"317 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"FLINT","value":"318","title":"FLINT Material","description":"FLINT Material"},{"code":"PORK","value":"319","title":"PORK Material","description":"PORK Material"},{"code":"GRILLED_PORK","value":"320","title":"GRILLED_PORK Material","description":"GRILLED_PORK Material"},{"code":"PAINTING","value":"321","title":"PAINTING Material","description":"PAINTING Material"},{"code":"GOLDEN_APPLE","value":"322","title":"GOLDEN_APPLE Material","description":"GOLDEN_APPLE Material"},{"code":"323","value":"","title":"323 Material","description":"323 Material"},{"code":"324","value":"","title":"324 Material","description":"324 Material"},{"code":"325","value":"","title":"325 Material","description":"325 Material"},{"code":"326","value":"","title":"326 Material","description":"326 Material"},{"code":"327","value":"","title":"327 Material","description":"327 Material"},{"code":"328","value":"","title":"328 Material","description":"328 Material"},{"code":"329","value":"","title":"329 Material","description":"329 Material"},{"code":"330","value":"","title":"330 Material","description":"330 Material"},{"code":"REDSTONE","value":"331","title":"REDSTONE Material","description":"REDSTONE Material"},{"code":"332","value":"","title":"332 Material","description":"332 Material"},{"code":"333","value":"","title":"333 Material","description":"333 Material"},{"code":"LEATHER","value":"334","title":"LEATHER Material","description":"LEATHER Material"},{"code":"335","value":"","title":"335 Material","description":"335 Material"},{"code":"CLAY_BRICK","value":"336","title":"CLAY_BRICK Material","description":"CLAY_BRICK Material"},{"code":"CLAY_BALL","value":"337","title":"CLAY_BALL Material","description":"CLAY_BALL Material"},{"code":"SUGAR_CANE","value":"338","title":"SUGAR_CANE Material","description":"SUGAR_CANE Material"},{"code":"PAPER","value":"339","title":"PAPER Material","description":"PAPER Material"},{"code":"BOOK","value":"340","title":"BOOK Material","description":"BOOK Material"},{"code":"SLIME_BALL","value":"341","title":"SLIME_BALL Material","description":"SLIME_BALL Material"},{"code":"342","value":"","title":"342 Material","description":"342 Material"},{"code":"343","value":"","title":"343 Material","description":"343 Material"},{"code":"344","value":"","title":"344 Material","description":"344 Material"},{"code":"COMPASS","value":"345","title":"COMPASS Material","description":"COMPASS Material"},{"code":"346","value":"","title":"346 Material","description":"346 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"WATCH","value":"347","title":"WATCH Material","description":"WATCH Material"},{"code":"GLOWSTONE_DUST","value":"348","title":"GLOWSTONE_DUST Material","description":"GLOWSTONE_DUST Material"},{"code":"RAW_FISH","value":"349","title":"RAW_FISH Material","description":"RAW_FISH Material"},{"code":"COOKED_FISH","value":"350","title":"COOKED_FISH Material","description":"COOKED_FISH Material"},{"code":"351","value":"","title":"351 Material","description":"351 Material"},{"code":"BONE","value":"352","title":"BONE Material","description":"BONE Material"},{"code":"SUGAR","value":"353","title":"SUGAR Material","description":"SUGAR Material"},{"code":"354","value":"","title":"354 Material","description":"354 Material"},{"code":"355","value":"","title":"355 Material","description":"355 Material"},{"code":"DIODE","value":"356","title":"DIODE Material","description":"DIODE Material"},{"code":"COOKIE","value":"357","title":"COOKIE Material","description":"COOKIE Material"},{"code":"358","value":"","title":"358 Material","description":"358 Material"},{"code":"359","value":"","title":"359 Material","description":"359 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"MELON","value":"360","title":"MELON Material","description":"MELON Material"},{"code":"PUMPKIN_SEEDS","value":"361","title":"PUMPKIN_SEEDS Material","description":"PUMPKIN_SEEDS Material"},{"code":"MELON_SEEDS","value":"362","title":"MELON_SEEDS Material","description":"MELON_SEEDS Material"},{"code":"RAW_BEEF","value":"363","title":"RAW_BEEF Material","description":"RAW_BEEF Material"},{"code":"COOKED_BEEF","value":"364","title":"COOKED_BEEF Material","description":"COOKED_BEEF Material"},{"code":"RAW_CHICKEN","value":"365","title":"RAW_CHICKEN Material","description":"RAW_CHICKEN Material"},{"code":"COOKED_CHICKEN","value":"366","title":"COOKED_CHICKEN Material","description":"COOKED_CHICKEN Material"},{"code":"ROTTEN_FLESH","value":"367","title":"ROTTEN_FLESH Material","description":"ROTTEN_FLESH Material"},{"code":"368","value":"","title":"368 Material","description":"368 Material"},{"code":"BLAZE_ROD","value":"369","title":"BLAZE_ROD Material","description":"BLAZE_ROD Material"},{"code":"GHAST_TEAR","value":"370","title":"GHAST_TEAR Material","description":"GHAST_TEAR Material"},{"code":"GOLD_NUGGET","value":"371","title":"GOLD_NUGGET Material","description":"GOLD_NUGGET Material"},{"code":"NETHER_STALK","value":"372","title":"NETHER_STALK Material","description":"NETHER_STALK Material"},{"code":"373","value":"","title":"373 Material","description":"373 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"GLASS_BOTTLE","value":"374","title":"GLASS_BOTTLE Material","description":"GLASS_BOTTLE Material"},{"code":"SPIDER_EYE","value":"375","title":"SPIDER_EYE Material","description":"SPIDER_EYE Material"},{"code":"FERMENTED_SPIDER_EYE","value":"376","title":"FERMENTED_SPIDER_EYE Material","description":"FERMENTED_SPIDER_EYE Material"},{"code":"BLAZE_POWDER","value":"377","title":"BLAZE_POWDER Material","description":"BLAZE_POWDER Material"},{"code":"MAGMA_CREAM","value":"378","title":"MAGMA_CREAM Material","description":"MAGMA_CREAM Material"},{"code":"BREWING_STAND_ITEM","value":"379","title":"BREWING_STAND_ITEM Material","description":"BREWING_STAND_ITEM Material"},{"code":"CAULDRON_ITEM","value":"380","title":"CAULDRON_ITEM Material","description":"CAULDRON_ITEM Material"},{"code":"EYE_OF_ENDER","value":"381","title":"EYE_OF_ENDER Material","description":"EYE_OF_ENDER Material"},{"code":"SPECKLED_MELON","value":"382","title":"SPECKLED_MELON Material","description":"SPECKLED_MELON Material"},{"code":"383","value":"","title":"383 Material","description":"383 Material"},{"code":"64","value":"","title":"64 Material","description":"64 Material"},{"code":"384","value":"","title":"384 Material","description":"384 Material"},{"code":"385","value":"","title":"385 Material","description":"385 Material"},{"code":"386","value":"","title":"386 Material","description":"386 Material"},{"code":"387","value":"","title":"387 Material","description":"387 Material"},{"code":"388","value":"","title":"388 Material","description":"388 Material"},{"code":"ITEM_FRAME","value":"389","title":"ITEM_FRAME Material","description":"ITEM_FRAME Material"},{"code":"FLOWER_POT_ITEM","value":"390","title":"FLOWER_POT_ITEM Material","description":"FLOWER_POT_ITEM Material"},{"code":"CARROT_ITEM","value":"391","title":"CARROT_ITEM Material","description":"CARROT_ITEM Material"},{"code":"POTATO_ITEM","value":"392","title":"POTATO_ITEM Material","description":"POTATO_ITEM Material"},{"code":"BAKED_POTATO","value":"393","title":"BAKED_POTATO Material","description":"BAKED_POTATO Material"},{"code":"POISONOUS_POTATO","value":"394","title":"POISONOUS_POTATO Material","description":"POISONOUS_POTATO Material"},{"code":"EMPTY_MAP","value":"395","title":"EMPTY_MAP Material","description":"EMPTY_MAP Material"},{"code":"GOLDEN_CARROT","value":"396","title":"GOLDEN_CARROT Material","description":"GOLDEN_CARROT Material"},{"code":"SKULL_ITEM","value":"397","title":"SKULL_ITEM Material","description":"SKULL_ITEM Material"},{"code":"398","value":"","title":"398 Material","description":"398 Material"},{"code":"1","value":"","title":"1 Material","description":"1 Material"},{"code":"NETHER_STAR","value":"399","title":"NETHER_STAR Material","description":"NETHER_STAR Material"},{"code":"PUMPKIN_PIE","value":"400","title":"PUMPKIN_PIE Material","description":"PUMPKIN_PIE Material"},{"code":"FIREWORK","value":"401","title":"FIREWORK Material","description":"FIREWORK Material"},{"code":"FIREWORK_CHARGE","value":"402","title":"FIREWORK_CHARGE Material","description":"FIREWORK_CHARGE Material"},{"code":"403","value":"","title":"403 Material","description":"403 Material"},{"code":"REDSTONE_COMPARATOR","value":"404","title":"REDSTONE_COMPARATOR Material","description":"REDSTONE_COMPARATOR Material"},{"code":"NETHER_BRICK_ITEM","value":"405","title":"NETHER_BRICK_ITEM Material","description":"NETHER_BRICK_ITEM Material"},{"code":"QUARTZ","value":"406","title":"QUARTZ Material","description":"QUARTZ Material"},{"code":"407","value":"","title":"407 Material","description":"407 Material"},{"code":"408","value":"","title":"408 Material","description":"408 Material"},{"code":"PRISMARINE_SHARD","value":"409","title":"PRISMARINE_SHARD Material","description":"PRISMARINE_SHARD Material"},{"code":"PRISMARINE_CRYSTALS","value":"410","title":"PRISMARINE_CRYSTALS Material","description":"PRISMARINE_CRYSTALS Material"},{"code":"RABBIT","value":"411","title":"RABBIT Material","description":"RABBIT Material"},{"code":"COOKED_RABBIT","value":"412","title":"COOKED_RABBIT Material","description":"COOKED_RABBIT Material"},{"code":"413","value":"","title":"413 Material","description":"413 Material"},{"code":"RABBIT_FOOT","value":"414","title":"RABBIT_FOOT Material","description":"RABBIT_FOOT Material"},{"code":"RABBIT_HIDE","value":"415","title":"RABBIT_HIDE Material","description":"RABBIT_HIDE Material"},{"code":"416","value":"","title":"416 Material","description":"416 Material"},{"code":"417","value":"","title":"417 Material","description":"417 Material"},{"code":"418","value":"","title":"418 Material","description":"418 Material"},{"code":"419","value":"","title":"419 Material","description":"419 Material"},{"code":"LEASH","value":"420","title":"LEASH Material","description":"LEASH Material"},{"code":"NAME_TAG","value":"421","title":"NAME_TAG Material","description":"NAME_TAG Material"},{"code":"422","value":"","title":"422 Material","description":"422 Material"},{"code":"MUTTON","value":"423","title":"MUTTON Material","description":"MUTTON Material"},{"code":"COOKED_MUTTON","value":"424","title":"COOKED_MUTTON Material","description":"COOKED_MUTTON Material"},{"code":"425","value":"","title":"425 Material","description":"425 Material"},{"code":"SPRUCE_DOOR_ITEM","value":"427","title":"SPRUCE_DOOR_ITEM Material","description":"SPRUCE_DOOR_ITEM Material"},{"code":"BIRCH_DOOR_ITEM","value":"428","title":"BIRCH_DOOR_ITEM Material","description":"BIRCH_DOOR_ITEM Material"},{"code":"JUNGLE_DOOR_ITEM","value":"429","title":"JUNGLE_DOOR_ITEM Material","description":"JUNGLE_DOOR_ITEM Material"},{"code":"ACACIA_DOOR_ITEM","value":"430","title":"ACACIA_DOOR_ITEM Material","description":"ACACIA_DOOR_ITEM Material"},{"code":"DARK_OAK_DOOR_ITEM","value":"431","title":"DARK_OAK_DOOR_ITEM Material","description":"DARK_OAK_DOOR_ITEM Material"},{"code":"2256","value":"","title":"2256 Material","description":"2256 Material"},{"code":"2257","value":"","title":"2257 Material","description":"2257 Material"},{"code":"2258","value":"","title":"2258 Material","description":"2258 Material"},{"code":"2259","value":"","title":"2259 Material","description":"2259 Material"},{"code":"2260","value":"","title":"2260 Material","description":"2260 Material"},{"code":"2261","value":"","title":"2261 Material","description":"2261 Material"},{"code":"2262","value":"","title":"2262 Material","description":"2262 Material"},{"code":"2263","value":"","title":"2263 Material","description":"2263 Material"},{"code":"2264","value":"","title":"2264 Material","description":"2264 Material"},{"code":"2265","value":"","title":"2265 Material","description":"2265 Material"},{"code":"2266","value":"","title":"2266 Material","description":"2266 Material"},{"code":"2267","value":"","title":"2267 Material","description":"2267 Material"}],"properties":[]},"io.wolfscript.NetherWartsState":{"namespace":"io.wolfscript","title":"enum NetherWartsState","description":"enum NetherWartsState","name":"NetherWartsState","qualifiedname":"io.wolfscript.NetherWartsState","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"RIPE","value":"","title":"State when first seeded","description":"State when first seeded /\n    SEEDED,\n    /** First growth stage /\n    STAGE_ONE,\n    /** Second growth stage /\n    STAGE_TWO,\n    /** Ready to harvest","doc":{}}],"properties":[]},"io.wolfscript.PortalType":{"namespace":"io.wolfscript","title":"Represents various types of portals that can be made in a world.","description":"Represents various types of portals that can be made in a world.","name":"PortalType","qualifiedname":"io.wolfscript.PortalType","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"CUSTOM","value":"","title":"This is a Nether portal, made of obsidian.","description":"This is a Nether portal, made of obsidian. /\n    NETHER,\n\n    /** This is an Ender portal. /\n    ENDER,\n\n    /** This is a custom Plugin portal.","doc":{}}],"properties":[]},"io.wolfscript.Rotation":{"namespace":"io.wolfscript","title":"An enum to specify a rotation based orientation, like that on a clock.","description":"An enum to specify a rotation based orientation, like that on a clock. <p> It represents how something is viewed, as opposed to cardinal directions.","name":"Rotation","qualifiedname":"io.wolfscript.Rotation","type":"enum","scope":"public","constructors":[],"methods":[{"title":"No rotation","description":"No rotation /\n    NONE,\n    /** Rotated clockwise by 45 degrees /\n    CLOCKWISE_45,\n    /** Rotated clockwise by 90 degrees /\n    CLOCKWISE,\n    /** Rotated clockwise by 135 degrees /\n    CLOCKWISE_135,\n    /** Flipped upside-down, a 180 degree rotation /\n    FLIPPED,\n    /** Flipped upside-down + 45 degree rotation /\n    FLIPPED_45,\n    /** Rotated counter-clockwise by 90 degrees /\n    COUNTER_CLOCKWISE,\n    /** Rotated counter-clockwise by 45 degrees /\n    COUNTER_CLOCKWISE_45\n    ;\n\n    private static final Rotation [] rotations = values();\n\n    /** Rotate clockwise by 90 degrees.","doc":{"return":["the relative rotation /\n    public Rotation rotateClockwise() {\n        return rotations[(this.ordinal() + 1) & 0x7];\n    }\n\n    /** Rotate counter-clockwise by 90 degrees.","the relative rotation"]},"scope":"public","return":"io.wolfscript.Rotation","name":"rotateCounterClockwise","args":[]}],"imports":[],"enum":[{"code":"COUNTER_CLOCKWISE","value":"","title":"No rotation","description":"No rotation /\n    NONE,\n    /** Rotated clockwise by 45 degrees /\n    CLOCKWISE_45,\n    /** Rotated clockwise by 90 degrees /\n    CLOCKWISE,\n    /** Rotated clockwise by 135 degrees /\n    CLOCKWISE_135,\n    /** Flipped upside-down, a 180 degree rotation /\n    FLIPPED,\n    /** Flipped upside-down + 45 degree rotation /\n    FLIPPED_45,\n    /** Rotated counter-clockwise by 90 degrees","doc":{}}],"properties":[]},"io.wolfscript.SandstoneType":{"namespace":"io.wolfscript","title":"Represents the three different types of Sandstone","description":"Represents the three different types of Sandstone","name":"SandstoneType","qualifiedname":"io.wolfscript.SandstoneType","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Gets the associated data value representing this type of sandstone","description":"Gets the associated data value representing this type of sandstone","doc":{"return":["A byte containing the data value of this sandstone type","The {@link io.wolfscript.SandstoneType} representing the given value, or null if it doesn't exist"],"deprecated":["Magic value /\n    @Deprecated\n    public byte getData() {\n        return data;\n    }\n\n    /** Gets the type of sandstone with the given data value","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.SandstoneType","name":"getByData","deprecated":true,"args":[{"name":"byte","type":"final","description":"byte argument"}]}],"imports":["java.util.Map","com.google.common.collect.Maps"],"enum":[{"code":"CRACKED","value":"0x0","title":"CRACKED SandstoneType","description":"CRACKED SandstoneType"},{"code":"GLYPHED","value":"0x1","title":"GLYPHED SandstoneType","description":"GLYPHED SandstoneType"},{"code":"SMOOTH","value":"0x2","title":"SMOOTH SandstoneType","description":"SMOOTH SandstoneType"}],"properties":[]},"io.wolfscript.Server":{"namespace":"io.wolfscript","title":"Represents a server implementation.","description":"Represents a server implementation.","name":"Server","qualifiedname":"io.wolfscript.Server","type":"interface","scope":"public","extends":["io.wolfscript.plugin.messaging.PluginMessageRecipient"],"constructors":[],"fields":[{"title":"Used for all administrative messages, such as an operator using a","description":"Used for all administrative messages, such as an operator using a command. <p> For use in {@link #broadcast(java.lang.String, java.lang.String)}. /\n    public static final String BROADCAST_CHANNEL_ADMINISTRATIVE = \"wolfscript.broadcast.admin\";\n\n    /** Used for all announcement messages, such as informing users that a player has joined. <p> For use in {@link #broadcast(java.lang.String, java.lang.String)}.","doc":{},"name":"BROADCAST","scope":"public","type":"String","describe":"static final"}],"methods":[],"imports":["java.awt.image.BufferedImage","java.io.File","java.io.Serializable","java.util.Collection","java.util.Collections","java.util.Iterator","java.util.List","java.util.Map","java.util.Set","java.util.UUID","java.util.logging.Logger","io.wolfscript.Warning.WarningState","io.wolfscript.command.CommandException","io.wolfscript.command.CommandSender","io.wolfscript.command.ConsoleCommandSender","io.wolfscript.command.PluginCommand","io.wolfscript.entity.Entity","io.wolfscript.entity.Player","io.wolfscript.event.inventory.InventoryType","io.wolfscript.event.server.ServerListPingEvent","io.wolfscript.help.HelpMap","io.wolfscript.inventory.Inventory","io.wolfscript.inventory.InventoryHolder","io.wolfscript.inventory.ItemStack","io.wolfscript.inventory.Recipe","io.wolfscript.map.MapView","io.wolfscript.permissions.Permissible","io.wolfscript.plugin.PluginManager","io.wolfscript.plugin.ServicesManager","io.wolfscript.plugin.messaging.Messenger","io.wolfscript.plugin.messaging.PluginMessageRecipient","io.wolfscript.scheduler.WolfScriptScheduler","io.wolfscript.scoreboard.ScoreboardManager","io.wolfscript.util.CachedServerIcon","com.avaje.ebean.config.ServerConfig","com.google.common.collect.ImmutableList","io.wolfscript.inventory.ItemFactory","io.wolfscript.inventory.meta.ItemMeta"],"properties":[]},"io.wolfscript.SkullType":{"namespace":"io.wolfscript","title":"Represents the different types of skulls.","description":"Represents the different types of skulls.","name":"SkullType","qualifiedname":"io.wolfscript.SkullType","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"SKELETON","value":"","title":"SKELETON SkullType","description":"SKELETON SkullType"},{"code":"WITHER","value":"","title":"WITHER SkullType","description":"WITHER SkullType"},{"code":"ZOMBIE","value":"","title":"ZOMBIE SkullType","description":"ZOMBIE SkullType"},{"code":"PLAYER","value":"","title":"PLAYER SkullType","description":"PLAYER SkullType"},{"code":"CREEPER","value":"","title":"CREEPER SkullType","description":"CREEPER SkullType"}],"properties":[]},"io.wolfscript.Sound":{"namespace":"io.wolfscript","title":"An Enum of Sounds the server is able to send to players.","description":"An Enum of Sounds the server is able to send to players. <p> WARNING: At any time, sounds may be added/removed from this Enum or even MineCraft itself! There is no guarantee the sounds will play. There is no guarantee values will not be removed from this Enum. As such, you should not depend on the ordinal values of this class.","name":"Sound","qualifiedname":"io.wolfscript.Sound","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"AMBIENCE_CAVE","value":"","title":"AMBIENCE_CAVE Sound","description":"AMBIENCE_CAVE Sound"},{"code":"AMBIENCE_RAIN","value":"","title":"AMBIENCE_RAIN Sound","description":"AMBIENCE_RAIN Sound"},{"code":"AMBIENCE_THUNDER","value":"","title":"AMBIENCE_THUNDER Sound","description":"AMBIENCE_THUNDER Sound"},{"code":"ANVIL_BREAK","value":"","title":"ANVIL_BREAK Sound","description":"ANVIL_BREAK Sound"},{"code":"ANVIL_LAND","value":"","title":"ANVIL_LAND Sound","description":"ANVIL_LAND Sound"},{"code":"ANVIL_USE","value":"","title":"ANVIL_USE Sound","description":"ANVIL_USE Sound"},{"code":"ARROW_HIT","value":"","title":"ARROW_HIT Sound","description":"ARROW_HIT Sound"},{"code":"BURP","value":"","title":"BURP Sound","description":"BURP Sound"},{"code":"CHEST_CLOSE","value":"","title":"CHEST_CLOSE Sound","description":"CHEST_CLOSE Sound"},{"code":"CHEST_OPEN","value":"","title":"CHEST_OPEN Sound","description":"CHEST_OPEN Sound"},{"code":"CLICK","value":"","title":"CLICK Sound","description":"CLICK Sound"},{"code":"DOOR_CLOSE","value":"","title":"DOOR_CLOSE Sound","description":"DOOR_CLOSE Sound"},{"code":"DOOR_OPEN","value":"","title":"DOOR_OPEN Sound","description":"DOOR_OPEN Sound"},{"code":"DRINK","value":"","title":"DRINK Sound","description":"DRINK Sound"},{"code":"EAT","value":"","title":"EAT Sound","description":"EAT Sound"},{"code":"EXPLODE","value":"","title":"EXPLODE Sound","description":"EXPLODE Sound"},{"code":"FALL_BIG","value":"","title":"FALL_BIG Sound","description":"FALL_BIG Sound"},{"code":"FALL_SMALL","value":"","title":"FALL_SMALL Sound","description":"FALL_SMALL Sound"},{"code":"FIRE","value":"","title":"FIRE Sound","description":"FIRE Sound"},{"code":"FIRE_IGNITE","value":"","title":"FIRE_IGNITE Sound","description":"FIRE_IGNITE Sound"},{"code":"FIZZ","value":"","title":"FIZZ Sound","description":"FIZZ Sound"},{"code":"FUSE","value":"","title":"FUSE Sound","description":"FUSE Sound"},{"code":"GLASS","value":"","title":"GLASS Sound","description":"GLASS Sound"},{"code":"HURT_FLESH","value":"","title":"HURT_FLESH Sound","description":"HURT_FLESH Sound"},{"code":"ITEM_BREAK","value":"","title":"ITEM_BREAK Sound","description":"ITEM_BREAK Sound"},{"code":"ITEM_PICKUP","value":"","title":"ITEM_PICKUP Sound","description":"ITEM_PICKUP Sound"},{"code":"LAVA","value":"","title":"LAVA Sound","description":"LAVA Sound"},{"code":"LAVA_POP","value":"","title":"LAVA_POP Sound","description":"LAVA_POP Sound"},{"code":"LEVEL_UP","value":"","title":"LEVEL_UP Sound","description":"LEVEL_UP Sound"},{"code":"MINECART_BASE","value":"","title":"MINECART_BASE Sound","description":"MINECART_BASE Sound"},{"code":"MINECART_INSIDE","value":"","title":"MINECART_INSIDE Sound","description":"MINECART_INSIDE Sound"},{"code":"NOTE_BASS","value":"","title":"NOTE_BASS Sound","description":"NOTE_BASS Sound"},{"code":"NOTE_PIANO","value":"","title":"NOTE_PIANO Sound","description":"NOTE_PIANO Sound"},{"code":"NOTE_BASS_DRUM","value":"","title":"NOTE_BASS_DRUM Sound","description":"NOTE_BASS_DRUM Sound"},{"code":"NOTE_STICKS","value":"","title":"NOTE_STICKS Sound","description":"NOTE_STICKS Sound"},{"code":"NOTE_BASS_GUITAR","value":"","title":"NOTE_BASS_GUITAR Sound","description":"NOTE_BASS_GUITAR Sound"},{"code":"NOTE_SNARE_DRUM","value":"","title":"NOTE_SNARE_DRUM Sound","description":"NOTE_SNARE_DRUM Sound"},{"code":"NOTE_PLING","value":"","title":"NOTE_PLING Sound","description":"NOTE_PLING Sound"},{"code":"ORB_PICKUP","value":"","title":"ORB_PICKUP Sound","description":"ORB_PICKUP Sound"},{"code":"PISTON_EXTEND","value":"","title":"PISTON_EXTEND Sound","description":"PISTON_EXTEND Sound"},{"code":"PISTON_RETRACT","value":"","title":"PISTON_RETRACT Sound","description":"PISTON_RETRACT Sound"},{"code":"PORTAL","value":"","title":"PORTAL Sound","description":"PORTAL Sound"},{"code":"PORTAL_TRAVEL","value":"","title":"PORTAL_TRAVEL Sound","description":"PORTAL_TRAVEL Sound"},{"code":"PORTAL_TRIGGER","value":"","title":"PORTAL_TRIGGER Sound","description":"PORTAL_TRIGGER Sound"},{"code":"SHOOT_ARROW","value":"","title":"SHOOT_ARROW Sound","description":"SHOOT_ARROW Sound"},{"code":"SPLASH","value":"","title":"SPLASH Sound","description":"SPLASH Sound"},{"code":"SPLASH2","value":"","title":"SPLASH2 Sound","description":"SPLASH2 Sound"},{"code":"STEP_GRASS","value":"","title":"STEP_GRASS Sound","description":"STEP_GRASS Sound"},{"code":"STEP_GRAVEL","value":"","title":"STEP_GRAVEL Sound","description":"STEP_GRAVEL Sound"},{"code":"STEP_LADDER","value":"","title":"STEP_LADDER Sound","description":"STEP_LADDER Sound"},{"code":"STEP_SAND","value":"","title":"STEP_SAND Sound","description":"STEP_SAND Sound"},{"code":"STEP_SNOW","value":"","title":"STEP_SNOW Sound","description":"STEP_SNOW Sound"},{"code":"STEP_STONE","value":"","title":"STEP_STONE Sound","description":"STEP_STONE Sound"},{"code":"STEP_WOOD","value":"","title":"STEP_WOOD Sound","description":"STEP_WOOD Sound"},{"code":"STEP_WOOL","value":"","title":"STEP_WOOL Sound","description":"STEP_WOOL Sound"},{"code":"SWIM","value":"","title":"SWIM Sound","description":"SWIM Sound"},{"code":"WATER","value":"","title":"WATER Sound","description":"WATER Sound"},{"code":"WOOD_CLICK","value":"","title":"WOOD_CLICK Sound","description":"WOOD_CLICK Sound"},{"code":"BAT_DEATH","value":"","title":"BAT_DEATH Sound","description":"BAT_DEATH Sound"},{"code":"BAT_HURT","value":"","title":"BAT_HURT Sound","description":"BAT_HURT Sound"},{"code":"BAT_IDLE","value":"","title":"BAT_IDLE Sound","description":"BAT_IDLE Sound"},{"code":"BAT_LOOP","value":"","title":"BAT_LOOP Sound","description":"BAT_LOOP Sound"},{"code":"BAT_TAKEOFF","value":"","title":"BAT_TAKEOFF Sound","description":"BAT_TAKEOFF Sound"},{"code":"BLAZE_BREATH","value":"","title":"BLAZE_BREATH Sound","description":"BLAZE_BREATH Sound"},{"code":"BLAZE_DEATH","value":"","title":"BLAZE_DEATH Sound","description":"BLAZE_DEATH Sound"},{"code":"BLAZE_HIT","value":"","title":"BLAZE_HIT Sound","description":"BLAZE_HIT Sound"},{"code":"CAT_HISS","value":"","title":"CAT_HISS Sound","description":"CAT_HISS Sound"},{"code":"CAT_HIT","value":"","title":"CAT_HIT Sound","description":"CAT_HIT Sound"},{"code":"CAT_MEOW","value":"","title":"CAT_MEOW Sound","description":"CAT_MEOW Sound"},{"code":"CAT_PURR","value":"","title":"CAT_PURR Sound","description":"CAT_PURR Sound"},{"code":"CAT_PURREOW","value":"","title":"CAT_PURREOW Sound","description":"CAT_PURREOW Sound"},{"code":"CHICKEN_IDLE","value":"","title":"CHICKEN_IDLE Sound","description":"CHICKEN_IDLE Sound"},{"code":"CHICKEN_HURT","value":"","title":"CHICKEN_HURT Sound","description":"CHICKEN_HURT Sound"},{"code":"CHICKEN_EGG_POP","value":"","title":"CHICKEN_EGG_POP Sound","description":"CHICKEN_EGG_POP Sound"},{"code":"CHICKEN_WALK","value":"","title":"CHICKEN_WALK Sound","description":"CHICKEN_WALK Sound"},{"code":"COW_IDLE","value":"","title":"COW_IDLE Sound","description":"COW_IDLE Sound"},{"code":"COW_HURT","value":"","title":"COW_HURT Sound","description":"COW_HURT Sound"},{"code":"COW_WALK","value":"","title":"COW_WALK Sound","description":"COW_WALK Sound"},{"code":"CREEPER_HISS","value":"","title":"CREEPER_HISS Sound","description":"CREEPER_HISS Sound"},{"code":"CREEPER_DEATH","value":"","title":"CREEPER_DEATH Sound","description":"CREEPER_DEATH Sound"},{"code":"ENDERDRAGON_DEATH","value":"","title":"ENDERDRAGON_DEATH Sound","description":"ENDERDRAGON_DEATH Sound"},{"code":"ENDERDRAGON_GROWL","value":"","title":"ENDERDRAGON_GROWL Sound","description":"ENDERDRAGON_GROWL Sound"},{"code":"ENDERDRAGON_HIT","value":"","title":"ENDERDRAGON_HIT Sound","description":"ENDERDRAGON_HIT Sound"},{"code":"ENDERDRAGON_WINGS","value":"","title":"ENDERDRAGON_WINGS Sound","description":"ENDERDRAGON_WINGS Sound"},{"code":"ENDERMAN_DEATH","value":"","title":"ENDERMAN_DEATH Sound","description":"ENDERMAN_DEATH Sound"},{"code":"ENDERMAN_HIT","value":"","title":"ENDERMAN_HIT Sound","description":"ENDERMAN_HIT Sound"},{"code":"ENDERMAN_IDLE","value":"","title":"ENDERMAN_IDLE Sound","description":"ENDERMAN_IDLE Sound"},{"code":"ENDERMAN_TELEPORT","value":"","title":"ENDERMAN_TELEPORT Sound","description":"ENDERMAN_TELEPORT Sound"},{"code":"ENDERMAN_SCREAM","value":"","title":"ENDERMAN_SCREAM Sound","description":"ENDERMAN_SCREAM Sound"},{"code":"ENDERMAN_STARE","value":"","title":"ENDERMAN_STARE Sound","description":"ENDERMAN_STARE Sound"},{"code":"GHAST_SCREAM","value":"","title":"GHAST_SCREAM Sound","description":"GHAST_SCREAM Sound"},{"code":"GHAST_SCREAM2","value":"","title":"GHAST_SCREAM2 Sound","description":"GHAST_SCREAM2 Sound"},{"code":"GHAST_CHARGE","value":"","title":"GHAST_CHARGE Sound","description":"GHAST_CHARGE Sound"},{"code":"GHAST_DEATH","value":"","title":"GHAST_DEATH Sound","description":"GHAST_DEATH Sound"},{"code":"GHAST_FIREBALL","value":"","title":"GHAST_FIREBALL Sound","description":"GHAST_FIREBALL Sound"},{"code":"GHAST_MOAN","value":"","title":"GHAST_MOAN Sound","description":"GHAST_MOAN Sound"},{"code":"IRONGOLEM_DEATH","value":"","title":"IRONGOLEM_DEATH Sound","description":"IRONGOLEM_DEATH Sound"},{"code":"IRONGOLEM_HIT","value":"","title":"IRONGOLEM_HIT Sound","description":"IRONGOLEM_HIT Sound"},{"code":"IRONGOLEM_THROW","value":"","title":"IRONGOLEM_THROW Sound","description":"IRONGOLEM_THROW Sound"},{"code":"IRONGOLEM_WALK","value":"","title":"IRONGOLEM_WALK Sound","description":"IRONGOLEM_WALK Sound"},{"code":"MAGMACUBE_WALK","value":"","title":"MAGMACUBE_WALK Sound","description":"MAGMACUBE_WALK Sound"},{"code":"MAGMACUBE_WALK2","value":"","title":"MAGMACUBE_WALK2 Sound","description":"MAGMACUBE_WALK2 Sound"},{"code":"MAGMACUBE_JUMP","value":"","title":"MAGMACUBE_JUMP Sound","description":"MAGMACUBE_JUMP Sound"},{"code":"PIG_IDLE","value":"","title":"PIG_IDLE Sound","description":"PIG_IDLE Sound"},{"code":"PIG_DEATH","value":"","title":"PIG_DEATH Sound","description":"PIG_DEATH Sound"},{"code":"PIG_WALK","value":"","title":"PIG_WALK Sound","description":"PIG_WALK Sound"},{"code":"SHEEP_IDLE","value":"","title":"SHEEP_IDLE Sound","description":"SHEEP_IDLE Sound"},{"code":"SHEEP_SHEAR","value":"","title":"SHEEP_SHEAR Sound","description":"SHEEP_SHEAR Sound"},{"code":"SHEEP_WALK","value":"","title":"SHEEP_WALK Sound","description":"SHEEP_WALK Sound"},{"code":"SILVERFISH_HIT","value":"","title":"SILVERFISH_HIT Sound","description":"SILVERFISH_HIT Sound"},{"code":"SILVERFISH_KILL","value":"","title":"SILVERFISH_KILL Sound","description":"SILVERFISH_KILL Sound"},{"code":"SILVERFISH_IDLE","value":"","title":"SILVERFISH_IDLE Sound","description":"SILVERFISH_IDLE Sound"},{"code":"SILVERFISH_WALK","value":"","title":"SILVERFISH_WALK Sound","description":"SILVERFISH_WALK Sound"},{"code":"SKELETON_IDLE","value":"","title":"SKELETON_IDLE Sound","description":"SKELETON_IDLE Sound"},{"code":"SKELETON_DEATH","value":"","title":"SKELETON_DEATH Sound","description":"SKELETON_DEATH Sound"},{"code":"SKELETON_HURT","value":"","title":"SKELETON_HURT Sound","description":"SKELETON_HURT Sound"},{"code":"SKELETON_WALK","value":"","title":"SKELETON_WALK Sound","description":"SKELETON_WALK Sound"},{"code":"SLIME_ATTACK","value":"","title":"SLIME_ATTACK Sound","description":"SLIME_ATTACK Sound"},{"code":"SLIME_WALK","value":"","title":"SLIME_WALK Sound","description":"SLIME_WALK Sound"},{"code":"SLIME_WALK2","value":"","title":"SLIME_WALK2 Sound","description":"SLIME_WALK2 Sound"},{"code":"SPIDER_IDLE","value":"","title":"SPIDER_IDLE Sound","description":"SPIDER_IDLE Sound"},{"code":"SPIDER_DEATH","value":"","title":"SPIDER_DEATH Sound","description":"SPIDER_DEATH Sound"},{"code":"SPIDER_WALK","value":"","title":"SPIDER_WALK Sound","description":"SPIDER_WALK Sound"},{"code":"WITHER_DEATH","value":"","title":"WITHER_DEATH Sound","description":"WITHER_DEATH Sound"},{"code":"WITHER_HURT","value":"","title":"WITHER_HURT Sound","description":"WITHER_HURT Sound"},{"code":"WITHER_IDLE","value":"","title":"WITHER_IDLE Sound","description":"WITHER_IDLE Sound"},{"code":"WITHER_SHOOT","value":"","title":"WITHER_SHOOT Sound","description":"WITHER_SHOOT Sound"},{"code":"WITHER_SPAWN","value":"","title":"WITHER_SPAWN Sound","description":"WITHER_SPAWN Sound"},{"code":"WOLF_BARK","value":"","title":"WOLF_BARK Sound","description":"WOLF_BARK Sound"},{"code":"WOLF_DEATH","value":"","title":"WOLF_DEATH Sound","description":"WOLF_DEATH Sound"},{"code":"WOLF_GROWL","value":"","title":"WOLF_GROWL Sound","description":"WOLF_GROWL Sound"},{"code":"WOLF_HOWL","value":"","title":"WOLF_HOWL Sound","description":"WOLF_HOWL Sound"},{"code":"WOLF_HURT","value":"","title":"WOLF_HURT Sound","description":"WOLF_HURT Sound"},{"code":"WOLF_PANT","value":"","title":"WOLF_PANT Sound","description":"WOLF_PANT Sound"},{"code":"WOLF_SHAKE","value":"","title":"WOLF_SHAKE Sound","description":"WOLF_SHAKE Sound"},{"code":"WOLF_WALK","value":"","title":"WOLF_WALK Sound","description":"WOLF_WALK Sound"},{"code":"WOLF_WHINE","value":"","title":"WOLF_WHINE Sound","description":"WOLF_WHINE Sound"},{"code":"ZOMBIE_METAL","value":"","title":"ZOMBIE_METAL Sound","description":"ZOMBIE_METAL Sound"},{"code":"ZOMBIE_WOOD","value":"","title":"ZOMBIE_WOOD Sound","description":"ZOMBIE_WOOD Sound"},{"code":"ZOMBIE_WOODBREAK","value":"","title":"ZOMBIE_WOODBREAK Sound","description":"ZOMBIE_WOODBREAK Sound"},{"code":"ZOMBIE_IDLE","value":"","title":"ZOMBIE_IDLE Sound","description":"ZOMBIE_IDLE Sound"},{"code":"ZOMBIE_DEATH","value":"","title":"ZOMBIE_DEATH Sound","description":"ZOMBIE_DEATH Sound"},{"code":"ZOMBIE_HURT","value":"","title":"ZOMBIE_HURT Sound","description":"ZOMBIE_HURT Sound"},{"code":"ZOMBIE_INFECT","value":"","title":"ZOMBIE_INFECT Sound","description":"ZOMBIE_INFECT Sound"},{"code":"ZOMBIE_UNFECT","value":"","title":"ZOMBIE_UNFECT Sound","description":"ZOMBIE_UNFECT Sound"},{"code":"ZOMBIE_REMEDY","value":"","title":"ZOMBIE_REMEDY Sound","description":"ZOMBIE_REMEDY Sound"},{"code":"ZOMBIE_WALK","value":"","title":"ZOMBIE_WALK Sound","description":"ZOMBIE_WALK Sound"},{"code":"ZOMBIE_PIG_IDLE","value":"","title":"ZOMBIE_PIG_IDLE Sound","description":"ZOMBIE_PIG_IDLE Sound"},{"code":"ZOMBIE_PIG_ANGRY","value":"","title":"ZOMBIE_PIG_ANGRY Sound","description":"ZOMBIE_PIG_ANGRY Sound"},{"code":"ZOMBIE_PIG_DEATH","value":"","title":"ZOMBIE_PIG_DEATH Sound","description":"ZOMBIE_PIG_DEATH Sound"},{"code":"ZOMBIE_PIG_HURT","value":"","title":"ZOMBIE_PIG_HURT Sound","description":"ZOMBIE_PIG_HURT Sound"},{"code":"DIG_WOOL","value":"","title":"DIG_WOOL Sound","description":"DIG_WOOL Sound"},{"code":"DIG_GRASS","value":"","title":"DIG_GRASS Sound","description":"DIG_GRASS Sound"},{"code":"DIG_GRAVEL","value":"","title":"DIG_GRAVEL Sound","description":"DIG_GRAVEL Sound"},{"code":"DIG_SAND","value":"","title":"DIG_SAND Sound","description":"DIG_SAND Sound"},{"code":"DIG_SNOW","value":"","title":"DIG_SNOW Sound","description":"DIG_SNOW Sound"},{"code":"DIG_STONE","value":"","title":"DIG_STONE Sound","description":"DIG_STONE Sound"},{"code":"DIG_WOOD","value":"","title":"DIG_WOOD Sound","description":"DIG_WOOD Sound"},{"code":"FIREWORK_BLAST","value":"","title":"FIREWORK_BLAST Sound","description":"FIREWORK_BLAST Sound"},{"code":"FIREWORK_BLAST2","value":"","title":"FIREWORK_BLAST2 Sound","description":"FIREWORK_BLAST2 Sound"},{"code":"FIREWORK_LARGE_BLAST","value":"","title":"FIREWORK_LARGE_BLAST Sound","description":"FIREWORK_LARGE_BLAST Sound"},{"code":"FIREWORK_LARGE_BLAST2","value":"","title":"FIREWORK_LARGE_BLAST2 Sound","description":"FIREWORK_LARGE_BLAST2 Sound"},{"code":"FIREWORK_TWINKLE","value":"","title":"FIREWORK_TWINKLE Sound","description":"FIREWORK_TWINKLE Sound"},{"code":"FIREWORK_TWINKLE2","value":"","title":"FIREWORK_TWINKLE2 Sound","description":"FIREWORK_TWINKLE2 Sound"},{"code":"FIREWORK_LAUNCH","value":"","title":"FIREWORK_LAUNCH Sound","description":"FIREWORK_LAUNCH Sound"},{"code":"SUCCESSFUL_HIT","value":"","title":"SUCCESSFUL_HIT Sound","description":"SUCCESSFUL_HIT Sound"},{"code":"HORSE_ANGRY","value":"","title":"HORSE_ANGRY Sound","description":"HORSE_ANGRY Sound"},{"code":"HORSE_ARMOR","value":"","title":"HORSE_ARMOR Sound","description":"HORSE_ARMOR Sound"},{"code":"HORSE_BREATHE","value":"","title":"HORSE_BREATHE Sound","description":"HORSE_BREATHE Sound"},{"code":"HORSE_DEATH","value":"","title":"HORSE_DEATH Sound","description":"HORSE_DEATH Sound"},{"code":"HORSE_GALLOP","value":"","title":"HORSE_GALLOP Sound","description":"HORSE_GALLOP Sound"},{"code":"HORSE_HIT","value":"","title":"HORSE_HIT Sound","description":"HORSE_HIT Sound"},{"code":"HORSE_IDLE","value":"","title":"HORSE_IDLE Sound","description":"HORSE_IDLE Sound"},{"code":"HORSE_JUMP","value":"","title":"HORSE_JUMP Sound","description":"HORSE_JUMP Sound"},{"code":"HORSE_LAND","value":"","title":"HORSE_LAND Sound","description":"HORSE_LAND Sound"},{"code":"HORSE_SADDLE","value":"","title":"HORSE_SADDLE Sound","description":"HORSE_SADDLE Sound"},{"code":"HORSE_SOFT","value":"","title":"HORSE_SOFT Sound","description":"HORSE_SOFT Sound"},{"code":"HORSE_WOOD","value":"","title":"HORSE_WOOD Sound","description":"HORSE_WOOD Sound"},{"code":"DONKEY_ANGRY","value":"","title":"DONKEY_ANGRY Sound","description":"DONKEY_ANGRY Sound"},{"code":"DONKEY_DEATH","value":"","title":"DONKEY_DEATH Sound","description":"DONKEY_DEATH Sound"},{"code":"DONKEY_HIT","value":"","title":"DONKEY_HIT Sound","description":"DONKEY_HIT Sound"},{"code":"DONKEY_IDLE","value":"","title":"DONKEY_IDLE Sound","description":"DONKEY_IDLE Sound"},{"code":"HORSE_SKELETON_DEATH","value":"","title":"HORSE_SKELETON_DEATH Sound","description":"HORSE_SKELETON_DEATH Sound"},{"code":"HORSE_SKELETON_HIT","value":"","title":"HORSE_SKELETON_HIT Sound","description":"HORSE_SKELETON_HIT Sound"},{"code":"HORSE_SKELETON_IDLE","value":"","title":"HORSE_SKELETON_IDLE Sound","description":"HORSE_SKELETON_IDLE Sound"},{"code":"HORSE_ZOMBIE_DEATH","value":"","title":"HORSE_ZOMBIE_DEATH Sound","description":"HORSE_ZOMBIE_DEATH Sound"},{"code":"HORSE_ZOMBIE_HIT","value":"","title":"HORSE_ZOMBIE_HIT Sound","description":"HORSE_ZOMBIE_HIT Sound"},{"code":"HORSE_ZOMBIE_IDLE","value":"","title":"HORSE_ZOMBIE_IDLE Sound","description":"HORSE_ZOMBIE_IDLE Sound"},{"code":"VILLAGER_DEATH","value":"","title":"VILLAGER_DEATH Sound","description":"VILLAGER_DEATH Sound"},{"code":"VILLAGER_HAGGLE","value":"","title":"VILLAGER_HAGGLE Sound","description":"VILLAGER_HAGGLE Sound"},{"code":"VILLAGER_HIT","value":"","title":"VILLAGER_HIT Sound","description":"VILLAGER_HIT Sound"},{"code":"VILLAGER_IDLE","value":"","title":"VILLAGER_IDLE Sound","description":"VILLAGER_IDLE Sound"},{"code":"VILLAGER_NO","value":"","title":"VILLAGER_NO Sound","description":"VILLAGER_NO Sound"},{"code":"VILLAGER_YES","value":"","title":"VILLAGER_YES Sound","description":"VILLAGER_YES Sound"}],"properties":[]},"io.wolfscript.Tone":{"namespace":"io.wolfscript","title":"A note class to store a specific note.","description":"A note class to store a specific note. /\npublic class Note {\n\n    /** An enum holding tones.","name":"Tone","qualifiedname":"io.wolfscript.Tone","type":"enum","scope":"public","constructors":[],"fields":[{"title":"The number of tones including sharped tones.","description":"The number of tones including sharped tones.","doc":{},"name":"TONES","scope":"public","type":"byte","describe":"static final"}],"methods":[{"title":"The number of tones including sharped tones.","description":"The number of tones including sharped tones. /\n        public static final byte TONES_COUNT = 12;\n\n        private Tone(int id, boolean sharpable) {\n            this.id = (byte) (id % TONES_COUNT);\n            this.sharpable = sharpable;\n        }\n\n        /** Returns the not sharped id of this tone.","doc":{"return":["the not sharped id of this tone.","the id of this tone.","if this tone could be sharped. /\n        public boolean isSharpable() {\n            return sharpable;\n        }\n\n        /** Returns if this tone id is the sharped id of the tone.","if the tone id is the sharped id of the tone.","the tone to id."],"deprecated":["Magic value /\n        @Deprecated\n        public byte getId() {\n            return getId(false);\n        }\n\n        /** Returns the id of this tone. These method allows to return the sharped id of the tone. If the tone couldn't be sharped it always return the not sharped id of this tone.","Magic value /\n        @Deprecated\n        public byte getId(boolean sharped) {\n            byte id = (byte) (sharped && sharpable ? this.id + 1 : this.id);\n\n            return (byte) (id % TONES_COUNT);\n        }\n\n        /** Returns if this tone could be sharped.","Magic value /\n        @Deprecated\n        public boolean isSharped(byte id) {\n            if (id == getId(false)) {\n                return false;\n            } else if (id == getId(true)) {\n                return true;\n            } else {\n                // The id isn't matching to the tone!\n                throw new IllegalArgumentException(\"The id isn't matching to the tone.\");\n            }\n        }\n\n        /** Returns the tone to id. Also returning the semitones.","Magic value"],"throws":["IllegalArgumentException if neither the tone nor the semitone have the id."]},"scope":"public","describe":"static","return":"io.wolfscript.Tone","name":"getById","deprecated":true,"args":[{"name":"id","type":"byte","description":"the id of the tone."}]}],"imports":["java.util.Map","org.apache.commons.lang.Validate","com.google.common.collect.Maps"],"enum":[{"code":"0x1","value":"","title":"0x1 Tone","description":"0x1 Tone"},{"code":"0x3","value":"","title":"0x3 Tone","description":"0x3 Tone"},{"code":"0x5","value":"","title":"0x5 Tone","description":"0x5 Tone"},{"code":"0x6","value":"","title":"0x6 Tone","description":"0x6 Tone"},{"code":"0x8","value":"","title":"0x8 Tone","description":"0x8 Tone"},{"code":"0xA","value":"","title":"0xA Tone","description":"0xA Tone"},{"code":"0xB","value":"","title":"0xB Tone","description":"0xB Tone"}],"properties":[]},"io.wolfscript.TravelAgent":{"namespace":"io.wolfscript","title":"The Travel Agent handles the creation and the research of Nether and End","description":"The Travel Agent handles the creation and the research of Nether and End portals when Entities try to use one. <p> It is used in {@link io.wolfscript.event.entity.EntityPortalEvent} and in {@link io.wolfscript.event.player.PlayerPortalEvent} to help developers reproduce and/or modify Vanilla behaviour.","name":"TravelAgent","qualifiedname":"io.wolfscript.TravelAgent","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Set the Block radius to search in for available portals.","description":"Set the Block radius to search in for available portals.","doc":{"return":["this travel agent /\n    public TravelAgent setSearchRadius(int radius);\n\n    /** Gets the search radius value for finding an available portal.","the currently set search radius /\n    public int getSearchRadius();\n\n    /** Sets the maximum radius from the given location to create a portal.","this travel agent /\n    public TravelAgent setCreationRadius(int radius);\n\n    /** Gets the maximum radius from the given location to create a portal.","the currently set creation radius /\n    public int getCreationRadius();\n\n    /** Returns whether the TravelAgent will attempt to create a destination portal or not.","whether the TravelAgent should create a destination portal or not /\n    public boolean getCanCreatePortal();\n\n    /** Sets whether the TravelAgent should attempt to create a destination portal or not.","the location of a portal which has been found or returns the location passed to the method if unsuccessful","the location of the nearest portal to the location /\n    public Location findPortal(Location location);\n\n    /** Attempt to create a portal near the given location. <p> In the case of a Nether portal teleportation, this will attempt to create a Nether portal. <p> In the case of an Ender portal teleportation, this will (re-)create the obsidian platform and clean blocks above it.","true if a portal was successfully created"],"see":["#createPortal(Location) /\n    public Location findOrCreate(Location location);\n\n    /** Attempt to find a portal near the given location."]},"scope":"public","return":"boolean","name":"createPortal","args":[{"name":"location","type":"Location","description":"the location where the search for a portal should begin"}]}],"imports":[],"properties":[]},"io.wolfscript.TreeSpecies":{"namespace":"io.wolfscript","title":"Represents the different species of trees regardless of size.","description":"Represents the different species of trees regardless of size.","name":"TreeSpecies","qualifiedname":"io.wolfscript.TreeSpecies","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Represents the common tree species.","description":"Represents the common tree species. /\n    GENERIC(0x0),\n    /** Represents the darker barked/leaved tree species. /\n    REDWOOD(0x1),\n    /** Represents birches. /\n    BIRCH(0x2),\n    /** Represents jungle trees. /\n    JUNGLE(0x3),\n    /** Represents acacia trees. /\n    ACACIA(0x4),\n    /** Represents dark oak trees. /\n    DARK_OAK(0x5),\n    ;\n\n    private final byte data;\n    private final static Map<Byte, TreeSpecies> BY_DATA = Maps.newHashMap();\n\n    private TreeSpecies(final int data) {\n        this.data = (byte) data;\n    }\n\n    /** Gets the associated data value representing this species","doc":{"return":["A byte containing the data value of this tree species","The {@link io.wolfscript.TreeSpecies} representing the given value, or null if it doesn't exist"],"deprecated":["Magic value /\n    @Deprecated\n    public byte getData() {\n        return data;\n    }\n\n    /** Gets the TreeSpecies with the given data value","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.TreeSpecies","name":"getByData","deprecated":true,"args":[{"name":"byte","type":"final","description":"byte argument"}]}],"imports":["java.util.Map","com.google.common.collect.Maps"],"enum":[{"code":"DARK_OAK","value":"0x5","title":"Represents the common tree species.","description":"Represents the common tree species. /\n    GENERIC(0x0),\n    /** Represents the darker barked/leaved tree species. /\n    REDWOOD(0x1),\n    /** Represents birches. /\n    BIRCH(0x2),\n    /** Represents jungle trees. /\n    JUNGLE(0x3),\n    /** Represents acacia trees. /\n    ACACIA(0x4),\n    /** Represents dark oak trees.","doc":{}}],"properties":[]},"io.wolfscript.TreeType":{"namespace":"io.wolfscript","title":"Tree and organic structure types.","description":"Tree and organic structure types.","name":"TreeType","qualifiedname":"io.wolfscript.TreeType","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"BIRCH","value":"","title":"Regular tree, no branches","description":"Regular tree, no branches /\n    TREE,\n    /** Regular tree, extra tall with branches /\n    BIG_TREE,\n    /** Redwood tree, shaped like a pine tree /\n    REDWOOD,\n    /** Tall redwood tree with just a few leaves at the top /\n    TALL_REDWOOD,\n    /** Birch tree","doc":{}},{"code":"tree","value":"","title":"tree TreeType","description":"tree TreeType","doc":{}}],"properties":[]},"io.wolfscript.Type":{"namespace":"io.wolfscript","title":"Represents a countable statistic, which is tracked by the server.","description":"Represents a countable statistic, which is tracked by the server. /\npublic enum Statistic {\n    DAMAGE_DEALT,\n    DAMAGE_TAKEN,\n    DEATHS,\n    MOB_KILLS,\n    PLAYER_KILLS,\n    FISH_CAUGHT,\n    ANIMALS_BRED,\n    TREASURE_FISHED,\n    JUNK_FISHED,\n    LEAVE_GAME,\n    JUMP,\n    DROP,\n    PLAY_ONE_TICK,\n    WALK_ONE_CM,\n    SWIM_ONE_CM,\n    FALL_ONE_CM,\n    CLIMB_ONE_CM,\n    FLY_ONE_CM,\n    DIVE_ONE_CM,\n    MINECART_ONE_CM,\n    BOAT_ONE_CM,\n    PIG_ONE_CM,\n    HORSE_ONE_CM,\n    SPRINT_ONE_CM,\n    CROUCH_ONE_CM,\n    MINE_BLOCK(Type.BLOCK),\n    USE_ITEM(Type.ITEM),\n    BREAK_ITEM(Type.ITEM),\n    CRAFT_ITEM(Type.ITEM),\n    KILL_ENTITY(Type.ENTITY),\n    ENTITY_KILLED_BY(Type.ENTITY),\n    TIME_SINCE_DEATH,\n    TALKED_TO_VILLAGER,\n    TRADED_WITH_VILLAGER,\n    CAKE_SLICES_EATEN,\n    CAULDRON_FILLED,\n    CAULDRON_USED,\n    ARMOR_CLEANED,\n    BANNER_CLEANED,\n    BREWINGSTAND_INTERACTION,\n    BEACON_INTERACTION,\n    DROPPER_INSPECTED,\n    HOPPER_INSPECTED,\n    DISPENSER_INSPECTED,\n    NOTEBLOCK_PLAYED,\n    NOTEBLOCK_TUNED,\n    FLOWER_POTTED,\n    TRAPPED_CHEST_TRIGGERED,\n    ENDERCHEST_OPENED,\n    ITEM_ENCHANTED,\n    RECORD_PLAYED,\n    FURNACE_INTERACTION,\n    CRAFTING_TABLE_INTERACTION,\n    CHEST_OPENED;\n\n    private final Type type;\n\n    private Statistic() {\n        this(Type.UNTYPED);\n    }\n\n    private Statistic(Type type) {\n        this.type = type;\n    }\n\n    /** Gets the type of this statistic.","doc":{"return":["the type of this statistic /\n    public Type getType() {\n        return type;\n    }\n\n    /** Checks if this is a substatistic. <p> A substatistic exists en masse for each block, item, or entitytype, depending on {@link #getType()}. <p> This is a redundant method and equivalent to checking <code>getType() != Type.UNTYPED</code>","true if this is a substatistic /\n    public boolean isSubstatistic() {\n        return type != Type.UNTYPED;\n    }\n\n    /** Checks if this is a substatistic dealing with blocks. <p> This is a redundant method and equivalent to checking <code>getType() == Type.BLOCK</code>","true if this deals with blocks /\n    public boolean isBlock() {\n        return type == Type.BLOCK;\n    }\n\n    /** The type of statistic."]},"name":"Type","qualifiedname":"io.wolfscript.Type","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"ENTITY","value":"","title":"Statistics of this type do not require a qualifier.","description":"Statistics of this type do not require a qualifier. /\n        UNTYPED,\n\n        /** Statistics of this type require an Item Material qualifier. /\n        ITEM,\n\n        /** Statistics of this type require a Block Material qualifier. /\n        BLOCK,\n\n        /** Statistics of this type require an EntityType qualifier.","doc":{}}],"properties":[]},"io.wolfscript.UnsafeValues":{"namespace":"io.wolfscript","title":"This interface provides value conversions that may be specific to a","description":"This interface provides value conversions that may be specific to a runtime, or have arbitrary meaning (read: magic values). <p> Their existence and behavior is not guaranteed across future versions. They may be poorly named, throw exceptions, have misleading parameters, or any other bad programming practice. <p> This interface is unsupported and only for internal use.","doc":{"deprecated":["Unsupported {@literal &} internal use only"]},"name":"UnsafeValues","qualifiedname":"io.wolfscript.UnsafeValues","deprecated":true,"type":"interface","scope":"public","constructors":[],"methods":[],"imports":["java.util.List","io.wolfscript.inventory.ItemStack"],"properties":[]},"io.wolfscript.WarningState":{"namespace":"io.wolfscript","title":"This designates the warning state for a specific item.","description":"This designates the warning state for a specific item. <p> When the server settings dictate 'default' warnings, warnings are printed if the {@link #value()} is true. /\n@Target({ElementType.CONSTRUCTOR, ElementType.METHOD, ElementType.TYPE})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface Warning {\n\n    /** This represents the states that server verbose for warnings may be.","name":"WarningState","qualifiedname":"io.wolfscript.WarningState","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Indicates all warnings should be printed for deprecated items.","description":"Indicates all warnings should be printed for deprecated items. /\n        ON,\n        /** Indicates no warnings should be printed for deprecated items. /\n        OFF,\n        /** Indicates each warning would default to the configured {@link Warning} annotation, or always if annotation not found. /\n        DEFAULT;\n\n        private static final Map<String, WarningState> values = ImmutableMap.<String,WarningState>builder()\n                .put(\"off\", OFF)\n                .put(\"false\", OFF)\n                .put(\"f\", OFF)\n                .put(\"no\", OFF)\n                .put(\"n\", OFF)\n                .put(\"on\", ON)\n                .put(\"true\", ON)\n                .put(\"t\", ON)\n                .put(\"yes\", ON)\n                .put(\"y\", ON)\n                .put(\"\", DEFAULT)\n                .put(\"d\", DEFAULT)\n                .put(\"default\", DEFAULT)\n                .build();\n\n        /** This method checks the provided warning should be printed for this state","doc":{"return":["<ul> <li>ON is always True <li>OFF is always false <li>DEFAULT is false if and only if annotation is not null and specifies false for {@link Warning#value()}, true otherwise. </ul> /\n        public boolean printFor(Warning warning) {\n            if (this == DEFAULT) {\n                return warning == null || warning.value();\n            }\n            return this == ON;\n        }\n\n        /** This method returns the corresponding warning state for the given string value.","{@link #DEFAULT} if not found, or the respective WarningState"]},"scope":"public","describe":"static","return":"io.wolfscript.WarningState","name":"value","args":[{"name":"String","type":"final","description":"String argument"}]}],"imports":["java.lang.annotation.ElementType","java.lang.annotation.Retention","java.lang.annotation.RetentionPolicy","java.lang.annotation.Target","java.util.Map","com.google.common.collect.ImmutableMap"],"enum":[{"code":"DEFAULT","value":"","title":"Indicates all warnings should be printed for deprecated items.","description":"Indicates all warnings should be printed for deprecated items. /\n        ON,\n        /** Indicates no warnings should be printed for deprecated items. /\n        OFF,\n        /** Indicates each warning would default to the configured {@link Warning} annotation, or always if annotation not found.","doc":{}}],"properties":[]},"io.wolfscript.WeatherType":{"namespace":"io.wolfscript","title":"An enum of all current weather types","description":"An enum of all current weather types","name":"WeatherType","qualifiedname":"io.wolfscript.WeatherType","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"CLEAR","value":"","title":"Raining or snowing depending on biome.","description":"Raining or snowing depending on biome. /\n    DOWNFALL,\n    /** Clear weather, clouds but no rain.","doc":{}}],"properties":[]},"io.wolfscript.WolfScript":{"namespace":"io.wolfscript","title":"Represents the WolfScript core, for version and Server singleton handling","description":"Represents the WolfScript core, for version and Server singleton handling","name":"WolfScript","qualifiedname":"io.wolfscript.WolfScript","type":"class","scope":"public","describe":"final","constructors":[],"methods":[],"imports":["java.awt.image.BufferedImage","java.io.File","java.io.Serializable","java.util.Collection","java.util.Collections","java.util.Iterator","java.util.List","java.util.Map","java.util.Set","java.util.UUID","java.util.logging.Logger","io.wolfscript.Warning.WarningState","io.wolfscript.command.CommandException","io.wolfscript.command.CommandSender","io.wolfscript.command.ConsoleCommandSender","io.wolfscript.command.PluginCommand","io.wolfscript.entity.Entity","io.wolfscript.entity.Player","io.wolfscript.event.inventory.InventoryType","io.wolfscript.event.server.ServerListPingEvent","io.wolfscript.help.HelpMap","io.wolfscript.inventory.Inventory","io.wolfscript.inventory.InventoryHolder","io.wolfscript.inventory.ItemStack","io.wolfscript.inventory.Recipe","io.wolfscript.map.MapView","io.wolfscript.permissions.Permissible","io.wolfscript.plugin.PluginManager","io.wolfscript.plugin.ServicesManager","io.wolfscript.plugin.messaging.Messenger","io.wolfscript.scheduler.WolfScriptScheduler","io.wolfscript.scoreboard.ScoreboardManager","io.wolfscript.util.CachedServerIcon","com.avaje.ebean.config.ServerConfig","com.google.common.collect.ImmutableList","io.wolfscript.inventory.ItemFactory","io.wolfscript.inventory.meta.ItemMeta"],"properties":[{"name":"Unsafe","modifier":"readonly","args":[],"deprecated":true,"describe":"static","description":"Get: Static class cannot be initialized. /\n    private WolfScript() {}\n\n    /** Gets the current {@link io.wolfscript.Server} singleton","doc":{"return":["Server instance being ran /\n    public static Server getServer() {\n        return server;\n    }\n\n    /** Attempts to set the {@link io.wolfscript.Server} singleton. <p> This cannot be done if the Server is already set.","name of this server implementation /\n    public static String getName() {\n        return server.getName();\n    }\n\n    /** Gets the version string of this server implementation.","version of this server implementation /\n    public static String getVersion() {\n        return server.getVersion();\n    }\n\n    /** Gets the WolfScript version that this server is running.","version of WolfScript /\n    public static String getWolfScriptVersion() {\n        return server.getWolfScriptVersion();\n    }\n\n    /** Gets an array copy of all currently logged in players. <p> This method exists for legacy reasons to provide backwards compatibility. It will not exist at runtime and should not be used under any circumstances.","an array of Players that are currently online /\n    @Deprecated\n    public static Player[] _INVALID_getOnlinePlayers() {\n        return server._INVALID_getOnlinePlayers();\n    }\n\n    /** Gets a view of all currently logged in players. This {@linkplain Collections#unmodifiableCollection(Collection) view} is a reused object, making some operations like {@link Collection#size()} zero-allocation. <p> The collection is a view backed by the internal representation, such that, changes to the internal state of the server will be reflected immediately. However, the reuse of the returned collection (identity) is not strictly guaranteed for future or all implementations. Casting the collection, or relying on interface implementations (like {@link java.io.Serializable} or {@link java.util.List}), is deprecated. <p> Iteration behavior is undefined outside of self-contained main-thread uses. Normal and immediate iterator use without consequences that affect the collection are fully supported. The effects following (non-exhaustive) {@link Entity#teleport(Location) teleportation}, {@link Player#setHealth(double) death}, and {@link Player#kickPlayer( String) kicking} are undefined. Any use of this collection from asynchronous threads is unsafe. <p> For safe consequential iteration or mimicking the old array behavior, using {@link Collection#toArray(Object[])} is recommended. For making snapshots, {@link ImmutableList#copyOf(Collection)} is recommended.","a view of currently online players. /\n    public static Collection<? extends Player> getOnlinePlayers() {\n        return server.getOnlinePlayers();\n    }\n\n    /** Get the maximum amount of players which can login to this server.","the amount of players this server allows /\n    public static int getMaxPlayers() {\n        return server.getMaxPlayers();\n    }\n\n    /** Get the game port that the server runs on.","the port number of this server /\n    public static int getPort() {\n        return server.getPort();\n    }\n\n    /** Get the view distance from this server.","the view distance from this server. /\n    public static int getViewDistance() {\n        return server.getViewDistance();\n    }\n\n    /** Get the IP that this server is bound to, or empty string if not specified.","the IP string that this server is bound to, otherwise empty string /\n    public static String getIp() {\n        return server.getIp();\n    }\n\n    /** Get the name of this server.","the name of this server /\n    public static String getServerName() {\n        return server.getServerName();\n    }\n\n    /** Get an ID of this server. The ID is a simple generally alphanumeric ID that can be used for uniquely identifying this server.","the ID of this server /\n    public static String getServerId() {\n        return server.getServerId();\n    }\n    \n    /** Get world type (level-type setting) for default world.","the value of level-type (e.g. DEFAULT, FLAT, DEFAULT_1_1) /\n    public static String getWorldType() {\n        return server.getWorldType();\n    }\n\n    /** Get generate-structures setting.","true if structure generation is enabled, false otherwise /\n    public static boolean getGenerateStructures() {\n        return server.getGenerateStructures();\n    }\n\n    /** Gets whether this server allows the End or not.","whether this server allows the End or not /\n    public static boolean getAllowEnd() {\n        return server.getAllowEnd();\n    }\n\n    /** Gets whether this server allows the Nether or not.","whether this server allows the Nether or not /\n    public static boolean getAllowNether() {\n        return server.getAllowNether();\n    }\n\n    /** Gets whether this server has a whitelist or not.","whether this server has a whitelist or not /\n    public static boolean hasWhitelist() {\n        return server.hasWhitelist();\n    }\n\n    /** Sets if the server is whitelisted.","a set containing all whitelisted players /\n    public static Set<OfflinePlayer> getWhitelistedPlayers() {\n        return server.getWhitelistedPlayers();\n    }\n\n    /** Reloads the whitelist from disk. /\n    public static void reloadWhitelist() {\n        server.reloadWhitelist();\n    }\n\n    /** Broadcast a message to all players. <p> This is the same as calling {@link #broadcast(java.lang.String, java.lang.String)} to {@link Server#BROADCAST_CHANNEL_USERS}","the number of players /\n    public static int broadcastMessage(String message) {\n        return server.broadcastMessage(message);\n    }\n\n    /** Gets the name of the update folder. The update folder is used to safely update plugins at the right moment on a plugin load. <p> The update folder name is relative to the plugins folder.","the name of the update folder /\n    public static String getUpdateFolder() {\n        return server.getUpdateFolder();\n    }\n\n    /** Gets the update folder. The update folder is used to safely update plugins at the right moment on a plugin load.","the update folder /\n    public static File getUpdateFolderFile() {\n        return server.getUpdateFolderFile();\n    }\n\n    /** Gets the value of the connection throttle setting.","the value of the connection throttle setting /\n    public static long getConnectionThrottle() {\n        return server.getConnectionThrottle();\n    }\n\n    /** Gets default ticks per animal spawns value. <p> <b>Example Usage:</b> <ul> <li>A value of 1 will mean the server will attempt to spawn monsters every tick. <li>A value of 400 will mean the server will attempt to spawn monsters every 400th tick. <li>A value below 0 will be reset back to Minecraft's default. </ul> <p> <b>Note:</b> If set to 0, animal spawning will be disabled. We recommend using spawn-animals to control this instead. <p> Minecraft default: 400.","the default ticks per animal spawns value /\n    public static int getTicksPerAnimalSpawns() {\n        return server.getTicksPerAnimalSpawns();\n    }\n\n    /** Gets the default ticks per monster spawns value. <p> <b>Example Usage:</b> <ul> <li>A value of 1 will mean the server will attempt to spawn monsters every tick. <li>A value of 400 will mean the server will attempt to spawn monsters every 400th tick. <li>A value below 0 will be reset back to Minecraft's default. </ul> <p> <b>Note:</b> If set to 0, monsters spawning will be disabled. We recommend using spawn-monsters to control this instead. <p> Minecraft default: 1.","the default ticks per monsters spawn value /\n    public static int getTicksPerMonsterSpawns() {\n        return server.getTicksPerMonsterSpawns();\n    }\n\n    /** Gets a player object by the given username. <p> This method may not return objects for offline players.","a player if one was found, null otherwise /\n    @Deprecated\n    public static Player getPlayer(String name) {\n        return server.getPlayer(name);\n    }\n\n    /** Gets the player with the exact given name, case insensitive.","a player object if one was found, null otherwise /\n    @Deprecated\n    public static Player getPlayerExact(String name) {\n        return server.getPlayerExact(name);\n    }\n\n    /** Attempts to match any players with the given name, and returns a list of all possibly matches. <p> This list is not sorted in any particular order. If an exact match is found, the returned list will only contain a single result.","list of all possible players /\n    @Deprecated\n    public static List<Player> matchPlayer(String name) {\n        return server.matchPlayer(name);\n    }\n\n    /** Gets the player with the given UUID.","a player object if one was found, null otherwise /\n    public static Player getPlayer(UUID id) {\n        return server.getPlayer(id);\n    }\n\n    /** Gets the plugin manager for interfacing with plugins.","a plugin manager for this Server instance /\n    public static PluginManager getPluginManager() {\n        return server.getPluginManager();\n    }\n\n    /** Gets the scheduler for managing scheduled events.","a scheduling service for this server /\n    public static WolfScriptScheduler getScheduler() {\n        return server.getScheduler();\n    }\n\n    /** Gets a services manager.","s services manager /\n    public static ServicesManager getServicesManager() {\n        return server.getServicesManager();\n    }\n\n    /** Gets a list of all worlds on this server.","a list of worlds /\n    public static List<World> getWorlds() {\n        return server.getWorlds();\n    }\n\n    /** Creates or loads a world with the given name using the specified options. <p> If the world is already loaded, it will just return the equivalent of getWorld(creator.name()).","newly created or loaded world /\n    public static World createWorld(WorldCreator creator) {\n        return server.createWorld(creator);\n    }\n\n    /** Unloads a world with the given name.","true if successful, false otherwise /\n    public static boolean unloadWorld(String name, boolean save) {\n        return server.unloadWorld(name, save);\n    }\n\n    /** Unloads the given world.","true if successful, false otherwise /\n    public static boolean unloadWorld(World world, boolean save) {\n        return server.unloadWorld(world, save);\n    }\n\n    /** Gets the world with the given name.","a world with the given name, or null if none exists /\n    public static World getWorld(String name) {\n        return server.getWorld(name);\n    }\n\n    /** Gets the world from the given Unique ID.","a world with the given Unique ID, or null if none exists /\n    public static World getWorld(UUID uid) {\n        return server.getWorld(uid);\n    }\n\n    /** Gets the map from the given item ID.","a map view if it exists, or null otherwise","a newly created map view /\n    public static MapView createMap(World world) {\n        return server.createMap(world);\n    }\n\n    /** Reloads the server, refreshing settings and plugin information. /\n    public static void reload() {\n        server.reload();\n    }\n\n    /** Returns the primary logger associated with this server instance.","Logger associated with this server /\n    public static Logger getLogger() {\n        return server.getLogger();\n    }\n\n    /** Gets a {@link io.wolfscript.command.PluginCommand} with the given name or alias.","a plugin command if found, null otherwise /\n    public static PluginCommand getPluginCommand(String name) {\n        return server.getPluginCommand(name);\n    }\n\n    /** Writes loaded players to disk. /\n    public static void savePlayers() {\n        server.savePlayers();\n    }\n    \n    /** Dispatches a command on this server, and executes it if found.","returns false if no target is found","true if the recipe was added, false if it wasn't for some reason /\n    public static boolean addRecipe(Recipe recipe) {\n        return server.addRecipe(recipe);\n    }\n\n    /** Get a list of all recipes for a given item. The stack size is ignored in comparisons. If the durability is -1, it will match any data value.","a list of recipes with the given result /\n    public static List<Recipe> getRecipesFor(ItemStack result) {\n        return server.getRecipesFor(result);\n    }\n\n    /** Get an iterator through the list of crafting recipes.","an iterator /\n    public static Iterator<Recipe> recipeIterator() {\n        return server.recipeIterator();\n    }\n\n    /** Clears the list of crafting recipes. /\n    public static void clearRecipes() {\n        server.clearRecipes();\n    }\n\n    /** Resets the list of crafting recipes to the default. /\n    public static void resetRecipes() {\n        server.resetRecipes();\n    }\n    \n    /** Gets a list of command aliases defined in the server properties.","a map of aliases to command names /\n    public static Map<String, String[]> getCommandAliases() {\n        return server.getCommandAliases();\n    }\n\n    /** Gets the radius, in blocks, around each worlds spawn point to protect.","spawn radius, or 0 if none /\n    public static int getSpawnRadius() {\n        return server.getSpawnRadius();\n    }\n\n    /** Sets the radius, in blocks, around each worlds spawn point to protect.","true if the server authenticates clients, false otherwise /\n    public static boolean getOnlineMode() {\n        return server.getOnlineMode();\n    }\n\n    /** Gets whether this server allows flying or not.","true if the server allows flight, false otherwise /\n    public static boolean getAllowFlight() {\n        return server.getAllowFlight();\n    }\n\n    /** Gets whether the server is in hardcore mode or not.","true if the server mode is hardcore, false otherwise /\n    public static boolean isHardcore() {\n        return server.isHardcore();\n    }\n\n    /** Gets whether to use vanilla (false) or exact behaviour (true). <ul> <li>Vanilla behaviour: check for collisions and move the player if needed. <li>Exact behaviour: spawn players exactly where they should be. </ul>","true if exact location locations are used for spawning, false for vanilla collision detection or otherwise /\n    public static boolean useExactLoginLocation() {\n        return server.useExactLoginLocation();\n    }\n \n    /** Shutdowns the server, stopping everything. /\n    public static void shutdown() {\n        server.shutdown();\n    }\n\n    /** Broadcasts the specified message to every user with the given permission name.","number of message recipients /\n    public static int broadcast(String message, String permission) {\n        return server.broadcast(message, permission);\n    }\n\n    /** Gets the player by the given name, regardless if they are offline or online. <p> This method may involve a blocking web request to get the UUID for the given name. <p> This will return an object even if the player does not exist. To this method, all players will exist.","an offline player","an offline player /\n    public static OfflinePlayer getOfflinePlayer(UUID id) {\n        return server.getOfflinePlayer(id);\n    }\n\n    /** Gets a set containing all current IPs that are banned.","a set containing banned IP addresses /\n    public static Set<String> getIPBans() {\n        return server.getIPBans();\n    }\n\n    /** Bans the specified address from the server.","a set containing banned players /\n    public static Set<OfflinePlayer> getBannedPlayers() {\n        return server.getBannedPlayers();\n    }\n\n    /** Gets a ban list for the supplied type. <p> Bans by name are no longer supported and this method will return null when trying to request them. The replacement is bans by UUID.","a ban list of the specified type /\n    public static BanList getBanList(BanList.Type type){\n        return server.getBanList(type);\n    }\n\n    /** Gets a set containing all player operators.","a set containing player operators /\n    public static Set<OfflinePlayer> getOperators() {\n        return server.getOperators();\n    }\n\n    /** Gets the default {@link io.wolfscript.GameMode} for new players.","the default game mode /\n    public static GameMode getDefaultGameMode() {\n        return server.getDefaultGameMode();\n    }\n\n    /** Sets the default {@link io.wolfscript.GameMode} for new players.","a console command sender /\n    public static ConsoleCommandSender getConsoleSender() {\n        return server.getConsoleSender();\n    }\n\n    /** Gets the folder that contains all of the various {@link World}s.","folder that contains all worlds /\n    public static File getWorldContainer() {\n        return server.getWorldContainer();\n    }\n\n    /** Gets every player that has ever played on this server.","an array containing all previous players /\n    public static OfflinePlayer[] getOfflinePlayers() {\n        return server.getOfflinePlayers();\n    }\n\n    /** Gets the {@link io.wolfscript.plugin.messaging.Messenger} responsible for this server.","messenger responsible for this server /\n    public static Messenger getMessenger() {\n        return server.getMessenger();\n    }\n\n    /** Gets the {@link io.wolfscript.help.HelpMap} providing help topics for this server.","a help map for this server /\n    public static HelpMap getHelpMap() {\n        return server.getHelpMap();\n    }\n\n    /** Creates an empty inventory of the specified type. If the type is {@link InventoryType#CHEST}, the new inventory has a size of 27; otherwise the new inventory has the normal size for its type.","a new inventory /\n    public static Inventory createInventory(InventoryHolder owner, InventoryType type) {\n        return server.createInventory(owner, type);\n    }\n\n    /** Creates an empty inventory with the specified type and title. If the type is {@link InventoryType#CHEST}, the new inventory has a size of 27; otherwise the new inventory has the normal size for its type.<br> It should be noted that some inventory types do not support titles and may not render with said titles on the Minecraft client.","The new inventory. /\n    public static Inventory createInventory(InventoryHolder owner, InventoryType type, String title) {\n        return server.createInventory(owner, type, title);\n    }\n\n    /** Creates an empty inventory of type {@link InventoryType#CHEST} with the specified size.","a new inventory","a new inventory","the monster spawn limit /\n    public static int getMonsterSpawnLimit() {\n        return server.getMonsterSpawnLimit();\n    }\n\n    /** Gets user-specified limit for number of animals that can spawn in a chunk.","the animal spawn limit /\n    public static int getAnimalSpawnLimit() {\n        return server.getAnimalSpawnLimit();\n    }\n\n    /** Gets user-specified limit for number of water animals that can spawn in a chunk.","the water animal spawn limit /\n    public static int getWaterAnimalSpawnLimit() {\n        return server.getWaterAnimalSpawnLimit();\n    }\n    \n    /** Gets user-specified limit for number of ambient mobs that can spawn in a chunk.","the ambient spawn limit /\n    public static int getAmbientSpawnLimit() {\n        return server.getAmbientSpawnLimit();\n    }\n\n    /** Checks the current thread against the expected primary thread for the server. <p> <b>Note:</b> this method should not be used to indicate the current synchronized state of the runtime. A current thread matching the main thread indicates that it is synchronized, but a mismatch <b>does not preclude</b> the same assumption.","true if the current thread matches the expected primary thread, false otherwise /\n    public static boolean isPrimaryThread() {\n        return server.isPrimaryThread();\n    }\n\n    /** Gets the message that is displayed on the server list.","the servers MOTD /\n    public static String getMotd() {\n        return server.getMotd();\n    }\n\n    /** Gets the default message that is displayed when the server is stopped.","the shutdown message /\n    public static String getShutdownMessage() {\n        return server.getShutdownMessage();\n    }\n\n    /** Gets the current warning state for the server.","the configured warning state /\n    public static WarningState getWarningState() {\n        return server.getWarningState();\n    }\n\n    /** Gets the instance of the item factory (for {@link io.wolfscript.inventory.meta.ItemMeta}).","the item factory","the scoreboard manager or null if no worlds are loaded. /\n    public static ScoreboardManager getScoreboardManager() {\n        return server.getScoreboardManager();\n    }\n\n    /** Gets an instance of the server's default server-icon.","the default server-icon; null values may be used by the implementation to indicate no defined icon, but this behavior is not guaranteed /\n    public static CachedServerIcon getServerIcon() {\n        return server.getServerIcon();\n    }\n\n    /** Loads an image from a file, and returns a cached image for the specific server-icon. <p> Size and type are implementation defined. An incompatible file is guaranteed to throw an implementation-defined {@link Exception}.","a cached server-icon that can be used for a {@link ServerListPingEvent#setServerIcon(CachedServerIcon)} /\n    public static CachedServerIcon loadServerIcon(File file) throws IllegalArgumentException, Exception {\n        return server.loadServerIcon(file);\n    }\n\n    /** Creates a cached server-icon for the specific image. <p> Size and type are implementation defined. An incompatible file is guaranteed to throw an implementation-defined {@link Exception}.","a cached server-icon that can be used for a {@link ServerListPingEvent#setServerIcon(CachedServerIcon)} /\n    public static CachedServerIcon loadServerIcon(BufferedImage image) throws IllegalArgumentException, Exception {\n        return server.loadServerIcon(image);\n    }\n\n    /** Set the idle kick timeout. Any players idle for the specified amount of time will be automatically kicked. <p> A value of 0 will disable the idle kick timeout.","the idle timeout in minutes /\n    public static int getIdleTimeout() {\n        return server.getIdleTimeout();\n    }\n\n    /**","the unsafe values instance"],"param":["server Server instance /\n    public static void setServer(Server server) {\n        if (WolfScript.server != null) {\n            throw new UnsupportedOperationException(\"Cannot redefine singleton Server\");\n        }\n\n        WolfScript.server = server;\n        server.getLogger().info(\"This server is running \" + getName() + \" version \" + getVersion() + \" (Implementing API version \" + getWolfScriptVersion() + \")\");\n    }\n\n    /** Gets the name of this server implementation.","value true for whitelist on, false for off /\n    public static void setWhitelist(boolean value) {\n        server.setWhitelist(value);\n    }\n\n    /** Gets a list of whitelisted players.","message the message","name the name to look up","name Exact name of the player to retrieve","name the (partial) name to match","id UUID of the player to retrieve","creator the options to use when creating the world","name Name of the world to unload","save whether to save the chunks before unloading","world the world to unload","save whether to save the chunks before unloading","name the name of the world to retrieve","uid a unique-id of the world to retrieve","id the id of the map to get","world the world the map will belong to","name the name of the command to retrieve","sender the apparent sender of the command","commandLine the command + arguments. Example: <code>test abc 123</code>","config the server config to populate /\n    public static void configureDbConfig(ServerConfig config) {\n        server.configureDbConfig(config);\n    }\n\n    /** Adds a recipe to the crafting manager.","recipe the recipe to add","result the item to match against recipe results","value new spawn radius, or 0 if none /\n    public static void setSpawnRadius(int value) {\n        server.setSpawnRadius(value);\n    }\n\n    /** Gets whether the Server is in online mode or not.","message message to broadcast","permission the required permission {@link Permissible permissibles} must have to receive the broadcast","name the name the player to retrieve","id the UUID of the player to retrieve","address the IP address to ban /\n    public static void banIP(String address) {\n        server.banIP(address);\n    }\n\n    /** Unbans the specified address from the server.","address the IP address to unban /\n    public static void unbanIP(String address) {\n        server.unbanIP(address);\n    }\n\n    /** Gets a set containing all banned players.","type the type of list to fetch, cannot be null","mode the new game mode /\n    public static void setDefaultGameMode(GameMode mode) {\n        server.setDefaultGameMode(mode);\n    }\n\n    /** Gets a {@link ConsoleCommandSender} that may be used as an input source for this server.","owner the holder of the inventory, or null to indicate no holder","type the type of inventory to create","owner The holder of the inventory; can be null if there's no holder.","type The type of inventory to create.","title The title of the inventory, to be displayed when it is viewed.","owner the holder of the inventory, or null to indicate no holder","size a multiple of 9 as the size of inventory to create","owner the holder of the inventory, or null to indicate no holder","size a multiple of 9 as the size of inventory to create","title the title of the inventory, displayed when inventory is viewed","file the file to load the from","image the image to use","threshold the idle timeout in minutes /\n    public static void setIdleTimeout(int threshold) {\n        server.setIdleTimeout(threshold);\n    }\n\n    /** Gets the idle kick timeout."],"deprecated":["superseded by {@link #getOnlinePlayers()}","Use {@link #getPlayer(UUID)} as player names are no longer guaranteed to be unique","Use {@link #getPlayer(UUID)} as player names are no longer guaranteed to be unique","Use {@link #getPlayer(UUID)} as player names are no longer guaranteed to be unique","Magic value /\n    @Deprecated\n    public static MapView getMap(short id) {\n        return server.getMap(id);\n    }\n\n    /** Create a new map with an automatically assigned ID.","Persistent storage of users should be by UUID as names are no longer unique past a single session."],"throws":["CommandException thrown when the executor for the given command fails with an unhandled exception /\n    public static boolean dispatchCommand(CommandSender sender, String commandLine) throws CommandException {\n        return server.dispatchCommand(sender, commandLine);\n    }\n\n    /** Populates a given {@link ServerConfig} with values attributes to this server.","IllegalArgumentException if the size is not a multiple of 9 /\n    public static Inventory createInventory(InventoryHolder owner, int size) throws IllegalArgumentException {\n        return server.createInventory(owner, size);\n    }\n\n    /** Creates an empty inventory of type {@link InventoryType#CHEST} with the specified size and title.","IllegalArgumentException if the size is not a multiple of 9 /\n    public static Inventory createInventory(InventoryHolder owner, int size, String title) throws IllegalArgumentException {\n        return server.createInventory(owner, size, title);\n    }\n\n    /** Gets user-specified limit for number of monsters that can spawn in a chunk.","IllegalArgumentException if image is null","Exception if the image does not meet current server server-icon specifications","IllegalArgumentException if image is null","Exception if the image does not meet current server server-icon specifications"],"see":["#getOfflinePlayer(java.util.UUID) /\n    @Deprecated\n    public static OfflinePlayer getOfflinePlayer(String name) {\n        return server.getOfflinePlayer(name);\n    }\n\n    /** Gets the player by the given UUID, regardless if they are offline or online. <p> This will return an object even if the player does not exist. To this method, all players will exist.","ItemFactory /\n    public static ItemFactory getItemFactory() {\n        return server.getItemFactory();\n    }\n\n    /** Gets the instance of the scoreboard manager. <p> This will only exist after the first world has loaded.","UnsafeValues"]},"return":"io.wolfscript.UnsafeValues","scope":"public","title":"Get: Static class cannot be initialized."}]},"io.wolfscript.WorldBorder":{"namespace":"io.wolfscript","title":"interface WorldBorder","description":"interface WorldBorder","name":"WorldBorder","qualifiedname":"io.wolfscript.WorldBorder","type":"interface","scope":"public","constructors":[],"methods":[],"imports":[],"properties":[{"name":"WarningDistance","modifier":"writeonly","args":[{"name":"distance","type":"int","description":"The distance in blocks. (The default is 5 blocks.)"}],"description":"Set: Resets the border to default values. /\n    public void reset();\n\n    /** Gets the current side length of the border.","doc":{"return":["The current side length of the border. /\n    public double getSize();\n\n    /** Sets the border to a square region with the specified side length in blocks.","The current border center. /\n    public Location getCenter();\n\n    /** Sets the new border center.","The current border damage buffer. /\n    public double getDamageBuffer();\n\n    /** Sets the amount of blocks a player may safely be outside the border before taking damage.","The current border damage amount. /\n    public double getDamageAmount();\n\n    /** Sets the amount of damage a player takes when outside the border plus the border buffer.","The current border warning time in seconds. /\n    public int getWarningTime();\n\n    /** Sets the warning time that causes the screen to be tinted red when a contracting border will reach the player within the specified time.","The current border warning distance. /\n    public int getWarningDistance();\n\n    /** Sets the warning distance that causes the screen to be tinted red when the player is within the specified number of blocks from the border."]},"return":"void","scope":"public","title":"Set: Resets the border to default values."}]},"io.wolfscript.WorldCreator":{"namespace":"io.wolfscript","title":"Represents various types of options that may be used to create a world.","description":"Represents various types of options that may be used to create a world.","name":"WorldCreator","qualifiedname":"io.wolfscript.WorldCreator","type":"class","scope":"public","constructors":[],"methods":[{"title":"Creates an empty WorldCreationOptions for the given world name","description":"Creates an empty WorldCreationOptions for the given world name","doc":{"return":["This object, for chaining /\n    public WorldCreator copy(World world) {\n        if (world == null) {\n            throw new IllegalArgumentException(\"World cannot be null\");\n        }\n\n        seed = world.getSeed();\n        environment = world.getEnvironment();\n        generator = world.getGenerator();\n\n        return this;\n    }\n\n    /** Copies the options from the specified {@link io.wolfscript.WorldCreator}","This object, for chaining /\n    public WorldCreator copy(WorldCreator creator) {\n        if (creator == null) {\n            throw new IllegalArgumentException(\"Creator cannot be null\");\n        }\n\n        seed = creator.seed();\n        environment = creator.environment();\n        generator = creator.generator();\n\n        return this;\n    }\n\n    /** Gets the name of the world that is to be loaded or created.","World name /\n    public String name() {\n        return name;\n    }\n\n    /** Gets the seed that will be used to create this world","World seed /\n    public long seed() {\n        return seed;\n    }\n\n    /** Sets the seed that will be used to create this world","This object, for chaining /\n    public WorldCreator seed(long seed) {\n        this.seed = seed;\n\n        return this;\n    }\n\n    /** Gets the environment that will be used to create or load the world","World environment /\n    public World.Environment environment() {\n        return environment;\n    }\n\n    /** Sets the environment that will be used to create or load the world","This object, for chaining /\n    public WorldCreator environment(World.Environment env) {\n        this.environment = env;\n\n        return this;\n    }\n\n    /** Gets the type of the world that will be created or loaded","World type /\n    public WorldType type() {\n        return type;\n    }\n\n    /** Sets the type of the world that will be created or loaded","This object, for chaining /\n    public WorldCreator type(WorldType type) {\n        this.type = type;\n\n        return this;\n    }\n\n    /** Gets the generator that will be used to create or load the world. <p> This may be null, in which case the \"natural\" generator for this environment will be used.","Chunk generator /\n    public ChunkGenerator generator() {\n        return generator;\n    }\n\n    /** Sets the generator that will be used to create or load the world. <p> This may be null, in which case the \"natural\" generator for this environment will be used.","This object, for chaining /\n    public WorldCreator generator(ChunkGenerator generator) {\n        this.generator = generator;\n\n        return this;\n    }\n\n    /** Sets the generator that will be used to create or load the world. <p> This may be null, in which case the \"natural\" generator for this environment will be used. <p> If the generator cannot be found for the given name, the natural environment generator will be used instead and a warning will be printed to the console.","This object, for chaining /\n    public WorldCreator generator(String generator) {\n        this.generator = getGeneratorForName(name, generator, WolfScript.getConsoleSender());\n\n        return this;\n    }\n\n    /** Sets the generator that will be used to create or load the world. <p> This may be null, in which case the \"natural\" generator for this environment will be used. <p> If the generator cannot be found for the given name, the natural environment generator will be used instead and a warning will be printed to the specified output","This object, for chaining /\n    public WorldCreator generator(String generator, CommandSender output) {\n        this.generator = getGeneratorForName(name, generator, output);\n\n        return this;\n    }\n\n    /** Sets the generator settings of the world that will be created or loaded","This object, for chaining /\n    public WorldCreator generatorSettings(String generatorSettings) {\n        this.generatorSettings = generatorSettings;\n\n        return this;\n    }\n\n    /** Gets the generator settings of the world that will be created or loaded","The settings that should be used by the generator /\n    public String generatorSettings() {\n        return generatorSettings;\n    }\n\n    /** Sets whether or not worlds created or loaded with this creator will have structures.","This object, for chaining /\n    public WorldCreator generateStructures(boolean generate) {\n        this.generateStructures = generate;\n\n        return this;\n    }\n\n    /** Gets whether or not structures will be generated in the world.","True if structures will be generated /\n    public boolean generateStructures() {\n        return generateStructures;\n    }\n\n    /** Creates a world with the specified options. <p> If the world already exists, it will be loaded from disk and some options may be ignored.","Newly created or loaded world /\n    public World createWorld() {\n        return WolfScript.createWorld(this);\n    }\n\n    /** Creates a new {@link io.wolfscript.WorldCreator} for the given world name","Resulting WorldCreator /\n    public static WorldCreator name(String name) {\n        return new WorldCreator(name);\n    }\n\n    /** Attempts to get the {@link io.wolfscript.generator.ChunkGenerator} with the given name. <p> If the generator is not found, null will be returned and a message will be printed to the specified {@link io.wolfscript.command.CommandSender} explaining why. <p> The name must be in the \"plugin:id\" notation, or optionally just \"plugin\", where \"plugin\" is the safe-name of a plugin and \"id\" is an optional unique identifier for the generator you wish to request from the plugin.","Resulting generator, or null"]},"scope":"public","describe":"static","return":"io.wolfscript.generator.ChunkGenerator","name":"getGeneratorForName","args":[{"name":"world","type":"String","description":"World to copy options from"},{"name":"name","type":"String","description":"Name of the world that will be created /\n    public WorldCreator(String name) {\n        if (name == null) {\n            throw new IllegalArgumentException(\"World name cannot be null\");\n        }\n\n        this.name = name;\n        this.seed = (new Random()).nextLong();\n    }\n\n    /** Copies the options from the specified world"},{"name":"output","type":"io.wolfscript.command.CommandSender","description":"{@link io.wolfscript.command.CommandSender} that will receive any error messages"}]}],"imports":["java.util.Random","io.wolfscript.command.CommandSender","io.wolfscript.generator.ChunkGenerator","io.wolfscript.plugin.Plugin"],"properties":[]},"io.wolfscript.WorldType":{"namespace":"io.wolfscript","title":"Represents various types of worlds that may exist","description":"Represents various types of worlds that may exist","name":"WorldType","qualifiedname":"io.wolfscript.WorldType","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Gets the name of this WorldType","description":"Gets the name of this WorldType","doc":{"return":["Name of this type /\n    public String getName() {\n        return name;\n    }\n\n    /** Gets a Worldtype by its name","Requested WorldType, or null if not found"]},"scope":"public","describe":"static","return":"io.wolfscript.WorldType","name":"getByName","args":[{"name":"name","type":"String","description":"Name of the WorldType to get"}]}],"imports":["com.google.common.collect.Maps","java.util.Map"],"enum":[{"code":"NORMAL","value":"\"DEFAULT\"","title":"NORMAL WorldType","description":"NORMAL WorldType"},{"code":"FLAT","value":"\"FLAT\"","title":"FLAT WorldType","description":"FLAT WorldType"},{"code":"VERSION_1_1","value":"\"DEFAULT_1_1\"","title":"VERSION_1_1 WorldType","description":"VERSION_1_1 WorldType"},{"code":"LARGE_BIOMES","value":"\"LARGEBIOMES\"","title":"LARGE_BIOMES WorldType","description":"LARGE_BIOMES WorldType"},{"code":"AMPLIFIED","value":"\"AMPLIFIED\"","title":"AMPLIFIED WorldType","description":"AMPLIFIED WorldType"},{"code":"CUSTOMIZED","value":"\"CUSTOMIZED\"","title":"CUSTOMIZED WorldType","description":"CUSTOMIZED WorldType"}],"properties":[]},"io.wolfscript.block.0":{"namespace":"io.wolfscript","title":"Classes used to manipulate the voxels in a {@link io.wolfscript.World world},","description":"Classes used to manipulate the voxels in a {@link io.wolfscript.World world}, including special states.","name":"block","qualifiedname":"io.wolfscript.block.0","packagename":"io.wolfscript.block","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.block.DoubleChest"],"interfaces":["io.wolfscript.block.Banner","io.wolfscript.block.Block","io.wolfscript.block.BlockState","io.wolfscript.block.CommandBlock","io.wolfscript.block.ContainerBlock","io.wolfscript.block.CreatureSpawner","io.wolfscript.block.Jukebox","io.wolfscript.block.NoteBlock","io.wolfscript.block.Sign","io.wolfscript.block.Skull"],"enums":["io.wolfscript.block.Biome","io.wolfscript.block.BlockFace","io.wolfscript.block.PistonMoveReaction"],"namespaces":["io.wolfscript.block.banner.0"],"properties":[]},"io.wolfscript.block.Banner":{"namespace":"io.wolfscript.block","title":"interface Banner","description":"interface Banner","name":"Banner","qualifiedname":"io.wolfscript.block.Banner","type":"interface","scope":"public","extends":["io.wolfscript.block.BlockState"],"constructors":[],"methods":[],"imports":["io.wolfscript.DyeColor","io.wolfscript.block.banner.Pattern","java.util.List"],"properties":[]},"io.wolfscript.block.Biome":{"namespace":"io.wolfscript.block","title":"Holds all accepted Biomes in the default server","description":"Holds all accepted Biomes in the default server","name":"Biome","qualifiedname":"io.wolfscript.block.Biome","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"SWAMPLAND","value":"","title":"SWAMPLAND Biome","description":"SWAMPLAND Biome"},{"code":"FOREST","value":"","title":"FOREST Biome","description":"FOREST Biome"},{"code":"TAIGA","value":"","title":"TAIGA Biome","description":"TAIGA Biome"},{"code":"DESERT","value":"","title":"DESERT Biome","description":"DESERT Biome"},{"code":"PLAINS","value":"","title":"PLAINS Biome","description":"PLAINS Biome"},{"code":"HELL","value":"","title":"HELL Biome","description":"HELL Biome"},{"code":"SKY","value":"","title":"SKY Biome","description":"SKY Biome"},{"code":"OCEAN","value":"","title":"OCEAN Biome","description":"OCEAN Biome"},{"code":"RIVER","value":"","title":"RIVER Biome","description":"RIVER Biome"},{"code":"EXTREME_HILLS","value":"","title":"EXTREME_HILLS Biome","description":"EXTREME_HILLS Biome"},{"code":"FROZEN_OCEAN","value":"","title":"FROZEN_OCEAN Biome","description":"FROZEN_OCEAN Biome"},{"code":"FROZEN_RIVER","value":"","title":"FROZEN_RIVER Biome","description":"FROZEN_RIVER Biome"},{"code":"ICE_PLAINS","value":"","title":"ICE_PLAINS Biome","description":"ICE_PLAINS Biome"},{"code":"ICE_MOUNTAINS","value":"","title":"ICE_MOUNTAINS Biome","description":"ICE_MOUNTAINS Biome"},{"code":"MUSHROOM_ISLAND","value":"","title":"MUSHROOM_ISLAND Biome","description":"MUSHROOM_ISLAND Biome"},{"code":"MUSHROOM_SHORE","value":"","title":"MUSHROOM_SHORE Biome","description":"MUSHROOM_SHORE Biome"},{"code":"BEACH","value":"","title":"BEACH Biome","description":"BEACH Biome"},{"code":"DESERT_HILLS","value":"","title":"DESERT_HILLS Biome","description":"DESERT_HILLS Biome"},{"code":"FOREST_HILLS","value":"","title":"FOREST_HILLS Biome","description":"FOREST_HILLS Biome"},{"code":"TAIGA_HILLS","value":"","title":"TAIGA_HILLS Biome","description":"TAIGA_HILLS Biome"},{"code":"SMALL_MOUNTAINS","value":"","title":"SMALL_MOUNTAINS Biome","description":"SMALL_MOUNTAINS Biome"},{"code":"JUNGLE","value":"","title":"JUNGLE Biome","description":"JUNGLE Biome"},{"code":"JUNGLE_HILLS","value":"","title":"JUNGLE_HILLS Biome","description":"JUNGLE_HILLS Biome"},{"code":"JUNGLE_EDGE","value":"","title":"JUNGLE_EDGE Biome","description":"JUNGLE_EDGE Biome"},{"code":"DEEP_OCEAN","value":"","title":"DEEP_OCEAN Biome","description":"DEEP_OCEAN Biome"},{"code":"STONE_BEACH","value":"","title":"STONE_BEACH Biome","description":"STONE_BEACH Biome"},{"code":"COLD_BEACH","value":"","title":"COLD_BEACH Biome","description":"COLD_BEACH Biome"},{"code":"BIRCH_FOREST","value":"","title":"BIRCH_FOREST Biome","description":"BIRCH_FOREST Biome"},{"code":"BIRCH_FOREST_HILLS","value":"","title":"BIRCH_FOREST_HILLS Biome","description":"BIRCH_FOREST_HILLS Biome"},{"code":"ROOFED_FOREST","value":"","title":"ROOFED_FOREST Biome","description":"ROOFED_FOREST Biome"},{"code":"COLD_TAIGA","value":"","title":"COLD_TAIGA Biome","description":"COLD_TAIGA Biome"},{"code":"COLD_TAIGA_HILLS","value":"","title":"COLD_TAIGA_HILLS Biome","description":"COLD_TAIGA_HILLS Biome"},{"code":"MEGA_TAIGA","value":"","title":"MEGA_TAIGA Biome","description":"MEGA_TAIGA Biome"},{"code":"MEGA_TAIGA_HILLS","value":"","title":"MEGA_TAIGA_HILLS Biome","description":"MEGA_TAIGA_HILLS Biome"},{"code":"EXTREME_HILLS_PLUS","value":"","title":"EXTREME_HILLS_PLUS Biome","description":"EXTREME_HILLS_PLUS Biome"},{"code":"SAVANNA","value":"","title":"SAVANNA Biome","description":"SAVANNA Biome"},{"code":"SAVANNA_PLATEAU","value":"","title":"SAVANNA_PLATEAU Biome","description":"SAVANNA_PLATEAU Biome"},{"code":"MESA","value":"","title":"MESA Biome","description":"MESA Biome"},{"code":"MESA_PLATEAU_FOREST","value":"","title":"MESA_PLATEAU_FOREST Biome","description":"MESA_PLATEAU_FOREST Biome"},{"code":"MESA_PLATEAU","value":"","title":"MESA_PLATEAU Biome","description":"MESA_PLATEAU Biome"},{"code":"SUNFLOWER_PLAINS","value":"","title":"SUNFLOWER_PLAINS Biome","description":"SUNFLOWER_PLAINS Biome"},{"code":"DESERT_MOUNTAINS","value":"","title":"DESERT_MOUNTAINS Biome","description":"DESERT_MOUNTAINS Biome"},{"code":"FLOWER_FOREST","value":"","title":"FLOWER_FOREST Biome","description":"FLOWER_FOREST Biome"},{"code":"TAIGA_MOUNTAINS","value":"","title":"TAIGA_MOUNTAINS Biome","description":"TAIGA_MOUNTAINS Biome"},{"code":"SWAMPLAND_MOUNTAINS","value":"","title":"SWAMPLAND_MOUNTAINS Biome","description":"SWAMPLAND_MOUNTAINS Biome"},{"code":"ICE_PLAINS_SPIKES","value":"","title":"ICE_PLAINS_SPIKES Biome","description":"ICE_PLAINS_SPIKES Biome"},{"code":"JUNGLE_MOUNTAINS","value":"","title":"JUNGLE_MOUNTAINS Biome","description":"JUNGLE_MOUNTAINS Biome"},{"code":"JUNGLE_EDGE_MOUNTAINS","value":"","title":"JUNGLE_EDGE_MOUNTAINS Biome","description":"JUNGLE_EDGE_MOUNTAINS Biome"},{"code":"COLD_TAIGA_MOUNTAINS","value":"","title":"COLD_TAIGA_MOUNTAINS Biome","description":"COLD_TAIGA_MOUNTAINS Biome"},{"code":"SAVANNA_MOUNTAINS","value":"","title":"SAVANNA_MOUNTAINS Biome","description":"SAVANNA_MOUNTAINS Biome"},{"code":"SAVANNA_PLATEAU_MOUNTAINS","value":"","title":"SAVANNA_PLATEAU_MOUNTAINS Biome","description":"SAVANNA_PLATEAU_MOUNTAINS Biome"},{"code":"MESA_BRYCE","value":"","title":"MESA_BRYCE Biome","description":"MESA_BRYCE Biome"},{"code":"MESA_PLATEAU_FOREST_MOUNTAINS","value":"","title":"MESA_PLATEAU_FOREST_MOUNTAINS Biome","description":"MESA_PLATEAU_FOREST_MOUNTAINS Biome"},{"code":"MESA_PLATEAU_MOUNTAINS","value":"","title":"MESA_PLATEAU_MOUNTAINS Biome","description":"MESA_PLATEAU_MOUNTAINS Biome"},{"code":"BIRCH_FOREST_MOUNTAINS","value":"","title":"BIRCH_FOREST_MOUNTAINS Biome","description":"BIRCH_FOREST_MOUNTAINS Biome"},{"code":"BIRCH_FOREST_HILLS_MOUNTAINS","value":"","title":"BIRCH_FOREST_HILLS_MOUNTAINS Biome","description":"BIRCH_FOREST_HILLS_MOUNTAINS Biome"},{"code":"ROOFED_FOREST_MOUNTAINS","value":"","title":"ROOFED_FOREST_MOUNTAINS Biome","description":"ROOFED_FOREST_MOUNTAINS Biome"},{"code":"MEGA_SPRUCE_TAIGA","value":"","title":"MEGA_SPRUCE_TAIGA Biome","description":"MEGA_SPRUCE_TAIGA Biome"},{"code":"EXTREME_HILLS_MOUNTAINS","value":"","title":"EXTREME_HILLS_MOUNTAINS Biome","description":"EXTREME_HILLS_MOUNTAINS Biome"},{"code":"EXTREME_HILLS_PLUS_MOUNTAINS","value":"","title":"EXTREME_HILLS_PLUS_MOUNTAINS Biome","description":"EXTREME_HILLS_PLUS_MOUNTAINS Biome"},{"code":"MEGA_SPRUCE_TAIGA_HILLS","value":"","title":"MEGA_SPRUCE_TAIGA_HILLS Biome","description":"MEGA_SPRUCE_TAIGA_HILLS Biome"}],"properties":[]},"io.wolfscript.block.Block":{"namespace":"io.wolfscript.block","title":"Represents a block. This is a live object, and only one Block may exist for","description":"Represents a block. This is a live object, and only one Block may exist for any given location in a world. The state of the block may change concurrently to your own handling of it; use block.getState() to get a snapshot state of a block which will not be modified.","name":"Block","qualifiedname":"io.wolfscript.block.Block","type":"interface","scope":"public","extends":["io.wolfscript.metadata.Metadatable"],"constructors":[],"methods":[],"imports":["java.util.Collection","io.wolfscript.Chunk","io.wolfscript.Material","io.wolfscript.World","io.wolfscript.Location","io.wolfscript.inventory.ItemStack","io.wolfscript.metadata.Metadatable"],"properties":[]},"io.wolfscript.block.BlockFace":{"namespace":"io.wolfscript.block","title":"Represents the face of a block","description":"Represents the face of a block","name":"BlockFace","qualifiedname":"io.wolfscript.block.BlockFace","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"0","value":"","title":"0 BlockFace","description":"0 BlockFace"},{"code":"0","value":"","title":"0 BlockFace","description":"0 BlockFace"},{"code":"1","value":"","title":"1 BlockFace","description":"1 BlockFace"},{"code":"0","value":"","title":"0 BlockFace","description":"0 BlockFace"},{"code":"0","value":"","title":"0 BlockFace","description":"0 BlockFace"},{"code":"0","value":"","title":"0 BlockFace","description":"0 BlockFace"},{"code":"-1","value":"","title":"-1 BlockFace","description":"-1 BlockFace"},{"code":"0","value":"","title":"0 BlockFace","description":"0 BlockFace"},{"code":"0","value":"","title":"0 BlockFace","description":"0 BlockFace"},{"code":"1","value":"","title":"1 BlockFace","description":"1 BlockFace"},{"code":"0","value":"","title":"0 BlockFace","description":"0 BlockFace"},{"code":"-1","value":"","title":"-1 BlockFace","description":"-1 BlockFace"},{"code":"NORTH","value":"","title":"NORTH BlockFace","description":"NORTH BlockFace"},{"code":"NORTH","value":"","title":"NORTH BlockFace","description":"NORTH BlockFace"},{"code":"SOUTH","value":"","title":"SOUTH BlockFace","description":"SOUTH BlockFace"},{"code":"SOUTH","value":"","title":"SOUTH BlockFace","description":"SOUTH BlockFace"},{"code":"WEST","value":"","title":"WEST BlockFace","description":"WEST BlockFace"},{"code":"NORTH","value":"","title":"NORTH BlockFace","description":"NORTH BlockFace"},{"code":"NORTH","value":"","title":"NORTH BlockFace","description":"NORTH BlockFace"},{"code":"EAST","value":"","title":"EAST BlockFace","description":"EAST BlockFace"},{"code":"EAST","value":"","title":"EAST BlockFace","description":"EAST BlockFace"},{"code":"SOUTH","value":"","title":"SOUTH BlockFace","description":"SOUTH BlockFace"},{"code":"SOUTH","value":"","title":"SOUTH BlockFace","description":"SOUTH BlockFace"},{"code":"WEST","value":"","title":"WEST BlockFace","description":"WEST BlockFace"},{"code":"0","value":"","title":"0 BlockFace","description":"0 BlockFace"},{"code":"0","value":"","title":"0 BlockFace","description":"0 BlockFace"}],"properties":[{"name":"ModZ","modifier":"readonly","args":[],"description":"Get: Get the amount of X-coordinates to modify to get the represented block","doc":{"return":["Amount of X-coordinates to modify /\n    public int getModX() {\n        return modX;\n    }\n\n    /** Get the amount of Y-coordinates to modify to get the represented block","Amount of Y-coordinates to modify /\n    public int getModY() {\n        return modY;\n    }\n\n    /** Get the amount of Z-coordinates to modify to get the represented block","Amount of Z-coordinates to modify"]},"return":"int","scope":"public","title":"Get: Get the amount of X-coordinates to modify to get the represented block"},{"name":"OppositeFace","modifier":"readonly","args":[],"description":"OppositeFace property","return":"io.wolfscript.block.BlockFace","scope":"public","title":"OppositeFace property"}]},"io.wolfscript.block.BlockState":{"namespace":"io.wolfscript.block","title":"Represents a captured state of a block, which will not change","description":"Represents a captured state of a block, which will not change automatically. <p> Unlike Block, which only one object can exist per coordinate, BlockState can exist multiple times for any given Block. Note that another plugin may change the state of the block and you will not know, or they may change the block to another type entirely, causing your BlockState to become invalid.","name":"BlockState","qualifiedname":"io.wolfscript.block.BlockState","type":"interface","scope":"public","extends":["io.wolfscript.metadata.Metadatable"],"constructors":[],"methods":[],"imports":["io.wolfscript.Chunk","io.wolfscript.Location","io.wolfscript.Material","io.wolfscript.World","io.wolfscript.material.MaterialData","io.wolfscript.metadata.Metadatable"],"properties":[]},"io.wolfscript.block.CommandBlock":{"namespace":"io.wolfscript.block","title":"interface CommandBlock","description":"interface CommandBlock","name":"CommandBlock","qualifiedname":"io.wolfscript.block.CommandBlock","type":"interface","scope":"public","extends":["io.wolfscript.block.BlockState"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"Name","modifier":"writeonly","args":[{"name":"name","type":"String","description":"New name for this CommandBlock."}],"description":"Set: Gets the command that this CommandBlock will run when powered. This will never return null.  If the CommandBlock does not have a command, an empty String will be returned instead.","doc":{"return":["Command that this CommandBlock will run when powered. /\n    public String getCommand();\n\n    /** Sets the command that this CommandBlock will run when powered. Setting the command to null is the same as setting it to an empty String.","Name of this CommandBlock. /\n    public String getName();\n\n    /** Sets the name of this CommandBlock.  The name is used with commands that this CommandBlock executes.  Setting the name to null is the same as setting it to \"@\"."]},"return":"void","scope":"public","title":"Set: Gets the command that this CommandBlock will run when powered."}]},"io.wolfscript.block.ContainerBlock":{"namespace":"io.wolfscript.block","title":"Indicates a block type that has inventory.","description":"Indicates a block type that has inventory.","doc":{"deprecated":["in favour of {@link InventoryHolder}"]},"name":"ContainerBlock","qualifiedname":"io.wolfscript.block.ContainerBlock","deprecated":true,"type":"interface","scope":"public","extends":["io.wolfscript.inventory.InventoryHolder"],"constructors":[],"methods":[],"imports":["io.wolfscript.inventory.InventoryHolder"],"properties":[]},"io.wolfscript.block.CreatureSpawner":{"namespace":"io.wolfscript.block","title":"Represents a creature spawner.","description":"Represents a creature spawner.","name":"CreatureSpawner","qualifiedname":"io.wolfscript.block.CreatureSpawner","type":"interface","scope":"public","extends":["io.wolfscript.block.BlockState"],"constructors":[],"methods":[],"imports":["io.wolfscript.entity.CreatureType","io.wolfscript.entity.EntityType"],"properties":[{"name":"Delay","modifier":"writeonly","args":[{"name":"delay","type":"int","description":"The delay."}],"description":"Set: Get the spawner's creature type.","doc":{"return":["The creature type.","The creature type. /\n    public EntityType getSpawnedType();\n\n    /** Set the spawner's creature type.","The creature type's name.","The creature type's name. /\n    public String getCreatureTypeName();\n\n    /** Set the spawner mob type.","The delay. /\n    public int getDelay();\n\n    /** Set the spawner's delay."],"deprecated":["In favour of {@link #getSpawnedType()}. /\n    @Deprecated\n    public CreatureType getCreatureType();\n\n    /** Get the spawner's creature type.","In favour of {@link #setSpawnedType(EntityType)}. /\n    @Deprecated\n    public void setCreatureType(CreatureType creatureType);\n\n    /** Get the spawner's creature type.","Use {@link #getCreatureTypeName()}. /\n    @Deprecated\n    public String getCreatureTypeId();\n\n    /** Set the spawner mob type.","Use {@link #setCreatureTypeByName(String)}. /\n    @Deprecated\n    public void setCreatureTypeId(String creatureType);\n\n    /** Get the spawner's delay."]},"return":"void","scope":"public","title":"Set: Get the spawner's creature type."}]},"io.wolfscript.block.DoubleChest":{"namespace":"io.wolfscript.block","title":"Represents a double chest.","description":"Represents a double chest.","name":"DoubleChest","qualifiedname":"io.wolfscript.block.DoubleChest","type":"class","scope":"public","implements":["io.wolfscript.inventory.InventoryHolder"],"constructors":[{"title":"DoubleChest constructor","description":"DoubleChest constructor","scope":"public","name":"DoubleChest","args":[{"name":"chest","type":"io.wolfscript.inventory.DoubleChestInventory","description":"chest argument"}]}],"methods":[],"imports":["io.wolfscript.Location","io.wolfscript.World","io.wolfscript.inventory.DoubleChestInventory","io.wolfscript.inventory.Inventory","io.wolfscript.inventory.InventoryHolder"],"properties":[{"name":"Inventory","modifier":"readonly","args":[],"description":"Inventory property","return":"io.wolfscript.inventory.Inventory","scope":"public","title":"Inventory property"},{"name":"LeftSide","modifier":"readonly","args":[],"description":"LeftSide property","return":"io.wolfscript.inventory.InventoryHolder","scope":"public","title":"LeftSide property"},{"name":"Location","modifier":"readonly","args":[],"description":"Location property","return":"io.wolfscript.Location","scope":"public","title":"Location property"},{"name":"RightSide","modifier":"readonly","args":[],"description":"RightSide property","return":"io.wolfscript.inventory.InventoryHolder","scope":"public","title":"RightSide property"},{"name":"World","modifier":"readonly","args":[],"description":"World property","return":"io.wolfscript.World","scope":"public","title":"World property"},{"name":"X","modifier":"readonly","args":[],"description":"X property","return":"double","scope":"public","title":"X property"},{"name":"Y","modifier":"readonly","args":[],"description":"Y property","return":"double","scope":"public","title":"Y property"},{"name":"Z","modifier":"readonly","args":[],"description":"Z property","return":"double","scope":"public","title":"Z property"}]},"io.wolfscript.block.Jukebox":{"namespace":"io.wolfscript.block","title":"Represents a Jukebox","description":"Represents a Jukebox","name":"Jukebox","qualifiedname":"io.wolfscript.block.Jukebox","type":"interface","scope":"public","extends":["io.wolfscript.block.BlockState"],"constructors":[],"methods":[{"title":"Get the record currently playing","description":"Get the record currently playing","doc":{"return":["The record Material, or AIR if none is playing /\n    public Material getPlaying();\n\n    /** Set the record currently playing","True if there is a record playing /\n    public boolean isPlaying();\n\n    /** Stop the jukebox playing and eject the current record","True if a record was ejected; false if there was none playing"],"param":["record The record Material, or null/AIR to stop playing /\n    public void setPlaying(Material record);\n\n    /** Check if the jukebox is currently playing a record"]},"scope":"public","return":"boolean","name":"eject","args":[]}],"imports":["io.wolfscript.Material"],"properties":[]},"io.wolfscript.block.NoteBlock":{"namespace":"io.wolfscript.block","title":"Represents a note.","description":"Represents a note.","name":"NoteBlock","qualifiedname":"io.wolfscript.block.NoteBlock","type":"interface","scope":"public","extends":["io.wolfscript.block.BlockState"],"constructors":[],"methods":[{"title":"Gets the note.","description":"Gets the note.","doc":{"return":["The note. /\n    public Note getNote();\n\n    /** Gets the note.","The note ID.","true if successful, otherwise false /\n    public boolean play();\n\n    /** Plays an arbitrary note with an arbitrary instrument","true if successful, otherwise false","true if successful, otherwise false"],"deprecated":["Magic value /\n    @Deprecated\n    public byte getRawNote();\n\n    /** Set the note.","Magic value /\n    @Deprecated\n    public void setRawNote(byte note);\n\n    /** Attempts to play the note at block <p> If the block is no longer a note block, this will return false","Magic value /\n    @Deprecated\n    public boolean play(byte instrument, byte note);\n\n    /** Plays an arbitrary note with an arbitrary instrument"],"see":["Instrument Note"]},"scope":"public","return":"boolean","name":"play","args":[{"name":"instrument","type":"io.wolfscript.Instrument","description":"Instrument ID"},{"name":"note","type":"io.wolfscript.Note","description":"The note. /\n    public void setNote(Note note);\n\n    /** Set the note."}]}],"imports":["io.wolfscript.Instrument","io.wolfscript.Note"],"properties":[]},"io.wolfscript.block.PistonMoveReaction":{"namespace":"io.wolfscript.block","title":"enum PistonMoveReaction","description":"enum PistonMoveReaction","name":"PistonMoveReaction","qualifiedname":"io.wolfscript.block.PistonMoveReaction","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Indicates that the block can be pushed or pulled.","description":"Indicates that the block can be pushed or pulled. /\n    MOVE(0),\n    /** Indicates the block is fragile and will break if pushed on. /\n    BREAK(1),\n    /** Indicates that the block will resist being pushed or pulled. /\n    BLOCK(2);\n\n    private int id;\n    private static Map<Integer, PistonMoveReaction> byId = new HashMap<Integer, PistonMoveReaction>();\n    static {\n        for (PistonMoveReaction reaction : PistonMoveReaction.values()) {\n            byId.put(reaction.id, reaction);\n        }\n    }\n\n    private PistonMoveReaction(int id) {\n        this.id = id;\n    }\n\n    /**","doc":{"return":["The ID of the move reaction","The move reaction with that ID"],"deprecated":["Magic value /\n    @Deprecated\n    public int getId() {\n        return this.id;\n    }\n\n    /**","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.block.PistonMoveReaction","name":"getById","deprecated":true,"args":[{"name":"id","type":"int","description":"An ID"}]}],"imports":["java.util.HashMap","java.util.Map"],"enum":[{"code":"BLOCK","value":"2","title":"Indicates that the block can be pushed or pulled.","description":"Indicates that the block can be pushed or pulled. /\n    MOVE(0),\n    /** Indicates the block is fragile and will break if pushed on. /\n    BREAK(1),\n    /** Indicates that the block will resist being pushed or pulled.","doc":{}}],"properties":[]},"io.wolfscript.block.Sign":{"namespace":"io.wolfscript.block","title":"Represents either a SignPost or a WallSign","description":"Represents either a SignPost or a WallSign","name":"Sign","qualifiedname":"io.wolfscript.block.Sign","type":"interface","scope":"public","extends":["io.wolfscript.block.BlockState"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"Lines","modifier":"readonly","args":[],"description":"Get: Gets all the lines of text currently on this sign.","doc":{"return":["Array of Strings containing each line of text"]},"return":"String[]","scope":"public","title":"Get: Gets all the lines of text currently on this sign."}]},"io.wolfscript.block.Skull":{"namespace":"io.wolfscript.block","title":"Represents a Skull","description":"Represents a Skull","name":"Skull","qualifiedname":"io.wolfscript.block.Skull","type":"interface","scope":"public","extends":["io.wolfscript.block.BlockState"],"constructors":[],"methods":[],"imports":["io.wolfscript.SkullType"],"properties":[{"name":"SkullType","modifier":"writeonly","args":[{"name":"skullType","type":"io.wolfscript.SkullType","description":"the type of skull"}],"description":"Set: Checks to see if the skull has an owner","doc":{"return":["true if the skull has an owner /\n    public boolean hasOwner();\n\n    /** Gets the owner of the skull, if one exists","the owner of the skull or null if the skull does not have an owner /\n    public String getOwner();\n\n    /** Sets the owner of the skull <p> Involves a potentially blocking web request to acquire the profile data for the provided name.","true if the owner was successfully set /\n    public boolean setOwner(String name);\n\n    /** Gets the rotation of the skull in the world","the rotation of the skull /\n    public BlockFace getRotation();\n\n    /** Sets the rotation of the skull in the world","the type of skull /\n    public SkullType getSkullType();\n\n    /** Sets the type of skull"]},"return":"void","scope":"public","title":"Set: Checks to see if the skull has an owner"}]},"io.wolfscript.block.banner.0":{"namespace":"io.wolfscript.block","title":"Classes and interfaces for namespace io.wolfscript.block.banner","description":"Classes and interfaces for namespace io.wolfscript.block.banner","name":"banner","qualifiedname":"io.wolfscript.block.banner.0","packagename":"io.wolfscript.block.banner","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.block.banner.Pattern"],"interfaces":[],"enums":["io.wolfscript.block.banner.PatternType"],"namespaces":[],"properties":[]},"io.wolfscript.block.banner.Pattern":{"namespace":"io.wolfscript.block.banner","title":"class Pattern","description":"class Pattern","name":"Pattern","qualifiedname":"io.wolfscript.block.banner.Pattern","type":"class","scope":"public","implements":["io.wolfscript.configuration.serialization.ConfigurationSerializable"],"constructors":[],"methods":[{"title":"equals method","description":"equals method","scope":"public","return":"boolean","name":"equals","args":[{"name":"obj","type":"Object","description":"obj argument"}]},{"title":"hashCode method","description":"hashCode method","scope":"public","return":"int","name":"hashCode","args":[]}],"imports":["com.google.common.collect.ImmutableMap","java.util.Map","java.util.NoSuchElementException","io.wolfscript.DyeColor","io.wolfscript.configuration.serialization.ConfigurationSerializable","io.wolfscript.configuration.serialization.SerializableAs"],"properties":[{"name":"Pattern","modifier":"readonly","args":[],"description":"Get: Creates a new pattern from the specified color and pattern type","doc":{"param":["color   the pattern color","pattern the pattern type /\n    public Pattern(DyeColor color, PatternType pattern) {\n        this.color = color;\n        this.pattern = pattern;\n    }\n    \n    /** Constructor for deserialization.","map the map to deserialize from /\n    public Pattern(Map<String, Object> map) {\n        color = DyeColor.valueOf(getString(map, COLOR));\n        pattern = PatternType.getByIdentifier(getString(map, PATTERN));\n    }    \n\n    private static String getString(Map<?,?> map, Object key) {\n        Object str = map.get(key);\n        if (str instanceof String) {\n            return (String) str;\n        }\n        throw new NoSuchElementException(map + \" does not contain \" + key);\n    }\n    \n    @Override\n    public Map<String, Object> serialize() {\n        return ImmutableMap.<String, Object>of(\n            COLOR, color.toString(),\n            PATTERN, pattern.getIdentifier()\n        );\n    }\n\n    /** Returns the color of the pattern"],"return":["the color of the pattern /\n    public DyeColor getColor() {\n        return color;\n    }\n\n    /** Returns the type of pattern","the pattern type"]},"return":"io.wolfscript.block.banner.PatternType","scope":"public","title":"Get: Creates a new pattern from the specified color and"}]},"io.wolfscript.block.banner.PatternType":{"namespace":"io.wolfscript.block.banner","title":"enum PatternType","description":"enum PatternType","name":"PatternType","qualifiedname":"io.wolfscript.block.banner.PatternType","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Returns the identifier used to represent","description":"Returns the identifier used to represent this pattern type","doc":{"return":["the pattern's identifier /\n    public String getIdentifier() {\n        return identifier;\n    }\n\n    /** Returns the pattern type which matches the passed identifier or null if no matches are found","the matched pattern type or null"]},"scope":"public","describe":"static","return":"io.wolfscript.block.banner.PatternType","name":"getByIdentifier","args":[{"name":"identifier","type":"String","description":"the identifier"}]}],"imports":["java.util.HashMap","java.util.Map"],"enum":[{"code":"BASE","value":"\"b\"","title":"BASE PatternType","description":"BASE PatternType"},{"code":"SQUARE_BOTTOM_LEFT","value":"\"bl\"","title":"SQUARE_BOTTOM_LEFT PatternType","description":"SQUARE_BOTTOM_LEFT PatternType"},{"code":"SQUARE_BOTTOM_RIGHT","value":"\"br\"","title":"SQUARE_BOTTOM_RIGHT PatternType","description":"SQUARE_BOTTOM_RIGHT PatternType"},{"code":"SQUARE_TOP_LEFT","value":"\"tl\"","title":"SQUARE_TOP_LEFT PatternType","description":"SQUARE_TOP_LEFT PatternType"},{"code":"SQUARE_TOP_RIGHT","value":"\"tr\"","title":"SQUARE_TOP_RIGHT PatternType","description":"SQUARE_TOP_RIGHT PatternType"},{"code":"STRIPE_BOTTOM","value":"\"bs\"","title":"STRIPE_BOTTOM PatternType","description":"STRIPE_BOTTOM PatternType"},{"code":"STRIPE_TOP","value":"\"ts\"","title":"STRIPE_TOP PatternType","description":"STRIPE_TOP PatternType"},{"code":"STRIPE_LEFT","value":"\"ls\"","title":"STRIPE_LEFT PatternType","description":"STRIPE_LEFT PatternType"},{"code":"STRIPE_RIGHT","value":"\"rs\"","title":"STRIPE_RIGHT PatternType","description":"STRIPE_RIGHT PatternType"},{"code":"STRIPE_CENTER","value":"\"cs\"","title":"STRIPE_CENTER PatternType","description":"STRIPE_CENTER PatternType"},{"code":"STRIPE_MIDDLE","value":"\"ms\"","title":"STRIPE_MIDDLE PatternType","description":"STRIPE_MIDDLE PatternType"},{"code":"STRIPE_DOWNRIGHT","value":"\"drs\"","title":"STRIPE_DOWNRIGHT PatternType","description":"STRIPE_DOWNRIGHT PatternType"},{"code":"STRIPE_DOWNLEFT","value":"\"dls\"","title":"STRIPE_DOWNLEFT PatternType","description":"STRIPE_DOWNLEFT PatternType"},{"code":"STRIPE_SMALL","value":"\"ss\"","title":"STRIPE_SMALL PatternType","description":"STRIPE_SMALL PatternType"},{"code":"CROSS","value":"\"cr\"","title":"CROSS PatternType","description":"CROSS PatternType"},{"code":"STRAIGHT_CROSS","value":"\"sc\"","title":"STRAIGHT_CROSS PatternType","description":"STRAIGHT_CROSS PatternType"},{"code":"TRIANGLE_BOTTOM","value":"\"bt\"","title":"TRIANGLE_BOTTOM PatternType","description":"TRIANGLE_BOTTOM PatternType"},{"code":"TRIANGLE_TOP","value":"\"tt\"","title":"TRIANGLE_TOP PatternType","description":"TRIANGLE_TOP PatternType"},{"code":"TRIANGLES_BOTTOM","value":"\"bts\"","title":"TRIANGLES_BOTTOM PatternType","description":"TRIANGLES_BOTTOM PatternType"},{"code":"TRIANGLES_TOP","value":"\"tts\"","title":"TRIANGLES_TOP PatternType","description":"TRIANGLES_TOP PatternType"},{"code":"DIAGONAL_LEFT","value":"\"ld\"","title":"DIAGONAL_LEFT PatternType","description":"DIAGONAL_LEFT PatternType"},{"code":"DIAGONAL_RIGHT","value":"\"rd\"","title":"DIAGONAL_RIGHT PatternType","description":"DIAGONAL_RIGHT PatternType"},{"code":"DIAGONAL_LEFT_MIRROR","value":"\"lud\"","title":"DIAGONAL_LEFT_MIRROR PatternType","description":"DIAGONAL_LEFT_MIRROR PatternType"},{"code":"DIAGONAL_RIGHT_MIRROR","value":"\"rud\"","title":"DIAGONAL_RIGHT_MIRROR PatternType","description":"DIAGONAL_RIGHT_MIRROR PatternType"},{"code":"CIRCLE_MIDDLE","value":"\"mc\"","title":"CIRCLE_MIDDLE PatternType","description":"CIRCLE_MIDDLE PatternType"},{"code":"RHOMBUS_MIDDLE","value":"\"mr\"","title":"RHOMBUS_MIDDLE PatternType","description":"RHOMBUS_MIDDLE PatternType"},{"code":"HALF_VERTICAL","value":"\"vh\"","title":"HALF_VERTICAL PatternType","description":"HALF_VERTICAL PatternType"},{"code":"HALF_HORIZONTAL","value":"\"hh\"","title":"HALF_HORIZONTAL PatternType","description":"HALF_HORIZONTAL PatternType"},{"code":"HALF_VERTICAL_MIRROR","value":"\"vhr\"","title":"HALF_VERTICAL_MIRROR PatternType","description":"HALF_VERTICAL_MIRROR PatternType"},{"code":"HALF_HORIZONTAL_MIRROR","value":"\"hhb\"","title":"HALF_HORIZONTAL_MIRROR PatternType","description":"HALF_HORIZONTAL_MIRROR PatternType"},{"code":"BORDER","value":"\"bo\"","title":"BORDER PatternType","description":"BORDER PatternType"},{"code":"CURLY_BORDER","value":"\"cbo\"","title":"CURLY_BORDER PatternType","description":"CURLY_BORDER PatternType"},{"code":"CREEPER","value":"\"cre\"","title":"CREEPER PatternType","description":"CREEPER PatternType"},{"code":"GRADIENT","value":"\"gra\"","title":"GRADIENT PatternType","description":"GRADIENT PatternType"},{"code":"GRADIENT_UP","value":"\"gru\"","title":"GRADIENT_UP PatternType","description":"GRADIENT_UP PatternType"},{"code":"BRICKS","value":"\"bri\"","title":"BRICKS PatternType","description":"BRICKS PatternType"},{"code":"SKULL","value":"\"sku\"","title":"SKULL PatternType","description":"SKULL PatternType"},{"code":"FLOWER","value":"\"flo\"","title":"FLOWER PatternType","description":"FLOWER PatternType"},{"code":"MOJANG","value":"\"moj\"","title":"MOJANG PatternType","description":"MOJANG PatternType"}],"properties":[]},"io.wolfscript.command.0":{"namespace":"io.wolfscript","title":"Classes relating to handling specialized non-chat player input.","description":"Classes relating to handling specialized non-chat player input.","name":"command","qualifiedname":"io.wolfscript.command.0","packagename":"io.wolfscript.command","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.command.Command","io.wolfscript.command.CommandException","io.wolfscript.command.FormattedCommandAlias","io.wolfscript.command.MultipleCommandAlias","io.wolfscript.command.PluginCommand","io.wolfscript.command.PluginCommandYamlParser","io.wolfscript.command.SimpleCommandMap"],"interfaces":["io.wolfscript.command.BlockCommandSender","io.wolfscript.command.CommandExecutor","io.wolfscript.command.CommandMap","io.wolfscript.command.CommandSender","io.wolfscript.command.PluginIdentifiableCommand","io.wolfscript.command.ProxiedCommandSender","io.wolfscript.command.RemoteConsoleCommandSender","io.wolfscript.command.TabCommandExecutor","io.wolfscript.command.TabCompleter"],"enums":[],"namespaces":["io.wolfscript.command.defaults.0"],"properties":[]},"io.wolfscript.command.BlockCommandSender":{"namespace":"io.wolfscript.command","title":"interface BlockCommandSender","description":"interface BlockCommandSender","name":"BlockCommandSender","qualifiedname":"io.wolfscript.command.BlockCommandSender","type":"interface","scope":"public","extends":["io.wolfscript.command.CommandSender"],"constructors":[],"methods":[],"imports":["io.wolfscript.block.Block"],"properties":[{"name":"Block","modifier":"readonly","args":[],"description":"Get: Returns the block this command sender belongs to","doc":{"return":["Block for the command sender"]},"return":"io.wolfscript.block.Block","scope":"public","title":"Get: Returns the block this command sender belongs to"}]},"io.wolfscript.command.Command":{"namespace":"io.wolfscript.command","title":"Represents a Command, which executes various tasks upon user input","description":"Represents a Command, which executes various tasks upon user input","name":"Command","qualifiedname":"io.wolfscript.command.Command","type":"class","scope":"public","describe":"abstract","constructors":[],"methods":[{"title":"broadcastCommandMessage method","description":"broadcastCommandMessage method","scope":"public","describe":"static","return":"void","name":"broadcastCommandMessage","args":[{"name":"source","type":"io.wolfscript.command.CommandSender","description":"source argument"},{"name":"message","type":"String","description":"message argument"}]},{"title":"broadcastCommandMessage method","description":"broadcastCommandMessage method","scope":"public","describe":"static","return":"void","name":"broadcastCommandMessage","args":[{"name":"source","type":"io.wolfscript.command.CommandSender","description":"source argument"},{"name":"message","type":"String","description":"message argument"},{"name":"sendToSource","type":"boolean","description":"sendToSource argument"}]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["java.util.ArrayList","java.util.Collections","java.util.List","java.util.Set","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.Server","io.wolfscript.entity.Player","io.wolfscript.entity.minecart.CommandMinecart","io.wolfscript.permissions.Permissible","io.wolfscript.plugin.PluginDescriptionFile","io.wolfscript.util.StringUtil","com.google.common.collect.ImmutableList"],"properties":[{"name":"Usage","modifier":"writeonly","args":[{"name":"usage","type":"String","description":"new example usage"}],"description":"Set: Executes the command, returning its success","doc":{"return":["true if the command was successful, otherwise false /\n    public abstract boolean execute(CommandSender sender, String commandLabel, String[] args);\n\n    /** Executed on tab completion for this command, returning a list of options the player can tab through.","a list of tab-completions for the specified arguments. This will never be null. List may be immutable. /\n    @Deprecated\n    public List<String> tabComplete(CommandSender sender, String[] args) {\n        return null;\n    }\n\n    /** Executed on tab completion for this command, returning a list of options the player can tab through.","a list of tab-completions for the specified arguments. This will never be null. List may be immutable.","Name of this command /\n    public String getName() {\n        return name;\n    }\n\n    /** Gets the permission required by users to be able to perform this command","Permission name, or null if none /\n    public String getPermission() {\n        return permission;\n    }\n\n    /** Sets the permission required by users to be able to perform this command","true if they can use it, otherwise false /\n    public boolean testPermission(CommandSender target) {\n        if (testPermissionSilent(target)) {\n            return true;\n        }\n\n        if (permissionMessage == null) {\n            target.sendMessage(ChatColor.RED + \"I'm sorry, but you do not have permission to perform this command. Please contact the server administrators if you believe that this is in error.\");\n        } else if (permissionMessage.length() != 0) {\n            for (String line : permissionMessage.replace(\"<permission>\", permission).split(\"\\n\")) {\n                target.sendMessage(line);\n            }\n        }\n\n        return false;\n    }\n\n    /** Tests the given {@link io.wolfscript.command.CommandSender} to see if they can perform this command. <p> No error is sent to the sender.","true if they can use it, otherwise false /\n    public boolean testPermissionSilent(CommandSender target) {\n        if ((permission == null) || (permission.length() == 0)) {\n            return true;\n        }\n\n        for (String p : permission.split(\";\")) {\n            if (target.hasPermission(p)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /** Returns the current label for this command","Label of this command or null if not registered /\n    public String getLabel() {\n        return label;\n    }\n\n    /** Sets the label of this command. <p> If the command is currently registered the label change will only take effect after its been re-registered e.g. after a /reload","returns true if the name change happened instantly or false if it was scheduled for re-registration /\n    public boolean setLabel(String name) {\n        this.nextLabel = name;\n        if (!isRegistered()) {\n            this.label = name;\n            return true;\n        }\n        return false;\n    }\n\n    /** Registers this command to a CommandMap. Once called it only allows changes the registered CommandMap","true if the registration was successful (the current registered CommandMap was the passed CommandMap or null) false otherwise /\n    public boolean register(CommandMap commandMap) {\n        if (allowChangesFrom(commandMap)) {\n            this.commandMap = commandMap;\n            return true;\n        }\n\n        return false;\n    }\n\n    /** Unregisters this command from the passed CommandMap applying any outstanding changes","true if the unregistration was successfull (the current registered CommandMap was the passed CommandMap or null) false otherwise /\n    public boolean unregister(CommandMap commandMap) {\n        if (allowChangesFrom(commandMap)) {\n            this.commandMap = null;\n            this.activeAliases = new ArrayList<String>(this.aliases);\n            this.label = this.nextLabel;\n            return true;\n        }\n\n        return false;\n    }\n\n    private boolean allowChangesFrom(CommandMap commandMap) {\n        return (null == this.commandMap || this.commandMap == commandMap);\n    }\n\n    /** Returns the current registered state of this command","true if this command is currently registered false otherwise /\n    public boolean isRegistered() {\n        return (null != this.commandMap);\n    }\n\n    /** Returns a list of active aliases of this command","List of aliases /\n    public List<String> getAliases() {\n        return activeAliases;\n    }\n\n    /** Returns a message to be displayed on a failed permission check for this command","Permission check failed message /\n    public String getPermissionMessage() {\n        return permissionMessage;\n    }\n\n    /** Gets a brief description of this command","Description of this command /\n    public String getDescription() {\n        return description;\n    }\n\n    /** Gets an example usage of this command","One or more example usages /\n    public String getUsage() {\n        return usageMessage;\n    }\n\n    /** Sets the list of aliases to request on registration for this command. This is not effective outside of defining aliases in the {@link PluginDescriptionFile#getCommands()} (under the `<code>aliases</code>' node) is equivalent to this method.","this command object, for chaining /\n    public Command setAliases(List<String> aliases) {\n        this.aliases = aliases;\n        if (!isRegistered()) {\n            this.activeAliases = new ArrayList<String>(aliases);\n        }\n        return this;\n    }\n\n    /** Sets a brief description of this command. Defining a description in the {@link PluginDescriptionFile#getCommands()} (under the `<code>description</code>' node) is equivalent to this method.","this command object, for chaining /\n    public Command setDescription(String description) {\n        this.description = description;\n        return this;\n    }\n\n    /** Sets the message sent when a permission check fails","this command object, for chaining /\n    public Command setPermissionMessage(String permissionMessage) {\n        this.permissionMessage = permissionMessage;\n        return this;\n    }\n\n    /** Sets the example usage of this command","this command object, for chaining"],"deprecated":["This method is not supported and returns null"],"throws":["IllegalArgumentException if sender, alias, or args is null /\n    public List<String> tabComplete(CommandSender sender, String alias, String[] args) throws IllegalArgumentException {\n        Validate.notNull(sender, \"Sender cannot be null\");\n        Validate.notNull(args, \"Arguments cannot be null\");\n        Validate.notNull(alias, \"Alias cannot be null\");\n\n        if (args.length == 0) {\n            return ImmutableList.of();\n        }\n\n        String lastWord = args[args.length - 1];\n\n        Player senderPlayer = sender instanceof Player ? (Player) sender : null;\n\n        ArrayList<String> matchedPlayers = new ArrayList<String>();\n        for (Player player : sender.getServer().getOnlinePlayers()) {\n            String name = player.getName();\n            if ((senderPlayer == null || senderPlayer.canSee(player)) && StringUtil.startsWithIgnoreCase(name, lastWord)) {\n                matchedPlayers.add(name);\n            }\n        }\n\n        Collections.sort(matchedPlayers, String.CASE_INSENSITIVE_ORDER);\n        return matchedPlayers;\n    }\n\n    /** Returns the name of this command"]},"return":"io.wolfscript.command.Command","scope":"public","title":"Set: Executes the command, returning its success"}]},"io.wolfscript.command.CommandException":{"namespace":"io.wolfscript.command","title":"Thrown when an unhandled exception occurs during the execution of a Command","description":"Thrown when an unhandled exception occurs during the execution of a Command","name":"CommandException","qualifiedname":"io.wolfscript.command.CommandException","type":"class","scope":"public","extends":["RuntimeException"],"constructors":[{"title":"Creates a new instance of <code>CommandException</code> without detail","description":"Creates a new instance of <code>CommandException</code> without detail message. /\n    public CommandException() {}\n\n    /** Constructs an instance of <code>CommandException</code> with the specified detail message.","scope":"public","name":"CommandException","args":[{"name":"msg","type":"String","description":"the detail message."}]},{"title":"CommandException constructor","description":"CommandException constructor","scope":"public","name":"CommandException","args":[{"name":"msg","type":"String","description":"msg argument"},{"name":"cause","type":"Throwable","description":"cause argument"}]}],"methods":[],"imports":[],"properties":[]},"io.wolfscript.command.CommandExecutor":{"namespace":"io.wolfscript.command","title":"Represents a class which contains a single method for executing commands","description":"Represents a class which contains a single method for executing commands","name":"CommandExecutor","qualifiedname":"io.wolfscript.command.CommandExecutor","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Executes the given command, returning its success","description":"Executes the given command, returning its success","doc":{"return":["true if a valid command, otherwise false"]},"scope":"public","return":"boolean","name":"onCommand","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"Source of the command"},{"name":"command","type":"io.wolfscript.command.Command","description":"Command which was executed"},{"name":"label","type":"String","description":"Alias of the command which was used"}]}],"imports":[],"properties":[]},"io.wolfscript.command.CommandMap":{"namespace":"io.wolfscript.command","title":"interface CommandMap","description":"interface CommandMap","name":"CommandMap","qualifiedname":"io.wolfscript.command.CommandMap","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Registers all the commands belonging to a certain plugin.","description":"Registers all the commands belonging to a certain plugin. <p> Caller can use:- <ul> <li>command.getName() to determine the label registered for this command <li>command.getAliases() to determine the aliases which where registered </ul>","doc":{"return":["true if command was registered with the passed in label, false otherwise, which indicates the fallbackPrefix was used one or more times /\n    public boolean register(String label, String fallbackPrefix, Command command);\n\n    /** Registers a command. Returns true on success; false if name is already taken and fallback had to be used. <p> Caller can use:- <ul> <li>command.getName() to determine the label registered for this command <li>command.getAliases() to determine the aliases which where registered </ul>","true if command was registered with the passed in label, false otherwise, which indicates the fallbackPrefix was used one or more times /\n    public boolean register(String fallbackPrefix, Command command);\n\n    /** Looks for the requested command and executes it if found.","returns false if no target is found, true otherwise.","Command with the specified name or null if a command with that label doesn't exist"],"throws":["CommandException Thrown when the executor for the given command fails with an unhandled exception /\n    public boolean dispatch(CommandSender sender, String cmdLine) throws CommandException;\n\n    /** Clears all registered commands. /\n    public void clearCommands();\n\n    /** Gets the command registered to the specified name"]},"scope":"public","return":"io.wolfscript.command.Command","name":"getCommand","args":[{"name":"name","type":"String","description":"Name of the command to retrieve"}]}],"imports":["java.util.List"],"properties":[]},"io.wolfscript.command.CommandSender":{"namespace":"io.wolfscript.command","title":"interface CommandSender","description":"interface CommandSender","name":"CommandSender","qualifiedname":"io.wolfscript.command.CommandSender","type":"interface","scope":"public","extends":["io.wolfscript.permissions.Permissible"],"constructors":[],"methods":[],"imports":["io.wolfscript.Server","io.wolfscript.permissions.Permissible"],"properties":[{"name":"Name","modifier":"readonly","args":[],"description":"Get: Sends this sender a message","doc":{"param":["message Message to be displayed /\n    public void sendMessage(String message);\n\n    /** Sends this sender multiple messages","messages An array of messages to be displayed /\n    public void sendMessage(String[] messages);\n\n    /** Returns the server instance that this command is running on"],"return":["Server instance /\n    public Server getServer();\n\n    /** Gets the name of this command sender","Name of the sender"]},"return":"String","scope":"public","title":"Get: Sends this sender a message"}]},"io.wolfscript.command.FormattedCommandAlias":{"namespace":"io.wolfscript.command","title":"class FormattedCommandAlias","description":"class FormattedCommandAlias","name":"FormattedCommandAlias","qualifiedname":"io.wolfscript.command.FormattedCommandAlias","type":"class","scope":"public","extends":["io.wolfscript.command.Command"],"constructors":[{"title":"FormattedCommandAlias constructor","description":"FormattedCommandAlias constructor","scope":"public","name":"FormattedCommandAlias","args":[{"name":"alias","type":"String","description":"alias argument"}]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"commandLabel","type":"String","description":"commandLabel argument"}]}],"imports":["java.util.ArrayList","java.util.logging.Level","io.wolfscript.WolfScript","io.wolfscript.entity.Player","io.wolfscript.event.player.PlayerCommandPreprocessEvent","io.wolfscript.event.server.RemoteServerCommandEvent","io.wolfscript.event.server.ServerCommandEvent"],"properties":[]},"io.wolfscript.command.MultipleCommandAlias":{"namespace":"io.wolfscript.command","title":"Represents a command that delegates to one or more other commands","description":"Represents a command that delegates to one or more other commands","name":"MultipleCommandAlias","qualifiedname":"io.wolfscript.command.MultipleCommandAlias","type":"class","scope":"public","extends":["io.wolfscript.command.Command"],"constructors":[{"title":"MultipleCommandAlias constructor","description":"MultipleCommandAlias constructor","scope":"public","name":"MultipleCommandAlias","args":[{"name":"name","type":"String","description":"name argument"}]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"commandLabel","type":"String","description":"commandLabel argument"}]}],"imports":[],"properties":[{"name":"Commands","modifier":"readonly","args":[],"description":"Get: Gets the commands associated with the multi-command alias.","doc":{"return":["commands associated with alias"]},"return":"Command[]","scope":"public","title":"Get: Gets the commands associated with the multi-command alias."}]},"io.wolfscript.command.PluginCommand":{"namespace":"io.wolfscript.command","title":"Represents a {@link io.wolfscript.command.Command} belonging to a plugin","description":"Represents a {@link io.wolfscript.command.Command} belonging to a plugin","name":"PluginCommand","qualifiedname":"io.wolfscript.command.PluginCommand","type":"class","scope":"public","describe":"final","extends":["io.wolfscript.command.Command"],"implements":["io.wolfscript.command.PluginIdentifiableCommand"],"constructors":[],"methods":[{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["java.util.List","org.apache.commons.lang.Validate","io.wolfscript.plugin.Plugin"],"properties":[{"name":"Plugin","modifier":"readonly","args":[],"description":"Get: Executes the command, returning its success","doc":{"param":["sender Source object which is executing this command","commandLabel The alias of the command used","args All arguments passed to the command, split via ' '","executor New executor to run /\n    public void setExecutor(CommandExecutor executor) {\n        this.executor = executor == null ? owningPlugin : executor;\n    }\n\n    /** Gets the {@link CommandExecutor} associated with this command","completer New tab completer /\n    public void setTabCompleter(TabCompleter completer) {\n        this.completer = completer;\n    }\n\n    /** Gets the {@link TabCompleter} associated with this command."],"return":["true if the command was successful, otherwise false /\n    @Override\n    public boolean execute(CommandSender sender, String commandLabel, String[] args) {\n        boolean success = false;\n\n        if (!owningPlugin.isEnabled()) {\n            return false;\n        }\n\n        if (!testPermission(sender)) {\n            return true;\n        }\n\n        try {\n            success = executor.onCommand(sender, this, commandLabel, args);\n        } catch (Throwable ex) {\n            throw new CommandException(\"Unhandled exception executing command '\" + commandLabel + \"' in plugin \" + owningPlugin.getDescription().getFullName(), ex);\n        }\n\n        if (!success && usageMessage.length() > 0) {\n            for (String line : usageMessage.replace(\"<command>\", commandLabel).split(\"\\n\")) {\n                sender.sendMessage(line);\n            }\n        }\n\n        return success;\n    }\n\n    /** Sets the {@link io.wolfscript.command.CommandExecutor} to run when parsing this command","CommandExecutor object linked to this command /\n    public CommandExecutor getExecutor() {\n        return executor;\n    }\n\n    /** Sets the {@link io.wolfscript.command.TabCompleter} to run when tab-completing this command. <p> If no TabCompleter is specified, and the command's executor implements TabCompleter, then the executor will be used for tab completion.","TabCompleter object linked to this command /\n    public TabCompleter getTabCompleter() {\n        return completer;\n    }\n\n    /** Gets the owner of this PluginCommand","Plugin that owns this command"]},"return":"io.wolfscript.plugin.Plugin","scope":"public","title":"Get: Executes the command, returning its success"}]},"io.wolfscript.command.PluginCommandYamlParser":{"namespace":"io.wolfscript.command","title":"class PluginCommandYamlParser","description":"class PluginCommandYamlParser","name":"PluginCommandYamlParser","qualifiedname":"io.wolfscript.command.PluginCommandYamlParser","type":"class","scope":"public","constructors":[],"methods":[{"title":"parse method","description":"parse method","scope":"public","describe":"static","return":"List<Command>","name":"parse","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"}]}],"imports":["java.util.ArrayList","java.util.List","java.util.Map","java.util.Map.Entry","io.wolfscript.WolfScript","io.wolfscript.plugin.Plugin"],"properties":[]},"io.wolfscript.command.PluginIdentifiableCommand":{"namespace":"io.wolfscript.command","title":"This interface is used by the help system to group commands into","description":"This interface is used by the help system to group commands into sub-indexes based on the {@link io.wolfscript.plugin.Plugin} they are a part of. Custom command implementations will need to implement this interface to have a sub-index automatically generated on the plugin's behalf.","name":"PluginIdentifiableCommand","qualifiedname":"io.wolfscript.command.PluginIdentifiableCommand","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.plugin.Plugin"],"properties":[{"name":"Plugin","modifier":"readonly","args":[],"description":"Get: Gets the owner of this PluginIdentifiableCommand.","doc":{"return":["Plugin that owns this PluginIdentifiableCommand."]},"return":"io.wolfscript.plugin.Plugin","scope":"public","title":"Get: Gets the owner of this PluginIdentifiableCommand."}]},"io.wolfscript.command.ProxiedCommandSender":{"namespace":"io.wolfscript.command","title":"interface ProxiedCommandSender","description":"interface ProxiedCommandSender","name":"ProxiedCommandSender","qualifiedname":"io.wolfscript.command.ProxiedCommandSender","type":"interface","scope":"public","extends":["io.wolfscript.command.CommandSender"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.command.RemoteConsoleCommandSender":{"namespace":"io.wolfscript.command","title":"interface RemoteConsoleCommandSender","description":"interface RemoteConsoleCommandSender","name":"RemoteConsoleCommandSender","qualifiedname":"io.wolfscript.command.RemoteConsoleCommandSender","type":"interface","scope":"public","extends":["io.wolfscript.command.CommandSender"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.command.SimpleCommandMap":{"namespace":"io.wolfscript.command","title":"class SimpleCommandMap","description":"class SimpleCommandMap","name":"SimpleCommandMap","qualifiedname":"io.wolfscript.command.SimpleCommandMap","type":"class","scope":"public","implements":["io.wolfscript.command.CommandMap"],"constructors":[{"title":"SimpleCommandMap constructor","description":"SimpleCommandMap constructor","scope":"public","name":"SimpleCommandMap","args":[{"name":"Server","type":"final","description":"Server argument"}]}],"methods":[{"title":"getCommand method","description":"getCommand method","scope":"public","return":"io.wolfscript.command.Command","name":"getCommand","args":[{"name":"name","type":"String","description":"name argument"}]},{"title":"{@inheritDoc}","description":"{@inheritDoc} /\n    public void registerAll(String fallbackPrefix, List<Command> commands) {\n        if (commands != null) {\n            for (Command c : commands) {\n                register(fallbackPrefix, c);\n            }\n        }\n    }\n\n    /** {@inheritDoc} /\n    public boolean register(String fallbackPrefix, Command command) {\n        return register(command.getName(), fallbackPrefix, command);\n    }\n\n    /** {@inheritDoc}","doc":{},"scope":"public","return":"boolean","name":"register","args":[{"name":"label","type":"String","description":"label argument"},{"name":"fallbackPrefix","type":"String","description":"fallbackPrefix argument"},{"name":"command","type":"io.wolfscript.command.Command","description":"command argument"}]},{"title":"registerServerAliases method","description":"registerServerAliases method","scope":"public","return":"void","name":"registerServerAliases","args":[]},{"title":"setFallbackCommands method","description":"setFallbackCommands method","scope":"public","return":"void","name":"setFallbackCommands","args":[]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"cmdLine","type":"String","description":"cmdLine argument"}]}],"imports":["io.wolfscript.util.Java15Compat.Arrays_copyOfRange","java.util.ArrayList","java.util.Collection","java.util.Collections","java.util.HashMap","java.util.Iterator","java.util.List","java.util.Map","java.util.regex.Pattern","org.apache.commons.lang.Validate","io.wolfscript.Server","io.wolfscript.command.defaults.*","io.wolfscript.entity.Player","io.wolfscript.util.StringUtil"],"properties":[{"name":"Commands","modifier":"readonly","args":[],"description":"Commands property","return":"Collection<Command>","scope":"public","title":"Commands property"}]},"io.wolfscript.command.TabCommandExecutor":{"namespace":"io.wolfscript.command","title":"Represents a class which can handle command tab completion and commands","description":"Represents a class which can handle command tab completion and commands","doc":{"deprecated":["Remains for plugins that would have implemented it even without functionality"],"see":["TabExecutor"]},"name":"TabCommandExecutor","qualifiedname":"io.wolfscript.command.TabCommandExecutor","deprecated":true,"type":"interface","scope":"public","extends":["io.wolfscript.command.CommandExecutor"],"constructors":[],"methods":[{"title":"onTabComplete method","description":"onTabComplete method","scope":"public","return":"List<String>","name":"onTabComplete","args":[]}],"imports":["java.util.List"],"properties":[]},"io.wolfscript.command.TabCompleter":{"namespace":"io.wolfscript.command","title":"Represents a class which can suggest tab completions for commands.","description":"Represents a class which can suggest tab completions for commands.","name":"TabCompleter","qualifiedname":"io.wolfscript.command.TabCompleter","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Requests a list of possible completions for a command argument.","description":"Requests a list of possible completions for a command argument.","doc":{"return":["A List of possible completions for the final argument, or null to default to the command executor"]},"scope":"public","return":"List<String>","name":"onTabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"Source of the command"},{"name":"command","type":"io.wolfscript.command.Command","description":"Command which was executed"},{"name":"alias","type":"String","description":"The alias used"}]}],"imports":["java.util.List"],"properties":[]},"io.wolfscript.command.defaults.0":{"namespace":"io.wolfscript.command","title":"Commands for emulating the Minecraft commands and other necessary ones for","description":"Commands for emulating the Minecraft commands and other necessary ones for use by a WolfScript implementation.","name":"defaults","qualifiedname":"io.wolfscript.command.defaults.0","packagename":"io.wolfscript.command.defaults","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.command.defaults.AchievementCommand","io.wolfscript.command.defaults.BanCommand","io.wolfscript.command.defaults.BanIpCommand","io.wolfscript.command.defaults.BanListCommand","io.wolfscript.command.defaults.ClearCommand","io.wolfscript.command.defaults.DefaultGameModeCommand","io.wolfscript.command.defaults.DeopCommand","io.wolfscript.command.defaults.DifficultyCommand","io.wolfscript.command.defaults.EffectCommand","io.wolfscript.command.defaults.EnchantCommand","io.wolfscript.command.defaults.ExpCommand","io.wolfscript.command.defaults.GameModeCommand","io.wolfscript.command.defaults.GameRuleCommand","io.wolfscript.command.defaults.GiveCommand","io.wolfscript.command.defaults.HelpCommand","io.wolfscript.command.defaults.KickCommand","io.wolfscript.command.defaults.KillCommand","io.wolfscript.command.defaults.ListCommand","io.wolfscript.command.defaults.MeCommand","io.wolfscript.command.defaults.OpCommand","io.wolfscript.command.defaults.PardonCommand","io.wolfscript.command.defaults.PardonIpCommand","io.wolfscript.command.defaults.PlaySoundCommand","io.wolfscript.command.defaults.PluginsCommand","io.wolfscript.command.defaults.ReloadCommand","io.wolfscript.command.defaults.SaveCommand","io.wolfscript.command.defaults.SaveOffCommand","io.wolfscript.command.defaults.SaveOnCommand","io.wolfscript.command.defaults.SayCommand","io.wolfscript.command.defaults.ScoreboardCommand","io.wolfscript.command.defaults.SeedCommand","io.wolfscript.command.defaults.SetIdleTimeoutCommand","io.wolfscript.command.defaults.SetWorldSpawnCommand","io.wolfscript.command.defaults.SpawnpointCommand","io.wolfscript.command.defaults.SpreadPlayersCommand","io.wolfscript.command.defaults.StopCommand","io.wolfscript.command.defaults.TeleportCommand","io.wolfscript.command.defaults.TellCommand","io.wolfscript.command.defaults.TestForCommand","io.wolfscript.command.defaults.TimeCommand","io.wolfscript.command.defaults.TimingsCommand","io.wolfscript.command.defaults.ToggleDownfallCommand","io.wolfscript.command.defaults.VanillaCommand","io.wolfscript.command.defaults.VersionCommand","io.wolfscript.command.defaults.WeatherCommand","io.wolfscript.command.defaults.WhitelistCommand","io.wolfscript.command.defaults.WolfScriptCommand"],"interfaces":[],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.command.defaults.AchievementCommand":{"namespace":"io.wolfscript.command.defaults","title":"class AchievementCommand","description":"class AchievementCommand","name":"AchievementCommand","qualifiedname":"io.wolfscript.command.defaults.AchievementCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"AchievementCommand constructor","description":"AchievementCommand constructor","scope":"public","name":"AchievementCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.ArrayList","java.util.Arrays","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.Achievement","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.Statistic","io.wolfscript.Material","io.wolfscript.Statistic.Type","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.EntityType","io.wolfscript.entity.Player","io.wolfscript.event.player.PlayerAchievementAwardedEvent","io.wolfscript.event.player.PlayerStatisticIncrementEvent","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.BanCommand":{"namespace":"io.wolfscript.command.defaults","title":"class BanCommand","description":"class BanCommand","name":"BanCommand","qualifiedname":"io.wolfscript.command.defaults.BanCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"BanCommand constructor","description":"BanCommand constructor","scope":"public","name":"BanCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.List","org.apache.commons.lang.StringUtils","org.apache.commons.lang.Validate","io.wolfscript.BanList","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.BanIpCommand":{"namespace":"io.wolfscript.command.defaults","title":"class BanIpCommand","description":"class BanIpCommand","name":"BanIpCommand","qualifiedname":"io.wolfscript.command.defaults.BanIpCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"BanIpCommand constructor","description":"BanIpCommand constructor","scope":"public","name":"BanIpCommand","args":[]}],"fields":[{"title":"ipValidity field","description":"ipValidity field","name":"ipValidity","scope":"public","type":"java.util.regex.Pattern","describe":"static final"}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.List","java.util.regex.Pattern","org.apache.commons.lang.StringUtils","org.apache.commons.lang.Validate","io.wolfscript.BanList","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.BanListCommand":{"namespace":"io.wolfscript.command.defaults","title":"class BanListCommand","description":"class BanListCommand","name":"BanListCommand","qualifiedname":"io.wolfscript.command.defaults.BanListCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"BanListCommand constructor","description":"BanListCommand constructor","scope":"public","name":"BanListCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"alias","type":"String","description":"alias argument"}]}],"imports":["java.util.ArrayList","java.util.List","java.util.UUID","org.apache.commons.lang.Validate","io.wolfscript.BanEntry","io.wolfscript.BanList","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.OfflinePlayer","io.wolfscript.command.CommandSender","io.wolfscript.util.StringUtil","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.ClearCommand":{"namespace":"io.wolfscript.command.defaults","title":"class ClearCommand","description":"class ClearCommand","name":"ClearCommand","qualifiedname":"io.wolfscript.command.defaults.ClearCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"ClearCommand constructor","description":"ClearCommand constructor","scope":"public","name":"ClearCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["com.google.common.collect.ImmutableList","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.Material","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","io.wolfscript.util.StringUtil","java.util.ArrayList","java.util.Collections","java.util.List"],"properties":[]},"io.wolfscript.command.defaults.DefaultGameModeCommand":{"namespace":"io.wolfscript.command.defaults","title":"class DefaultGameModeCommand","description":"class DefaultGameModeCommand","name":"DefaultGameModeCommand","qualifiedname":"io.wolfscript.command.defaults.DefaultGameModeCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"DefaultGameModeCommand constructor","description":"DefaultGameModeCommand constructor","scope":"public","name":"DefaultGameModeCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"commandLabel","type":"String","description":"commandLabel argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"alias","type":"String","description":"alias argument"}]}],"imports":["java.util.ArrayList","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.GameMode","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.util.StringUtil","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.DeopCommand":{"namespace":"io.wolfscript.command.defaults","title":"class DeopCommand","description":"class DeopCommand","name":"DeopCommand","qualifiedname":"io.wolfscript.command.defaults.DeopCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"DeopCommand constructor","description":"DeopCommand constructor","scope":"public","name":"DeopCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.ArrayList","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.OfflinePlayer","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","io.wolfscript.util.StringUtil","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.DifficultyCommand":{"namespace":"io.wolfscript.command.defaults","title":"class DifficultyCommand","description":"class DifficultyCommand","name":"DifficultyCommand","qualifiedname":"io.wolfscript.command.defaults.DifficultyCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"DifficultyCommand constructor","description":"DifficultyCommand constructor","scope":"public","name":"DifficultyCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"alias","type":"String","description":"alias argument"}]}],"imports":["com.google.common.collect.ImmutableList","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.util.StringUtil","io.wolfscript.Difficulty","java.util.ArrayList","java.util.List"],"properties":[]},"io.wolfscript.command.defaults.EffectCommand":{"namespace":"io.wolfscript.command.defaults","title":"class EffectCommand","description":"class EffectCommand","name":"EffectCommand","qualifiedname":"io.wolfscript.command.defaults.EffectCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"EffectCommand constructor","description":"EffectCommand constructor","scope":"public","name":"EffectCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"commandLabel","type":"String","description":"commandLabel argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"commandLabel","type":"String","description":"commandLabel argument"}]}],"imports":["com.google.common.collect.ImmutableList","java.util.ArrayList","java.util.List","io.wolfscript.ChatColor","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","io.wolfscript.potion.PotionEffect","io.wolfscript.potion.PotionEffectType","io.wolfscript.util.StringUtil"],"properties":[]},"io.wolfscript.command.defaults.EnchantCommand":{"namespace":"io.wolfscript.command.defaults","title":"class EnchantCommand","description":"class EnchantCommand","name":"EnchantCommand","qualifiedname":"io.wolfscript.command.defaults.EnchantCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"EnchantCommand constructor","description":"EnchantCommand constructor","scope":"public","name":"EnchantCommand","args":[]}],"methods":[{"title":"buildEnchantments method","description":"buildEnchantments method","scope":"public","describe":"static","return":"void","name":"buildEnchantments","args":[]},{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"commandLabel","type":"String","description":"commandLabel argument"}]}],"imports":["java.util.ArrayList","java.util.Collections","java.util.List","java.util.Map","org.apache.commons.lang.Validate","org.apache.commons.lang.WordUtils","com.google.common.collect.ImmutableList","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.Material","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.enchantments.Enchantment","io.wolfscript.entity.Player","io.wolfscript.inventory.ItemStack","io.wolfscript.util.StringUtil"],"properties":[]},"io.wolfscript.command.defaults.ExpCommand":{"namespace":"io.wolfscript.command.defaults","title":"class ExpCommand","description":"class ExpCommand","name":"ExpCommand","qualifiedname":"io.wolfscript.command.defaults.ExpCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"ExpCommand constructor","description":"ExpCommand constructor","scope":"public","name":"ExpCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.GameModeCommand":{"namespace":"io.wolfscript.command.defaults","title":"class GameModeCommand","description":"class GameModeCommand","name":"GameModeCommand","qualifiedname":"io.wolfscript.command.defaults.GameModeCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"GameModeCommand constructor","description":"GameModeCommand constructor","scope":"public","name":"GameModeCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"alias","type":"String","description":"alias argument"}]}],"imports":["java.util.ArrayList","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.GameMode","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","io.wolfscript.util.StringUtil","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.GameRuleCommand":{"namespace":"io.wolfscript.command.defaults","title":"class GameRuleCommand","description":"class GameRuleCommand","name":"GameRuleCommand","qualifiedname":"io.wolfscript.command.defaults.GameRuleCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"GameRuleCommand constructor","description":"GameRuleCommand constructor","scope":"public","name":"GameRuleCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["com.google.common.collect.ImmutableList","org.apache.commons.lang.Validate","io.wolfscript.ChatColor","io.wolfscript.command.BlockCommandSender","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.util.StringUtil","java.util.ArrayList","java.util.Arrays","java.util.List","io.wolfscript.WolfScript","io.wolfscript.World","io.wolfscript.entity.HumanEntity"],"properties":[]},"io.wolfscript.command.defaults.GiveCommand":{"namespace":"io.wolfscript.command.defaults","title":"class GiveCommand","description":"class GiveCommand","name":"GiveCommand","qualifiedname":"io.wolfscript.command.defaults.GiveCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"GiveCommand constructor","description":"GiveCommand constructor","scope":"public","name":"GiveCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.ArrayList","java.util.Arrays","java.util.Collections","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.Material","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","io.wolfscript.inventory.ItemStack","io.wolfscript.util.StringUtil","com.google.common.base.Joiner","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.HelpCommand":{"namespace":"io.wolfscript.command.defaults","title":"class HelpCommand","description":"class HelpCommand","name":"HelpCommand","qualifiedname":"io.wolfscript.command.defaults.HelpCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"HelpCommand constructor","description":"HelpCommand constructor","scope":"public","name":"HelpCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"alias","type":"String","description":"alias argument"}]}],"imports":["java.util.ArrayList","java.util.Arrays","java.util.HashMap","java.util.List","java.util.Map","java.util.Set","java.util.TreeSet","org.apache.commons.lang.ArrayUtils","org.apache.commons.lang.StringUtils","org.apache.commons.lang.Validate","org.apache.commons.lang.math.NumberUtils","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.CommandSender","io.wolfscript.command.ConsoleCommandSender","io.wolfscript.help.HelpMap","io.wolfscript.help.HelpTopic","io.wolfscript.help.HelpTopicComparator","io.wolfscript.help.IndexHelpTopic","io.wolfscript.util.ChatPaginator","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.KickCommand":{"namespace":"io.wolfscript.command.defaults","title":"class KickCommand","description":"class KickCommand","name":"KickCommand","qualifiedname":"io.wolfscript.command.defaults.KickCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"KickCommand constructor","description":"KickCommand constructor","scope":"public","name":"KickCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.KillCommand":{"namespace":"io.wolfscript.command.defaults","title":"class KillCommand","description":"class KillCommand","name":"KillCommand","qualifiedname":"io.wolfscript.command.defaults.KillCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"KillCommand constructor","description":"KillCommand constructor","scope":"public","name":"KillCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","io.wolfscript.event.entity.EntityDamageEvent","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.ListCommand":{"namespace":"io.wolfscript.command.defaults","title":"class ListCommand","description":"class ListCommand","name":"ListCommand","qualifiedname":"io.wolfscript.command.defaults.ListCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"ListCommand constructor","description":"ListCommand constructor","scope":"public","name":"ListCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.Collection","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.MeCommand":{"namespace":"io.wolfscript.command.defaults","title":"class MeCommand","description":"class MeCommand","name":"MeCommand","qualifiedname":"io.wolfscript.command.defaults.MeCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"MeCommand constructor","description":"MeCommand constructor","scope":"public","name":"MeCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.CommandSender"],"properties":[]},"io.wolfscript.command.defaults.OpCommand":{"namespace":"io.wolfscript.command.defaults","title":"class OpCommand","description":"class OpCommand","name":"OpCommand","qualifiedname":"io.wolfscript.command.defaults.OpCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"OpCommand constructor","description":"OpCommand constructor","scope":"public","name":"OpCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.ArrayList","java.util.Collections","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.OfflinePlayer","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","io.wolfscript.util.StringUtil","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.PardonCommand":{"namespace":"io.wolfscript.command.defaults","title":"class PardonCommand","description":"class PardonCommand","name":"PardonCommand","qualifiedname":"io.wolfscript.command.defaults.PardonCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"PardonCommand constructor","description":"PardonCommand constructor","scope":"public","name":"PardonCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.ArrayList","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.BanList","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.OfflinePlayer","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.util.StringUtil","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.PardonIpCommand":{"namespace":"io.wolfscript.command.defaults","title":"class PardonIpCommand","description":"class PardonIpCommand","name":"PardonIpCommand","qualifiedname":"io.wolfscript.command.defaults.PardonIpCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"PardonIpCommand constructor","description":"PardonIpCommand constructor","scope":"public","name":"PardonIpCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.ArrayList","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.util.StringUtil","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.PlaySoundCommand":{"namespace":"io.wolfscript.command.defaults","title":"class PlaySoundCommand","description":"class PlaySoundCommand","name":"PlaySoundCommand","qualifiedname":"io.wolfscript.command.defaults.PlaySoundCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"PlaySoundCommand constructor","description":"PlaySoundCommand constructor","scope":"public","name":"PlaySoundCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.Location","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player"],"properties":[]},"io.wolfscript.command.defaults.PluginsCommand":{"namespace":"io.wolfscript.command.defaults","title":"class PluginsCommand","description":"class PluginsCommand","name":"PluginsCommand","qualifiedname":"io.wolfscript.command.defaults.PluginsCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.WolfScriptCommand"],"constructors":[{"title":"PluginsCommand constructor","description":"PluginsCommand constructor","scope":"public","name":"PluginsCommand","args":[{"name":"name","type":"String","description":"name argument"}]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.Arrays","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.CommandSender","io.wolfscript.plugin.Plugin"],"properties":[]},"io.wolfscript.command.defaults.ReloadCommand":{"namespace":"io.wolfscript.command.defaults","title":"class ReloadCommand","description":"class ReloadCommand","name":"ReloadCommand","qualifiedname":"io.wolfscript.command.defaults.ReloadCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.WolfScriptCommand"],"constructors":[{"title":"ReloadCommand constructor","description":"ReloadCommand constructor","scope":"public","name":"ReloadCommand","args":[{"name":"name","type":"String","description":"name argument"}]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.Arrays","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.Command","io.wolfscript.command.CommandSender"],"properties":[]},"io.wolfscript.command.defaults.SaveCommand":{"namespace":"io.wolfscript.command.defaults","title":"class SaveCommand","description":"class SaveCommand","name":"SaveCommand","qualifiedname":"io.wolfscript.command.defaults.SaveCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"SaveCommand constructor","description":"SaveCommand constructor","scope":"public","name":"SaveCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.World","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.SaveOffCommand":{"namespace":"io.wolfscript.command.defaults","title":"class SaveOffCommand","description":"class SaveOffCommand","name":"SaveOffCommand","qualifiedname":"io.wolfscript.command.defaults.SaveOffCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"SaveOffCommand constructor","description":"SaveOffCommand constructor","scope":"public","name":"SaveOffCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.World","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.SaveOnCommand":{"namespace":"io.wolfscript.command.defaults","title":"class SaveOnCommand","description":"class SaveOnCommand","name":"SaveOnCommand","qualifiedname":"io.wolfscript.command.defaults.SaveOnCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"SaveOnCommand constructor","description":"SaveOnCommand constructor","scope":"public","name":"SaveOnCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.World","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.SayCommand":{"namespace":"io.wolfscript.command.defaults","title":"class SayCommand","description":"class SayCommand","name":"SayCommand","qualifiedname":"io.wolfscript.command.defaults.SayCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"SayCommand constructor","description":"SayCommand constructor","scope":"public","name":"SayCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.CommandSender","io.wolfscript.command.ConsoleCommandSender","io.wolfscript.entity.Player","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.ScoreboardCommand":{"namespace":"io.wolfscript.command.defaults","title":"class ScoreboardCommand","description":"class ScoreboardCommand","name":"ScoreboardCommand","qualifiedname":"io.wolfscript.command.defaults.ScoreboardCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"ScoreboardCommand constructor","description":"ScoreboardCommand constructor","scope":"public","name":"ScoreboardCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.ArrayList","java.util.Collection","java.util.Collections","java.util.HashSet","java.util.List","java.util.Map","java.util.Set","org.apache.commons.lang.ArrayUtils","org.apache.commons.lang.StringUtils","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.OfflinePlayer","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","io.wolfscript.scoreboard.DisplaySlot","io.wolfscript.scoreboard.Objective","io.wolfscript.scoreboard.Score","io.wolfscript.scoreboard.Scoreboard","io.wolfscript.scoreboard.Team","io.wolfscript.util.StringUtil","com.google.common.collect.ImmutableList","com.google.common.collect.ImmutableMap"],"properties":[]},"io.wolfscript.command.defaults.SeedCommand":{"namespace":"io.wolfscript.command.defaults","title":"class SeedCommand","description":"class SeedCommand","name":"SeedCommand","qualifiedname":"io.wolfscript.command.defaults.SeedCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"SeedCommand constructor","description":"SeedCommand constructor","scope":"public","name":"SeedCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"commandLabel","type":"String","description":"commandLabel argument"}]}],"imports":["java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.SetIdleTimeoutCommand":{"namespace":"io.wolfscript.command.defaults","title":"class SetIdleTimeoutCommand","description":"class SetIdleTimeoutCommand","name":"SetIdleTimeoutCommand","qualifiedname":"io.wolfscript.command.defaults.SetIdleTimeoutCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"SetIdleTimeoutCommand constructor","description":"SetIdleTimeoutCommand constructor","scope":"public","name":"SetIdleTimeoutCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"alias","type":"String","description":"alias argument"}]}],"imports":["com.google.common.collect.ImmutableList","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","java.util.List"],"properties":[]},"io.wolfscript.command.defaults.SetWorldSpawnCommand":{"namespace":"io.wolfscript.command.defaults","title":"class SetWorldSpawnCommand","description":"class SetWorldSpawnCommand","name":"SetWorldSpawnCommand","qualifiedname":"io.wolfscript.command.defaults.SetWorldSpawnCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"SetWorldSpawnCommand constructor","description":"SetWorldSpawnCommand constructor","scope":"public","name":"SetWorldSpawnCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"alias","type":"String","description":"alias argument"}]}],"imports":["com.google.common.collect.ImmutableList","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.Location","io.wolfscript.World","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","java.util.List"],"properties":[]},"io.wolfscript.command.defaults.SpawnpointCommand":{"namespace":"io.wolfscript.command.defaults","title":"class SpawnpointCommand","description":"class SpawnpointCommand","name":"SpawnpointCommand","qualifiedname":"io.wolfscript.command.defaults.SpawnpointCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"SpawnpointCommand constructor","description":"SpawnpointCommand constructor","scope":"public","name":"SpawnpointCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"alias","type":"String","description":"alias argument"}]}],"imports":["com.google.common.collect.ImmutableList","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.Location","io.wolfscript.World","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","java.util.List"],"properties":[]},"io.wolfscript.command.defaults.SpreadPlayersCommand":{"namespace":"io.wolfscript.command.defaults","title":"class SpreadPlayersCommand","description":"class SpreadPlayersCommand","name":"SpreadPlayersCommand","qualifiedname":"io.wolfscript.command.defaults.SpreadPlayersCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"SpreadPlayersCommand constructor","description":"SpreadPlayersCommand constructor","scope":"public","name":"SpreadPlayersCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"commandLabel","type":"String","description":"commandLabel argument"}]}],"imports":["com.google.common.collect.Lists","com.google.common.collect.Maps","com.google.common.collect.Sets","java.util.List","java.util.Map","java.util.Random","java.util.Set","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.Location","io.wolfscript.World","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","io.wolfscript.scoreboard.Team"],"properties":[]},"io.wolfscript.command.defaults.StopCommand":{"namespace":"io.wolfscript.command.defaults","title":"class StopCommand","description":"class StopCommand","name":"StopCommand","qualifiedname":"io.wolfscript.command.defaults.StopCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"StopCommand constructor","description":"StopCommand constructor","scope":"public","name":"StopCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.List","org.apache.commons.lang.StringUtils","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.TeleportCommand":{"namespace":"io.wolfscript.command.defaults","title":"class TeleportCommand","description":"class TeleportCommand","name":"TeleportCommand","qualifiedname":"io.wolfscript.command.defaults.TeleportCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"TeleportCommand constructor","description":"TeleportCommand constructor","scope":"public","name":"TeleportCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.Location","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","io.wolfscript.event.player.PlayerTeleportEvent.TeleportCause","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.TellCommand":{"namespace":"io.wolfscript.command.defaults","title":"class TellCommand","description":"class TellCommand","name":"TellCommand","qualifiedname":"io.wolfscript.command.defaults.TellCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"TellCommand constructor","description":"TellCommand constructor","scope":"public","name":"TellCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.Arrays","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player"],"properties":[]},"io.wolfscript.command.defaults.TestForCommand":{"namespace":"io.wolfscript.command.defaults","title":"class TestForCommand","description":"class TestForCommand","name":"TestForCommand","qualifiedname":"io.wolfscript.command.defaults.TestForCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"TestForCommand constructor","description":"TestForCommand constructor","scope":"public","name":"TestForCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.CommandSender"],"properties":[]},"io.wolfscript.command.defaults.TimeCommand":{"namespace":"io.wolfscript.command.defaults","title":"class TimeCommand","description":"class TimeCommand","name":"TimeCommand","qualifiedname":"io.wolfscript.command.defaults.TimeCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"TimeCommand constructor","description":"TimeCommand constructor","scope":"public","name":"TimeCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"alias","type":"String","description":"alias argument"}]}],"imports":["java.util.ArrayList","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.World","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.util.StringUtil","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.TimingsCommand":{"namespace":"io.wolfscript.command.defaults","title":"class TimingsCommand","description":"class TimingsCommand","name":"TimingsCommand","qualifiedname":"io.wolfscript.command.defaults.TimingsCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.WolfScriptCommand"],"constructors":[{"title":"TimingsCommand constructor","description":"TimingsCommand constructor","scope":"public","name":"TimingsCommand","args":[{"name":"name","type":"String","description":"name argument"}]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"alias","type":"String","description":"alias argument"}]}],"imports":["java.io.File","java.io.IOException","java.io.PrintStream","java.util.ArrayList","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.CommandSender","io.wolfscript.event.Event","io.wolfscript.event.HandlerList","io.wolfscript.plugin.Plugin","io.wolfscript.plugin.RegisteredListener","io.wolfscript.plugin.TimedRegisteredListener","io.wolfscript.util.StringUtil","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.ToggleDownfallCommand":{"namespace":"io.wolfscript.command.defaults","title":"class ToggleDownfallCommand","description":"class ToggleDownfallCommand","name":"ToggleDownfallCommand","qualifiedname":"io.wolfscript.command.defaults.ToggleDownfallCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"ToggleDownfallCommand constructor","description":"ToggleDownfallCommand constructor","scope":"public","name":"ToggleDownfallCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]}],"imports":["java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.World","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.entity.Player","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.VanillaCommand":{"namespace":"io.wolfscript.command.defaults","title":"class VanillaCommand","description":"class VanillaCommand","name":"VanillaCommand","qualifiedname":"io.wolfscript.command.defaults.VanillaCommand","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.command.Command"],"constructors":[],"methods":[{"title":"getDouble method","description":"getDouble method","scope":"public","describe":"static","return":"double","name":"getDouble","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"input","type":"String","description":"input argument"}]},{"title":"getDouble method","description":"getDouble method","scope":"public","describe":"static","return":"double","name":"getDouble","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"input","type":"String","description":"input argument"},{"name":"min","type":"double","description":"min argument"},{"name":"max","type":"double","description":"max argument"}]},{"title":"getRelativeDouble method","description":"getRelativeDouble method","scope":"public","describe":"static","return":"double","name":"getRelativeDouble","args":[{"name":"original","type":"double","description":"original argument"},{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"input","type":"String","description":"input argument"}]},{"title":"matches method","description":"matches method","scope":"public","return":"boolean","name":"matches","args":[{"name":"input","type":"String","description":"input argument"}]}],"imports":["java.util.List","io.wolfscript.command.Command","io.wolfscript.command.CommandSender"],"properties":[]},"io.wolfscript.command.defaults.VersionCommand":{"namespace":"io.wolfscript.command.defaults","title":"class VersionCommand","description":"class VersionCommand","name":"VersionCommand","qualifiedname":"io.wolfscript.command.defaults.VersionCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.WolfScriptCommand"],"constructors":[{"title":"VersionCommand constructor","description":"VersionCommand constructor","scope":"public","name":"VersionCommand","args":[{"name":"name","type":"String","description":"name argument"}]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"alias","type":"String","description":"alias argument"}]}],"imports":["com.google.common.base.Charsets","java.util.ArrayList","java.util.Arrays","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.command.CommandSender","io.wolfscript.plugin.Plugin","io.wolfscript.plugin.PluginDescriptionFile","io.wolfscript.util.StringUtil","com.google.common.collect.ImmutableList","com.google.common.io.Resources","java.io.BufferedReader","java.io.IOException","java.net.URL","java.net.URLEncoder","java.util.HashSet","java.util.Set","java.util.concurrent.locks.ReentrantLock","java.util.logging.Level","java.util.logging.Logger","org.json.simple.JSONObject","org.json.simple.parser.JSONParser","org.json.simple.parser.ParseException"],"properties":[]},"io.wolfscript.command.defaults.WeatherCommand":{"namespace":"io.wolfscript.command.defaults","title":"class WeatherCommand","description":"class WeatherCommand","name":"WeatherCommand","qualifiedname":"io.wolfscript.command.defaults.WeatherCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"WeatherCommand constructor","description":"WeatherCommand constructor","scope":"public","name":"WeatherCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"alias","type":"String","description":"alias argument"}]}],"imports":["com.google.common.collect.ImmutableList","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.World","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.util.StringUtil","java.util.ArrayList","java.util.List","java.util.Random"],"properties":[]},"io.wolfscript.command.defaults.WhitelistCommand":{"namespace":"io.wolfscript.command.defaults","title":"class WhitelistCommand","description":"class WhitelistCommand","name":"WhitelistCommand","qualifiedname":"io.wolfscript.command.defaults.WhitelistCommand","type":"class","scope":"public","extends":["io.wolfscript.command.defaults.VanillaCommand"],"constructors":[{"title":"WhitelistCommand constructor","description":"WhitelistCommand constructor","scope":"public","name":"WhitelistCommand","args":[]}],"methods":[{"title":"execute method","description":"execute method","scope":"public","return":"boolean","name":"execute","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"currentAlias","type":"String","description":"currentAlias argument"}]},{"title":"tabComplete method","description":"tabComplete method","scope":"public","return":"List<String>","name":"tabComplete","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"},{"name":"alias","type":"String","description":"alias argument"}]}],"imports":["java.util.ArrayList","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.ChatColor","io.wolfscript.OfflinePlayer","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.util.StringUtil","com.google.common.collect.ImmutableList"],"properties":[]},"io.wolfscript.command.defaults.WolfScriptCommand":{"namespace":"io.wolfscript.command.defaults","title":"class WolfScriptCommand","description":"class WolfScriptCommand","name":"WolfScriptCommand","qualifiedname":"io.wolfscript.command.defaults.WolfScriptCommand","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.command.Command"],"constructors":[],"methods":[],"imports":["java.util.List","io.wolfscript.command.Command"],"properties":[]},"io.wolfscript.configuration.0":{"namespace":"io.wolfscript","title":"Classes dedicated to handling a plugin's runtime configuration.","description":"Classes dedicated to handling a plugin's runtime configuration.","name":"configuration","qualifiedname":"io.wolfscript.configuration.0","packagename":"io.wolfscript.configuration","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.configuration.ConfigurationOptions","io.wolfscript.configuration.InvalidConfigurationException","io.wolfscript.configuration.MemoryConfiguration","io.wolfscript.configuration.MemoryConfigurationOptions","io.wolfscript.configuration.MemorySection"],"interfaces":["io.wolfscript.configuration.Configuration","io.wolfscript.configuration.ConfigurationSection"],"enums":[],"namespaces":["io.wolfscript.configuration.file.0","io.wolfscript.configuration.serialization.0"],"properties":[]},"io.wolfscript.configuration.Configuration":{"namespace":"io.wolfscript.configuration","title":"Represents a source of configurable options and settings","description":"Represents a source of configurable options and settings","name":"Configuration","qualifiedname":"io.wolfscript.configuration.Configuration","type":"interface","scope":"public","extends":["io.wolfscript.configuration.ConfigurationSection"],"constructors":[],"methods":[{"title":"Sets the default value of the given path as provided.","description":"Sets the default value of the given path as provided. <p> If no source {@link io.wolfscript.configuration.Configuration} was provided as a default collection, then a new {@link io.wolfscript.configuration.MemoryConfiguration} will be created to hold the new default value. <p> If value is null, the value will be removed from the default Configuration source.","doc":{"param":["path Path of the value to set.","value Value to set the default to.","defaults A map of Path{@literal ->}Values to add to defaults.","defaults A configuration holding a list of defaults to copy.","defaults New source of default values for this configuration."],"throws":["IllegalArgumentException Thrown if path is null. /\n    public void addDefault(String path, Object value);\n\n    /** Sets the default values of the given paths as provided. <p> If no source {@link Configuration} was provided as a default collection, then a new {@link MemoryConfiguration} will be created to hold the new default values.","IllegalArgumentException Thrown if defaults is null. /\n    public void addDefaults(Map<String, Object> defaults);\n\n    /** Sets the default values of the given paths as provided. <p> If no source {@link Configuration} was provided as a default collection, then a new {@link MemoryConfiguration} will be created to hold the new default value. <p> This method will not hold a reference to the specified Configuration, nor will it automatically update if that Configuration ever changes. If you require this, you should set the default source with {@link #setDefaults(io.wolfscript.configuration.Configuration)}.","IllegalArgumentException Thrown if defaults is null or this. /\n    public void addDefaults(Configuration defaults);\n\n    /** Sets the source of all default values for this {@link Configuration}. <p> If a previous source was set, or previous default values were defined, then they will not be copied to the new source.","IllegalArgumentException Thrown if defaults is null or this. /\n    public void setDefaults(Configuration defaults);\n\n    /** Gets the source {@link Configuration} for this configuration. <p> If no configuration source was set, but default values were added, then a {@link MemoryConfiguration} will be returned. If no source was set and no defaults were set, then this method will return null."],"return":["Configuration source for default values, or null if none exist. /\n    public Configuration getDefaults();\n\n    /** Gets the {@link io.wolfscript.configuration.ConfigurationOptions} for this {@link io.wolfscript.configuration.Configuration}. <p> All setters through this method are chainable.","Options for this configuration"]},"scope":"public","return":"io.wolfscript.configuration.ConfigurationOptions","name":"options","args":[]}],"imports":["java.util.Map"],"properties":[]},"io.wolfscript.configuration.ConfigurationOptions":{"namespace":"io.wolfscript.configuration","title":"Various settings for controlling the input and output of a {@link","description":"Various settings for controlling the input and output of a {@link io.wolfscript.configuration.Configuration}","name":"ConfigurationOptions","qualifiedname":"io.wolfscript.configuration.ConfigurationOptions","type":"class","scope":"public","constructors":[],"methods":[{"title":"Returns the {@link io.wolfscript.configuration.Configuration} that this object is responsible for.","description":"Returns the {@link io.wolfscript.configuration.Configuration} that this object is responsible for.","doc":{"return":["Parent configuration /\n    public Configuration configuration() {\n        return configuration;\n    }\n\n    /** Gets the char that will be used to separate {@link io.wolfscript.configuration.ConfigurationSection}s <p> This value does not affect how the {@link io.wolfscript.configuration.Configuration} is stored, only in how you access the data. The default value is '.'.","Path separator /\n    public char pathSeparator() {\n        return pathSeparator;\n    }\n\n    /** Sets the char that will be used to separate {@link io.wolfscript.configuration.ConfigurationSection}s <p> This value does not affect how the {@link io.wolfscript.configuration.Configuration} is stored, only in how you access the data. The default value is '.'.","This object, for chaining /\n    public ConfigurationOptions pathSeparator(char value) {\n        this.pathSeparator = value;\n        return this;\n    }\n\n    /** Checks if the {@link io.wolfscript.configuration.Configuration} should copy values from its default {@link io.wolfscript.configuration.Configuration} directly. <p> If this is true, all values in the default Configuration will be directly copied, making it impossible to distinguish between values that were set and values that are provided by default. As a result, {@link ConfigurationSection#contains(java.lang.String)} will always return the same value as {@link ConfigurationSection#isSet(java.lang.String)}. The default value is false.","Whether or not defaults are directly copied /\n    public boolean copyDefaults() {\n        return copyDefaults;\n    }\n\n    /** Sets if the {@link io.wolfscript.configuration.Configuration} should copy values from its default {@link io.wolfscript.configuration.Configuration} directly. <p> If this is true, all values in the default Configuration will be directly copied, making it impossible to distinguish between values that were set and values that are provided by default. As a result, {@link ConfigurationSection#contains(java.lang.String)} will always return the same value as {@link ConfigurationSection#isSet(java.lang.String)}. The default value is false.","This object, for chaining"]},"scope":"public","return":"io.wolfscript.configuration.ConfigurationOptions","name":"copyDefaults","args":[{"name":"value","type":"boolean","description":"Path separator"}]}],"imports":[],"properties":[]},"io.wolfscript.configuration.ConfigurationSection":{"namespace":"io.wolfscript.configuration","title":"Represents a section of a {@link io.wolfscript.configuration.Configuration}","description":"Represents a section of a {@link io.wolfscript.configuration.Configuration}","name":"ConfigurationSection","qualifiedname":"io.wolfscript.configuration.ConfigurationSection","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Gets a set containing all keys in this section.","description":"Gets a set containing all keys in this section. <p> If deep is set to true, then this will contain all the keys within any child {@link io.wolfscript.configuration.ConfigurationSection}s (and their children, etc). These will be in a valid path notation for you to use. <p> If deep is set to false, then this will contain only the keys of any direct children, and not their own children.","doc":{"return":["Set of keys contained within this ConfigurationSection. /\n    public Set<String> getKeys(boolean deep);\n\n    /** Gets a Map containing all keys and their values for this section. <p> If deep is set to true, then this will contain all the keys and values within any child {@link io.wolfscript.configuration.ConfigurationSection}s (and their children, etc). These keys will be in a valid path notation for you to use. <p> If deep is set to false, then this will contain only the keys and values of any direct children, and not their own children.","Map of keys and values of this section. /\n    public Map<String, Object> getValues(boolean deep);\n\n    /** Checks if this {@link io.wolfscript.configuration.ConfigurationSection} contains the given path. <p> If the value for the requested path does not exist but a default value has been specified, this will return true.","True if this section contains the requested path, either via default or being set.","True if this section contains the requested path, regardless of having a default.","Path of this section relative to its root /\n    public String getCurrentPath();\n\n    /** Gets the name of this individual {@link io.wolfscript.configuration.ConfigurationSection}, in the path. <p> This will always be the final part of {@link #getCurrentPath()}, unless the section is orphaned.","Name of this section /\n    public String getName();\n\n    /** Gets the root {@link io.wolfscript.configuration.Configuration} that contains this {@link io.wolfscript.configuration.ConfigurationSection} <p> For any {@link io.wolfscript.configuration.Configuration} themselves, this will return its own object. <p> If the section is no longer contained within its root for any reason, such as being replaced with a different value, this may return null.","Root configuration containing this section. /\n    public Configuration getRoot();\n\n    /** Gets the parent {@link io.wolfscript.configuration.ConfigurationSection} that directly contains this {@link io.wolfscript.configuration.ConfigurationSection}. <p> For any {@link io.wolfscript.configuration.Configuration} themselves, this will return null. <p> If the section is no longer contained within its parent for any reason, such as being replaced with a different value, this may return null.","Parent section containing this section. /\n    public ConfigurationSection getParent();\n\n    /** Gets the requested Object by path. <p> If the Object does not exist but a default value has been specified, this will return the default value. If the Object does not exist and no default value was specified, this will return null.","Requested Object. /\n    public Object get(String path);\n\n    /** Gets the requested Object by path, returning a default value if not found. <p> If the Object does not exist then the specified default value will returned regardless of if a default has been identified in the root {@link io.wolfscript.configuration.Configuration}.","Requested Object. /\n    public Object get(String path, Object def);\n\n    /** Sets the specified path to the given value. <p> If value is null, the entry will be removed. Any existing entry will be replaced, regardless of what the new value is. <p> Some implementations may have limitations on what you may store. See their individual javadocs for details. No implementations should allow you to store {@link io.wolfscript.configuration.Configuration}s or {@link io.wolfscript.configuration.ConfigurationSection}s, please use {@link #createSection(java.lang.String)} for that.","Newly created section /\n    public ConfigurationSection createSection(String path);\n\n    /** Creates a {@link io.wolfscript.configuration.ConfigurationSection} at the specified path, with specified values. <p> Any value that was previously set at this path will be overwritten. If the previous value was itself a {@link io.wolfscript.configuration.ConfigurationSection}, it will be orphaned.","Newly created section /\n    public ConfigurationSection createSection(String path, Map<?, ?> map);\n\n    // Primitives\n    /** Gets the requested String by path. <p> If the String does not exist but a default value has been specified, this will return the default value. If the String does not exist and no default value was specified, this will return null.","Requested String. /\n    public String getString(String path);\n\n    /** Gets the requested String by path, returning a default value if not found. <p> If the String does not exist then the specified default value will returned regardless of if a default has been identified in the root {@link io.wolfscript.configuration.Configuration}.","Requested String. /\n    public String getString(String path, String def);\n\n    /** Checks if the specified path is a String. <p> If the path exists but is not a String, this will return false. If the path does not exist, this will return false. If the path does not exist but a default value has been specified, this will check if that default value is a String and return appropriately.","Whether or not the specified path is a String. /\n    public boolean isString(String path);\n\n    /** Gets the requested int by path. <p> If the int does not exist but a default value has been specified, this will return the default value. If the int does not exist and no default value was specified, this will return 0.","Requested int. /\n    public int getInt(String path);\n\n    /** Gets the requested int by path, returning a default value if not found. <p> If the int does not exist then the specified default value will returned regardless of if a default has been identified in the root {@link io.wolfscript.configuration.Configuration}.","Requested int. /\n    public int getInt(String path, int def);\n\n    /** Checks if the specified path is an int. <p> If the path exists but is not a int, this will return false. If the path does not exist, this will return false. If the path does not exist but a default value has been specified, this will check if that default value is a int and return appropriately.","Whether or not the specified path is an int. /\n    public boolean isInt(String path);\n\n    /** Gets the requested boolean by path. <p> If the boolean does not exist but a default value has been specified, this will return the default value. If the boolean does not exist and no default value was specified, this will return false.","Requested boolean. /\n    public boolean getBoolean(String path);\n\n    /** Gets the requested boolean by path, returning a default value if not found. <p> If the boolean does not exist then the specified default value will returned regardless of if a default has been identified in the root {@link io.wolfscript.configuration.Configuration}.","Requested boolean. /\n    public boolean getBoolean(String path, boolean def);\n\n    /** Checks if the specified path is a boolean. <p> If the path exists but is not a boolean, this will return false. If the path does not exist, this will return false. If the path does not exist but a default value has been specified, this will check if that default value is a boolean and return appropriately.","Whether or not the specified path is a boolean. /\n    public boolean isBoolean(String path);\n\n    /** Gets the requested double by path. <p> If the double does not exist but a default value has been specified, this will return the default value. If the double does not exist and no default value was specified, this will return 0.","Requested double. /\n    public double getDouble(String path);\n\n    /** Gets the requested double by path, returning a default value if not found. <p> If the double does not exist then the specified default value will returned regardless of if a default has been identified in the root {@link io.wolfscript.configuration.Configuration}.","Requested double. /\n    public double getDouble(String path, double def);\n\n    /** Checks if the specified path is a double. <p> If the path exists but is not a double, this will return false. If the path does not exist, this will return false. If the path does not exist but a default value has been specified, this will check if that default value is a double and return appropriately.","Whether or not the specified path is a double. /\n    public boolean isDouble(String path);\n\n    /** Gets the requested long by path. <p> If the long does not exist but a default value has been specified, this will return the default value. If the long does not exist and no default value was specified, this will return 0.","Requested long. /\n    public long getLong(String path);\n\n    /** Gets the requested long by path, returning a default value if not found. <p> If the long does not exist then the specified default value will returned regardless of if a default has been identified in the root {@link io.wolfscript.configuration.Configuration}.","Requested long. /\n    public long getLong(String path, long def);\n\n    /** Checks if the specified path is a long. <p> If the path exists but is not a long, this will return false. If the path does not exist, this will return false. If the path does not exist but a default value has been specified, this will check if that default value is a long and return appropriately.","Whether or not the specified path is a long. /\n    public boolean isLong(String path);\n\n    // Java\n    /** Gets the requested List by path. <p> If the List does not exist but a default value has been specified, this will return the default value. If the List does not exist and no default value was specified, this will return null.","Requested List. /\n    public List<?> getList(String path);\n\n    /** Gets the requested List by path, returning a default value if not found. <p> If the List does not exist then the specified default value will returned regardless of if a default has been identified in the root {@link io.wolfscript.configuration.Configuration}.","Requested List. /\n    public List<?> getList(String path, List<?> def);\n\n    /** Checks if the specified path is a List. <p> If the path exists but is not a List, this will return false. If the path does not exist, this will return false. If the path does not exist but a default value has been specified, this will check if that default value is a List and return appropriately.","Whether or not the specified path is a List. /\n    public boolean isList(String path);\n\n    /** Gets the requested List of String by path. <p> If the List does not exist but a default value has been specified, this will return the default value. If the List does not exist and no default value was specified, this will return an empty List. <p> This method will attempt to cast any values into a String if possible, but may miss any values out if they are not compatible.","Requested List of String. /\n    public List<String> getStringList(String path);\n\n    /** Gets the requested List of Integer by path. <p> If the List does not exist but a default value has been specified, this will return the default value. If the List does not exist and no default value was specified, this will return an empty List. <p> This method will attempt to cast any values into a Integer if possible, but may miss any values out if they are not compatible.","Requested List of Integer. /\n    public List<Integer> getIntegerList(String path);\n\n    /** Gets the requested List of Boolean by path. <p> If the List does not exist but a default value has been specified, this will return the default value. If the List does not exist and no default value was specified, this will return an empty List. <p> This method will attempt to cast any values into a Boolean if possible, but may miss any values out if they are not compatible.","Requested List of Boolean. /\n    public List<Boolean> getBooleanList(String path);\n\n    /** Gets the requested List of Double by path. <p> If the List does not exist but a default value has been specified, this will return the default value. If the List does not exist and no default value was specified, this will return an empty List. <p> This method will attempt to cast any values into a Double if possible, but may miss any values out if they are not compatible.","Requested List of Double. /\n    public List<Double> getDoubleList(String path);\n\n    /** Gets the requested List of Float by path. <p> If the List does not exist but a default value has been specified, this will return the default value. If the List does not exist and no default value was specified, this will return an empty List. <p> This method will attempt to cast any values into a Float if possible, but may miss any values out if they are not compatible.","Requested List of Float. /\n    public List<Float> getFloatList(String path);\n\n    /** Gets the requested List of Long by path. <p> If the List does not exist but a default value has been specified, this will return the default value. If the List does not exist and no default value was specified, this will return an empty List. <p> This method will attempt to cast any values into a Long if possible, but may miss any values out if they are not compatible.","Requested List of Long. /\n    public List<Long> getLongList(String path);\n\n    /** Gets the requested List of Byte by path. <p> If the List does not exist but a default value has been specified, this will return the default value. If the List does not exist and no default value was specified, this will return an empty List. <p> This method will attempt to cast any values into a Byte if possible, but may miss any values out if they are not compatible.","Requested List of Byte. /\n    public List<Byte> getByteList(String path);\n\n    /** Gets the requested List of Character by path. <p> If the List does not exist but a default value has been specified, this will return the default value. If the List does not exist and no default value was specified, this will return an empty List. <p> This method will attempt to cast any values into a Character if possible, but may miss any values out if they are not compatible.","Requested List of Character. /\n    public List<Character> getCharacterList(String path);\n\n    /** Gets the requested List of Short by path. <p> If the List does not exist but a default value has been specified, this will return the default value. If the List does not exist and no default value was specified, this will return an empty List. <p> This method will attempt to cast any values into a Short if possible, but may miss any values out if they are not compatible.","Requested List of Short. /\n    public List<Short> getShortList(String path);\n\n    /** Gets the requested List of Maps by path. <p> If the List does not exist but a default value has been specified, this will return the default value. If the List does not exist and no default value was specified, this will return an empty List. <p> This method will attempt to cast any values into a Map if possible, but may miss any values out if they are not compatible.","Requested List of Maps. /\n    public List<Map<?, ?>> getMapList(String path);\n\n    // WolfScript\n    /** Gets the requested Vector by path. <p> If the Vector does not exist but a default value has been specified, this will return the default value. If the Vector does not exist and no default value was specified, this will return null.","Requested Vector. /\n    public Vector getVector(String path);\n\n    /** Gets the requested {@link io.wolfscript.util.Vector} by path, returning a default value if not found. <p> If the Vector does not exist then the specified default value will returned regardless of if a default has been identified in the root {@link io.wolfscript.configuration.Configuration}.","Requested Vector. /\n    public Vector getVector(String path, Vector def);\n\n    /** Checks if the specified path is a Vector. <p> If the path exists but is not a Vector, this will return false. If the path does not exist, this will return false. If the path does not exist but a default value has been specified, this will check if that default value is a Vector and return appropriately.","Whether or not the specified path is a Vector. /\n    public boolean isVector(String path);\n\n    /** Gets the requested OfflinePlayer by path. <p> If the OfflinePlayer does not exist but a default value has been specified, this will return the default value. If the OfflinePlayer does not exist and no default value was specified, this will return null.","Requested OfflinePlayer. /\n    public OfflinePlayer getOfflinePlayer(String path);\n\n    /** Gets the requested {@link io.wolfscript.OfflinePlayer} by path, returning a default value if not found. <p> If the OfflinePlayer does not exist then the specified default value will returned regardless of if a default has been identified in the root {@link io.wolfscript.configuration.Configuration}.","Requested OfflinePlayer. /\n    public OfflinePlayer getOfflinePlayer(String path, OfflinePlayer def);\n\n    /** Checks if the specified path is an OfflinePlayer. <p> If the path exists but is not a OfflinePlayer, this will return false. If the path does not exist, this will return false. If the path does not exist but a default value has been specified, this will check if that default value is a OfflinePlayer and return appropriately.","Whether or not the specified path is an OfflinePlayer. /\n    public boolean isOfflinePlayer(String path);\n\n    /** Gets the requested ItemStack by path. <p> If the ItemStack does not exist but a default value has been specified, this will return the default value. If the ItemStack does not exist and no default value was specified, this will return null.","Requested ItemStack. /\n    public ItemStack getItemStack(String path);\n\n    /** Gets the requested {@link io.wolfscript.inventory.ItemStack} by path, returning a default value if not found. <p> If the ItemStack does not exist then the specified default value will returned regardless of if a default has been identified in the root {@link io.wolfscript.configuration.Configuration}.","Requested ItemStack. /\n    public ItemStack getItemStack(String path, ItemStack def);\n\n    /** Checks if the specified path is an ItemStack. <p> If the path exists but is not a ItemStack, this will return false. If the path does not exist, this will return false. If the path does not exist but a default value has been specified, this will check if that default value is a ItemStack and return appropriately.","Whether or not the specified path is an ItemStack. /\n    public boolean isItemStack(String path);\n\n    /** Gets the requested Color by path. <p> If the Color does not exist but a default value has been specified, this will return the default value. If the Color does not exist and no default value was specified, this will return null.","Requested Color. /\n    public Color getColor(String path);\n\n    /** Gets the requested {@link io.wolfscript.Color} by path, returning a default value if not found. <p> If the Color does not exist then the specified default value will returned regardless of if a default has been identified in the root {@link io.wolfscript.configuration.Configuration}.","Requested Color. /\n    public Color getColor(String path, Color def);\n\n    /** Checks if the specified path is a Color. <p> If the path exists but is not a Color, this will return false. If the path does not exist, this will return false. If the path does not exist but a default value has been specified, this will check if that default value is a Color and return appropriately.","Whether or not the specified path is a Color. /\n    public boolean isColor(String path);\n\n    /** Gets the requested ConfigurationSection by path. <p> If the ConfigurationSection does not exist but a default value has been specified, this will return the default value. If the ConfigurationSection does not exist and no default value was specified, this will return null.","Requested ConfigurationSection. /\n    public ConfigurationSection getConfigurationSection(String path);\n\n    /** Checks if the specified path is a ConfigurationSection. <p> If the path exists but is not a ConfigurationSection, this will return false. If the path does not exist, this will return false. If the path does not exist but a default value has been specified, this will check if that default value is a ConfigurationSection and return appropriately.","Whether or not the specified path is a ConfigurationSection. /\n    public boolean isConfigurationSection(String path);\n\n    /** Gets the equivalent {@link io.wolfscript.configuration.ConfigurationSection} from the default {@link io.wolfscript.configuration.Configuration} defined in {@link #getRoot()}. <p> If the root contains no defaults, or the defaults doesn't contain a value for this path, or the value at this path is not a {@link io.wolfscript.configuration.ConfigurationSection} then this will return null.","Equivalent section in root configuration /\n    public ConfigurationSection getDefaultSection();\n\n    /** Sets the default value in the root at the given path as provided. <p> If no source {@link io.wolfscript.configuration.Configuration} was provided as a default collection, then a new {@link io.wolfscript.configuration.MemoryConfiguration} will be created to hold the new default value. <p> If value is null, the value will be removed from the default Configuration source. <p> If the value as returned by {@link #getDefaultSection()} is null, then this will create a new section at the path, replacing anything that may have existed there previously."],"throws":["IllegalArgumentException Thrown when path is null. /\n    public boolean contains(String path);\n\n    /** Checks if this {@link ConfigurationSection} has a value set for the given path. <p> If the value for the requested path does not exist but a default value has been specified, this will still return false.","IllegalArgumentException Thrown when path is null. /\n    public boolean isSet(String path);\n\n    /** Gets the path of this {@link ConfigurationSection} from its root {@link Configuration} <p> For any {@link Configuration} themselves, this will return an empty string. <p> If the section is no longer contained within its root for any reason, such as being replaced with a different value, this may return null. <p> To retrieve the single name of this section, that is, the final part of the path returned by this method, you may use {@link #getName()}.","IllegalArgumentException Thrown if path is null."]},"scope":"public","return":"void","name":"addDefault","args":[{"name":"path","type":"String","description":"Path to check for existence."},{"name":"value","type":"Object","description":"New value to set the path to. /\n    public void set(String path, Object value);\n\n    /** Creates an empty {@link io.wolfscript.configuration.ConfigurationSection} at the specified path. <p> Any value that was previously set at this path will be overwritten. If the previous value was itself a {@link io.wolfscript.configuration.ConfigurationSection}, it will be orphaned."}]}],"imports":["java.util.Map","java.util.Set","java.util.List","io.wolfscript.Color","io.wolfscript.OfflinePlayer","io.wolfscript.util.Vector","io.wolfscript.inventory.ItemStack"],"properties":[]},"io.wolfscript.configuration.InvalidConfigurationException":{"namespace":"io.wolfscript.configuration","title":"Exception thrown when attempting to load an invalid {@link io.wolfscript.configuration.Configuration}","description":"Exception thrown when attempting to load an invalid {@link io.wolfscript.configuration.Configuration}","name":"InvalidConfigurationException","qualifiedname":"io.wolfscript.configuration.InvalidConfigurationException","type":"class","scope":"public","extends":["Exception"],"constructors":[{"title":"Creates a new instance of InvalidConfigurationException without a","description":"Creates a new instance of InvalidConfigurationException without a message or cause. /\n    public InvalidConfigurationException() {}\n\n    /** Constructs an instance of InvalidConfigurationException with the specified message.","scope":"public","name":"InvalidConfigurationException","args":[{"name":"msg","type":"String","description":"The details of the exception. /\n    public InvalidConfigurationException(String msg) {\n        super(msg);\n    }\n\n    /** Constructs an instance of InvalidConfigurationException with the specified cause."},{"name":"cause","type":"Throwable","description":"The cause of the exception. /\n    public InvalidConfigurationException(Throwable cause) {\n        super(cause);\n    }\n\n    /** Constructs an instance of InvalidConfigurationException with the specified message and cause."}]}],"methods":[],"imports":[],"properties":[]},"io.wolfscript.configuration.MemoryConfiguration":{"namespace":"io.wolfscript.configuration","title":"This is a {@link io.wolfscript.configuration.Configuration} implementation that does not save or load","description":"This is a {@link io.wolfscript.configuration.Configuration} implementation that does not save or load from any source, and stores all values in memory only. This is useful for temporary Configurations for providing defaults.","name":"MemoryConfiguration","qualifiedname":"io.wolfscript.configuration.MemoryConfiguration","type":"class","scope":"public","extends":["io.wolfscript.configuration.MemorySection"],"implements":["io.wolfscript.configuration.Configuration"],"constructors":[{"title":"Creates an empty {@link io.wolfscript.configuration.MemoryConfiguration} with no default values.","description":"Creates an empty {@link io.wolfscript.configuration.MemoryConfiguration} with no default values. /\n    public MemoryConfiguration() {}\n\n    /** Creates an empty {@link io.wolfscript.configuration.MemoryConfiguration} using the specified {@link io.wolfscript.configuration.Configuration} as a source for all default values.","doc":{"throws":["IllegalArgumentException Thrown if defaults is null"]},"scope":"public","name":"MemoryConfiguration","args":[{"name":"defaults","type":"io.wolfscript.configuration.Configuration","description":"Default value provider"}]}],"methods":[{"title":"addDefault method","description":"addDefault method","scope":"public","return":"void","name":"addDefault","args":[{"name":"path","type":"String","description":"path argument"},{"name":"value","type":"Object","description":"value argument"}]},{"title":"addDefaults method","description":"addDefaults method","scope":"public","return":"void","name":"addDefaults","args":[]},{"title":"addDefaults method","description":"addDefaults method","scope":"public","return":"void","name":"addDefaults","args":[{"name":"defaults","type":"io.wolfscript.configuration.Configuration","description":"defaults argument"}]},{"title":"options method","description":"options method","scope":"public","return":"io.wolfscript.configuration.MemoryConfigurationOptions","name":"options","args":[]}],"imports":["java.util.Map","org.apache.commons.lang.Validate"],"properties":[{"name":"Defaults","args":[{"name":"defaults","type":"io.wolfscript.configuration.Configuration","description":"defaults argument"}],"description":"Defaults property","return":"io.wolfscript.configuration.Configuration","scope":"public","title":"Defaults property"},{"name":"Parent","modifier":"readonly","args":[],"description":"Parent property","return":"io.wolfscript.configuration.ConfigurationSection","scope":"public","title":"Parent property"}]},"io.wolfscript.configuration.MemoryConfigurationOptions":{"namespace":"io.wolfscript.configuration","title":"Various settings for controlling the input and output of a {@link","description":"Various settings for controlling the input and output of a {@link io.wolfscript.configuration.MemoryConfiguration}","name":"MemoryConfigurationOptions","qualifiedname":"io.wolfscript.configuration.MemoryConfigurationOptions","type":"class","scope":"public","extends":["io.wolfscript.configuration.ConfigurationOptions"],"constructors":[],"methods":[{"title":"configuration method","description":"configuration method","scope":"public","return":"io.wolfscript.configuration.MemoryConfiguration","name":"configuration","args":[]},{"title":"copyDefaults method","description":"copyDefaults method","scope":"public","return":"io.wolfscript.configuration.MemoryConfigurationOptions","name":"copyDefaults","args":[{"name":"value","type":"boolean","description":"value argument"}]},{"title":"pathSeparator method","description":"pathSeparator method","scope":"public","return":"io.wolfscript.configuration.MemoryConfigurationOptions","name":"pathSeparator","args":[{"name":"value","type":"char","description":"value argument"}]}],"imports":[],"properties":[]},"io.wolfscript.configuration.MemorySection":{"namespace":"io.wolfscript.configuration","title":"A type of {@link io.wolfscript.configuration.ConfigurationSection} that is stored in memory.","description":"A type of {@link io.wolfscript.configuration.ConfigurationSection} that is stored in memory.","name":"MemorySection","qualifiedname":"io.wolfscript.configuration.MemorySection","type":"class","scope":"public","implements":["io.wolfscript.configuration.ConfigurationSection"],"constructors":[],"methods":[{"title":"Creates an empty MemorySection for use as a root {@link io.wolfscript.configuration.Configuration}","description":"Creates an empty MemorySection for use as a root {@link io.wolfscript.configuration.Configuration} section. <p> Note that calling this without being yourself a {@link io.wolfscript.configuration.Configuration} will throw an exception!","doc":{"throws":["IllegalStateException Thrown if this is not a {@link Configuration} root. /\n    protected MemorySection() {\n        if (!(this instanceof Configuration)) {\n            throw new IllegalStateException(\"Cannot construct a root MemorySection when not a Configuration\");\n        }\n\n        this.path = \"\";\n        this.fullPath = \"\";\n        this.parent = null;\n        this.root = (Configuration) this;\n    }\n\n    /** Creates an empty MemorySection with the specified parent and path.","IllegalArgumentException Thrown is parent or path is null, or if parent contains no root Configuration. /\n    protected MemorySection(ConfigurationSection parent, String path) {\n        Validate.notNull(parent, \"Parent cannot be null\");\n        Validate.notNull(path, \"Path cannot be null\");\n\n        this.path = path;\n        this.parent = parent;\n        this.root = parent.getRoot();\n\n        Validate.notNull(root, \"Path cannot be orphaned\");\n\n        this.fullPath = createPath(parent, path);\n    }\n\n    public Set<String> getKeys(boolean deep) {\n        Set<String> result = new LinkedHashSet<String>();\n\n        Configuration root = getRoot();\n        if (root != null && root.options().copyDefaults()) {\n            ConfigurationSection defaults = getDefaultSection();\n\n            if (defaults != null) {\n                result.addAll(defaults.getKeys(deep));\n            }\n        }\n\n        mapChildrenKeys(result, this, deep);\n\n        return result;\n    }\n\n    public Map<String, Object> getValues(boolean deep) {\n        Map<String, Object> result = new LinkedHashMap<String, Object>();\n\n        Configuration root = getRoot();\n        if (root != null && root.options().copyDefaults()) {\n            ConfigurationSection defaults = getDefaultSection();\n\n            if (defaults != null) {\n                result.putAll(defaults.getValues(deep));\n            }\n        }\n\n        mapChildrenValues(result, this, deep);\n\n        return result;\n    }\n\n    public boolean contains(String path) {\n        return get(path) != null;\n    }\n\n    public boolean isSet(String path) {\n        Configuration root = getRoot();\n        if (root == null) {\n            return false;\n        }\n        if (root.options().copyDefaults()) {\n            return contains(path);\n        }\n        return get(path, null) != null;\n    }\n\n    public String getCurrentPath() {\n        return fullPath;\n    }\n\n    public String getName() {\n        return path;\n    }\n\n    public Configuration getRoot() {\n        return root;\n    }\n\n    public ConfigurationSection getParent() {\n        return parent;\n    }\n\n    public void addDefault(String path, Object value) {\n        Validate.notNull(path, \"Path cannot be null\");\n\n        Configuration root = getRoot();\n        if (root == null) {\n            throw new IllegalStateException(\"Cannot add default without root\");\n        }\n        if (root == this) {\n            throw new UnsupportedOperationException(\"Unsupported addDefault(String, Object) implementation\");\n        }\n        root.addDefault(createPath(this, path), value);\n    }\n\n    public ConfigurationSection getDefaultSection() {\n        Configuration root = getRoot();\n        Configuration defaults = root == null ? null : root.getDefaults();\n\n        if (defaults != null) {\n            if (defaults.isConfigurationSection(getCurrentPath())) {\n                return defaults.getConfigurationSection(getCurrentPath());\n            }\n        }\n\n        return null;\n    }\n\n    public void set(String path, Object value) {\n        Validate.notEmpty(path, \"Cannot set to an empty path\");\n\n        Configuration root = getRoot();\n        if (root == null) {\n            throw new IllegalStateException(\"Cannot use section without a root\");\n        }\n\n        final char separator = root.options().pathSeparator();\n        // i1 is the leading (higher) index\n        // i2 is the trailing (lower) index\n        int i1 = -1, i2;\n        ConfigurationSection section = this;\n        while ((i1 = path.indexOf(separator, i2 = i1 + 1)) != -1) {\n            String node = path.substring(i2, i1);\n            ConfigurationSection subSection = section.getConfigurationSection(node);\n            if (subSection == null) {\n                section = section.createSection(node);\n            } else {\n                section = subSection;\n            }\n        }\n\n        String key = path.substring(i2);\n        if (section == this) {\n            if (value == null) {\n                map.remove(key);\n            } else {\n                map.put(key, value);\n            }\n        } else {\n            section.set(key, value);\n        }\n    }\n\n    public Object get(String path) {\n        return get(path, getDefault(path));\n    }\n\n    public Object get(String path, Object def) {\n        Validate.notNull(path, \"Path cannot be null\");\n\n        if (path.length() == 0) {\n            return this;\n        }\n\n        Configuration root = getRoot();\n        if (root == null) {\n            throw new IllegalStateException(\"Cannot access section without a root\");\n        }\n\n        final char separator = root.options().pathSeparator();\n        // i1 is the leading (higher) index\n        // i2 is the trailing (lower) index\n        int i1 = -1, i2;\n        ConfigurationSection section = this;\n        while ((i1 = path.indexOf(separator, i2 = i1 + 1)) != -1) {\n            section = section.getConfigurationSection(path.substring(i2, i1));\n            if (section == null) {\n                return def;\n            }\n        }\n\n        String key = path.substring(i2);\n        if (section == this) {\n            Object result = map.get(key);\n            return (result == null) ? def : result;\n        }\n        return section.get(key, def);\n    }\n\n    public ConfigurationSection createSection(String path) {\n        Validate.notEmpty(path, \"Cannot create section at empty path\");\n        Configuration root = getRoot();\n        if (root == null) {\n            throw new IllegalStateException(\"Cannot create section without a root\");\n        }\n\n        final char separator = root.options().pathSeparator();\n        // i1 is the leading (higher) index\n        // i2 is the trailing (lower) index\n        int i1 = -1, i2;\n        ConfigurationSection section = this;\n        while ((i1 = path.indexOf(separator, i2 = i1 + 1)) != -1) {\n            String node = path.substring(i2, i1);\n            ConfigurationSection subSection = section.getConfigurationSection(node);\n            if (subSection == null) {\n                section = section.createSection(node);\n            } else {\n                section = subSection;\n            }\n        }\n\n        String key = path.substring(i2);\n        if (section == this) {\n            ConfigurationSection result = new MemorySection(this, key);\n            map.put(key, result);\n            return result;\n        }\n        return section.createSection(key);\n    }\n\n    public ConfigurationSection createSection(String path, Map<?, ?> map) {\n        ConfigurationSection section = createSection(path);\n\n        for (Map.Entry<?, ?> entry : map.entrySet()) {\n            if (entry.getValue() instanceof Map) {\n                section.createSection(entry.getKey().toString(), (Map<?, ?>) entry.getValue());\n            } else {\n                section.set(entry.getKey().toString(), entry.getValue());\n            }\n        }\n\n        return section;\n    }\n\n    // Primitives\n    public String getString(String path) {\n        Object def = getDefault(path);\n        return getString(path, def != null ? def.toString() : null);\n    }\n\n    public String getString(String path, String def) {\n        Object val = get(path, def);\n        return (val != null) ? val.toString() : def;\n    }\n\n    public boolean isString(String path) {\n        Object val = get(path);\n        return val instanceof String;\n    }\n\n    public int getInt(String path) {\n        Object def = getDefault(path);\n        return getInt(path, (def instanceof Number) ? toInt(def) : 0);\n    }\n\n    public int getInt(String path, int def) {\n        Object val = get(path, def);\n        return (val instanceof Number) ? toInt(val) : def;\n    }\n\n    public boolean isInt(String path) {\n        Object val = get(path);\n        return val instanceof Integer;\n    }\n\n    public boolean getBoolean(String path) {\n        Object def = getDefault(path);\n        return getBoolean(path, (def instanceof Boolean) ? (Boolean) def : false);\n    }\n\n    public boolean getBoolean(String path, boolean def) {\n        Object val = get(path, def);\n        return (val instanceof Boolean) ? (Boolean) val : def;\n    }\n\n    public boolean isBoolean(String path) {\n        Object val = get(path);\n        return val instanceof Boolean;\n    }\n\n    public double getDouble(String path) {\n        Object def = getDefault(path);\n        return getDouble(path, (def instanceof Number) ? toDouble(def) : 0);\n    }\n\n    public double getDouble(String path, double def) {\n        Object val = get(path, def);\n        return (val instanceof Number) ? toDouble(val) : def;\n    }\n\n    public boolean isDouble(String path) {\n        Object val = get(path);\n        return val instanceof Double;\n    }\n\n    public long getLong(String path) {\n        Object def = getDefault(path);\n        return getLong(path, (def instanceof Number) ? toLong(def) : 0);\n    }\n\n    public long getLong(String path, long def) {\n        Object val = get(path, def);\n        return (val instanceof Number) ? toLong(val) : def;\n    }\n\n    public boolean isLong(String path) {\n        Object val = get(path);\n        return val instanceof Long;\n    }\n\n    // Java\n    public List<?> getList(String path) {\n        Object def = getDefault(path);\n        return getList(path, (def instanceof List) ? (List<?>) def : null);\n    }\n\n    public List<?> getList(String path, List<?> def) {\n        Object val = get(path, def);\n        return (List<?>) ((val instanceof List) ? val : def);\n    }\n\n    public boolean isList(String path) {\n        Object val = get(path);\n        return val instanceof List;\n    }\n\n    public List<String> getStringList(String path) {\n        List<?> list = getList(path);\n\n        if (list == null) {\n            return new ArrayList<String>(0);\n        }\n\n        List<String> result = new ArrayList<String>();\n\n        for (Object object : list) {\n            if ((object instanceof String) || (isPrimitiveWrapper(object))) {\n                result.add(String.valueOf(object));\n            }\n        }\n\n        return result;\n    }\n\n    public List<Integer> getIntegerList(String path) {\n        List<?> list = getList(path);\n\n        if (list == null) {\n            return new ArrayList<Integer>(0);\n        }\n\n        List<Integer> result = new ArrayList<Integer>();\n\n        for (Object object : list) {\n            if (object instanceof Integer) {\n                result.add((Integer) object);\n            } else if (object instanceof String) {\n                try {\n                    result.add(Integer.valueOf((String) object));\n                } catch (Exception ex) {\n                }\n            } else if (object instanceof Character) {\n                result.add((int) ((Character) object).charValue());\n            } else if (object instanceof Number) {\n                result.add(((Number) object).intValue());\n            }\n        }\n\n        return result;\n    }\n\n    public List<Boolean> getBooleanList(String path) {\n        List<?> list = getList(path);\n\n        if (list == null) {\n            return new ArrayList<Boolean>(0);\n        }\n\n        List<Boolean> result = new ArrayList<Boolean>();\n\n        for (Object object : list) {\n            if (object instanceof Boolean) {\n                result.add((Boolean) object);\n            } else if (object instanceof String) {\n                if (Boolean.TRUE.toString().equals(object)) {\n                    result.add(true);\n                } else if (Boolean.FALSE.toString().equals(object)) {\n                    result.add(false);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    public List<Double> getDoubleList(String path) {\n        List<?> list = getList(path);\n\n        if (list == null) {\n            return new ArrayList<Double>(0);\n        }\n\n        List<Double> result = new ArrayList<Double>();\n\n        for (Object object : list) {\n            if (object instanceof Double) {\n                result.add((Double) object);\n            } else if (object instanceof String) {\n                try {\n                    result.add(Double.valueOf((String) object));\n                } catch (Exception ex) {\n                }\n            } else if (object instanceof Character) {\n                result.add((double) ((Character) object).charValue());\n            } else if (object instanceof Number) {\n                result.add(((Number) object).doubleValue());\n            }\n        }\n\n        return result;\n    }\n\n    public List<Float> getFloatList(String path) {\n        List<?> list = getList(path);\n\n        if (list == null) {\n            return new ArrayList<Float>(0);\n        }\n\n        List<Float> result = new ArrayList<Float>();\n\n        for (Object object : list) {\n            if (object instanceof Float) {\n                result.add((Float) object);\n            } else if (object instanceof String) {\n                try {\n                    result.add(Float.valueOf((String) object));\n                } catch (Exception ex) {\n                }\n            } else if (object instanceof Character) {\n                result.add((float) ((Character) object).charValue());\n            } else if (object instanceof Number) {\n                result.add(((Number) object).floatValue());\n            }\n        }\n\n        return result;\n    }\n\n    public List<Long> getLongList(String path) {\n        List<?> list = getList(path);\n\n        if (list == null) {\n            return new ArrayList<Long>(0);\n        }\n\n        List<Long> result = new ArrayList<Long>();\n\n        for (Object object : list) {\n            if (object instanceof Long) {\n                result.add((Long) object);\n            } else if (object instanceof String) {\n                try {\n                    result.add(Long.valueOf((String) object));\n                } catch (Exception ex) {\n                }\n            } else if (object instanceof Character) {\n                result.add((long) ((Character) object).charValue());\n            } else if (object instanceof Number) {\n                result.add(((Number) object).longValue());\n            }\n        }\n\n        return result;\n    }\n\n    public List<Byte> getByteList(String path) {\n        List<?> list = getList(path);\n\n        if (list == null) {\n            return new ArrayList<Byte>(0);\n        }\n\n        List<Byte> result = new ArrayList<Byte>();\n\n        for (Object object : list) {\n            if (object instanceof Byte) {\n                result.add((Byte) object);\n            } else if (object instanceof String) {\n                try {\n                    result.add(Byte.valueOf((String) object));\n                } catch (Exception ex) {\n                }\n            } else if (object instanceof Character) {\n                result.add((byte) ((Character) object).charValue());\n            } else if (object instanceof Number) {\n                result.add(((Number) object).byteValue());\n            }\n        }\n\n        return result;\n    }\n\n    public List<Character> getCharacterList(String path) {\n        List<?> list = getList(path);\n\n        if (list == null) {\n            return new ArrayList<Character>(0);\n        }\n\n        List<Character> result = new ArrayList<Character>();\n\n        for (Object object : list) {\n            if (object instanceof Character) {\n                result.add((Character) object);\n            } else if (object instanceof String) {\n                String str = (String) object;\n\n                if (str.length() == 1) {\n                    result.add(str.charAt(0));\n                }\n            } else if (object instanceof Number) {\n                result.add((char) ((Number) object).intValue());\n            }\n        }\n\n        return result;\n    }\n\n    public List<Short> getShortList(String path) {\n        List<?> list = getList(path);\n\n        if (list == null) {\n            return new ArrayList<Short>(0);\n        }\n\n        List<Short> result = new ArrayList<Short>();\n\n        for (Object object : list) {\n            if (object instanceof Short) {\n                result.add((Short) object);\n            } else if (object instanceof String) {\n                try {\n                    result.add(Short.valueOf((String) object));\n                } catch (Exception ex) {\n                }\n            } else if (object instanceof Character) {\n                result.add((short) ((Character) object).charValue());\n            } else if (object instanceof Number) {\n                result.add(((Number) object).shortValue());\n            }\n        }\n\n        return result;\n    }\n\n    public List<Map<?, ?>> getMapList(String path) {\n        List<?> list = getList(path);\n        List<Map<?, ?>> result = new ArrayList<Map<?, ?>>();\n\n        if (list == null) {\n            return result;\n        }\n\n        for (Object object : list) {\n            if (object instanceof Map) {\n                result.add((Map<?, ?>) object);\n            }\n        }\n\n        return result;\n    }\n\n    // WolfScript\n    public Vector getVector(String path) {\n        Object def = getDefault(path);\n        return getVector(path, (def instanceof Vector) ? (Vector) def : null);\n    }\n\n    public Vector getVector(String path, Vector def) {\n        Object val = get(path, def);\n        return (val instanceof Vector) ? (Vector) val : def;\n    }\n\n    public boolean isVector(String path) {\n        Object val = get(path);\n        return val instanceof Vector;\n    }\n\n    public OfflinePlayer getOfflinePlayer(String path) {\n        Object def = getDefault(path);\n        return getOfflinePlayer(path, (def instanceof OfflinePlayer) ? (OfflinePlayer) def : null);\n    }\n\n    public OfflinePlayer getOfflinePlayer(String path, OfflinePlayer def) {\n        Object val = get(path, def);\n        return (val instanceof OfflinePlayer) ? (OfflinePlayer) val : def;\n    }\n\n    public boolean isOfflinePlayer(String path) {\n        Object val = get(path);\n        return val instanceof OfflinePlayer;\n    }\n\n    public ItemStack getItemStack(String path) {\n        Object def = getDefault(path);\n        return getItemStack(path, (def instanceof ItemStack) ? (ItemStack) def : null);\n    }\n\n    public ItemStack getItemStack(String path, ItemStack def) {\n        Object val = get(path, def);\n        return (val instanceof ItemStack) ? (ItemStack) val : def;\n    }\n\n    public boolean isItemStack(String path) {\n        Object val = get(path);\n        return val instanceof ItemStack;\n    }\n\n    public Color getColor(String path) {\n        Object def = getDefault(path);\n        return getColor(path, (def instanceof Color) ? (Color) def : null);\n    }\n\n    public Color getColor(String path, Color def) {\n        Object val = get(path, def);\n        return (val instanceof Color) ? (Color) val : def;\n    }\n\n    public boolean isColor(String path) {\n        Object val = get(path);\n        return val instanceof Color;\n    }\n\n    public ConfigurationSection getConfigurationSection(String path) {\n        Object val = get(path, null);\n        if (val != null) {\n            return (val instanceof ConfigurationSection) ? (ConfigurationSection) val : null;\n        }\n\n        val = get(path, getDefault(path));\n        return (val instanceof ConfigurationSection) ? createSection(path) : null;\n    }\n\n    public boolean isConfigurationSection(String path) {\n        Object val = get(path);\n        return val instanceof ConfigurationSection;\n    }\n\n    protected boolean isPrimitiveWrapper(Object input) {\n        return input instanceof Integer || input instanceof Boolean ||\n                input instanceof Character || input instanceof Byte ||\n                input instanceof Short || input instanceof Double ||\n                input instanceof Long || input instanceof Float;\n    }\n\n    protected Object getDefault(String path) {\n        Validate.notNull(path, \"Path cannot be null\");\n\n        Configuration root = getRoot();\n        Configuration defaults = root == null ? null : root.getDefaults();\n        return (defaults == null) ? null : defaults.get(createPath(this, path));\n    }\n\n    protected void mapChildrenKeys(Set<String> output, ConfigurationSection section, boolean deep) {\n        if (section instanceof MemorySection) {\n            MemorySection sec = (MemorySection) section;\n\n            for (Map.Entry<String, Object> entry : sec.map.entrySet()) {\n                output.add(createPath(section, entry.getKey(), this));\n\n                if ((deep) && (entry.getValue() instanceof ConfigurationSection)) {\n                    ConfigurationSection subsection = (ConfigurationSection) entry.getValue();\n                    mapChildrenKeys(output, subsection, deep);\n                }\n            }\n        } else {\n            Set<String> keys = section.getKeys(deep);\n\n            for (String key : keys) {\n                output.add(createPath(section, key, this));\n            }\n        }\n    }\n\n    protected void mapChildrenValues(Map<String, Object> output, ConfigurationSection section, boolean deep) {\n        if (section instanceof MemorySection) {\n            MemorySection sec = (MemorySection) section;\n\n            for (Map.Entry<String, Object> entry : sec.map.entrySet()) {\n                output.put(createPath(section, entry.getKey(), this), entry.getValue());\n\n                if (entry.getValue() instanceof ConfigurationSection) {\n                    if (deep) {\n                        mapChildrenValues(output, (ConfigurationSection) entry.getValue(), deep);\n                    }\n                }\n            }\n        } else {\n            Map<String, Object> values = section.getValues(deep);\n\n            for (Map.Entry<String, Object> entry : values.entrySet()) {\n                output.put(createPath(section, entry.getKey(), this), entry.getValue());\n            }\n        }\n    }\n\n    /** Creates a full path to the given {@link ConfigurationSection} from its root {@link Configuration}. <p> You may use this method for any given {@link ConfigurationSection}, not only {@link MemorySection}."],"return":["Full path of the section from its root. /\n    public static String createPath(ConfigurationSection section, String key) {\n        return createPath(section, key, (section == null) ? null : section.getRoot());\n    }\n\n    /** Creates a relative path to the given {@link io.wolfscript.configuration.ConfigurationSection} from the given relative section. <p> You may use this method for any given {@link io.wolfscript.configuration.ConfigurationSection}, not only {@link io.wolfscript.configuration.MemorySection}.","Full path of the section from its root."]},"scope":"public","describe":"static","return":"String","name":"createPath","args":[{"name":"section","type":"io.wolfscript.configuration.ConfigurationSection","description":"Section to create a path for."},{"name":"key","type":"String","description":"Name of the specified section."},{"name":"relativeTo","type":"io.wolfscript.configuration.ConfigurationSection","description":"Section to create the path relative to."}]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.util.NumberConversions.*","java.util.ArrayList","java.util.LinkedHashMap","java.util.LinkedHashSet","java.util.List","java.util.Map","java.util.Set","org.apache.commons.lang.Validate","io.wolfscript.Color","io.wolfscript.OfflinePlayer","io.wolfscript.inventory.ItemStack","io.wolfscript.util.Vector"],"properties":[]},"io.wolfscript.configuration.file.0":{"namespace":"io.wolfscript.configuration","title":"Classes dedicated facilitating {@link","description":"Classes dedicated facilitating {@link io.wolfscript.configuration.Configuration configurations} to be read and stored on the filesystem.","name":"file","qualifiedname":"io.wolfscript.configuration.file.0","packagename":"io.wolfscript.configuration.file","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.configuration.file.FileConfiguration","io.wolfscript.configuration.file.FileConfigurationOptions","io.wolfscript.configuration.file.YamlConfiguration","io.wolfscript.configuration.file.YamlConfigurationOptions","io.wolfscript.configuration.file.YamlConstructor","io.wolfscript.configuration.file.YamlRepresenter"],"interfaces":[],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.configuration.file.FileConfiguration":{"namespace":"io.wolfscript.configuration.file","title":"This is a base class for all File based implementations of {@link","description":"This is a base class for all File based implementations of {@link io.wolfscript.configuration.Configuration}","name":"FileConfiguration","qualifiedname":"io.wolfscript.configuration.file.FileConfiguration","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.configuration.MemoryConfiguration"],"constructors":[],"fields":[{"title":"This value specified that the system default encoding should be","description":"This value specified that the system default encoding should be completely ignored, as it cannot handle the ASCII character set, or it is a strict-subset of UTF8 already (plain ASCII).","doc":{"deprecated":["temporary compatibility measure /\n    @Deprecated\n    public static final boolean UTF8_OVERRIDE;\n    /** This value specifies if the system default encoding is unicode, but cannot parse standard ASCII.","temporary compatibility measure /\n    @Deprecated\n    public static final boolean UTF_BIG;\n    /** This value specifies if the system supports unicode.","temporary compatibility measure"]},"name":"SYSTEM","scope":"public","type":"boolean","deprecated":true,"describe":"static final"}],"methods":[{"title":"options method","description":"options method","scope":"public","return":"io.wolfscript.configuration.file.FileConfigurationOptions","name":"options","args":[]}],"imports":["com.google.common.base.Charsets","com.google.common.io.Files","org.apache.commons.lang.Validate","io.wolfscript.configuration.InvalidConfigurationException","java.io.BufferedReader","java.io.File","java.io.FileInputStream","java.io.FileNotFoundException","java.io.FileOutputStream","java.io.IOException","java.io.InputStream","java.io.InputStreamReader","java.io.OutputStreamWriter","java.io.Reader","java.io.Writer","java.nio.charset.Charset","io.wolfscript.configuration.Configuration","io.wolfscript.configuration.MemoryConfiguration","org.yaml.snakeyaml.external.biz.base64Coder.Base64Coder"],"properties":[]},"io.wolfscript.configuration.file.FileConfigurationOptions":{"namespace":"io.wolfscript.configuration.file","title":"Various settings for controlling the input and output of a {@link","description":"Various settings for controlling the input and output of a {@link io.wolfscript.configuration.file.FileConfiguration}","name":"FileConfigurationOptions","qualifiedname":"io.wolfscript.configuration.file.FileConfigurationOptions","type":"class","scope":"public","extends":["MemoryConfigurationOptions"],"constructors":[],"methods":[{"title":"configuration method","description":"configuration method","scope":"public","return":"io.wolfscript.configuration.file.FileConfiguration","name":"configuration","args":[]},{"title":"copyDefaults method","description":"copyDefaults method","scope":"public","return":"io.wolfscript.configuration.file.FileConfigurationOptions","name":"copyDefaults","args":[{"name":"value","type":"boolean","description":"value argument"}]},{"title":"Gets the header that will be applied to the top of the saved output.","description":"Gets the header that will be applied to the top of the saved output. <p> This header will be commented out and applied directly at the top of the generated output of the {@link io.wolfscript.configuration.file.FileConfiguration}. It is not required to include a newline at the end of the header as it will automatically be applied, but you may include one if you wish for extra spacing. <p> Null is a valid value which will indicate that no header is to be applied. The default value is null.","doc":{"return":["Header /\n    public String header() {\n        return header;\n    }\n\n    /** Sets the header that will be applied to the top of the saved output. <p> This header will be commented out and applied directly at the top of the generated output of the {@link io.wolfscript.configuration.file.FileConfiguration}. It is not required to include a newline at the end of the header as it will automatically be applied, but you may include one if you wish for extra spacing. <p> Null is a valid value which will indicate that no header is to be applied.","This object, for chaining /\n    public FileConfigurationOptions header(String value) {\n        this.header = value;\n        return this;\n    }\n\n    /** Gets whether or not the header should be copied from a default source. <p> If this is true, if a default {@link io.wolfscript.configuration.file.FileConfiguration} is passed to {@link FileConfiguration#setDefaults(io.wolfscript.configuration.Configuration)} then upon saving it will use the header from that config, instead of the one provided here. <p> If no default is set on the configuration, or the default is not of type FileConfiguration, or that config has no header ({@link #header()} returns null) then the header specified in this configuration will be used. <p> Defaults to true.","Whether or not to copy the header /\n    public boolean copyHeader() {\n        return copyHeader;\n    }\n\n    /** Sets whether or not the header should be copied from a default source. <p> If this is true, if a default {@link io.wolfscript.configuration.file.FileConfiguration} is passed to {@link FileConfiguration#setDefaults(io.wolfscript.configuration.Configuration)} then upon saving it will use the header from that config, instead of the one provided here. <p> If no default is set on the configuration, or the default is not of type FileConfiguration, or that config has no header ({@link #header()} returns null) then the header specified in this configuration will be used. <p> Defaults to true.","This object, for chaining"]},"scope":"public","return":"io.wolfscript.configuration.file.FileConfigurationOptions","name":"copyHeader","args":[{"name":"value","type":"boolean","description":"New header"}]},{"title":"pathSeparator method","description":"pathSeparator method","scope":"public","return":"io.wolfscript.configuration.file.FileConfigurationOptions","name":"pathSeparator","args":[{"name":"value","type":"char","description":"value argument"}]}],"imports":["io.wolfscript.configuration.*"],"properties":[]},"io.wolfscript.configuration.file.YamlConfiguration":{"namespace":"io.wolfscript.configuration.file","title":"An implementation of {@link io.wolfscript.configuration.Configuration} which saves all files in Yaml.","description":"An implementation of {@link io.wolfscript.configuration.Configuration} which saves all files in Yaml. Note that this implementation is not synchronized.","name":"YamlConfiguration","qualifiedname":"io.wolfscript.configuration.file.YamlConfiguration","type":"class","scope":"public","extends":["io.wolfscript.configuration.file.FileConfiguration"],"constructors":[],"methods":[{"title":"Creates a new {@link io.wolfscript.configuration.file.YamlConfiguration}, loading from the given file.","description":"Creates a new {@link io.wolfscript.configuration.file.YamlConfiguration}, loading from the given file. <p> Any errors loading the Configuration will be logged and then ignored. If the specified input is not a valid config, a blank config will be returned. <p> The encoding used may follow the system dependent default.","doc":{"return":["Resulting configuration","Resulting configuration","resulting configuration"],"throws":["IllegalArgumentException Thrown if file is null /\n    public static YamlConfiguration loadConfiguration(File file) {\n        Validate.notNull(file, \"File cannot be null\");\n\n        YamlConfiguration config = new YamlConfiguration();\n\n        try {\n            config.load(file);\n        } catch (FileNotFoundException ex) {\n        } catch (IOException ex) {\n            WolfScript.getLogger().log(Level.SEVERE, \"Cannot load \" + file, ex);\n        } catch (InvalidConfigurationException ex) {\n            WolfScript.getLogger().log(Level.SEVERE, \"Cannot load \" + file , ex);\n        }\n\n        return config;\n    }\n\n    /** Creates a new {@link YamlConfiguration}, loading from the given stream. <p> Any errors loading the Configuration will be logged and then ignored. If the specified input is not a valid config, a blank config will be returned.","IllegalArgumentException Thrown if stream is null","IllegalArgumentException Thrown if stream is null"],"deprecated":["does not properly consider encoding"],"see":["#load(InputStream)","#loadConfiguration(Reader) /\n    @Deprecated\n    public static YamlConfiguration loadConfiguration(InputStream stream) {\n        Validate.notNull(stream, \"Stream cannot be null\");\n\n        YamlConfiguration config = new YamlConfiguration();\n\n        try {\n            config.load(stream);\n        } catch (IOException ex) {\n            WolfScript.getLogger().log(Level.SEVERE, \"Cannot load configuration from stream\", ex);\n        } catch (InvalidConfigurationException ex) {\n            WolfScript.getLogger().log(Level.SEVERE, \"Cannot load configuration from stream\", ex);\n        }\n\n        return config;\n    }\n\n\n    /** Creates a new {@link YamlConfiguration}, loading from the given reader. <p> Any errors loading the Configuration will be logged and then ignored. If the specified input is not a valid config, a blank config will be returned."]},"scope":"public","describe":"static","return":"io.wolfscript.configuration.file.YamlConfiguration","name":"loadConfiguration","args":[{"name":"reader","type":"java.io.Reader","description":"input"}]},{"title":"options method","description":"options method","scope":"public","return":"io.wolfscript.configuration.file.YamlConfigurationOptions","name":"options","args":[]},{"title":"saveToString method","description":"saveToString method","scope":"public","return":"String","name":"saveToString","args":[]}],"imports":["java.io.File","java.io.FileNotFoundException","java.io.IOException","java.io.InputStream","java.io.Reader","java.util.Map","java.util.logging.Level","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.configuration.Configuration","io.wolfscript.configuration.ConfigurationSection","io.wolfscript.configuration.InvalidConfigurationException","org.yaml.snakeyaml.DumperOptions","org.yaml.snakeyaml.Yaml","org.yaml.snakeyaml.error.YAMLException","org.yaml.snakeyaml.representer.Representer"],"properties":[]},"io.wolfscript.configuration.file.YamlConfigurationOptions":{"namespace":"io.wolfscript.configuration.file","title":"Various settings for controlling the input and output of a {@link","description":"Various settings for controlling the input and output of a {@link io.wolfscript.configuration.file.YamlConfiguration}","name":"YamlConfigurationOptions","qualifiedname":"io.wolfscript.configuration.file.YamlConfigurationOptions","type":"class","scope":"public","extends":["io.wolfscript.configuration.file.FileConfigurationOptions"],"constructors":[],"methods":[{"title":"configuration method","description":"configuration method","scope":"public","return":"io.wolfscript.configuration.file.YamlConfiguration","name":"configuration","args":[]},{"title":"copyDefaults method","description":"copyDefaults method","scope":"public","return":"io.wolfscript.configuration.file.YamlConfigurationOptions","name":"copyDefaults","args":[{"name":"value","type":"boolean","description":"value argument"}]},{"title":"copyHeader method","description":"copyHeader method","scope":"public","return":"io.wolfscript.configuration.file.YamlConfigurationOptions","name":"copyHeader","args":[{"name":"value","type":"boolean","description":"value argument"}]},{"title":"header method","description":"header method","scope":"public","return":"io.wolfscript.configuration.file.YamlConfigurationOptions","name":"header","args":[{"name":"value","type":"String","description":"value argument"}]},{"title":"Gets how much spaces should be used to indent each line.","description":"Gets how much spaces should be used to indent each line. <p> The minimum value this may be is 2, and the maximum is 9.","doc":{"return":["How much to indent by /\n    public int indent() {\n        return indent;\n    }\n\n    /** Sets how much spaces should be used to indent each line. <p> The minimum value this may be is 2, and the maximum is 9.","This object, for chaining"]},"scope":"public","return":"io.wolfscript.configuration.file.YamlConfigurationOptions","name":"indent","args":[{"name":"value","type":"int","description":"New indent"}]},{"title":"pathSeparator method","description":"pathSeparator method","scope":"public","return":"io.wolfscript.configuration.file.YamlConfigurationOptions","name":"pathSeparator","args":[{"name":"value","type":"char","description":"value argument"}]}],"imports":["org.apache.commons.lang.Validate"],"properties":[]},"io.wolfscript.configuration.file.YamlConstructor":{"namespace":"io.wolfscript.configuration.file","title":"class YamlConstructor","description":"class YamlConstructor","name":"YamlConstructor","qualifiedname":"io.wolfscript.configuration.file.YamlConstructor","type":"class","scope":"public","extends":["org.yaml.snakeyaml.constructor.SafeConstructor"],"constructors":[{"title":"YamlConstructor constructor","description":"YamlConstructor constructor","scope":"public","name":"YamlConstructor","args":[]}],"methods":[{"title":"construct method","description":"construct method","scope":"public","return":"Object","name":"construct","args":[{"name":"node","type":"org.yaml.snakeyaml.nodes.Node","description":"node argument"}]}],"imports":["java.util.LinkedHashMap","java.util.Map","org.yaml.snakeyaml.nodes.Node","org.yaml.snakeyaml.constructor.SafeConstructor","org.yaml.snakeyaml.error.YAMLException","org.yaml.snakeyaml.nodes.Tag","io.wolfscript.configuration.serialization.ConfigurationSerialization"],"properties":[]},"io.wolfscript.configuration.file.YamlRepresenter":{"namespace":"io.wolfscript.configuration.file","title":"class YamlRepresenter","description":"class YamlRepresenter","name":"YamlRepresenter","qualifiedname":"io.wolfscript.configuration.file.YamlRepresenter","type":"class","scope":"public","extends":["org.yaml.snakeyaml.representer.Representer"],"constructors":[{"title":"YamlRepresenter constructor","description":"YamlRepresenter constructor","scope":"public","name":"YamlRepresenter","args":[]}],"methods":[{"title":"representData method","description":"representData method","scope":"public","return":"org.yaml.snakeyaml.nodes.Node","name":"representData","args":[{"name":"data","type":"Object","description":"data argument"}]},{"title":"representData method","description":"representData method","scope":"public","return":"org.yaml.snakeyaml.nodes.Node","name":"representData","args":[{"name":"data","type":"Object","description":"data argument"}]}],"imports":["java.util.LinkedHashMap","java.util.Map","io.wolfscript.configuration.ConfigurationSection","io.wolfscript.configuration.serialization.ConfigurationSerializable","io.wolfscript.configuration.serialization.ConfigurationSerialization","org.yaml.snakeyaml.nodes.Node","org.yaml.snakeyaml.representer.Representer"],"properties":[]},"io.wolfscript.configuration.serialization.0":{"namespace":"io.wolfscript.configuration","title":"Classes dedicated to being able to perform serialization specialized for","description":"Classes dedicated to being able to perform serialization specialized for the WolfScript {@link io.wolfscript.configuration.Configuration configuration} implementation.","name":"serialization","qualifiedname":"io.wolfscript.configuration.serialization.0","packagename":"io.wolfscript.configuration.serialization","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.configuration.serialization.ConfigurationSerialization"],"interfaces":["io.wolfscript.configuration.serialization.ConfigurationSerializable"],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.configuration.serialization.ConfigurationSerializable":{"namespace":"io.wolfscript.configuration.serialization","title":"Represents an object that may be serialized.","description":"Represents an object that may be serialized. <p> These objects MUST implement one of the following, in addition to the methods as defined by this interface: <ul> <li>A static method \"deserialize\" that accepts a single {@link java.util.Map}&lt; {@link String}, {@link Object}&gt; and returns the class.</li> <li>A static method \"valueOf\" that accepts a single {@link java.util.Map}&lt;{@link String}, {@link Object}&gt; and returns the class.</li> <li>A constructor that accepts a single {@link java.util.Map}&lt;{@link String}, {@link Object}&gt;.</li> </ul> In addition to implementing this interface, you must register the class with {@link ConfigurationSerialization#registerClass(Class)}.","doc":{"see":["DelegateDeserialization","SerializableAs"]},"name":"ConfigurationSerializable","qualifiedname":"io.wolfscript.configuration.serialization.ConfigurationSerializable","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["java.util.Map"],"properties":[]},"io.wolfscript.configuration.serialization.ConfigurationSerialization":{"namespace":"io.wolfscript.configuration.serialization","title":"Utility class for storing and retrieving classes for {@link io.wolfscript.configuration.Configuration}.","description":"Utility class for storing and retrieving classes for {@link io.wolfscript.configuration.Configuration}.","name":"ConfigurationSerialization","qualifiedname":"io.wolfscript.configuration.serialization.ConfigurationSerialization","type":"class","scope":"public","constructors":[],"fields":[{"title":"SERIALIZED field","description":"SERIALIZED field","name":"SERIALIZED","scope":"public","type":"String","describe":"static final"}],"methods":[{"title":"deserialize method","description":"deserialize method","scope":"public","return":"io.wolfscript.configuration.serialization.ConfigurationSerializable","name":"deserialize","args":[]},{"title":"Attempts to deserialize the given arguments into a new instance of the","description":"Attempts to deserialize the given arguments into a new instance of the given class. <p> The class must implement {@link io.wolfscript.configuration.serialization.ConfigurationSerializable}, including the extra methods as specified in the javadoc of ConfigurationSerializable. <p> If a new instance could not be made, an example being the class not fully implementing the interface, null will be returned.","doc":{"return":["New instance of the specified class /\n    public static ConfigurationSerializable deserializeObject(Map<String, ?> args, Class<? extends ConfigurationSerializable> clazz) {\n        return new ConfigurationSerialization(clazz).deserialize(args);\n    }\n\n    /** Attempts to deserialize the given arguments into a new instance of the given class. <p> The class must implement {@link io.wolfscript.configuration.serialization.ConfigurationSerializable}, including the extra methods as specified in the javadoc of ConfigurationSerializable. <p> If a new instance could not be made, an example being the class not fully implementing the interface, null will be returned.","New instance of the specified class /\n    public static ConfigurationSerializable deserializeObject(Map<String, ?> args) {\n        Class<? extends ConfigurationSerializable> clazz = null;\n\n        if (args.containsKey(SERIALIZED_TYPE_KEY)) {\n            try {\n                String alias = (String) args.get(SERIALIZED_TYPE_KEY);\n\n                if (alias == null) {\n                    throw new IllegalArgumentException(\"Cannot have null alias\");\n                }\n                clazz = getClassByAlias(alias);\n                if (clazz == null) {\n                    throw new IllegalArgumentException(\"Specified class does not exist ('\" + alias + \"')\");\n                }\n            } catch (ClassCastException ex) {\n                ex.fillInStackTrace();\n                throw ex;\n            }\n        } else {\n            throw new IllegalArgumentException(\"Args doesn't contain type key ('\" + SERIALIZED_TYPE_KEY + \"')\");\n        }\n\n        return new ConfigurationSerialization(clazz).deserialize(args);\n    }\n\n    /** Registers the given {@link io.wolfscript.configuration.serialization.ConfigurationSerializable} class by its alias","Registered class, or null if not found /\n    public static Class<? extends ConfigurationSerializable> getClassByAlias(String alias) {\n        return aliases.get(alias);\n    }\n\n    /** Gets the correct alias for the given {@link io.wolfscript.configuration.serialization.ConfigurationSerializable} class","Alias to use for the class"],"see":["SerializableAs /\n    public static void registerClass(Class<? extends ConfigurationSerializable> clazz, String alias) {\n        aliases.put(alias, clazz);\n    }\n\n    /** Unregisters the specified alias to a {@link ConfigurationSerializable}"]},"scope":"public","describe":"static","return":"String","name":"getAlias","args":[{"name":"ConfigurationSerializable","type":"extends","description":"ConfigurationSerializable argument"}]}],"imports":["java.lang.reflect.Constructor","java.lang.reflect.InvocationTargetException","java.lang.reflect.Method","java.lang.reflect.Modifier","java.util.HashMap","java.util.Map","java.util.logging.Level","java.util.logging.Logger","org.apache.commons.lang.Validate","io.wolfscript.Color","io.wolfscript.FireworkEffect","io.wolfscript.Location","io.wolfscript.block.banner.Pattern","io.wolfscript.configuration.Configuration","io.wolfscript.inventory.ItemStack","io.wolfscript.potion.PotionEffect","io.wolfscript.util.BlockVector","io.wolfscript.util.Vector"],"properties":[]},"io.wolfscript.conversations.0":{"namespace":"io.wolfscript","title":"Classes dedicated to facilitate direct player-to-plugin communication.","description":"Classes dedicated to facilitate direct player-to-plugin communication.","name":"conversations","qualifiedname":"io.wolfscript.conversations.0","packagename":"io.wolfscript.conversations","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.conversations.Conversation","io.wolfscript.conversations.ConversationAbandonedEvent","io.wolfscript.conversations.ConversationContext","io.wolfscript.conversations.ConversationFactory","io.wolfscript.conversations.ExactMatchConversationCanceller","io.wolfscript.conversations.FixedSetPrompt","io.wolfscript.conversations.InactivityConversationCanceller","io.wolfscript.conversations.PluginNameConversationPrefix","io.wolfscript.conversations.RegexPrompt","io.wolfscript.conversations.ValidatingPrompt"],"interfaces":["io.wolfscript.conversations.Conversable","io.wolfscript.conversations.ConversationAbandonedListener","io.wolfscript.conversations.ConversationCanceller","io.wolfscript.conversations.ConversationPrefix","io.wolfscript.conversations.Prompt"],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.conversations.Conversable":{"namespace":"io.wolfscript.conversations","title":"The Conversable interface is used to indicate objects that can have","description":"The Conversable interface is used to indicate objects that can have conversations.","name":"Conversable","qualifiedname":"io.wolfscript.conversations.Conversable","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Tests to see of a Conversable object is actively engaged in a","description":"Tests to see of a Conversable object is actively engaged in a conversation.","doc":{"return":["True if a conversation is in progress /\n    public boolean isConversing();\n\n    /** Accepts input into the active conversation. If no conversation is in progress, this method does nothing.","True if the conversation should proceed, false if it has been enqueued /\n    public boolean beginConversation(Conversation conversation);\n\n    /** Abandons an active conversation."]},"scope":"public","return":"void","name":"sendRawMessage","args":[{"name":"message","type":"String","description":"Message to be displayed"}]}],"imports":["io.wolfscript.command.CommandSender"],"properties":[]},"io.wolfscript.conversations.Conversation":{"namespace":"io.wolfscript.conversations","title":"The Conversation class is responsible for tracking the current state of a","description":"The Conversation class is responsible for tracking the current state of a conversation, displaying prompts to the user, and dispatching the user's response to the appropriate place. Conversation objects are not typically instantiated directly. Instead a {@link io.wolfscript.conversations.ConversationFactory} is used to construct identical conversations on demand. <p> Conversation flow consists of a directed graph of {@link io.wolfscript.conversations.Prompt} objects. Each time a prompt gets input from the user, it must return the next prompt in the graph. Since each Prompt chooses the next Prompt, complex conversation trees can be implemented where the nature of the player's response directs the flow of the conversation. <p> Each conversation has a {@link io.wolfscript.conversations.ConversationPrefix} that prepends all output from the conversation to the player. The ConversationPrefix can be used to display the plugin name or conversation status as the conversation evolves. <p> Each conversation has a timeout measured in the number of inactive seconds to wait before abandoning the conversation. If the inactivity timeout is reached, the conversation is abandoned and the user's incoming and outgoing chat is returned to normal. <p> You should not construct a conversation manually. Instead, use the {@link io.wolfscript.conversations.ConversationFactory} for access to all available options.","name":"Conversation","qualifiedname":"io.wolfscript.conversations.Conversation","type":"class","scope":"public","constructors":[],"methods":[{"title":"Initializes a new Conversation.","description":"Initializes a new Conversation.","doc":{"param":["plugin The plugin that owns this conversation.","forWhom The entity for whom this conversation is mediating.","firstPrompt The first prompt in the conversation graph. /\n    public Conversation(Plugin plugin, Conversable forWhom, Prompt firstPrompt) {\n        this(plugin, forWhom, firstPrompt, new HashMap<Object, Object>());\n    }\n\n    /** Initializes a new Conversation.","plugin The plugin that owns this conversation.","forWhom The entity for whom this conversation is mediating.","firstPrompt The first prompt in the conversation graph.","initialSessionData Any initial values to put in the conversation context sessionData map. /\n    public Conversation(Plugin plugin, Conversable forWhom, Prompt firstPrompt, Map<Object, Object> initialSessionData) {\n        this.firstPrompt = firstPrompt;\n        this.context = new ConversationContext(plugin, forWhom, initialSessionData);\n        this.modal = true;\n        this.localEchoEnabled = true;\n        this.prefix = new NullConversationPrefix();\n        this.cancellers = new ArrayList<ConversationCanceller>();\n        this.abandonedListeners = new ArrayList<ConversationAbandonedListener>();\n    }\n\n    /** Gets the entity for whom this conversation is mediating.","modal The new conversation modality. /\n    void setModal(boolean modal) {\n        this.modal = modal;\n    }\n\n    /** Gets the status of local echo for this conversation. If local echo is enabled, any text submitted to a conversation gets echoed back into the submitter's chat window.","localEchoEnabled The status of local echo. /\n    public void setLocalEchoEnabled(boolean localEchoEnabled) {\n        this.localEchoEnabled = localEchoEnabled;\n    }\n\n    /** Gets the {@link ConversationPrefix} that prepends all output from this conversation.","prefix The ConversationPrefix to use. /\n    void setPrefix(ConversationPrefix prefix) {\n        this.prefix = prefix;\n    }\n\n    /** Adds a {@link ConversationCanceller} to the cancellers collection.","canceller The {@link ConversationCanceller} to add. /\n    void addConversationCanceller(ConversationCanceller canceller) {\n        canceller.setConversation(this);\n        this.cancellers.add(canceller);\n    }\n\n    /** Gets the list of {@link ConversationCanceller}s","input The user's chat text. /\n    public void acceptInput(String input) {\n        if (currentPrompt != null) {\n\n            // Echo the user's input\n            if (localEchoEnabled) {\n                context.getForWhom().sendRawMessage(prefix.getPrefix(context) + input);\n            }\n\n            // Test for conversation abandonment based on input\n            for(ConversationCanceller canceller : cancellers) {\n                if (canceller.cancelBasedOnInput(context, input)) {\n                    abandon(new ConversationAbandonedEvent(this, canceller));\n                    return;\n                }\n            }\n\n            // Not abandoned, output the next prompt\n            currentPrompt = currentPrompt.acceptInput(context, input);\n            outputNextPrompt();\n        }\n    }\n\n    /** Adds a {@link ConversationAbandonedListener}.","listener The listener to add. /\n    public synchronized void addConversationAbandonedListener(ConversationAbandonedListener listener) {\n        abandonedListeners.add(listener);\n    }\n\n    /** Removes a {@link ConversationAbandonedListener}.","listener The listener to remove. /\n    public synchronized void removeConversationAbandonedListener(ConversationAbandonedListener listener) {\n        abandonedListeners.remove(listener);\n    }\n\n    /** Abandons and resets the current conversation. Restores the user's normal chat behavior. /\n    public void abandon() {\n        abandon(new ConversationAbandonedEvent(this, new ManuallyAbandonedConversationCanceller()));\n    }\n\n    /** Abandons and resets the current conversation. Restores the user's normal chat behavior.","details Details about why the conversation was abandoned /\n    public synchronized void abandon(ConversationAbandonedEvent details) {\n        if (!abandoned) {\n            abandoned = true;\n            currentPrompt = null;\n            context.getForWhom().abandonConversation(this);\n            for (ConversationAbandonedListener listener : abandonedListeners) {\n                listener.conversationAbandoned(details);\n            }\n        }\n    }\n\n    /** Displays the next user prompt and abandons the conversation if the next prompt is null."],"return":["The entity. /\n    public Conversable getForWhom() {\n        return context.getForWhom();\n    }\n\n    /** Gets the modality of this conversation. If a conversation is modal, all messages directed to the player are suppressed for the duration of the conversation.","The conversation modality. /\n    public boolean isModal() {\n        return modal;\n    }\n\n    /** Sets the modality of this conversation.  If a conversation is modal, all messages directed to the player are suppressed for the duration of the conversation.","The status of local echo. /\n    public boolean isLocalEchoEnabled() {\n        return localEchoEnabled;\n    }\n\n    /** Sets the status of local echo for this conversation. If local echo is enabled, any text submitted to a conversation gets echoed back into the submitter's chat window.","The ConversationPrefix in use. /\n    public ConversationPrefix getPrefix() {\n        return prefix;\n    }\n\n    /** Sets the {@link io.wolfscript.conversations.ConversationPrefix} that prepends all output from this conversation.","The list. /\n    public List<ConversationCanceller> getCancellers() {\n        return cancellers;\n    }\n\n    /** Returns the Conversation's {@link io.wolfscript.conversations.ConversationContext}.","The ConversationContext. /\n    public ConversationContext getContext() {\n        return context;\n    }\n\n    /** Displays the first prompt of this conversation and begins redirecting the user's chat responses. /\n    public void begin() {\n        if (currentPrompt == null) {\n            abandoned = false;\n            currentPrompt = firstPrompt;\n            context.getForWhom().beginConversation(this);\n        }\n    }\n\n    /** Returns Returns the current state of the conversation.","The current state of the conversation. /\n    public ConversationState getState() {\n        if (currentPrompt != null) {\n            return ConversationState.STARTED;\n        } else if (abandoned) {\n            return ConversationState.ABANDONED;\n        } else {\n            return ConversationState.UNSTARTED;\n        }\n    }\n\n    /** Passes player input into the current prompt. The next prompt (as determined by the current prompt) is then displayed to the user."]},"scope":"public","return":"void","name":"outputNextPrompt","args":[]}],"imports":["io.wolfscript.plugin.Plugin","java.util.ArrayList","java.util.HashMap","java.util.List","java.util.Map"],"properties":[]},"io.wolfscript.conversations.ConversationAbandonedEvent":{"namespace":"io.wolfscript.conversations","title":"ConversationAbandonedEvent contains information about an abandoned","description":"ConversationAbandonedEvent contains information about an abandoned conversation.","name":"ConversationAbandonedEvent","qualifiedname":"io.wolfscript.conversations.ConversationAbandonedEvent","type":"class","scope":"public","extends":["java.util.EventObject"],"constructors":[{"title":"ConversationAbandonedEvent constructor","description":"ConversationAbandonedEvent constructor","scope":"public","name":"ConversationAbandonedEvent","args":[{"name":"conversation","type":"io.wolfscript.conversations.Conversation","description":"conversation argument"}]},{"title":"ConversationAbandonedEvent constructor","description":"ConversationAbandonedEvent constructor","scope":"public","name":"ConversationAbandonedEvent","args":[{"name":"conversation","type":"io.wolfscript.conversations.Conversation","description":"conversation argument"},{"name":"canceller","type":"io.wolfscript.conversations.ConversationCanceller","description":"canceller argument"}]}],"methods":[{"title":"Gets the object that caused the conversation to be abandoned.","description":"Gets the object that caused the conversation to be abandoned.","doc":{"return":["The object that abandoned the conversation. /\n    public ConversationCanceller getCanceller() {\n        return canceller;\n    }\n\n    /** Gets the abandoned conversation's conversation context.","The abandoned conversation's conversation context. /\n    public ConversationContext getContext() {\n        return context;\n    }\n\n    /** Indicates how the conversation was abandoned - naturally as part of the prompt chain or prematurely via a {@link io.wolfscript.conversations.ConversationCanceller}.","True if the conversation is abandoned gracefully by a {@link io.wolfscript.conversations.Prompt} returning null or the next prompt. False of the conversations is abandoned prematurely by a ConversationCanceller."]},"scope":"public","return":"boolean","name":"gracefulExit","args":[]}],"imports":["java.util.EventObject"],"properties":[]},"io.wolfscript.conversations.ConversationAbandonedListener":{"namespace":"io.wolfscript.conversations","title":"interface ConversationAbandonedListener","description":"interface ConversationAbandonedListener","name":"ConversationAbandonedListener","qualifiedname":"io.wolfscript.conversations.ConversationAbandonedListener","type":"interface","scope":"public","extends":["java.util.EventListener"],"constructors":[],"methods":[{"title":"Called whenever a {@link io.wolfscript.conversations.Conversation} is abandoned.","description":"Called whenever a {@link io.wolfscript.conversations.Conversation} is abandoned.","scope":"public","return":"void","name":"conversationAbandoned","args":[{"name":"abandonedEvent","type":"io.wolfscript.conversations.ConversationAbandonedEvent","description":"Contains details about the abandoned conversation."}]}],"imports":["java.util.EventListener"],"properties":[]},"io.wolfscript.conversations.ConversationCanceller":{"namespace":"io.wolfscript.conversations","title":"A ConversationCanceller is a class that cancels an active {@link","description":"A ConversationCanceller is a class that cancels an active {@link io.wolfscript.conversations.Conversation}. A Conversation can have more than one ConversationCanceller.","name":"ConversationCanceller","qualifiedname":"io.wolfscript.conversations.ConversationCanceller","type":"interface","scope":"public","extends":["Cloneable"],"constructors":[],"methods":[{"title":"Sets the conversation this ConversationCanceller can optionally cancel.","description":"Sets the conversation this ConversationCanceller can optionally cancel.","doc":{"param":["conversation A conversation. /\n    public void setConversation(Conversation conversation);\n\n    /** Cancels a conversation based on user input.","context Context information about the conversation.","input The input text from the user."],"return":["True to cancel the conversation, False otherwise. /\n    public boolean cancelBasedOnInput(ConversationContext context, String input);\n\n    /** Allows the {@link io.wolfscript.conversations.ConversationFactory} to duplicate this ConversationCanceller when creating a new {@link io.wolfscript.conversations.Conversation}. <p> Implementing this method should reset any internal object state.","A clone."]},"scope":"public","return":"io.wolfscript.conversations.ConversationCanceller","name":"clone","args":[]}],"imports":[],"properties":[]},"io.wolfscript.conversations.ConversationContext":{"namespace":"io.wolfscript.conversations","title":"A ConversationContext provides continuity between nodes in the prompt graph","description":"A ConversationContext provides continuity between nodes in the prompt graph by giving the developer access to the subject of the conversation and a generic map for storing values that are shared between all {@link io.wolfscript.conversations.Prompt} invocations.","name":"ConversationContext","qualifiedname":"io.wolfscript.conversations.ConversationContext","type":"class","scope":"public","constructors":[],"methods":[{"title":"setSessionData method","description":"setSessionData method","doc":{"return":["The owning plugin. /\n    public Plugin getPlugin() {\n        return plugin;\n    }\n\n    /** Gets the subject of the conversation.","The subject of the conversation. /\n    public Conversable getForWhom() {\n        return forWhom;\n    }\n\n    /** Gets session data shared between all {@link io.wolfscript.conversations.Prompt} invocations. Use this as a way to pass data through each Prompt as the conversation develops.","The requested session data. /\n    public Object getSessionData(Object key) {\n        return sessionData.get(key);\n    }\n\n    /** Sets session data shared between all {@link io.wolfscript.conversations.Prompt} invocations. Use this as a way to pass data through each prompt as the conversation develops."]},"scope":"public","return":"void","name":"setSessionData","args":[{"name":"key","type":"Object","description":"The session data key."},{"name":"value","type":"Object","description":"The session data value."}]}],"imports":["io.wolfscript.plugin.Plugin","java.util.Map"],"properties":[]},"io.wolfscript.conversations.ConversationFactory":{"namespace":"io.wolfscript.conversations","title":"A ConversationFactory is responsible for creating a {@link io.wolfscript.conversations.Conversation}","description":"A ConversationFactory is responsible for creating a {@link io.wolfscript.conversations.Conversation} from a predefined template. A ConversationFactory is typically created when a plugin is instantiated and builds a Conversation each time a user initiates a conversation with the plugin. Each Conversation maintains its own state and calls back as needed into the plugin. <p> The ConversationFactory implements a fluid API, allowing parameters to be set as an extension to the constructor.","name":"ConversationFactory","qualifiedname":"io.wolfscript.conversations.ConversationFactory","type":"class","scope":"public","constructors":[],"methods":[{"title":"Constructs a ConversationFactory.","description":"Constructs a ConversationFactory.","doc":{"return":["This object. /\n    public ConversationFactory withModality(boolean modal)\n    {\n        isModal = modal;\n        return this;\n    }\n\n    /** Sets the local echo status for all {@link io.wolfscript.conversations.Conversation}s created by this factory. If local echo is enabled, any text submitted to a conversation gets echoed back into the submitter's chat window.","This object. /\n    public ConversationFactory withLocalEcho(boolean localEchoEnabled) {\n        this.localEchoEnabled = localEchoEnabled;\n        return this;\n    }\n\n    /** Sets the {@link io.wolfscript.conversations.ConversationPrefix} that prepends all output from all generated conversations. <p> The default is a {@link NullConversationPrefix};","This object. /\n    public ConversationFactory withPrefix(ConversationPrefix prefix) {\n        this.prefix = prefix;\n        return this;\n    }\n\n    /** Sets the number of inactive seconds to wait before automatically abandoning all generated conversations. <p> The default is 600 seconds (5 minutes).","This object. /\n    public ConversationFactory withTimeout(int timeoutSeconds) {\n        return withConversationCanceller(new InactivityConversationCanceller(plugin, timeoutSeconds));\n    }\n\n    /** Sets the first prompt to use in all generated conversations. <p> The default is Prompt.END_OF_CONVERSATION.","This object. /\n    public ConversationFactory withFirstPrompt(Prompt firstPrompt) {\n        this.firstPrompt = firstPrompt;\n        return this;\n    }\n\n    /** Sets any initial data with which to populate the conversation context sessionData map.","This object. /\n    public ConversationFactory withInitialSessionData(Map<Object, Object> initialSessionData) {\n        this.initialSessionData = initialSessionData;\n        return this;\n    }\n\n    /** Sets the player input that, when received, will immediately terminate the conversation.","This object. /\n    public ConversationFactory withEscapeSequence(String escapeSequence) {\n        return withConversationCanceller(new ExactMatchConversationCanceller(escapeSequence));\n    }\n\n\n    /** Adds a {@link io.wolfscript.conversations.ConversationCanceller} to constructed conversations.","This object. /\n    public ConversationFactory withConversationCanceller(ConversationCanceller canceller) {\n        cancellers.add(canceller);\n        return this;\n    }\n\n    /** Prevents this factory from creating a conversation for non-player {@link io.wolfscript.conversations.Conversable} objects.","This object. /\n    public ConversationFactory thatExcludesNonPlayersWithMessage(String playerOnlyMessage) {\n        this.playerOnlyMessage = playerOnlyMessage;\n        return this;\n    }\n\n    /** Adds a {@link io.wolfscript.conversations.ConversationAbandonedListener} to all conversations constructed by this factory.","This object. /\n    public ConversationFactory addConversationAbandonedListener(ConversationAbandonedListener listener) {\n        abandonedListeners.add(listener);\n        return this;\n    }\n\n    /** Constructs a {@link io.wolfscript.conversations.Conversation} in accordance with the defaults set for this factory.","A new conversation."]},"scope":"public","return":"io.wolfscript.conversations.Conversation","name":"buildConversation","args":[{"name":"forWhom","type":"io.wolfscript.conversations.Conversable","description":"The entity for whom the new conversation is mediating."}]},{"title":"getPromptText method","description":"getPromptText method","scope":"public","return":"String","name":"getPromptText","args":[{"name":"context","type":"io.wolfscript.conversations.ConversationContext","description":"context argument"}]}],"imports":["io.wolfscript.entity.Player","io.wolfscript.plugin.Plugin","java.util.ArrayList","java.util.HashMap","java.util.List","java.util.Map"],"properties":[]},"io.wolfscript.conversations.ConversationPrefix":{"namespace":"io.wolfscript.conversations","title":"A ConversationPrefix implementation prepends all output from the","description":"A ConversationPrefix implementation prepends all output from the conversation to the player. The ConversationPrefix can be used to display the plugin name or conversation status as the conversation evolves.","name":"ConversationPrefix","qualifiedname":"io.wolfscript.conversations.ConversationPrefix","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.command.CommandSender"],"properties":[]},"io.wolfscript.conversations.ExactMatchConversationCanceller":{"namespace":"io.wolfscript.conversations","title":"An ExactMatchConversationCanceller cancels a conversation if the user","description":"An ExactMatchConversationCanceller cancels a conversation if the user enters an exact input string","name":"ExactMatchConversationCanceller","qualifiedname":"io.wolfscript.conversations.ExactMatchConversationCanceller","type":"class","scope":"public","implements":["io.wolfscript.conversations.ConversationCanceller"],"constructors":[{"title":"Builds an ExactMatchConversationCanceller.","description":"Builds an ExactMatchConversationCanceller.","scope":"public","name":"ExactMatchConversationCanceller","args":[{"name":"escapeSequence","type":"String","description":"The string that, if entered by the user, will cancel the conversation."}]}],"methods":[{"title":"cancelBasedOnInput method","description":"cancelBasedOnInput method","scope":"public","return":"boolean","name":"cancelBasedOnInput","args":[{"name":"context","type":"io.wolfscript.conversations.ConversationContext","description":"context argument"},{"name":"input","type":"String","description":"input argument"}]},{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.conversations.ConversationCanceller","name":"clone","args":[]}],"imports":[],"properties":[{"name":"Conversation","modifier":"writeonly","args":[{"name":"conversation","type":"io.wolfscript.conversations.Conversation","description":"conversation argument"}],"description":"Conversation property","return":"void","scope":"public","title":"Conversation property"}]},"io.wolfscript.conversations.FixedSetPrompt":{"namespace":"io.wolfscript.conversations","title":"FixedSetPrompt is the base class for any prompt that requires a fixed set","description":"FixedSetPrompt is the base class for any prompt that requires a fixed set response from the user.","name":"FixedSetPrompt","qualifiedname":"io.wolfscript.conversations.FixedSetPrompt","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.conversations.ValidatingPrompt"],"constructors":[],"methods":[],"imports":["org.apache.commons.lang.StringUtils","java.util.Arrays","java.util.List"],"properties":[]},"io.wolfscript.conversations.InactivityConversationCanceller":{"namespace":"io.wolfscript.conversations","title":"An InactivityConversationCanceller will cancel a {@link io.wolfscript.conversations.Conversation} after","description":"An InactivityConversationCanceller will cancel a {@link io.wolfscript.conversations.Conversation} after a period of inactivity by the user.","name":"InactivityConversationCanceller","qualifiedname":"io.wolfscript.conversations.InactivityConversationCanceller","type":"class","scope":"public","implements":["io.wolfscript.conversations.ConversationCanceller"],"constructors":[],"methods":[],"imports":["io.wolfscript.Server","io.wolfscript.plugin.Plugin"],"properties":[]},"io.wolfscript.conversations.PluginNameConversationPrefix":{"namespace":"io.wolfscript.conversations","title":"PluginNameConversationPrefix is a {@link io.wolfscript.conversations.ConversationPrefix} implementation","description":"PluginNameConversationPrefix is a {@link io.wolfscript.conversations.ConversationPrefix} implementation that displays the plugin name in front of conversation output.","name":"PluginNameConversationPrefix","qualifiedname":"io.wolfscript.conversations.PluginNameConversationPrefix","type":"class","scope":"public","implements":["io.wolfscript.conversations.ConversationPrefix"],"constructors":[{"title":"PluginNameConversationPrefix constructor","description":"PluginNameConversationPrefix constructor","scope":"public","name":"PluginNameConversationPrefix","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"}]},{"title":"PluginNameConversationPrefix constructor","description":"PluginNameConversationPrefix constructor","scope":"public","name":"PluginNameConversationPrefix","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"separator","type":"String","description":"separator argument"},{"name":"prefixColor","type":"io.wolfscript.ChatColor","description":"prefixColor argument"}]}],"methods":[{"title":"Prepends each conversation message with the plugin name.","description":"Prepends each conversation message with the plugin name.","doc":{"return":["An empty string."]},"scope":"public","return":"String","name":"getPrefix","args":[{"name":"context","type":"io.wolfscript.conversations.ConversationContext","description":"Context information about the conversation."}]}],"imports":["io.wolfscript.ChatColor","io.wolfscript.command.CommandSender","io.wolfscript.plugin.Plugin"],"properties":[]},"io.wolfscript.conversations.Prompt":{"namespace":"io.wolfscript.conversations","title":"A Prompt is the main constituent of a {@link io.wolfscript.conversations.Conversation}. Each prompt","description":"A Prompt is the main constituent of a {@link io.wolfscript.conversations.Conversation}. Each prompt displays text to the user and optionally waits for a user's response. Prompts are chained together into a directed graph that represents the conversation flow. To halt a conversation, END_OF_CONVERSATION is returned in liu of another Prompt object.","name":"Prompt","qualifiedname":"io.wolfscript.conversations.Prompt","type":"interface","scope":"public","extends":["Cloneable"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.conversations.RegexPrompt":{"namespace":"io.wolfscript.conversations","title":"RegexPrompt is the base class for any prompt that requires an input","description":"RegexPrompt is the base class for any prompt that requires an input validated by a regular expression.","name":"RegexPrompt","qualifiedname":"io.wolfscript.conversations.RegexPrompt","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.conversations.ValidatingPrompt"],"constructors":[{"title":"RegexPrompt constructor","description":"RegexPrompt constructor","scope":"public","name":"RegexPrompt","args":[{"name":"regex","type":"String","description":"regex argument"}]},{"title":"RegexPrompt constructor","description":"RegexPrompt constructor","scope":"public","name":"RegexPrompt","args":[{"name":"pattern","type":"java.util.regex.Pattern","description":"pattern argument"}]}],"methods":[],"imports":["java.util.regex.Pattern"],"properties":[]},"io.wolfscript.conversations.ValidatingPrompt":{"namespace":"io.wolfscript.conversations","title":"ValidatingPrompt is the base class for any prompt that requires validation.","description":"ValidatingPrompt is the base class for any prompt that requires validation. ValidatingPrompt will keep replaying the prompt text until the user enters a valid response.","name":"ValidatingPrompt","qualifiedname":"io.wolfscript.conversations.ValidatingPrompt","type":"class","scope":"public","describe":"abstract","implements":["io.wolfscript.conversations.Prompt"],"constructors":[{"title":"ValidatingPrompt constructor","description":"ValidatingPrompt constructor","scope":"public","name":"ValidatingPrompt","args":[]}],"methods":[],"imports":["io.wolfscript.ChatColor"],"properties":[]},"io.wolfscript.enchantments.0":{"namespace":"io.wolfscript","title":"Classes relating to the specialized enhancements to {@link","description":"Classes relating to the specialized enhancements to {@link io.wolfscript.inventory.ItemStack item stacks}, as part of the {@link io.wolfscript.inventory.meta.ItemMeta meta data}.","name":"enchantments","qualifiedname":"io.wolfscript.enchantments.0","packagename":"io.wolfscript.enchantments","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.enchantments.Enchantment","io.wolfscript.enchantments.EnchantmentWrapper"],"interfaces":[],"enums":["io.wolfscript.enchantments.EnchantmentTarget"],"namespaces":[],"properties":[]},"io.wolfscript.enchantments.Enchantment":{"namespace":"io.wolfscript.enchantments","title":"The various type of enchantments that may be added to armour or weapons","description":"The various type of enchantments that may be added to armour or weapons","name":"Enchantment","qualifiedname":"io.wolfscript.enchantments.Enchantment","type":"class","scope":"public","describe":"abstract","constructors":[],"fields":[{"title":"Provides protection against environmental damage","description":"Provides protection against environmental damage /\n    public static final Enchantment PROTECTION_ENVIRONMENTAL = new EnchantmentWrapper(0);\n\n    /** Provides protection against fire damage /\n    public static final Enchantment PROTECTION_FIRE = new EnchantmentWrapper(1);\n\n    /** Provides protection against fall damage /\n    public static final Enchantment PROTECTION_FALL = new EnchantmentWrapper(2);\n\n    /** Provides protection against explosive damage /\n    public static final Enchantment PROTECTION_EXPLOSIONS = new EnchantmentWrapper(3);\n\n    /** Provides protection against projectile damage /\n    public static final Enchantment PROTECTION_PROJECTILE = new EnchantmentWrapper(4);\n\n    /** Decreases the rate of air loss whilst underwater /\n    public static final Enchantment OXYGEN = new EnchantmentWrapper(5);\n\n    /** Increases the speed at which a player may mine underwater /\n    public static final Enchantment WATER_WORKER = new EnchantmentWrapper(6);\n\n    /** Damages the attacker /\n    public static final Enchantment THORNS = new EnchantmentWrapper(7);\n\n    /** Increases walking speed while in water /\n    public static final Enchantment DEPTH_STRIDER = new EnchantmentWrapper(8);\n\n    /** Increases damage against all targets /\n    public static final Enchantment DAMAGE_ALL = new EnchantmentWrapper(16);\n\n    /** Increases damage against undead targets /\n    public static final Enchantment DAMAGE_UNDEAD = new EnchantmentWrapper(17);\n\n    /** Increases damage against arthropod targets /\n    public static final Enchantment DAMAGE_ARTHROPODS = new EnchantmentWrapper(18);\n\n    /** All damage to other targets will knock them back when hit /\n    public static final Enchantment KNOCKBACK = new EnchantmentWrapper(19);\n\n    /** When attacking a target, has a chance to set them on fire /\n    public static final Enchantment FIRE_ASPECT = new EnchantmentWrapper(20);\n\n    /** Provides a chance of gaining extra loot when killing monsters /\n    public static final Enchantment LOOT_BONUS_MOBS = new EnchantmentWrapper(21);\n\n    /** Increases the rate at which you mine/dig /\n    public static final Enchantment DIG_SPEED = new EnchantmentWrapper(32);\n\n    /** Allows blocks to drop themselves instead of fragments (for example, stone instead of cobblestone) /\n    public static final Enchantment SILK_TOUCH = new EnchantmentWrapper(33);\n\n    /** Decreases the rate at which a tool looses durability /\n    public static final Enchantment DURABILITY = new EnchantmentWrapper(34);\n\n    /** Provides a chance of gaining extra loot when destroying blocks /\n    public static final Enchantment LOOT_BONUS_BLOCKS = new EnchantmentWrapper(35);\n\n    /** Provides extra damage when shooting arrows from bows /\n    public static final Enchantment ARROW_DAMAGE = new EnchantmentWrapper(48);\n\n    /** Provides a knockback when an entity is hit by an arrow from a bow /\n    public static final Enchantment ARROW_KNOCKBACK = new EnchantmentWrapper(49);\n\n    /** Sets entities on fire when hit by arrows shot from a bow /\n    public static final Enchantment ARROW_FIRE = new EnchantmentWrapper(50);\n\n    /** Provides infinite arrows when shooting a bow /\n    public static final Enchantment ARROW_INFINITE = new EnchantmentWrapper(51);\n\n    /** Decreases odds of catching worthless junk /\n    public static final Enchantment LUCK = new EnchantmentWrapper(61);\n\n    /** Increases rate of fish biting your hook","doc":{},"name":"LURE","scope":"public","type":"io.wolfscript.enchantments.Enchantment","describe":"static final"}],"methods":[{"title":"Provides protection against environmental damage","description":"Provides protection against environmental damage /\n    public static final Enchantment PROTECTION_ENVIRONMENTAL = new EnchantmentWrapper(0);\n\n    /** Provides protection against fire damage /\n    public static final Enchantment PROTECTION_FIRE = new EnchantmentWrapper(1);\n\n    /** Provides protection against fall damage /\n    public static final Enchantment PROTECTION_FALL = new EnchantmentWrapper(2);\n\n    /** Provides protection against explosive damage /\n    public static final Enchantment PROTECTION_EXPLOSIONS = new EnchantmentWrapper(3);\n\n    /** Provides protection against projectile damage /\n    public static final Enchantment PROTECTION_PROJECTILE = new EnchantmentWrapper(4);\n\n    /** Decreases the rate of air loss whilst underwater /\n    public static final Enchantment OXYGEN = new EnchantmentWrapper(5);\n\n    /** Increases the speed at which a player may mine underwater /\n    public static final Enchantment WATER_WORKER = new EnchantmentWrapper(6);\n\n    /** Damages the attacker /\n    public static final Enchantment THORNS = new EnchantmentWrapper(7);\n\n    /** Increases walking speed while in water /\n    public static final Enchantment DEPTH_STRIDER = new EnchantmentWrapper(8);\n\n    /** Increases damage against all targets /\n    public static final Enchantment DAMAGE_ALL = new EnchantmentWrapper(16);\n\n    /** Increases damage against undead targets /\n    public static final Enchantment DAMAGE_UNDEAD = new EnchantmentWrapper(17);\n\n    /** Increases damage against arthropod targets /\n    public static final Enchantment DAMAGE_ARTHROPODS = new EnchantmentWrapper(18);\n\n    /** All damage to other targets will knock them back when hit /\n    public static final Enchantment KNOCKBACK = new EnchantmentWrapper(19);\n\n    /** When attacking a target, has a chance to set them on fire /\n    public static final Enchantment FIRE_ASPECT = new EnchantmentWrapper(20);\n\n    /** Provides a chance of gaining extra loot when killing monsters /\n    public static final Enchantment LOOT_BONUS_MOBS = new EnchantmentWrapper(21);\n\n    /** Increases the rate at which you mine/dig /\n    public static final Enchantment DIG_SPEED = new EnchantmentWrapper(32);\n\n    /** Allows blocks to drop themselves instead of fragments (for example, stone instead of cobblestone) /\n    public static final Enchantment SILK_TOUCH = new EnchantmentWrapper(33);\n\n    /** Decreases the rate at which a tool looses durability /\n    public static final Enchantment DURABILITY = new EnchantmentWrapper(34);\n\n    /** Provides a chance of gaining extra loot when destroying blocks /\n    public static final Enchantment LOOT_BONUS_BLOCKS = new EnchantmentWrapper(35);\n\n    /** Provides extra damage when shooting arrows from bows /\n    public static final Enchantment ARROW_DAMAGE = new EnchantmentWrapper(48);\n\n    /** Provides a knockback when an entity is hit by an arrow from a bow /\n    public static final Enchantment ARROW_KNOCKBACK = new EnchantmentWrapper(49);\n\n    /** Sets entities on fire when hit by arrows shot from a bow /\n    public static final Enchantment ARROW_FIRE = new EnchantmentWrapper(50);\n\n    /** Provides infinite arrows when shooting a bow /\n    public static final Enchantment ARROW_INFINITE = new EnchantmentWrapper(51);\n\n    /** Decreases odds of catching worthless junk /\n    public static final Enchantment LUCK = new EnchantmentWrapper(61);\n\n    /** Increases rate of fish biting your hook /\n    public static final Enchantment LURE = new EnchantmentWrapper(62);\n\n    private static final Map<Integer, Enchantment> byId = new HashMap<Integer, Enchantment>();\n    private static final Map<String, Enchantment> byName = new HashMap<String, Enchantment>();\n    private static boolean acceptingNew = true;\n    private final int id;\n\n    public Enchantment(int id) {\n        this.id = id;\n    }\n\n    /** Gets the unique ID of this enchantment","doc":{"return":["Unique ID","Unique name /\n    public abstract String getName();\n\n    /** Gets the maximum level that this Enchantment may become.","Maximum level of the Enchantment /\n    public abstract int getMaxLevel();\n\n    /** Gets the level that this Enchantment should start at","Starting level of the Enchantment /\n    public abstract int getStartLevel();\n\n    /** Gets the type of {@link io.wolfscript.inventory.ItemStack} that may fit this Enchantment.","Target type of the Enchantment /\n    public abstract EnchantmentTarget getItemTarget();\n\n    /** Check if this enchantment conflicts with another enchantment.","True if there is a conflict. /\n    public abstract boolean conflictsWith(Enchantment other);\n\n    /** Checks if this Enchantment may be applied to the given {@link io.wolfscript.inventory.ItemStack}. <p> This does not check if it conflicts with any enchantments already applied to the item.","True if the enchantment may be applied, otherwise False /\n    public abstract boolean canEnchantItem(ItemStack item);\n\n    @Override\n    public boolean equals(Object obj) {\n        if (obj == null) {\n            return false;\n        }\n        if (!(obj instanceof Enchantment)) {\n            return false;\n        }\n        final Enchantment other = (Enchantment) obj;\n        if (this.id != other.id) {\n            return false;\n        }\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        return id;\n    }\n\n    @Override\n    public String toString() {\n        return \"Enchantment[\" + id + \", \" + getName() + \"]\";\n    }\n\n    /** Registers an enchantment with the given ID and object. <p> Generally not to be used from within a plugin.","True if the server Implementation may add enchantments /\n    public static boolean isAcceptingRegistrations() {\n        return acceptingNew;\n    }\n\n    /** Stops accepting any enchantment registrations /\n    public static void stopAcceptingRegistrations() {\n        acceptingNew = false;\n        EnchantCommand.buildEnchantments();\n    }\n\n    /** Gets the Enchantment at the specified ID","Resulting Enchantment, or null if not found","Resulting Enchantment, or null if not found /\n    public static Enchantment getByName(String name) {\n        return byName.get(name);\n    }\n\n    /** Gets an array of all the registered {@link io.wolfscript.enchantments.Enchantment}s","Array of enchantments"],"deprecated":["Magic value /\n    @Deprecated\n    public int getId() {\n        return id;\n    }\n\n    /** Gets the unique name of this enchantment","Magic value /\n    @Deprecated\n    public static Enchantment getById(int id) {\n        return byId.get(id);\n    }\n\n    /** Gets the Enchantment at the specified name"],"param":["other The enchantment to check against","item Item to test","enchantment Enchantment to register /\n    public static void registerEnchantment(Enchantment enchantment) {\n        if (byId.containsKey(enchantment.id) || byName.containsKey(enchantment.getName())) {\n            throw new IllegalArgumentException(\"Cannot set already-set enchantment\");\n        } else if (!isAcceptingRegistrations()) {\n            throw new IllegalStateException(\"No longer accepting new enchantments (can only be done by the server implementation)\");\n        }\n\n        byId.put(enchantment.id, enchantment);\n        byName.put(enchantment.getName(), enchantment);\n    }\n\n    /** Checks if this is accepting Enchantment registrations.","id ID to fetch","name Name to fetch"]},"scope":"public","describe":"static","return":"Enchantment[]","name":"values","args":[]}],"imports":["java.util.HashMap","java.util.Map","io.wolfscript.command.defaults.EnchantCommand","io.wolfscript.inventory.ItemStack"],"properties":[]},"io.wolfscript.enchantments.EnchantmentTarget":{"namespace":"io.wolfscript.enchantments","title":"Represents the applicable target for a {@link io.wolfscript.enchantments.Enchantment}","description":"Represents the applicable target for a {@link io.wolfscript.enchantments.Enchantment}","name":"EnchantmentTarget","qualifiedname":"io.wolfscript.enchantments.EnchantmentTarget","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Allows the Enchantment to be placed on all items","description":"Allows the Enchantment to be placed on all items /\n    ALL {\n        @Override\n        public boolean includes(Material item) {\n            return true;\n        }\n    },\n\n    /** Allows the Enchantment to be placed on armor /\n    ARMOR {\n        @Override\n        public boolean includes(Material item) {\n            return ARMOR_FEET.includes(item)\n                || ARMOR_LEGS.includes(item)\n                || ARMOR_HEAD.includes(item)\n                || ARMOR_TORSO.includes(item);\n        }\n    },\n\n    /** Allows the Enchantment to be placed on feet slot armor /\n    ARMOR_FEET {\n        @Override\n        public boolean includes(Material item) {\n            return item.equals(Material.LEATHER_BOOTS)\n                || item.equals(Material.CHAINMAIL_BOOTS)\n                || item.equals(Material.IRON_BOOTS)\n                || item.equals(Material.DIAMOND_BOOTS)\n                || item.equals(Material.GOLD_BOOTS);\n        }\n    },\n\n    /** Allows the Enchantment to be placed on leg slot armor /\n    ARMOR_LEGS {\n        @Override\n        public boolean includes(Material item) {\n            return item.equals(Material.LEATHER_LEGGINGS)\n                || item.equals(Material.CHAINMAIL_LEGGINGS)\n                || item.equals(Material.IRON_LEGGINGS)\n                || item.equals(Material.DIAMOND_LEGGINGS)\n                || item.equals(Material.GOLD_LEGGINGS);\n        }\n    },\n\n    /** Allows the Enchantment to be placed on torso slot armor /\n    ARMOR_TORSO {\n        @Override\n        public boolean includes(Material item) {\n            return item.equals(Material.LEATHER_CHESTPLATE)\n                || item.equals(Material.CHAINMAIL_CHESTPLATE)\n                || item.equals(Material.IRON_CHESTPLATE)\n                || item.equals(Material.DIAMOND_CHESTPLATE)\n                || item.equals(Material.GOLD_CHESTPLATE);\n        }\n    },\n\n    /** Allows the Enchantment to be placed on head slot armor /\n    ARMOR_HEAD {\n        @Override\n        public boolean includes(Material item) {\n            return item.equals(Material.LEATHER_HELMET)\n                || item.equals(Material.CHAINMAIL_HELMET)\n                || item.equals(Material.DIAMOND_HELMET)\n                || item.equals(Material.IRON_HELMET)\n                || item.equals(Material.GOLD_HELMET);\n        }\n    },\n\n    /** Allows the Enchantment to be placed on weapons (swords) /\n    WEAPON {\n        @Override\n        public boolean includes(Material item) {\n            return item.equals(Material.WOOD_SWORD)\n                || item.equals(Material.STONE_SWORD)\n                || item.equals(Material.IRON_SWORD)\n                || item.equals(Material.DIAMOND_SWORD)\n                || item.equals(Material.GOLD_SWORD);\n        }\n    },\n\n    /** Allows the Enchantment to be placed on tools (spades, pickaxe, hoes, axes) /\n    TOOL {\n        @Override\n        public boolean includes(Material item) {\n            return item.equals(Material.WOOD_SPADE)\n                || item.equals(Material.STONE_SPADE)\n                || item.equals(Material.IRON_SPADE)\n                || item.equals(Material.DIAMOND_SPADE)\n                || item.equals(Material.GOLD_SPADE)\n                || item.equals(Material.WOOD_PICKAXE)\n                || item.equals(Material.STONE_PICKAXE)\n                || item.equals(Material.IRON_PICKAXE)\n                || item.equals(Material.DIAMOND_PICKAXE)\n                || item.equals(Material.GOLD_PICKAXE)\n                || item.equals(Material.WOOD_HOE)         // NOTE: No vanilla enchantments for this\n                || item.equals(Material.STONE_HOE)        // NOTE: No vanilla enchantments for this\n                || item.equals(Material.IRON_HOE)         // NOTE: No vanilla enchantments for this\n                || item.equals(Material.DIAMOND_HOE)      // NOTE: No vanilla enchantments for this\n                || item.equals(Material.GOLD_HOE)         // NOTE: No vanilla enchantments for this\n                || item.equals(Material.WOOD_AXE)\n                || item.equals(Material.STONE_AXE)\n                || item.equals(Material.IRON_AXE)\n                || item.equals(Material.DIAMOND_AXE)\n                || item.equals(Material.GOLD_AXE)\n                || item.equals(Material.SHEARS)           // NOTE: No vanilla enchantments for this\n                || item.equals(Material.FLINT_AND_STEEL); // NOTE: No vanilla enchantments for this\n        }\n    },\n\n    /** Allows the Enchantment to be placed on bows. /\n    BOW {\n        @Override\n        public boolean includes(Material item) {\n            return item.equals(Material.BOW);\n        }\n    },\n\n    /** Allows the Enchantment to be placed on fishing rods. /\n    FISHING_ROD {\n        @Override\n        public boolean includes(Material item) {\n            return item.equals(Material.FISHING_ROD);\n        }\n    };\n\n    /** Check whether this target includes the specified item.","doc":{"return":["True if the target includes the item /\n    public abstract boolean includes(Material item);\n\n    /** Check whether this target includes the specified item.","True if the target includes the item"]},"scope":"public","return":"boolean","name":"includes","args":[{"name":"item","type":"io.wolfscript.inventory.ItemStack","description":"The item to check"}]}],"imports":["io.wolfscript.Material","io.wolfscript.inventory.ItemStack"],"enum":[{"code":"true","value":"","title":"true EnchantmentTarget","description":"true EnchantmentTarget"}],"properties":[]},"io.wolfscript.enchantments.EnchantmentWrapper":{"namespace":"io.wolfscript.enchantments","title":"A simple wrapper for ease of selecting {@link io.wolfscript.enchantments.Enchantment}s","description":"A simple wrapper for ease of selecting {@link io.wolfscript.enchantments.Enchantment}s","name":"EnchantmentWrapper","qualifiedname":"io.wolfscript.enchantments.EnchantmentWrapper","type":"class","scope":"public","extends":["io.wolfscript.enchantments.Enchantment"],"constructors":[{"title":"EnchantmentWrapper constructor","description":"EnchantmentWrapper constructor","scope":"public","name":"EnchantmentWrapper","args":[{"name":"id","type":"int","description":"id argument"}]}],"methods":[{"title":"canEnchantItem method","description":"canEnchantItem method","scope":"public","return":"boolean","name":"canEnchantItem","args":[{"name":"item","type":"io.wolfscript.inventory.ItemStack","description":"item argument"}]},{"title":"conflictsWith method","description":"conflictsWith method","scope":"public","return":"boolean","name":"conflictsWith","args":[{"name":"other","type":"io.wolfscript.enchantments.Enchantment","description":"other argument"}]}],"imports":["io.wolfscript.inventory.ItemStack"],"properties":[{"name":"Enchantment","modifier":"readonly","args":[],"description":"Get: Gets the enchantment bound to this wrapper","doc":{"return":["Enchantment"]},"return":"io.wolfscript.enchantments.Enchantment","scope":"public","title":"Get: Gets the enchantment bound to this wrapper"},{"name":"ItemTarget","modifier":"readonly","args":[],"description":"ItemTarget property","return":"io.wolfscript.enchantments.EnchantmentTarget","scope":"public","title":"ItemTarget property"},{"name":"MaxLevel","modifier":"readonly","args":[],"description":"MaxLevel property","return":"int","scope":"public","title":"MaxLevel property"},{"name":"Name","modifier":"readonly","args":[],"description":"Name property","return":"String","scope":"public","title":"Name property"},{"name":"StartLevel","modifier":"readonly","args":[],"description":"StartLevel property","return":"int","scope":"public","title":"StartLevel property"}]},"io.wolfscript.entity.0":{"namespace":"io.wolfscript","title":"Interfaces for non-voxel objects that can exist in a {@link","description":"Interfaces for non-voxel objects that can exist in a {@link io.wolfscript.World world}, including all players, monsters, projectiles, etc.","name":"entity","qualifiedname":"io.wolfscript.entity.0","packagename":"io.wolfscript.entity","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":[],"interfaces":["io.wolfscript.entity.Ageable","io.wolfscript.entity.Ambient","io.wolfscript.entity.AnimalTamer","io.wolfscript.entity.Animals","io.wolfscript.entity.ArmorStand","io.wolfscript.entity.Arrow","io.wolfscript.entity.Bat","io.wolfscript.entity.Blaze","io.wolfscript.entity.Boat","io.wolfscript.entity.CaveSpider","io.wolfscript.entity.Chicken","io.wolfscript.entity.ComplexEntityPart","io.wolfscript.entity.ComplexLivingEntity","io.wolfscript.entity.Cow","io.wolfscript.entity.Creature","io.wolfscript.entity.Creeper","io.wolfscript.entity.Damageable","io.wolfscript.entity.Egg","io.wolfscript.entity.EnderCrystal","io.wolfscript.entity.EnderDragon","io.wolfscript.entity.EnderPearl","io.wolfscript.entity.EnderSignal","io.wolfscript.entity.Enderman","io.wolfscript.entity.Endermite","io.wolfscript.entity.ExperienceOrb","io.wolfscript.entity.Explosive","io.wolfscript.entity.FallingBlock","io.wolfscript.entity.FallingSand","io.wolfscript.entity.Firework","io.wolfscript.entity.Fish","io.wolfscript.entity.FishHook","io.wolfscript.entity.Flying","io.wolfscript.entity.Ghast","io.wolfscript.entity.Giant","io.wolfscript.entity.Golem","io.wolfscript.entity.Guardian","io.wolfscript.entity.IronGolem","io.wolfscript.entity.Item","io.wolfscript.entity.ItemFrame","io.wolfscript.entity.LargeFireball","io.wolfscript.entity.LeashHitch","io.wolfscript.entity.LightningStrike","io.wolfscript.entity.MagmaCube","io.wolfscript.entity.Minecart","io.wolfscript.entity.Monster","io.wolfscript.entity.MushroomCow","io.wolfscript.entity.NPC","io.wolfscript.entity.Painting","io.wolfscript.entity.PigZombie","io.wolfscript.entity.PoweredMinecart","io.wolfscript.entity.Projectile","io.wolfscript.entity.Rabbit","io.wolfscript.entity.Silverfish","io.wolfscript.entity.Slime","io.wolfscript.entity.SmallFireball","io.wolfscript.entity.Snowball","io.wolfscript.entity.Snowman","io.wolfscript.entity.Spider","io.wolfscript.entity.Squid","io.wolfscript.entity.StorageMinecart","io.wolfscript.entity.TNTPrimed","io.wolfscript.entity.Tameable","io.wolfscript.entity.ThrownExpBottle","io.wolfscript.entity.ThrownPotion","io.wolfscript.entity.Vehicle","io.wolfscript.entity.WaterMob","io.wolfscript.entity.Weather","io.wolfscript.entity.Witch","io.wolfscript.entity.Wither","io.wolfscript.entity.WitherSkull","io.wolfscript.entity.Zombie"],"enums":["io.wolfscript.entity.CreatureType","io.wolfscript.entity.EntityType","io.wolfscript.entity.Profession","io.wolfscript.entity.SkeletonType","io.wolfscript.entity.Style","io.wolfscript.entity.Type"],"namespaces":["io.wolfscript.entity.minecart.0"],"properties":[]},"io.wolfscript.entity.Ageable":{"namespace":"io.wolfscript.entity","title":"Represents an entity that can age and breed.","description":"Represents an entity that can age and breed.","name":"Ageable","qualifiedname":"io.wolfscript.entity.Ageable","type":"interface","scope":"public","extends":["io.wolfscript.entity.Creature"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"Breed","modifier":"writeonly","args":[{"name":"breed","type":"boolean","description":"breedability of the animal"}],"description":"Set: Gets the age of this animal.","doc":{"return":["Age /\n    public int getAge();\n\n    /** Sets the age of this animal.","the current agelock /\n    public boolean getAgeLock();\n\n    /** Sets the age of the animal to a baby /\n    public void setBaby();\n\n    /** Sets the age of the animal to an adult /\n    public void setAdult();\n\n    /** Returns true if the animal is an adult.","return true if the animal is an adult /\n    public boolean isAdult();\n    \n    /** Return the ability to breed of the animal.","the ability to breed of the animal /\n    public boolean canBreed();\n\n    /** Set breedability of the animal, if the animal is a baby and set to breed it will instantly grow up."]},"return":"void","scope":"public","title":"Set: Gets the age of this animal."}]},"io.wolfscript.entity.Ambient":{"namespace":"io.wolfscript.entity","title":"Represents an ambient mob","description":"Represents an ambient mob","name":"Ambient","qualifiedname":"io.wolfscript.entity.Ambient","type":"interface","scope":"public","extends":["LivingEntity"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.AnimalTamer":{"namespace":"io.wolfscript.entity","title":"interface AnimalTamer","description":"interface AnimalTamer","name":"AnimalTamer","qualifiedname":"io.wolfscript.entity.AnimalTamer","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["java.util.UUID"],"properties":[{"name":"UniqueId","modifier":"readonly","args":[],"description":"Get: This is the name of the specified AnimalTamer.","doc":{"return":["The name to reference on tamed animals or null if a name cannot be obtained /\n    public String getName();\n\n    /** This is the UUID of the specified AnimalTamer.","The UUID to reference on tamed animals"]},"return":"java.util.UUID","scope":"public","title":"Get: This is the name of the specified AnimalTamer."}]},"io.wolfscript.entity.Animals":{"namespace":"io.wolfscript.entity","title":"Represents an Animal.","description":"Represents an Animal.","name":"Animals","qualifiedname":"io.wolfscript.entity.Animals","type":"interface","scope":"public","extends":["io.wolfscript.entity.Ageable"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.ArmorStand":{"namespace":"io.wolfscript.entity","title":"interface ArmorStand","description":"interface ArmorStand","name":"ArmorStand","qualifiedname":"io.wolfscript.entity.ArmorStand","type":"interface","scope":"public","extends":["LivingEntity"],"constructors":[],"methods":[],"imports":["io.wolfscript.inventory.ItemStack","io.wolfscript.util.EulerAngle"],"properties":[]},"io.wolfscript.entity.Arrow":{"namespace":"io.wolfscript.entity","title":"Represents an arrow.","description":"Represents an arrow.","name":"Arrow","qualifiedname":"io.wolfscript.entity.Arrow","type":"interface","scope":"public","extends":["io.wolfscript.entity.Projectile"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"Critical","modifier":"writeonly","args":[{"name":"critical","type":"boolean","description":"whether or not it should be critical"}],"description":"Set: Gets the knockback strength for an arrow, which is the {@link io.wolfscript.enchantments.Enchantment#KNOCKBACK KnockBack} level of the bow that shot it.","doc":{"return":["the knockback strength value /\n    public int getKnockbackStrength();\n\n    /** Sets the knockback strength for an arrow.","true if it is critical /\n    public boolean isCritical();\n\n    /** Sets whether or not this arrow should be critical."]},"return":"void","scope":"public","title":"Set: Gets the knockback strength for an arrow, which is the"}]},"io.wolfscript.entity.Bat":{"namespace":"io.wolfscript.entity","title":"Represents a Bat","description":"Represents a Bat","name":"Bat","qualifiedname":"io.wolfscript.entity.Bat","type":"interface","scope":"public","extends":["io.wolfscript.entity.Ambient"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Blaze":{"namespace":"io.wolfscript.entity","title":"Represents a Blaze monster","description":"Represents a Blaze monster","name":"Blaze","qualifiedname":"io.wolfscript.entity.Blaze","type":"interface","scope":"public","extends":["io.wolfscript.entity.Monster"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Boat":{"namespace":"io.wolfscript.entity","title":"Represents a boat entity.","description":"Represents a boat entity.","name":"Boat","qualifiedname":"io.wolfscript.entity.Boat","type":"interface","scope":"public","extends":["io.wolfscript.entity.Vehicle"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"WorkOnLand","modifier":"writeonly","args":[{"name":"workOnLand","type":"boolean","description":"whether boats can work on land"}],"description":"Set: Gets the maximum speed of a boat. The speed is unrelated to the velocity.","doc":{"return":["The max speed. /\n    public double getMaxSpeed();\n\n    /** Sets the maximum speed of a boat. Must be nonnegative. Default is 0.4D.","The rate of deceleration /\n    public double getOccupiedDeceleration();\n\n    /** Sets the deceleration rate (newSpeed = curSpeed rate) of occupied boats. Setting this to a higher value allows for quicker acceleration. The default is 0.2.","The rate of deceleration /\n    public double getUnoccupiedDeceleration();\n\n    /** Sets the deceleration rate (newSpeed = curSpeed rate) of unoccupied boats. Setting this to a higher value allows for quicker deceleration of boats when a player disembarks. The default is -1. Values below 0 indicate that no additional deceleration is imposed.","whether boats can work on land /\n    public boolean getWorkOnLand();\n\n    /** Set whether boats can work on land."]},"return":"void","scope":"public","title":"Set: Gets the maximum speed of a boat. The speed is unrelated to the"}]},"io.wolfscript.entity.CaveSpider":{"namespace":"io.wolfscript.entity","title":"Represents a Spider.","description":"Represents a Spider.","name":"CaveSpider","qualifiedname":"io.wolfscript.entity.CaveSpider","type":"interface","scope":"public","extends":["io.wolfscript.entity.Spider"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Chicken":{"namespace":"io.wolfscript.entity","title":"Represents a Chicken.","description":"Represents a Chicken.","name":"Chicken","qualifiedname":"io.wolfscript.entity.Chicken","type":"interface","scope":"public","extends":["io.wolfscript.entity.Animals"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.ComplexEntityPart":{"namespace":"io.wolfscript.entity","title":"Represents a single part of a {@link io.wolfscript.entity.ComplexLivingEntity}","description":"Represents a single part of a {@link io.wolfscript.entity.ComplexLivingEntity}","name":"ComplexEntityPart","qualifiedname":"io.wolfscript.entity.ComplexEntityPart","type":"interface","scope":"public","extends":["Entity"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"Parent","modifier":"readonly","args":[],"description":"Get: Gets the parent {@link io.wolfscript.entity.ComplexLivingEntity} of this part.","doc":{"return":["Parent complex entity"]},"return":"io.wolfscript.entity.ComplexLivingEntity","scope":"public","title":"Get: Gets the parent {@link io.wolfscript.entity.ComplexLivingEntity} of this part."}]},"io.wolfscript.entity.ComplexLivingEntity":{"namespace":"io.wolfscript.entity","title":"Represents a complex living entity - one that is made up of various smaller","description":"Represents a complex living entity - one that is made up of various smaller parts","name":"ComplexLivingEntity","qualifiedname":"io.wolfscript.entity.ComplexLivingEntity","type":"interface","scope":"public","extends":["LivingEntity"],"constructors":[],"methods":[],"imports":["java.util.Set"],"properties":[{"name":"Parts","modifier":"readonly","args":[],"description":"Get: Gets a list of parts that belong to this complex entity","doc":{"return":["List of parts"]},"return":"Set<ComplexEntityPart>","scope":"public","title":"Get: Gets a list of parts that belong to this complex entity"}]},"io.wolfscript.entity.Cow":{"namespace":"io.wolfscript.entity","title":"Represents a Cow.","description":"Represents a Cow.","name":"Cow","qualifiedname":"io.wolfscript.entity.Cow","type":"interface","scope":"public","extends":["io.wolfscript.entity.Animals"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Creature":{"namespace":"io.wolfscript.entity","title":"Represents a Creature. Creatures are non-intelligent monsters or animals","description":"Represents a Creature. Creatures are non-intelligent monsters or animals which have very simple abilities.","name":"Creature","qualifiedname":"io.wolfscript.entity.Creature","type":"interface","scope":"public","extends":["LivingEntity"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"Target","modifier":"readonly","args":[],"description":"Get: Instructs this Creature to set the specified LivingEntity as its target. <p> Hostile creatures may attack their target, and friendly creatures may follow their target.","doc":{"param":["target New LivingEntity to target, or null to clear the target /\n    public void setTarget(LivingEntity target);\n\n    /** Gets the current target of this Creature"],"return":["Current target of this creature, or null if none exists"]},"return":"LivingEntity","scope":"public","title":"Get: Instructs this Creature to set the specified LivingEntity as its"}]},"io.wolfscript.entity.CreatureType":{"namespace":"io.wolfscript.entity","title":"Represents a type of creature.","description":"Represents a type of creature.","doc":{"deprecated":["Use EntityType instead."]},"name":"CreatureType","qualifiedname":"io.wolfscript.entity.CreatureType","deprecated":true,"type":"enum","scope":"public","constructors":[],"methods":[{"title":"fromEntityType method","description":"fromEntityType method","scope":"public","describe":"static","return":"io.wolfscript.entity.CreatureType","name":"fromEntityType","args":[{"name":"creatureType","type":"io.wolfscript.entity.EntityType","description":"creatureType argument"}]},{"title":"fromId method","description":"fromId method","doc":{"return":["the raw type id","the matching CreatureType or null"],"deprecated":["Magic value /\n    @Deprecated\n    public short getTypeId() {\n        return typeId;\n    }\n\n    public static CreatureType fromName(String name) {\n        return NAME_MAP.get(name);\n    }\n\n    /**","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.entity.CreatureType","name":"fromId","deprecated":true,"args":[{"name":"id","type":"int","description":"the raw type id"}]},{"title":"toEntityType method","description":"toEntityType method","scope":"public","return":"io.wolfscript.entity.EntityType","name":"toEntityType","args":[]}],"imports":["java.util.EnumSet","java.util.HashMap","java.util.Map"],"enum":[{"code":"\"Creeper\"","value":"","title":"\"Creeper\" CreatureType","description":"\"Creeper\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Creeper.class","value":"","title":"Creeper.class CreatureType","description":"Creeper.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Skeleton\"","value":"","title":"\"Skeleton\" CreatureType","description":"\"Skeleton\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Skeleton.class","value":"","title":"Skeleton.class CreatureType","description":"Skeleton.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Spider\"","value":"","title":"\"Spider\" CreatureType","description":"\"Spider\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Spider.class","value":"","title":"Spider.class CreatureType","description":"Spider.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Giant\"","value":"","title":"\"Giant\" CreatureType","description":"\"Giant\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Giant.class","value":"","title":"Giant.class CreatureType","description":"Giant.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Zombie\"","value":"","title":"\"Zombie\" CreatureType","description":"\"Zombie\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Zombie.class","value":"","title":"Zombie.class CreatureType","description":"Zombie.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Slime\"","value":"","title":"\"Slime\" CreatureType","description":"\"Slime\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Slime.class","value":"","title":"Slime.class CreatureType","description":"Slime.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Ghast\"","value":"","title":"\"Ghast\" CreatureType","description":"\"Ghast\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Ghast.class","value":"","title":"Ghast.class CreatureType","description":"Ghast.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"PigZombie\"","value":"","title":"\"PigZombie\" CreatureType","description":"\"PigZombie\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"PigZombie.class","value":"","title":"PigZombie.class CreatureType","description":"PigZombie.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Enderman\"","value":"","title":"\"Enderman\" CreatureType","description":"\"Enderman\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Enderman.class","value":"","title":"Enderman.class CreatureType","description":"Enderman.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"CaveSpider\"","value":"","title":"\"CaveSpider\" CreatureType","description":"\"CaveSpider\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"CaveSpider.class","value":"","title":"CaveSpider.class CreatureType","description":"CaveSpider.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Silverfish\"","value":"","title":"\"Silverfish\" CreatureType","description":"\"Silverfish\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Silverfish.class","value":"","title":"Silverfish.class CreatureType","description":"Silverfish.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Blaze\"","value":"","title":"\"Blaze\" CreatureType","description":"\"Blaze\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Blaze.class","value":"","title":"Blaze.class CreatureType","description":"Blaze.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"LavaSlime\"","value":"","title":"\"LavaSlime\" CreatureType","description":"\"LavaSlime\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"MagmaCube.class","value":"","title":"MagmaCube.class CreatureType","description":"MagmaCube.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"EnderDragon\"","value":"","title":"\"EnderDragon\" CreatureType","description":"\"EnderDragon\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"EnderDragon.class","value":"","title":"EnderDragon.class CreatureType","description":"EnderDragon.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Endermite\"","value":"","title":"\"Endermite\" CreatureType","description":"\"Endermite\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Endermite.class","value":"","title":"Endermite.class CreatureType","description":"Endermite.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Guardian\"","value":"","title":"\"Guardian\" CreatureType","description":"\"Guardian\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Guardian.class","value":"","title":"Guardian.class CreatureType","description":"Guardian.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Pig\"","value":"","title":"\"Pig\" CreatureType","description":"\"Pig\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Pig.class","value":"","title":"Pig.class CreatureType","description":"Pig.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Sheep\"","value":"","title":"\"Sheep\" CreatureType","description":"\"Sheep\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Sheep.class","value":"","title":"Sheep.class CreatureType","description":"Sheep.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Cow\"","value":"","title":"\"Cow\" CreatureType","description":"\"Cow\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Cow.class","value":"","title":"Cow.class CreatureType","description":"Cow.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Chicken\"","value":"","title":"\"Chicken\" CreatureType","description":"\"Chicken\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Chicken.class","value":"","title":"Chicken.class CreatureType","description":"Chicken.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Squid\"","value":"","title":"\"Squid\" CreatureType","description":"\"Squid\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Squid.class","value":"","title":"Squid.class CreatureType","description":"Squid.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Wolf\"","value":"","title":"\"Wolf\" CreatureType","description":"\"Wolf\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Wolf.class","value":"","title":"Wolf.class CreatureType","description":"Wolf.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"MushroomCow\"","value":"","title":"\"MushroomCow\" CreatureType","description":"\"MushroomCow\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"MushroomCow.class","value":"","title":"MushroomCow.class CreatureType","description":"MushroomCow.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"SnowMan\"","value":"","title":"\"SnowMan\" CreatureType","description":"\"SnowMan\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Snowman.class","value":"","title":"Snowman.class CreatureType","description":"Snowman.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Rabbit\"","value":"","title":"\"Rabbit\" CreatureType","description":"\"Rabbit\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Rabbit.class","value":"","title":"Rabbit.class CreatureType","description":"Rabbit.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"\"Villager\"","value":"","title":"\"Villager\" CreatureType","description":"\"Villager\" CreatureType","doc":{"deprecated":["Use EntityType instead."]}},{"code":"Villager.class","value":"","title":"Villager.class CreatureType","description":"Villager.class CreatureType","doc":{"deprecated":["Use EntityType instead."]}}],"properties":[{"name":"Name","modifier":"readonly","args":[],"description":"Name property","return":"String","scope":"public","title":"Name property"}]},"io.wolfscript.entity.Creeper":{"namespace":"io.wolfscript.entity","title":"Represents a Creeper","description":"Represents a Creeper","name":"Creeper","qualifiedname":"io.wolfscript.entity.Creeper","type":"interface","scope":"public","extends":["io.wolfscript.entity.Monster"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"Powered","modifier":"writeonly","args":[{"name":"value","type":"boolean","description":"New Powered status"}],"description":"Set: Checks if this Creeper is powered (Electrocuted)","doc":{"return":["true if this creeper is powered /\n    public boolean isPowered();\n\n    /** Sets the Powered status of this Creeper"]},"return":"void","scope":"public","title":"Set: Checks if this Creeper is powered (Electrocuted)"}]},"io.wolfscript.entity.Damageable":{"namespace":"io.wolfscript.entity","title":"Represents an {@link Entity} that has health and can take damage.","description":"Represents an {@link Entity} that has health and can take damage.","name":"Damageable","qualifiedname":"io.wolfscript.entity.Damageable","type":"interface","scope":"public","extends":["Entity"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Egg":{"namespace":"io.wolfscript.entity","title":"Represents a thrown egg.","description":"Represents a thrown egg.","name":"Egg","qualifiedname":"io.wolfscript.entity.Egg","type":"interface","scope":"public","extends":["io.wolfscript.entity.Projectile"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.EnderCrystal":{"namespace":"io.wolfscript.entity","title":"A crystal that heals nearby EnderDragons","description":"A crystal that heals nearby EnderDragons","name":"EnderCrystal","qualifiedname":"io.wolfscript.entity.EnderCrystal","type":"interface","scope":"public","extends":["Entity"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.EnderDragon":{"namespace":"io.wolfscript.entity","title":"Represents an Ender Dragon","description":"Represents an Ender Dragon","name":"EnderDragon","qualifiedname":"io.wolfscript.entity.EnderDragon","type":"interface","scope":"public","extends":["io.wolfscript.entity.ComplexLivingEntity"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.EnderPearl":{"namespace":"io.wolfscript.entity","title":"Represents a thrown Ender Pearl entity","description":"Represents a thrown Ender Pearl entity","name":"EnderPearl","qualifiedname":"io.wolfscript.entity.EnderPearl","type":"interface","scope":"public","extends":["io.wolfscript.entity.Projectile"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.EnderSignal":{"namespace":"io.wolfscript.entity","title":"Represents an Ender Signal, which is often created upon throwing an ender","description":"Represents an Ender Signal, which is often created upon throwing an ender eye","name":"EnderSignal","qualifiedname":"io.wolfscript.entity.EnderSignal","type":"interface","scope":"public","extends":["Entity"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Enderman":{"namespace":"io.wolfscript.entity","title":"Represents an Enderman.","description":"Represents an Enderman.","name":"Enderman","qualifiedname":"io.wolfscript.entity.Enderman","type":"interface","scope":"public","extends":["io.wolfscript.entity.Monster"],"constructors":[],"methods":[],"imports":["io.wolfscript.material.MaterialData"],"properties":[{"name":"CarriedMaterial","modifier":"writeonly","args":[{"name":"material","type":"io.wolfscript.material.MaterialData","description":"data to set the carried block to"}],"description":"Set: Get the id and data of the block that the Enderman is carrying.","doc":{"return":["MaterialData containing the id and data of the block /\n    public MaterialData getCarriedMaterial();\n\n    /** Set the id and data of the block that the Enderman is carring."]},"return":"void","scope":"public","title":"Set: Get the id and data of the block that the Enderman is carrying."}]},"io.wolfscript.entity.Endermite":{"namespace":"io.wolfscript.entity","title":"interface Endermite","description":"interface Endermite","name":"Endermite","qualifiedname":"io.wolfscript.entity.Endermite","type":"interface","scope":"public","extends":["io.wolfscript.entity.Monster"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.EntityType":{"namespace":"io.wolfscript.entity","title":"enum EntityType","description":"enum EntityType","name":"EntityType","qualifiedname":"io.wolfscript.entity.EntityType","type":"enum","scope":"public","constructors":[],"methods":[{"title":"isAlive method","description":"isAlive method","scope":"public","return":"boolean","name":"isAlive","args":[]},{"title":"An item resting on the ground.","description":"An item resting on the ground. <p> Spawn with {@link World#dropItem(Location, ItemStack)} or {@link World#dropItemNaturally(Location, ItemStack)} /\n    DROPPED_ITEM(\"Item\", Item.class, 1, false),\n    /** An experience orb. /\n    EXPERIENCE_ORB(\"XPOrb\", ExperienceOrb.class, 2),\n    /** A leash attached to a fencepost. /\n    LEASH_HITCH(\"LeashKnot\", LeashHitch.class, 8),\n    /** A painting on a wall. /\n    PAINTING(\"Painting\", Painting.class, 9),\n    /** An arrow projectile; may get stuck in the ground. /\n    ARROW(\"Arrow\", Arrow.class, 10),\n    /** A flying snowball. /\n    SNOWBALL(\"Snowball\", Snowball.class, 11),\n    /** A flying large fireball, as thrown by a Ghast for example. /\n    FIREBALL(\"Fireball\", LargeFireball.class, 12),\n    /** A flying small fireball, such as thrown by a Blaze or player. /\n    SMALL_FIREBALL(\"SmallFireball\", SmallFireball.class, 13),\n    /** A flying ender pearl. /\n    ENDER_PEARL(\"ThrownEnderpearl\", EnderPearl.class, 14),\n    /** An ender eye signal. /\n    ENDER_SIGNAL(\"EyeOfEnderSignal\", EnderSignal.class, 15),\n    /** A flying experience bottle. /\n    THROWN_EXP_BOTTLE(\"ThrownExpBottle\", ThrownExpBottle.class, 17),\n    /** An item frame on a wall. /\n    ITEM_FRAME(\"ItemFrame\", ItemFrame.class, 18),\n    /** A flying wither skull projectile. /\n    WITHER_SKULL(\"WitherSkull\", WitherSkull.class, 19),\n    /** Primed TNT that is about to explode. /\n    PRIMED_TNT(\"PrimedTnt\", TNTPrimed.class, 20),\n    /** A block that is going to or is about to fall. /\n    FALLING_BLOCK(\"FallingSand\", FallingBlock.class, 21, false),\n    FIREWORK(\"FireworksRocketEntity\", Firework.class, 22, false),\n    ARMOR_STAND(\"ArmorStand\", ArmorStand.class, 30, false),\n    /**","doc":{"see":["CommandMinecart /\n    MINECART_COMMAND(\"MinecartCommandBlock\", CommandMinecart.class, 40),\n    /** A placed boat. /\n    BOAT(\"Boat\", Boat.class, 41),\n    /**","RideableMinecart /\n    MINECART(\"MinecartRideable\", RideableMinecart.class, 42),\n    /**","StorageMinecart /\n    MINECART_CHEST(\"MinecartChest\", StorageMinecart.class, 43),\n    /**","PoweredMinecart /\n    MINECART_FURNACE(\"MinecartFurnace\", PoweredMinecart.class, 44),\n    /**","ExplosiveMinecart /\n    MINECART_TNT(\"MinecartTNT\", ExplosiveMinecart.class, 45),\n    /**","HopperMinecart /\n    MINECART_HOPPER(\"MinecartHopper\", HopperMinecart.class, 46),\n    /**","SpawnerMinecart /\n    MINECART_MOB_SPAWNER(\"MinecartMobSpawner\", SpawnerMinecart.class, 47),\n    CREEPER(\"Creeper\", Creeper.class, 50),\n    SKELETON(\"Skeleton\", Skeleton.class, 51),\n    SPIDER(\"Spider\", Spider.class, 52),\n    GIANT(\"Giant\", Giant.class, 53),\n    ZOMBIE(\"Zombie\", Zombie.class, 54),\n    SLIME(\"Slime\", Slime.class, 55),\n    GHAST(\"Ghast\", Ghast.class, 56),\n    PIG_ZOMBIE(\"PigZombie\", PigZombie.class, 57),\n    ENDERMAN(\"Enderman\", Enderman.class, 58),\n    CAVE_SPIDER(\"CaveSpider\", CaveSpider.class, 59),\n    SILVERFISH(\"Silverfish\", Silverfish.class, 60),\n    BLAZE(\"Blaze\", Blaze.class, 61),\n    MAGMA_CUBE(\"LavaSlime\", MagmaCube.class, 62),\n    ENDER_DRAGON(\"EnderDragon\", EnderDragon.class, 63),\n    WITHER(\"WitherBoss\", Wither.class, 64),\n    BAT(\"Bat\", Bat.class, 65),\n    WITCH(\"Witch\", Witch.class, 66),\n    ENDERMITE(\"Endermite\", Endermite.class, 67),\n    GUARDIAN(\"Guardian\", Guardian.class, 68),\n    PIG(\"Pig\", Pig.class, 90),\n    SHEEP(\"Sheep\", Sheep.class, 91),\n    COW(\"Cow\", Cow.class, 92),\n    CHICKEN(\"Chicken\", Chicken.class, 93),\n    SQUID(\"Squid\", Squid.class, 94),\n    WOLF(\"Wolf\", Wolf.class, 95),\n    MUSHROOM_COW(\"MushroomCow\", MushroomCow.class, 96),\n    SNOWMAN(\"SnowMan\", Snowman.class, 97),\n    OCELOT(\"Ozelot\", Ocelot.class, 98),\n    IRON_GOLEM(\"VillagerGolem\", IronGolem.class, 99),\n    HORSE(\"EntityHorse\", Horse.class, 100),\n    RABBIT(\"Rabbit\", Rabbit.class, 101),\n    VILLAGER(\"Villager\", Villager.class, 120),\n    ENDER_CRYSTAL(\"EnderCrystal\", EnderCrystal.class, 200),\n    // These don't have an entity ID in nms.EntityTypes.\n    /** A flying splash potion. /\n    SPLASH_POTION(null, ThrownPotion.class, -1, false),\n    /** A flying chicken egg. /\n    EGG(null, Egg.class, -1, false),\n    /** A fishing line and bobber. /\n    FISHING_HOOK(null, Fish.class, -1, false),\n    /** A bolt of lightning. <p> Spawn with {@link World#strikeLightning(Location)}. /\n    LIGHTNING(null, LightningStrike.class, -1, false),\n    WEATHER(null, Weather.class, -1, false),\n    PLAYER(null, Player.class, -1, false),\n    COMPLEX_PART(null, ComplexEntityPart.class, -1, false),\n    /** An unknown entity without an Entity Class /\n    UNKNOWN(null, null, -1, false);\n\n    private String name;\n    private Class<? extends Entity> clazz;\n    private short typeId;\n    private boolean independent, living;\n\n    private static final Map<String, EntityType> NAME_MAP = new HashMap<String, EntityType>();\n    private static final Map<Short, EntityType> ID_MAP = new HashMap<Short, EntityType>();\n\n    static {\n        for (EntityType type : values()) {\n            if (type.name != null) {\n                NAME_MAP.put(type.name.toLowerCase(), type);\n            }\n            if (type.typeId > 0) {\n                ID_MAP.put(type.typeId, type);\n            }\n        }\n    }\n\n    private EntityType(String name, Class<? extends Entity> clazz, int typeId) {\n        this(name, clazz, typeId, true);\n    }\n\n    private EntityType(String name, Class<? extends Entity> clazz, int typeId, boolean independent) {\n        this.name = name;\n        this.clazz = clazz;\n        this.typeId = (short) typeId;\n        this.independent = independent;\n        if (clazz != null) {\n            this.living = LivingEntity.class.isAssignableFrom(clazz);\n        }\n    }\n\n    /**"],"return":["the entity type's name","the raw type id","the matching entity type or null","the matching entity type or null","False if the entity type cannot be spawned"],"deprecated":["Magic value /\n    @Deprecated\n    public String getName() {\n        return name;\n    }\n\n    public Class<? extends Entity> getEntityClass() {\n        return clazz;\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public short getTypeId() {\n        return typeId;\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public static EntityType fromName(String name) {\n        if (name == null) {\n            return null;\n        }\n        return NAME_MAP.get(name.toLowerCase());\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public static EntityType fromId(int id) {\n        if (id > Short.MAX_VALUE) {\n            return null;\n        }\n        return ID_MAP.get((short) id);\n    }\n\n    /** Some entities cannot be spawned using {@link World#spawnEntity(Location, EntityType)} or {@link World#spawn(Location, Class)}, usually because they require additional information in order to spawn."],"param":["name the entity type's name","id the raw type id"]},"scope":"public","return":"boolean","name":"isSpawnable","args":[]}],"imports":["java.util.HashMap","java.util.Map","io.wolfscript.entity.minecart.CommandMinecart","io.wolfscript.entity.minecart.HopperMinecart","io.wolfscript.entity.minecart.SpawnerMinecart","io.wolfscript.entity.minecart.RideableMinecart","io.wolfscript.entity.minecart.ExplosiveMinecart","io.wolfscript.entity.minecart.PoweredMinecart","io.wolfscript.entity.minecart.StorageMinecart","io.wolfscript.inventory.ItemStack","io.wolfscript.Location","io.wolfscript.World"],"enum":[{"code":"Location","value":"","title":"Location EntityType","description":"Location EntityType"},{"code":"Location","value":"","title":"Location EntityType","description":"Location EntityType"},{"code":"\"Item\"","value":"","title":"\"Item\" EntityType","description":"\"Item\" EntityType"},{"code":"Item.class","value":"","title":"Item.class EntityType","description":"Item.class EntityType"},{"code":"1","value":"","title":"1 EntityType","description":"1 EntityType"},{"code":"\"XPOrb\"","value":"","title":"\"XPOrb\" EntityType","description":"\"XPOrb\" EntityType"},{"code":"ExperienceOrb.class","value":"","title":"ExperienceOrb.class EntityType","description":"ExperienceOrb.class EntityType"},{"code":"\"LeashKnot\"","value":"","title":"\"LeashKnot\" EntityType","description":"\"LeashKnot\" EntityType"},{"code":"LeashHitch.class","value":"","title":"LeashHitch.class EntityType","description":"LeashHitch.class EntityType"},{"code":"\"Painting\"","value":"","title":"\"Painting\" EntityType","description":"\"Painting\" EntityType"},{"code":"Painting.class","value":"","title":"Painting.class EntityType","description":"Painting.class EntityType"},{"code":"projectile","value":"","title":"projectile EntityType","description":"projectile EntityType"}],"properties":[]},"io.wolfscript.entity.ExperienceOrb":{"namespace":"io.wolfscript.entity","title":"Represents an Experience Orb.","description":"Represents an Experience Orb.","name":"ExperienceOrb","qualifiedname":"io.wolfscript.entity.ExperienceOrb","type":"interface","scope":"public","extends":["Entity"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"Experience","modifier":"writeonly","args":[{"name":"value","type":"int","description":"Amount of experience"}],"description":"Set: Gets how much experience is contained within this orb","doc":{"return":["Amount of experience /\n    public int getExperience();\n\n    /** Sets how much experience is contained within this orb"]},"return":"void","scope":"public","title":"Set: Gets how much experience is contained within this orb"}]},"io.wolfscript.entity.Explosive":{"namespace":"io.wolfscript.entity","title":"A representation of an explosive entity","description":"A representation of an explosive entity","name":"Explosive","qualifiedname":"io.wolfscript.entity.Explosive","type":"interface","scope":"public","extends":["Entity"],"constructors":[],"methods":[{"title":"Set the radius affected by this explosive's explosion","description":"Set the radius affected by this explosive's explosion","doc":{"param":["yield The explosive yield /\n    public void setYield(float yield);\n\n    /** Return the radius or yield of this explosive's explosion","isIncendiary Whether it should cause fire /\n    public void setIsIncendiary(boolean isIncendiary);\n\n    /** Return whether or not this explosive creates a fire when exploding"],"return":["the radius of blocks affected /\n    public float getYield();\n\n    /** Set whether or not this explosive's explosion causes fire","true if the explosive creates fire, false otherwise"]},"scope":"public","return":"boolean","name":"isIncendiary","args":[]}],"imports":[],"properties":[]},"io.wolfscript.entity.FallingBlock":{"namespace":"io.wolfscript.entity","title":"Represents a falling block","description":"Represents a falling block","name":"FallingBlock","qualifiedname":"io.wolfscript.entity.FallingBlock","type":"interface","scope":"public","extends":["Entity"],"constructors":[],"methods":[],"imports":["io.wolfscript.Material"],"properties":[]},"io.wolfscript.entity.FallingSand":{"namespace":"io.wolfscript.entity","title":"Represents a falling block.","description":"Represents a falling block.","doc":{"deprecated":["See {@link FallingBlock}"]},"name":"FallingSand","qualifiedname":"io.wolfscript.entity.FallingSand","deprecated":true,"type":"interface","scope":"public","extends":["io.wolfscript.entity.FallingBlock"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Firework":{"namespace":"io.wolfscript.entity","title":"interface Firework","description":"interface Firework","name":"Firework","qualifiedname":"io.wolfscript.entity.Firework","type":"interface","scope":"public","extends":["Entity"],"constructors":[],"methods":[],"imports":["io.wolfscript.inventory.meta.FireworkMeta"],"properties":[]},"io.wolfscript.entity.Fish":{"namespace":"io.wolfscript.entity","title":"Represents a fishing hook.","description":"Represents a fishing hook.","doc":{"deprecated":["in favor of {@link FishHook}"]},"name":"Fish","qualifiedname":"io.wolfscript.entity.Fish","type":"interface","scope":"public","extends":["io.wolfscript.entity.FishHook"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.FishHook":{"namespace":"io.wolfscript.entity","title":"Represents a fishing hook.","description":"Represents a fishing hook.","name":"FishHook","qualifiedname":"io.wolfscript.entity.FishHook","type":"interface","scope":"public","extends":["io.wolfscript.entity.Projectile"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"BiteChance","modifier":"readonly","args":[],"description":"Get: Gets the chance of a fish biting. <p> 0.0 = No Chance.<br> 1.0 = Instant catch.","doc":{"return":["chance the bite chance"]},"return":"double","scope":"public","title":"Get: Gets the chance of a fish biting."}]},"io.wolfscript.entity.Flying":{"namespace":"io.wolfscript.entity","title":"Represents a Flying Entity.","description":"Represents a Flying Entity.","name":"Flying","qualifiedname":"io.wolfscript.entity.Flying","type":"interface","scope":"public","extends":["LivingEntity"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Ghast":{"namespace":"io.wolfscript.entity","title":"Represents a Ghast.","description":"Represents a Ghast.","name":"Ghast","qualifiedname":"io.wolfscript.entity.Ghast","type":"interface","scope":"public","extends":["io.wolfscript.entity.Flying"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Giant":{"namespace":"io.wolfscript.entity","title":"Represents a Giant.","description":"Represents a Giant.","name":"Giant","qualifiedname":"io.wolfscript.entity.Giant","type":"interface","scope":"public","extends":["io.wolfscript.entity.Monster"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Golem":{"namespace":"io.wolfscript.entity","title":"A mechanical creature that may harm enemies.","description":"A mechanical creature that may harm enemies.","name":"Golem","qualifiedname":"io.wolfscript.entity.Golem","type":"interface","scope":"public","extends":["io.wolfscript.entity.Creature"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Guardian":{"namespace":"io.wolfscript.entity","title":"interface Guardian","description":"interface Guardian","name":"Guardian","qualifiedname":"io.wolfscript.entity.Guardian","type":"interface","scope":"public","extends":["io.wolfscript.entity.Monster"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"Elder","modifier":"writeonly","args":[{"name":"shouldBeElder","type":"boolean","description":"True if this Guardian should be a elder Guardian, false if not"}],"description":"Set: Check if the Guardian is an elder Guardian","doc":{"return":["true if the Guardian is an Elder Guardian, false if not /\n    public boolean isElder();\n\n    /** Set the Guardian to an elder Guardian or not"]},"return":"void","scope":"public","title":"Set: Check if the Guardian is an elder Guardian"}]},"io.wolfscript.entity.IronGolem":{"namespace":"io.wolfscript.entity","title":"An iron Golem that protects Villages.","description":"An iron Golem that protects Villages.","name":"IronGolem","qualifiedname":"io.wolfscript.entity.IronGolem","type":"interface","scope":"public","extends":["io.wolfscript.entity.Golem"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"PlayerCreated","modifier":"writeonly","args":[{"name":"playerCreated","type":"boolean","description":"true if you want to set the iron golem as being player created, false if you want it to be a natural village golem."}],"description":"Set: Gets whether this iron golem was built by a player.","doc":{"return":["Whether this iron golem was built by a player /\n    public boolean isPlayerCreated();\n\n    /** Sets whether this iron golem was built by a player or not."]},"return":"void","scope":"public","title":"Set: Gets whether this iron golem was built by a player."}]},"io.wolfscript.entity.Item":{"namespace":"io.wolfscript.entity","title":"Represents an Item.","description":"Represents an Item.","name":"Item","qualifiedname":"io.wolfscript.entity.Item","type":"interface","scope":"public","extends":["Entity"],"constructors":[],"methods":[],"imports":["io.wolfscript.inventory.ItemStack"],"properties":[{"name":"PickupDelay","modifier":"writeonly","args":[{"name":"delay","type":"int","description":"New delay"}],"description":"Set: Gets the item stack associated with this item drop.","doc":{"return":["An item stack. /\n    public ItemStack getItemStack();\n\n    /** Sets the item stack associated with this item drop.","Remaining delay /\n    public int getPickupDelay();\n\n    /** Sets the delay before this Item is available to be picked up by players"]},"return":"void","scope":"public","title":"Set: Gets the item stack associated with this item drop."}]},"io.wolfscript.entity.ItemFrame":{"namespace":"io.wolfscript.entity","title":"Represents an Item Frame","description":"Represents an Item Frame","name":"ItemFrame","qualifiedname":"io.wolfscript.entity.ItemFrame","type":"interface","scope":"public","extends":["Hanging"],"constructors":[],"methods":[],"imports":["io.wolfscript.Rotation","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"Rotation","modifier":"readonly","args":[],"description":"Get: Get the item in this frame","doc":{"return":["a defensive copy the item in this item frame /\n    public ItemStack getItem();\n\n    /** Set the item in this frame","the direction"],"param":["item the new item /\n    public void setItem(ItemStack item);\n\n    /** Get the rotation of the frame's item"]},"return":"io.wolfscript.Rotation","scope":"public","title":"Get: Get the item in this frame"}]},"io.wolfscript.entity.LargeFireball":{"namespace":"io.wolfscript.entity","title":"Represents a large {@link Fireball}","description":"Represents a large {@link Fireball}","name":"LargeFireball","qualifiedname":"io.wolfscript.entity.LargeFireball","type":"interface","scope":"public","extends":["Fireball"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.LeashHitch":{"namespace":"io.wolfscript.entity","title":"Represents a Leash Hitch on a fence","description":"Represents a Leash Hitch on a fence","name":"LeashHitch","qualifiedname":"io.wolfscript.entity.LeashHitch","type":"interface","scope":"public","extends":["Hanging"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.LightningStrike":{"namespace":"io.wolfscript.entity","title":"Represents an instance of a lightning strike. May or may not do damage.","description":"Represents an instance of a lightning strike. May or may not do damage.","name":"LightningStrike","qualifiedname":"io.wolfscript.entity.LightningStrike","type":"interface","scope":"public","extends":["io.wolfscript.entity.Weather"],"constructors":[],"methods":[{"title":"Returns whether the strike is an effect that does no damage.","description":"Returns whether the strike is an effect that does no damage.","doc":{"return":["whether the strike is an effect"]},"scope":"public","return":"boolean","name":"isEffect","args":[]}],"imports":[],"properties":[]},"io.wolfscript.entity.MagmaCube":{"namespace":"io.wolfscript.entity","title":"Represents a MagmaCube.","description":"Represents a MagmaCube.","name":"MagmaCube","qualifiedname":"io.wolfscript.entity.MagmaCube","type":"interface","scope":"public","extends":["io.wolfscript.entity.Slime"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Minecart":{"namespace":"io.wolfscript.entity","title":"Represents a minecart entity.","description":"Represents a minecart entity.","name":"Minecart","qualifiedname":"io.wolfscript.entity.Minecart","type":"interface","scope":"public","extends":["io.wolfscript.entity.Vehicle"],"constructors":[],"methods":[],"imports":["io.wolfscript.Material","io.wolfscript.material.MaterialData","io.wolfscript.util.Vector"],"properties":[{"name":"DisplayBlockOffset","modifier":"readonly","args":[],"description":"Get: This method exists for legacy reasons to provide backwards compatibility. It will not exist at runtime and should not be used under any circumstances.","doc":{"param":["damage over 40 to \"kill\" a minecart /\n    @Deprecated\n    public void _INVALID_setDamage(int damage);\n\n    /** Sets a minecart's damage.","damage over 40 to \"kill\" a minecart /\n    public void setDamage(double damage);\n\n    /** This method exists for legacy reasons to provide backwards compatibility. It will not exist at runtime and should not be used under any circumstances.","speed The max speed /\n    public void setMaxSpeed(double speed);\n\n    /** Returns whether this minecart will slow down faster without a passenger occupying it","slow Whether it will decelerate faster /\n    public void setSlowWhenEmpty(boolean slow);\n\n    /** Gets the flying velocity modifier. Used for minecarts that are in mid-air. A flying minecart's velocity is multiplied by this factor each tick.","flying velocity modifier vector /\n    public void setFlyingVelocityMod(Vector flying);\n\n    /** Gets the derailed velocity modifier. Used for minecarts that are on the ground, but not on rails. <p> A derailed minecart's velocity is multiplied by this factor each tick.","derailed visible speed /\n    public void setDerailedVelocityMod(Vector derailed);\n\n    /** Sets the display block for this minecart. Passing a null value will set the minecart to have no display block.","material the material to set as display block. /\n    public void setDisplayBlock(MaterialData material);\n\n    /** Gets the display block for this minecart. This function will return the type AIR if none is set.","offset the block offset to set for this minecart. /\n    public void setDisplayBlockOffset(int offset);\n\n    /** Gets the offset of the display block."],"return":["The damage /\n    @Deprecated\n    public int _INVALID_getDamage();\n\n    /** Gets a minecart's damage.","The damage /\n    public double getDamage();\n\n    /** Gets the maximum speed of a minecart. The speed is unrelated to the velocity.","The max speed /\n    public double getMaxSpeed();\n\n    /** Sets the maximum speed of a minecart. Must be nonnegative. Default is 0.4D.","Whether it decelerates faster /\n    public boolean isSlowWhenEmpty();\n\n    /** Sets whether this minecart will slow down faster without a passenger occupying it","The vector factor /\n    public Vector getFlyingVelocityMod();\n\n    /** Sets the flying velocity modifier. Used for minecarts that are in mid-air. A flying minecart's velocity is multiplied by this factor each tick.","derailed visible speed /\n    public Vector getDerailedVelocityMod();\n\n    /** Sets the derailed velocity modifier. Used for minecarts that are on the ground, but not on rails. A derailed minecart's velocity is multiplied by this factor each tick.","the block displayed by this minecart. /\n    public MaterialData getDisplayBlock();\n\n    /** Sets the offset of the display block.","the current block offset for this minecart."]},"return":"int","scope":"public","title":"Get: This method exists for legacy reasons to provide backwards"}]},"io.wolfscript.entity.Monster":{"namespace":"io.wolfscript.entity","title":"Represents a Monster.","description":"Represents a Monster.","name":"Monster","qualifiedname":"io.wolfscript.entity.Monster","type":"interface","scope":"public","extends":["io.wolfscript.entity.Creature"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.MushroomCow":{"namespace":"io.wolfscript.entity","title":"Represents a mushroom {@link io.wolfscript.entity.Cow}","description":"Represents a mushroom {@link io.wolfscript.entity.Cow}","name":"MushroomCow","qualifiedname":"io.wolfscript.entity.MushroomCow","type":"interface","scope":"public","extends":["io.wolfscript.entity.Cow"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.NPC":{"namespace":"io.wolfscript.entity","title":"Represents a non-player character","description":"Represents a non-player character","name":"NPC","qualifiedname":"io.wolfscript.entity.NPC","type":"interface","scope":"public","extends":["io.wolfscript.entity.Creature"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Painting":{"namespace":"io.wolfscript.entity","title":"Represents a Painting.","description":"Represents a Painting.","name":"Painting","qualifiedname":"io.wolfscript.entity.Painting","type":"interface","scope":"public","extends":["Hanging"],"constructors":[],"methods":[{"title":"Get the art on this painting","description":"Get the art on this painting","doc":{"return":["The art /\n    public Art getArt();\n\n    /** Set the art on this painting","False if the new art won't fit at the painting's current location /\n    public boolean setArt(Art art);\n\n    /** Set the art on this painting","False if force was false and the new art won't fit at the painting's current location"]},"scope":"public","return":"boolean","name":"setArt","args":[{"name":"art","type":"io.wolfscript.Art","description":"The new art"},{"name":"force","type":"boolean","description":"If true, force the new art regardless of whether it fits at the current location. Note that forcing it where it can't fit normally causes it to drop as an item unless you override this by catching the {@link io.wolfscript.event.painting.PaintingBreakEvent}."}]}],"imports":["io.wolfscript.Art","io.wolfscript.event.painting.PaintingBreakEvent"],"properties":[]},"io.wolfscript.entity.PigZombie":{"namespace":"io.wolfscript.entity","title":"Represents a Pig Zombie.","description":"Represents a Pig Zombie.","name":"PigZombie","qualifiedname":"io.wolfscript.entity.PigZombie","type":"interface","scope":"public","extends":["io.wolfscript.entity.Zombie"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.PoweredMinecart":{"namespace":"io.wolfscript.entity","title":"interface PoweredMinecart","description":"interface PoweredMinecart","doc":{"deprecated":["This class has been moved into a sub package; {@link io.wolfscript.entity.minecart.PoweredMinecart} should be used instead."],"see":["io.wolfscript.entity.minecart.PoweredMinecart"]},"name":"PoweredMinecart","qualifiedname":"io.wolfscript.entity.PoweredMinecart","deprecated":true,"type":"interface","scope":"public","extends":["io.wolfscript.entity.minecart.PoweredMinecart"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Profession":{"namespace":"io.wolfscript.entity","title":"Represents a villager NPC","description":"Represents a villager NPC /\npublic interface Villager extends Ageable, NPC {\n\n    /** Gets the current profession of this villager.","doc":{"return":["Current profession. /\n    public Profession getProfession();\n\n    /** Sets the new profession of this villager."],"param":["profession New profession. /\n    public void setProfession(Profession profession);\n\n\n    /** Represents the various different Villager professions there may be."]},"name":"Profession","qualifiedname":"io.wolfscript.entity.Profession","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Gets the ID of this profession.","description":"Gets the ID of this profession.","doc":{"return":["Profession ID.","Resulting profession, or null if not found."],"deprecated":["Magic value /\n        @Deprecated\n        public int getId() {\n            return id;\n        }\n\n        /** Gets a profession by its ID.","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.entity.Profession","name":"getProfession","deprecated":true,"args":[{"name":"id","type":"int","description":"ID of the profession to get."}]}],"imports":[],"enum":[{"code":"FARMER","value":"0","title":"FARMER Profession","description":"FARMER Profession","doc":{"return":["Current profession. /\n    public Profession getProfession();\n\n    /** Sets the new profession of this villager."],"param":["profession New profession. /\n    public void setProfession(Profession profession);\n\n\n    /** Represents the various different Villager professions there may be."]}},{"code":"LIBRARIAN","value":"1","title":"LIBRARIAN Profession","description":"LIBRARIAN Profession","doc":{"return":["Current profession. /\n    public Profession getProfession();\n\n    /** Sets the new profession of this villager."],"param":["profession New profession. /\n    public void setProfession(Profession profession);\n\n\n    /** Represents the various different Villager professions there may be."]}},{"code":"PRIEST","value":"2","title":"PRIEST Profession","description":"PRIEST Profession","doc":{"return":["Current profession. /\n    public Profession getProfession();\n\n    /** Sets the new profession of this villager."],"param":["profession New profession. /\n    public void setProfession(Profession profession);\n\n\n    /** Represents the various different Villager professions there may be."]}},{"code":"BLACKSMITH","value":"3","title":"BLACKSMITH Profession","description":"BLACKSMITH Profession","doc":{"return":["Current profession. /\n    public Profession getProfession();\n\n    /** Sets the new profession of this villager."],"param":["profession New profession. /\n    public void setProfession(Profession profession);\n\n\n    /** Represents the various different Villager professions there may be."]}},{"code":"BUTCHER","value":"4","title":"BUTCHER Profession","description":"BUTCHER Profession","doc":{"return":["Current profession. /\n    public Profession getProfession();\n\n    /** Sets the new profession of this villager."],"param":["profession New profession. /\n    public void setProfession(Profession profession);\n\n\n    /** Represents the various different Villager professions there may be."]}}],"properties":[]},"io.wolfscript.entity.Projectile":{"namespace":"io.wolfscript.entity","title":"Represents a shootable entity.","description":"Represents a shootable entity.","name":"Projectile","qualifiedname":"io.wolfscript.entity.Projectile","type":"interface","scope":"public","extends":["Entity"],"constructors":[],"methods":[],"imports":["io.wolfscript.projectiles.ProjectileSource"],"properties":[{"name":"Bounce","modifier":"writeonly","args":[{"name":"doesBounce","type":"boolean","description":"whether or not it should bounce."}],"description":"Set: This method exists for legacy reasons to provide backwards compatibility. It will not exist at runtime and should not be used under any circumstances.","doc":{"return":["the {@link LivingEntity} that shot this projectile /\n    @Deprecated\n    public LivingEntity _INVALID_getShooter();\n\n    /** Retrieve the shooter of this projectile.","the {@link io.wolfscript.projectiles.ProjectileSource} that shot this projectile /\n    public ProjectileSource getShooter();\n\n    /** This method exists for legacy reasons to provide backwards compatibility. It will not exist at runtime and should not be used under any circumstances.","true if it should bounce. /\n    public boolean doesBounce();\n\n    /** Set whether or not this projectile should bounce or not when it hits something."]},"return":"void","scope":"public","title":"Set: This method exists for legacy reasons to provide backwards"}]},"io.wolfscript.entity.Rabbit":{"namespace":"io.wolfscript.entity","title":"interface Rabbit","description":"interface Rabbit","name":"Rabbit","qualifiedname":"io.wolfscript.entity.Rabbit","type":"interface","scope":"public","extends":["io.wolfscript.entity.Animals"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"RabbitType","modifier":"writeonly","args":[{"name":"type","type":"io.wolfscript.entity.Type","description":"Sets the type of rabbit for this entity."}],"description":"RabbitType property","doc":{"return":["The type of rabbit. /\n    public Type getRabbitType();\n\n    /**"]},"return":"void","scope":"public","title":"RabbitType property"}]},"io.wolfscript.entity.Silverfish":{"namespace":"io.wolfscript.entity","title":"Represents a Silverfish.","description":"Represents a Silverfish.","name":"Silverfish","qualifiedname":"io.wolfscript.entity.Silverfish","type":"interface","scope":"public","extends":["io.wolfscript.entity.Monster"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.SkeletonType":{"namespace":"io.wolfscript.entity","title":"Represents a Skeleton.","description":"Represents a Skeleton. /\npublic interface Skeleton extends Monster {\n\n    /** Gets the current type of this skeleton.","doc":{"return":["Current type /\n    public SkeletonType getSkeletonType();\n\n    /** Sets the new type of this skeleton."],"param":["type New type /\n    public void setSkeletonType(SkeletonType type);\n\n    /* Represents the various different Skeleton types."]},"name":"SkeletonType","qualifiedname":"io.wolfscript.entity.SkeletonType","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Gets the ID of this skeleton type.","description":"Gets the ID of this skeleton type.","doc":{"return":["Skeleton type ID","Resulting skeleton type, or null if not found."],"deprecated":["Magic value /\n        @Deprecated\n        public int getId() {\n            return id;\n        }\n\n        /** Gets a skeleton type by its ID.","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.entity.SkeletonType","name":"getType","deprecated":true,"args":[{"name":"id","type":"int","description":"ID of the skeleton type to get."}]}],"imports":[],"enum":[{"code":"NORMAL","value":"0","title":"NORMAL SkeletonType","description":"NORMAL SkeletonType","doc":{"return":["Current type /\n    public SkeletonType getSkeletonType();\n\n    /** Sets the new type of this skeleton."],"param":["type New type /\n    public void setSkeletonType(SkeletonType type);\n\n    /* Represents the various different Skeleton types."]}},{"code":"WITHER","value":"1","title":"WITHER SkeletonType","description":"WITHER SkeletonType","doc":{"return":["Current type /\n    public SkeletonType getSkeletonType();\n\n    /** Sets the new type of this skeleton."],"param":["type New type /\n    public void setSkeletonType(SkeletonType type);\n\n    /* Represents the various different Skeleton types."]}}],"properties":[]},"io.wolfscript.entity.Slime":{"namespace":"io.wolfscript.entity","title":"Represents a Slime.","description":"Represents a Slime.","name":"Slime","qualifiedname":"io.wolfscript.entity.Slime","type":"interface","scope":"public","extends":["LivingEntity"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"Size","modifier":"writeonly","args":[{"name":"sz","type":"int","description":"The new size of the slime."}],"description":"Size property","doc":{"return":["The size of the slime /\n    public int getSize();\n\n    /**"]},"return":"void","scope":"public","title":"Size property"}]},"io.wolfscript.entity.SmallFireball":{"namespace":"io.wolfscript.entity","title":"Represents a small {@link Fireball}","description":"Represents a small {@link Fireball}","name":"SmallFireball","qualifiedname":"io.wolfscript.entity.SmallFireball","type":"interface","scope":"public","extends":["Fireball"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Snowball":{"namespace":"io.wolfscript.entity","title":"Represents a snowball.","description":"Represents a snowball.","name":"Snowball","qualifiedname":"io.wolfscript.entity.Snowball","type":"interface","scope":"public","extends":["io.wolfscript.entity.Projectile"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Snowman":{"namespace":"io.wolfscript.entity","title":"Represents a snowman entity","description":"Represents a snowman entity","name":"Snowman","qualifiedname":"io.wolfscript.entity.Snowman","type":"interface","scope":"public","extends":["io.wolfscript.entity.Golem"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Spider":{"namespace":"io.wolfscript.entity","title":"Represents a Spider.","description":"Represents a Spider.","name":"Spider","qualifiedname":"io.wolfscript.entity.Spider","type":"interface","scope":"public","extends":["io.wolfscript.entity.Monster"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Squid":{"namespace":"io.wolfscript.entity","title":"Represents a Squid.","description":"Represents a Squid.","name":"Squid","qualifiedname":"io.wolfscript.entity.Squid","type":"interface","scope":"public","extends":["io.wolfscript.entity.WaterMob"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.StorageMinecart":{"namespace":"io.wolfscript.entity","title":"interface StorageMinecart","description":"interface StorageMinecart","doc":{"deprecated":["This class has been moved into a sub package; {@link io.wolfscript.entity.minecart.StorageMinecart} should be used instead."],"see":["io.wolfscript.entity.minecart.StorageMinecart"]},"name":"StorageMinecart","qualifiedname":"io.wolfscript.entity.StorageMinecart","deprecated":true,"type":"interface","scope":"public","extends":["io.wolfscript.entity.minecart.StorageMinecart"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Style":{"namespace":"io.wolfscript.entity","title":"Represents a Horse.","description":"Represents a Horse. /\npublic interface Horse extends Animals, Vehicle, InventoryHolder, Tameable {\n\n    /** Represents the different types of horses that may exist. /\n    public enum Variant {\n        /** A normal horse /\n        HORSE,\n        /** A donkey /\n        DONKEY,\n        /** A mule /\n        MULE,\n        /** An undead horse /\n        UNDEAD_HORSE,\n        /** A skeleton horse /\n        SKELETON_HORSE,\n        ;\n    }\n\n    /** Represents the base color that the horse has. /\n    public enum Color {\n        /** Snow white /\n        WHITE,\n        /** Very light brown /\n        CREAMY,\n        /** Chestnut /\n        CHESTNUT,\n        /** Light brown /\n        BROWN,\n        /** Pitch black /\n        BLACK,\n        /** Gray /\n        GRAY,\n        /** Dark brown /\n        DARK_BROWN,\n        ;\n    }\n\n    /** Represents the style, or markings, that the horse has.","name":"Style","qualifiedname":"io.wolfscript.entity.Style","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.inventory.HorseInventory","io.wolfscript.inventory.InventoryHolder"],"enum":[{"code":"BLACK_DOTS","value":"","title":"No markings","description":"No markings /\n        NONE,\n        /** White socks or stripes /\n        WHITE,\n        /** Milky splotches /\n        WHITEFIELD,\n        /** Round white dots /\n        WHITE_DOTS,\n        /** Small black dots","doc":{}}],"properties":[]},"io.wolfscript.entity.TNTPrimed":{"namespace":"io.wolfscript.entity","title":"Represents a Primed TNT.","description":"Represents a Primed TNT.","name":"TNTPrimed","qualifiedname":"io.wolfscript.entity.TNTPrimed","type":"interface","scope":"public","extends":["io.wolfscript.entity.Explosive"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"Source","modifier":"readonly","args":[],"description":"Get: Set the number of ticks until the TNT blows up after being primed.","doc":{"param":["fuseTicks The fuse ticks /\n    public void setFuseTicks(int fuseTicks);\n\n    /** Retrieve the number of ticks until the explosion of this TNTPrimed entity"],"return":["the number of ticks until this TNTPrimed explodes /\n    public int getFuseTicks();\n\n    /** Gets the source of this primed TNT. The source is the entity responsible for the creation of this primed TNT. (I.E. player ignites TNT with flint and steel.) Take note that this can be null if there is no suitable source. (created by the {@link io.wolfscript.World#spawn(Location, Class)} method, for example.) <p> The source will become null if the chunk this primed TNT is in is unloaded then reloaded. If the source Entity becomes invalidated for any reason, such being removed from the world, the returned value will be null.","the source of this primed TNT"]},"return":"Entity","scope":"public","title":"Get: Set the number of ticks until the TNT blows up after being primed."}]},"io.wolfscript.entity.Tameable":{"namespace":"io.wolfscript.entity","title":"interface Tameable","description":"interface Tameable","name":"Tameable","qualifiedname":"io.wolfscript.entity.Tameable","type":"interface","scope":"public","constructors":[],"methods":[],"imports":[],"properties":[{"name":"Owner","modifier":"writeonly","args":[{"name":"tamer","type":"io.wolfscript.entity.AnimalTamer","description":"the AnimalTamer who should own this"}],"description":"Set: Check if this is tamed <p> If something is tamed then a player can not tame it through normal methods, even if it does not belong to anyone in particular.","doc":{"return":["true if this has been tamed /\n    public boolean isTamed();\n\n    /** Sets if this has been tamed. Not necessary if the method setOwner has been used, as it tames automatically. <p> If something is tamed then a player can not tame it through normal methods, even if it does not belong to anyone in particular.","the owning AnimalTamer, or null if not owned /\n    public AnimalTamer getOwner();\n\n    /** Set this to be owned by given AnimalTamer. <p> If the owner is not null, this will be tamed and will have any current path it is following removed. If the owner is set to null, this will be untamed, and the current owner removed."]},"return":"void","scope":"public","title":"Set: Check if this is tamed"}]},"io.wolfscript.entity.ThrownExpBottle":{"namespace":"io.wolfscript.entity","title":"Represents a thrown Experience bottle.","description":"Represents a thrown Experience bottle.","name":"ThrownExpBottle","qualifiedname":"io.wolfscript.entity.ThrownExpBottle","type":"interface","scope":"public","extends":["io.wolfscript.entity.Projectile"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.ThrownPotion":{"namespace":"io.wolfscript.entity","title":"Represents a thrown potion bottle","description":"Represents a thrown potion bottle","name":"ThrownPotion","qualifiedname":"io.wolfscript.entity.ThrownPotion","type":"interface","scope":"public","extends":["io.wolfscript.entity.Projectile"],"constructors":[],"methods":[],"imports":["java.util.Collection","io.wolfscript.inventory.ItemStack","io.wolfscript.potion.PotionEffect"],"properties":[{"name":"Item","modifier":"writeonly","args":[{"name":"item","type":"io.wolfscript.inventory.ItemStack","description":"New ItemStack"}],"description":"Set: Returns the effects that are applied by this potion.","doc":{"return":["The potion effects /\n    public Collection<PotionEffect> getEffects();\n\n    /** Returns a copy of the ItemStack for this thrown potion. <p> Altering this copy will not alter the thrown potion directly. If you want to alter the thrown potion, you must use the {@link #setItem(ItemStack) setItemStack} method.","A copy of the ItemStack for this thrown potion. /\n    public ItemStack getItem();\n\n    /** Set the ItemStack for this thrown potion. <p> The ItemStack must be a potion, otherwise an exception is thrown."]},"return":"void","scope":"public","title":"Set: Returns the effects that are applied by this potion."}]},"io.wolfscript.entity.Type":{"namespace":"io.wolfscript.entity","title":"A wild tameable cat","description":"A wild tameable cat /\npublic interface Ocelot extends Animals, Tameable {\n\n    /** Gets the current type of this cat.","doc":{"return":["Type of the cat. /\n    public Type getCatType();\n\n    /** Sets the current type of this cat.","true if sitting /\n    public boolean isSitting();\n\n    /** Sets if this ocelot is sitting. Will remove any path that the ocelot was following beforehand."],"param":["type New type of this cat. /\n    public void setCatType(Type type);\n\n    /** Checks if this ocelot is sitting","sitting true if sitting /\n    public void setSitting(boolean sitting);\n\n    /** Represents the various different cat types there are."]},"name":"Type","qualifiedname":"io.wolfscript.entity.Type","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Gets the ID of this cat type.","description":"Gets the ID of this cat type.","doc":{"return":["Type ID.","Resulting type, or null if not found."],"deprecated":["Magic value /\n        @Deprecated\n        public int getId() {\n            return id;\n        }\n\n        /** Gets a cat type by its ID.","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.entity.Type","name":"getType","deprecated":true,"args":[{"name":"id","type":"int","description":"ID of the cat type to get."}]}],"imports":[],"enum":[{"code":"WILD_OCELOT","value":"0","title":"WILD_OCELOT Type","description":"WILD_OCELOT Type","doc":{"return":["Type of the cat. /\n    public Type getCatType();\n\n    /** Sets the current type of this cat.","true if sitting /\n    public boolean isSitting();\n\n    /** Sets if this ocelot is sitting. Will remove any path that the ocelot was following beforehand."],"param":["type New type of this cat. /\n    public void setCatType(Type type);\n\n    /** Checks if this ocelot is sitting","sitting true if sitting /\n    public void setSitting(boolean sitting);\n\n    /** Represents the various different cat types there are."]}},{"code":"BLACK_CAT","value":"1","title":"BLACK_CAT Type","description":"BLACK_CAT Type","doc":{"return":["Type of the cat. /\n    public Type getCatType();\n\n    /** Sets the current type of this cat.","true if sitting /\n    public boolean isSitting();\n\n    /** Sets if this ocelot is sitting. Will remove any path that the ocelot was following beforehand."],"param":["type New type of this cat. /\n    public void setCatType(Type type);\n\n    /** Checks if this ocelot is sitting","sitting true if sitting /\n    public void setSitting(boolean sitting);\n\n    /** Represents the various different cat types there are."]}},{"code":"RED_CAT","value":"2","title":"RED_CAT Type","description":"RED_CAT Type","doc":{"return":["Type of the cat. /\n    public Type getCatType();\n\n    /** Sets the current type of this cat.","true if sitting /\n    public boolean isSitting();\n\n    /** Sets if this ocelot is sitting. Will remove any path that the ocelot was following beforehand."],"param":["type New type of this cat. /\n    public void setCatType(Type type);\n\n    /** Checks if this ocelot is sitting","sitting true if sitting /\n    public void setSitting(boolean sitting);\n\n    /** Represents the various different cat types there are."]}},{"code":"SIAMESE_CAT","value":"3","title":"SIAMESE_CAT Type","description":"SIAMESE_CAT Type","doc":{"return":["Type of the cat. /\n    public Type getCatType();\n\n    /** Sets the current type of this cat.","true if sitting /\n    public boolean isSitting();\n\n    /** Sets if this ocelot is sitting. Will remove any path that the ocelot was following beforehand."],"param":["type New type of this cat. /\n    public void setCatType(Type type);\n\n    /** Checks if this ocelot is sitting","sitting true if sitting /\n    public void setSitting(boolean sitting);\n\n    /** Represents the various different cat types there are."]}}],"properties":[]},"io.wolfscript.entity.Vehicle":{"namespace":"io.wolfscript.entity","title":"Represents a vehicle entity.","description":"Represents a vehicle entity.","name":"Vehicle","qualifiedname":"io.wolfscript.entity.Vehicle","type":"interface","scope":"public","extends":["Entity"],"constructors":[],"methods":[],"imports":["io.wolfscript.util.Vector"],"properties":[{"name":"Velocity","modifier":"writeonly","args":[{"name":"vel","type":"io.wolfscript.util.Vector","description":"velocity vector"}],"description":"Set: Gets the vehicle's velocity.","doc":{"return":["velocity vector /\n    public Vector getVelocity();\n\n    /** Sets the vehicle's velocity."]},"return":"void","scope":"public","title":"Set: Gets the vehicle's velocity."}]},"io.wolfscript.entity.WaterMob":{"namespace":"io.wolfscript.entity","title":"Represents a Water Mob","description":"Represents a Water Mob","name":"WaterMob","qualifiedname":"io.wolfscript.entity.WaterMob","type":"interface","scope":"public","extends":["LivingEntity"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Weather":{"namespace":"io.wolfscript.entity","title":"Represents a Weather related entity, such as a storm","description":"Represents a Weather related entity, such as a storm","name":"Weather","qualifiedname":"io.wolfscript.entity.Weather","type":"interface","scope":"public","extends":["Entity"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Witch":{"namespace":"io.wolfscript.entity","title":"Represents a Witch","description":"Represents a Witch","name":"Witch","qualifiedname":"io.wolfscript.entity.Witch","type":"interface","scope":"public","extends":["io.wolfscript.entity.Monster"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.Wither":{"namespace":"io.wolfscript.entity","title":"Represents a Wither boss","description":"Represents a Wither boss","name":"Wither","qualifiedname":"io.wolfscript.entity.Wither","type":"interface","scope":"public","extends":["io.wolfscript.entity.Monster"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.entity.WitherSkull":{"namespace":"io.wolfscript.entity","title":"Represents a wither skull {@link Fireball}.","description":"Represents a wither skull {@link Fireball}.","name":"WitherSkull","qualifiedname":"io.wolfscript.entity.WitherSkull","type":"interface","scope":"public","extends":["Fireball"],"constructors":[],"methods":[{"title":"Sets the charged status of the wither skull.","description":"Sets the charged status of the wither skull.","doc":{"param":["charged whether it should be charged /\n    public void setCharged(boolean charged);\n\n    /** Gets whether or not the wither skull is charged."],"return":["whether the wither skull is charged"]},"scope":"public","return":"boolean","name":"isCharged","args":[]}],"imports":[],"properties":[]},"io.wolfscript.entity.Zombie":{"namespace":"io.wolfscript.entity","title":"Represents a Zombie.","description":"Represents a Zombie.","name":"Zombie","qualifiedname":"io.wolfscript.entity.Zombie","type":"interface","scope":"public","extends":["io.wolfscript.entity.Monster"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"Villager","modifier":"writeonly","args":[{"name":"flag","type":"boolean","description":"Whether the zombie is a baby /\n    public void setBaby(boolean flag);\n\n    /** Gets whether the zombie is a villager"}],"description":"Set: Gets whether the zombie is a baby","doc":{"return":["Whether the zombie is a baby /\n    public boolean isBaby();\n\n    /** Sets whether the zombie is a baby","Whether the zombie is a villager /\n    public boolean isVillager();\n\n    /** Sets whether the zombie is a villager"]},"return":"void","scope":"public","title":"Set: Gets whether the zombie is a baby"}]},"io.wolfscript.entity.minecart.0":{"namespace":"io.wolfscript.entity","title":"Interfaces for various {@link io.wolfscript.entity.Minecart} types.","description":"Interfaces for various {@link io.wolfscript.entity.Minecart} types.","name":"minecart","qualifiedname":"io.wolfscript.entity.minecart.0","packagename":"io.wolfscript.entity.minecart","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":[],"interfaces":["io.wolfscript.entity.minecart.ExplosiveMinecart","io.wolfscript.entity.minecart.PoweredMinecart","io.wolfscript.entity.minecart.RideableMinecart","io.wolfscript.entity.minecart.SpawnerMinecart"],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.entity.minecart.ExplosiveMinecart":{"namespace":"io.wolfscript.entity.minecart","title":"Represents a Minecart with TNT inside it that can explode when triggered.","description":"Represents a Minecart with TNT inside it that can explode when triggered.","name":"ExplosiveMinecart","qualifiedname":"io.wolfscript.entity.minecart.ExplosiveMinecart","type":"interface","scope":"public","extends":["io.wolfscript.entity.Minecart"],"constructors":[],"methods":[],"imports":["io.wolfscript.entity.Minecart"],"properties":[]},"io.wolfscript.entity.minecart.PoweredMinecart":{"namespace":"io.wolfscript.entity.minecart","title":"Represents a powered minecart. A powered minecart moves on its own when a","description":"Represents a powered minecart. A powered minecart moves on its own when a player deposits {@link io.wolfscript.Material#COAL fuel}.","name":"PoweredMinecart","qualifiedname":"io.wolfscript.entity.minecart.PoweredMinecart","type":"interface","scope":"public","extends":["io.wolfscript.entity.Minecart"],"constructors":[],"methods":[],"imports":["io.wolfscript.entity.Minecart"],"properties":[]},"io.wolfscript.entity.minecart.RideableMinecart":{"namespace":"io.wolfscript.entity.minecart","title":"Represents a minecart that can have certain {@link","description":"Represents a minecart that can have certain {@link io.wolfscript.entity.Entity entities} as passengers. Normal passengers include all {@link io.wolfscript.entity.LivingEntity living entities} with the exception of {@link io.wolfscript.entity.IronGolem iron golems}. Non-player entities that meet normal passenger criteria automatically mount these minecarts when close enough.","name":"RideableMinecart","qualifiedname":"io.wolfscript.entity.minecart.RideableMinecart","type":"interface","scope":"public","extends":["io.wolfscript.entity.Minecart"],"constructors":[],"methods":[],"imports":["io.wolfscript.entity.Minecart"],"properties":[]},"io.wolfscript.entity.minecart.SpawnerMinecart":{"namespace":"io.wolfscript.entity.minecart","title":"Represents a Minecart with an {@link io.wolfscript.block.CreatureSpawner","description":"Represents a Minecart with an {@link io.wolfscript.block.CreatureSpawner entity spawner} inside it.","name":"SpawnerMinecart","qualifiedname":"io.wolfscript.entity.minecart.SpawnerMinecart","type":"interface","scope":"public","extends":["io.wolfscript.entity.Minecart"],"constructors":[],"methods":[],"imports":["io.wolfscript.entity.Minecart"],"properties":[]},"io.wolfscript.event.0":{"namespace":"io.wolfscript","title":"Classes dedicated to handling triggered code executions.","description":"Classes dedicated to handling triggered code executions.","name":"event","qualifiedname":"io.wolfscript.event.0","packagename":"io.wolfscript.event","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.event.Event","io.wolfscript.event.EventException","io.wolfscript.event.HandlerList"],"interfaces":["io.wolfscript.event.Cancellable","io.wolfscript.event.Listener"],"enums":["io.wolfscript.event.EventPriority"],"namespaces":["io.wolfscript.event.block.0","io.wolfscript.event.enchantment.0","io.wolfscript.event.entity.0","io.wolfscript.event.hanging.0","io.wolfscript.event.inventory.0","io.wolfscript.event.painting.0","io.wolfscript.event.player.0","io.wolfscript.event.server.0","io.wolfscript.event.vehicle.0","io.wolfscript.event.weather.0","io.wolfscript.event.world.0"],"properties":[]},"io.wolfscript.event.Cancellable":{"namespace":"io.wolfscript.event","title":"interface Cancellable","description":"interface Cancellable","name":"Cancellable","qualifiedname":"io.wolfscript.event.Cancellable","type":"interface","scope":"public","constructors":[],"methods":[],"imports":[],"properties":[{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"true if you wish to cancel this event"}],"description":"Set: Gets the cancellation state of this event. A cancelled event will not be executed in the server, but will still pass to other plugins","doc":{"return":["true if this event is cancelled /\n    public boolean isCancelled();\n\n    /** Sets the cancellation state of this event. A cancelled event will not be executed in the server, but will still pass to other plugins."]},"return":"void","scope":"public","title":"Set: Gets the cancellation state of this event. A cancelled event will not"}]},"io.wolfscript.event.Event":{"namespace":"io.wolfscript.event","title":"Represents an event.","description":"Represents an event.","doc":{"see":["PluginManager#callEvent(Event)","PluginManager#registerEvents(Listener,Plugin)"]},"name":"Event","qualifiedname":"io.wolfscript.event.Event","type":"class","scope":"public","describe":"abstract","constructors":[],"methods":[{"title":"The default constructor is defined for cleaner code. This constructor","description":"The default constructor is defined for cleaner code. This constructor assumes the event is synchronous. /\n    public Event() {\n        this(false);\n    }\n\n    /** This constructor is used to explicitly declare an event as synchronous or asynchronous.","doc":{"param":["isAsync true indicates the event will fire asynchronously, false by default from default constructor /\n    public Event(boolean isAsync) {\n        this.async = isAsync;\n    }\n\n    /** Convenience method for providing a user-friendly identifier. By default, it is the event's class's {@linkplain Class#getSimpleName() simple name}."],"return":["name of this event /\n    public String getEventName() {\n        if (name == null) {\n            name = getClass().getSimpleName();\n        }\n        return name;\n    }\n\n    public abstract HandlerList getHandlers();\n\n    /** Any custom event that should not by synchronized with other events must use the specific constructor. These are the caveats of using an asynchronous event: <ul> <li>The event is never fired from inside code triggered by a synchronous event. Attempting to do so results in an {@link java.lang.IllegalStateException}. <li>However, asynchronous event handlers may fire synchronous or asynchronous events <li>The event may be fired multiple times simultaneously and in any order. <li>Any newly registered or unregistered handler is ignored after an event starts execution. <li>The handlers for this event may block for any length of time. <li>Some implementations may selectively declare a specific event use as asynchronous. This behavior should be clearly defined. <li>Asynchronous calls are not calculated in the plugin timing system. </ul>","false by default, true if the event fires asynchronously"]},"scope":"public","describe":"final","return":"boolean","name":"isAsynchronous","args":[]}],"imports":["io.wolfscript.plugin.PluginManager"],"properties":[]},"io.wolfscript.event.EventException":{"namespace":"io.wolfscript.event","title":"class EventException","description":"class EventException","name":"EventException","qualifiedname":"io.wolfscript.event.EventException","type":"class","scope":"public","extends":["Exception"],"constructors":[],"methods":[],"imports":[],"properties":[{"name":"Cause","modifier":"readonly","args":[],"description":"Get: Constructs a new EventException based on the given Exception","doc":{"param":["throwable Exception that triggered this Exception /\n    public EventException(Throwable throwable) {\n        cause = throwable;\n    }\n\n    /** Constructs a new EventException /\n    public EventException() {\n        cause = null;\n    }\n\n    /** Constructs a new EventException with the given message","cause The exception that caused this","message The message /\n    public EventException(Throwable cause, String message) {\n        super(message);\n        this.cause = cause;\n    }\n\n    /** Constructs a new EventException with the given message","message The message /\n    public EventException(String message) {\n        super(message);\n        cause = null;\n    }\n\n    /** If applicable, returns the Exception that triggered this Exception"],"return":["Inner exception, or null if one does not exist"]},"return":"Throwable","scope":"public","title":"Get: Constructs a new EventException based on the given Exception"}]},"io.wolfscript.event.EventPriority":{"namespace":"io.wolfscript.event","title":"Represents an event's priority in execution","description":"Represents an event's priority in execution","name":"EventPriority","qualifiedname":"io.wolfscript.event.EventPriority","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"MONITOR","value":"5","title":"Event call is of very low importance and should be ran first, to allow","description":"Event call is of very low importance and should be ran first, to allow other plugins to further customise the outcome /\n    LOWEST(0),\n    /** Event call is of low importance /\n    LOW(1),\n    /** Event call is neither important nor unimportant, and may be ran normally /\n    NORMAL(2),\n    /** Event call is of high importance /\n    HIGH(3),\n    /** Event call is critical and must have the final say in what happens to the event /\n    HIGHEST(4),\n    /** Event is listened to purely for monitoring the outcome of an event. <p> No modifications to the event should be made under this priority","doc":{}}],"properties":[{"name":"Slot","modifier":"readonly","args":[],"description":"Slot property","return":"int","scope":"public","title":"Slot property"}]},"io.wolfscript.event.HandlerList":{"namespace":"io.wolfscript.event","title":"A list of event handlers, stored per-event. Based on lahwran's fevents.","description":"A list of event handlers, stored per-event. Based on lahwran's fevents.","name":"HandlerList","qualifiedname":"io.wolfscript.event.HandlerList","type":"class","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.plugin.Plugin","io.wolfscript.plugin.RegisteredListener","java.util.*","java.util.Map.Entry"],"properties":[{"name":"HandlerLists","modifier":"readonly","args":[],"describe":"static","description":"Get: Handler array. This field being an array is the key to this system's speed. /\n    private volatile RegisteredListener[] handlers = null;\n\n    /** Dynamic handler lists. These are changed using register() and unregister() and are automatically baked to the handlers array any time they have changed. /\n    private final EnumMap<EventPriority, ArrayList<RegisteredListener>> handlerslots;\n\n    /** List of all HandlerLists which have been created, for use in bakeAll() /\n    private static ArrayList<HandlerList> allLists = new ArrayList<HandlerList>();\n\n    /** Bake all handler lists. Best used just after all normal event registration is complete, ie just after all plugins are loaded if you're using fevents in a plugin system. /\n    public static void bakeAll() {\n        synchronized (allLists) {\n            for (HandlerList h : allLists) {\n                h.bake();\n            }\n        }\n    }\n\n    /** Unregister all listeners from all handler lists. /\n    public static void unregisterAll() {\n        synchronized (allLists) {\n            for (HandlerList h : allLists) {\n                synchronized (h) {\n                    for (List<RegisteredListener> list : h.handlerslots.values()) {\n                        list.clear();\n                    }\n                    h.handlers = null;\n                }\n            }\n        }\n    }\n\n    /** Unregister a specific plugin's listeners from all handler lists.","doc":{"param":["plugin plugin to unregister /\n    public static void unregisterAll(Plugin plugin) {\n        synchronized (allLists) {\n            for (HandlerList h : allLists) {\n                h.unregister(plugin);\n            }\n        }\n    }\n\n    /** Unregister a specific listener from all handler lists.","listener listener to unregister /\n    public static void unregisterAll(Listener listener) {\n        synchronized (allLists) {\n            for (HandlerList h : allLists) {\n                h.unregister(listener);\n            }\n        }\n    }\n\n    /** Create a new handler list and initialize using EventPriority. <p> The HandlerList is then added to meta-list for use in bakeAll() /\n    public HandlerList() {\n        handlerslots = new EnumMap<EventPriority, ArrayList<RegisteredListener>>(EventPriority.class);\n        for (EventPriority o : EventPriority.values()) {\n            handlerslots.put(o, new ArrayList<RegisteredListener>());\n        }\n        synchronized (allLists) {\n            allLists.add(this);\n        }\n    }\n\n    /** Register a new listener in this handler list","listener listener to register /\n    public synchronized void register(RegisteredListener listener) {\n        if (handlerslots.get(listener.getPriority()).contains(listener))\n            throw new IllegalStateException(\"This listener is already registered to priority \" + listener.getPriority().toString());\n        handlers = null;\n        handlerslots.get(listener.getPriority()).add(listener);\n    }\n\n    /** Register a collection of new listeners in this handler list","listeners listeners to register /\n    public void registerAll(Collection<RegisteredListener> listeners) {\n        for (RegisteredListener listener : listeners) {\n            register(listener);\n        }\n    }\n\n    /** Remove a listener from a specific order slot","listener listener to remove /\n    public synchronized void unregister(RegisteredListener listener) {\n        if (handlerslots.get(listener.getPriority()).remove(listener)) {\n            handlers = null;\n        }\n    }\n\n    /** Remove a specific plugin's listeners from this handler","plugin plugin to remove /\n    public synchronized void unregister(Plugin plugin) {\n        boolean changed = false;\n        for (List<RegisteredListener> list : handlerslots.values()) {\n            for (ListIterator<RegisteredListener> i = list.listIterator(); i.hasNext();) {\n                if (i.next().getPlugin().equals(plugin)) {\n                    i.remove();\n                    changed = true;\n                }\n            }\n        }\n        if (changed) handlers = null;\n    }\n\n    /** Remove a specific listener from this handler","listener listener to remove /\n    public synchronized void unregister(Listener listener) {\n        boolean changed = false;\n        for (List<RegisteredListener> list : handlerslots.values()) {\n            for (ListIterator<RegisteredListener> i = list.listIterator(); i.hasNext();) {\n                if (i.next().getListener().equals(listener)) {\n                    i.remove();\n                    changed = true;\n                }\n            }\n        }\n        if (changed) handlers = null;\n    }\n\n    /** Bake HashMap and ArrayLists to 2d array - does nothing if not necessary /\n    public synchronized void bake() {\n        if (handlers != null) return; // don't re-bake when still valid\n        List<RegisteredListener> entries = new ArrayList<RegisteredListener>();\n        for (Entry<EventPriority, ArrayList<RegisteredListener>> entry : handlerslots.entrySet()) {\n            entries.addAll(entry.getValue());\n        }\n        handlers = entries.toArray(new RegisteredListener[entries.size()]);\n    }\n\n    /** Get the baked registered listeners associated with this handler list","plugin the plugin to get the listeners of"],"return":["the array of registered listeners /\n    public RegisteredListener[] getRegisteredListeners() {\n        RegisteredListener[] handlers;\n        while ((handlers = this.handlers) == null) bake(); // This prevents fringe cases of returning null\n        return handlers;\n    }\n\n    /** Get a specific plugin's registered listeners associated with this handler list","the list of registered listeners /\n    public static ArrayList<RegisteredListener> getRegisteredListeners(Plugin plugin) {\n        ArrayList<RegisteredListener> listeners = new ArrayList<RegisteredListener>();\n        synchronized (allLists) {\n            for (HandlerList h : allLists) {\n                synchronized (h) {\n                    for (List<RegisteredListener> list : h.handlerslots.values()) {\n                        for (RegisteredListener listener : list) {\n                            if (listener.getPlugin().equals(plugin)) {\n                                listeners.add(listener);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return listeners;\n    }\n\n    /** Get a list of all handler lists for every event type","the list of all handler lists"]},"return":"ArrayList<HandlerList>","scope":"public","title":"Get: Handler array. This field being an array is the key to this system's"}]},"io.wolfscript.event.Listener":{"namespace":"io.wolfscript.event","title":"Simple interface for tagging all EventListeners","description":"Simple interface for tagging all EventListeners","name":"Listener","qualifiedname":"io.wolfscript.event.Listener","type":"interface","scope":"public","constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.event.block.0":{"namespace":"io.wolfscript.event","title":"{@link io.wolfscript.event.Event Events} relating to when a {@link","description":"{@link io.wolfscript.event.Event Events} relating to when a {@link io.wolfscript.block.Block block} is changed or interacts with the {@link io.wolfscript.World world}.","name":"block","qualifiedname":"io.wolfscript.event.block.0","packagename":"io.wolfscript.event.block","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.event.block.BlockBreakEvent","io.wolfscript.event.block.BlockBurnEvent","io.wolfscript.event.block.BlockCanBuildEvent","io.wolfscript.event.block.BlockDamageEvent","io.wolfscript.event.block.BlockDispenseEvent","io.wolfscript.event.block.BlockEvent","io.wolfscript.event.block.BlockExpEvent","io.wolfscript.event.block.BlockExplodeEvent","io.wolfscript.event.block.BlockFadeEvent","io.wolfscript.event.block.BlockFormEvent","io.wolfscript.event.block.BlockFromToEvent","io.wolfscript.event.block.BlockGrowEvent","io.wolfscript.event.block.BlockMultiPlaceEvent","io.wolfscript.event.block.BlockPhysicsEvent","io.wolfscript.event.block.BlockPistonEvent","io.wolfscript.event.block.BlockPistonExtendEvent","io.wolfscript.event.block.BlockPistonRetractEvent","io.wolfscript.event.block.BlockPlaceEvent","io.wolfscript.event.block.BlockRedstoneEvent","io.wolfscript.event.block.BlockSpreadEvent","io.wolfscript.event.block.EntityBlockFormEvent","io.wolfscript.event.block.LeavesDecayEvent","io.wolfscript.event.block.NotePlayEvent","io.wolfscript.event.block.SignChangeEvent"],"interfaces":[],"enums":["io.wolfscript.event.block.Action","io.wolfscript.event.block.IgniteCause"],"namespaces":[],"properties":[]},"io.wolfscript.event.block.Action":{"namespace":"io.wolfscript.event.block","title":"enum Action","description":"enum Action","name":"Action","qualifiedname":"io.wolfscript.event.block.Action","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"PHYSICAL","value":"","title":"Left-clicking a block","description":"Left-clicking a block /\n    LEFT_CLICK_BLOCK,\n    /** Right-clicking a block /\n    RIGHT_CLICK_BLOCK,\n    /** Left-clicking the air /\n    LEFT_CLICK_AIR,\n    /** Right-clicking the air /\n    RIGHT_CLICK_AIR,\n    /** Stepping onto or into a block (Ass-pressure) Examples: <ul> <li>Jumping on soil <li>Standing on pressure plate <li>Triggering redstone ore <li>Triggering tripwire </ul>","doc":{}}],"properties":[]},"io.wolfscript.event.block.BlockBreakEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a block is broken by a player.","description":"Called when a block is broken by a player. <p> If you wish to have the block drop experience, you must set the experience value above 0. By default, experience will be set in the event if: <ol> <li>The player is not in creative or adventure mode <li>The player can loot the block (ie: does not destroy it completely, by using the correct tool) <li>The player does not have silk touch <li>The block drops experience in vanilla Minecraft </ol> <p> Note: Plugins wanting to simulate a traditional block drop should set the block to air and utilize their own methods for determining what the default drop for the block being broken is and what to do about it, if anything. <p> If a Block Break event is cancelled, the block will not break and experience will not drop.","name":"BlockBreakEvent","qualifiedname":"io.wolfscript.event.block.BlockBreakEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockExpEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"BlockBreakEvent constructor","description":"BlockBreakEvent constructor","scope":"public","name":"BlockBreakEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"Player","type":"final","description":"Player argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Player","modifier":"readonly","args":[],"description":"Get: Gets the Player that is breaking the block involved in this event.","doc":{"return":["The Player that is breaking the block involved in this event"]},"return":"io.wolfscript.entity.Player","scope":"public","title":"Get: Gets the Player that is breaking the block involved in this event."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.block.BlockBurnEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a block is destroyed as a result of being burnt by fire.","description":"Called when a block is destroyed as a result of being burnt by fire. <p> If a Block Burn event is cancelled, the block will not be destroyed as a result of being burnt by fire.","name":"BlockBurnEvent","qualifiedname":"io.wolfscript.event.block.BlockBurnEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"BlockBurnEvent constructor","description":"BlockBurnEvent constructor","scope":"public","name":"BlockBurnEvent","args":[{"name":"Block","type":"final","description":"Block argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.block.BlockCanBuildEvent":{"namespace":"io.wolfscript.event.block","title":"Called when we try to place a block, to see if we can build it here or not.","description":"Called when we try to place a block, to see if we can build it here or not. <p> Note: <ul> <li>The Block returned by getBlock() is the block we are trying to place on, not the block we are trying to place. <li>If you want to figure out what is being placed, use {@link #getMaterial()} or {@link #getMaterialId()} instead. </ul>","name":"BlockCanBuildEvent","qualifiedname":"io.wolfscript.event.block.BlockCanBuildEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"constructors":[],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.Material","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"MaterialId","modifier":"readonly","args":[],"deprecated":true,"description":"MaterialId property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    protected int material;\n\n    /**","Magic value","Magic value"],"param":["block the block involved in this event","id the id of the block to place","canBuild whether we can build /\n    @Deprecated\n    public BlockCanBuildEvent(final Block block, final int id, final boolean canBuild) {\n        super(block);\n        buildable = canBuild;\n        material = id;\n    }\n\n    /** Gets whether or not the block can be built here. <p> By default, returns Minecraft's answer on whether the block can be built here or not.","cancel true if you want to allow the block to be built here despite Minecraft's default behaviour /\n    public void setBuildable(boolean cancel) {\n        this.buildable = cancel;\n    }\n\n    /** Gets the Material that we are trying to place."],"return":["boolean whether or not the block can be built /\n    public boolean isBuildable() {\n        return buildable;\n    }\n\n    /** Sets whether the block can be built here or not.","The Material that we are trying to place /\n    public Material getMaterial() {\n        return Material.getMaterial(material);\n    }\n\n    /** Gets the Material ID for the Material that we are trying to place.","The Material ID for the Material that we are trying to place"]},"return":"int","scope":"public","title":"MaterialId property"}]},"io.wolfscript.event.block.BlockDamageEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a block is damaged by a player.","description":"Called when a block is damaged by a player. <p> If a Block Damage event is cancelled, the block will not be damaged.","name":"BlockDamageEvent","qualifiedname":"io.wolfscript.event.block.BlockDamageEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"BlockDamageEvent constructor","description":"BlockDamageEvent constructor","scope":"public","name":"BlockDamageEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Block","type":"final","description":"Block argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"},{"name":"boolean","type":"final","description":"boolean argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"ItemInHand","modifier":"readonly","args":[],"description":"Get: Gets the player damaging the block involved in this event.","doc":{"return":["The player damaging the block involved in this event /\n    public Player getPlayer() {\n        return player;\n    }\n\n    /** Gets if the block is set to instantly break when damaged by the player.","true if the block should instantly break when damaged by the player /\n    public boolean getInstaBreak() {\n        return instaBreak;\n    }\n\n    /** Sets if the block should instantly break when damaged by the player.","The ItemStack for the item currently in the player's hand"],"param":["bool true if you want the block to instantly break when damaged by the player /\n    public void setInstaBreak(boolean bool) {\n        this.instaBreak = bool;\n    }\n\n    /** Gets the ItemStack for the item currently in the player's hand."]},"return":"io.wolfscript.inventory.ItemStack","scope":"public","title":"Get: Gets the player damaging the block involved in this event."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.block.BlockDispenseEvent":{"namespace":"io.wolfscript.event.block","title":"Called when an item is dispensed from a block.","description":"Called when an item is dispensed from a block. <p> If a Block Dispense event is cancelled, the block will not dispense the item.","name":"BlockDispenseEvent","qualifiedname":"io.wolfscript.event.block.BlockDispenseEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"BlockDispenseEvent constructor","description":"BlockDispenseEvent constructor","scope":"public","name":"BlockDispenseEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"},{"name":"Vector","type":"final","description":"Vector argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.inventory.ItemStack","io.wolfscript.util.Vector"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Velocity","modifier":"writeonly","args":[{"name":"vel","type":"io.wolfscript.util.Vector","description":"the velocity of the item being dispensed"}],"description":"Set: Gets the item that is being dispensed. Modifying the returned item will have no effect, you must use {@link #setItem(io.wolfscript.inventory.ItemStack)} instead.","doc":{"return":["An ItemStack for the item being dispensed /\n    public ItemStack getItem() {\n        return item.clone();\n    }\n\n    /** Sets the item being dispensed.","A Vector for the dispensed item's velocity /\n    public Vector getVelocity() {\n        return velocity.clone();\n    }\n\n    /** Sets the velocity of the item being dispensed."]},"return":"void","scope":"public","title":"Set: Gets the item that is being dispensed. Modifying the returned item will"}]},"io.wolfscript.event.block.BlockEvent":{"namespace":"io.wolfscript.event.block","title":"Represents a block related event.","description":"Represents a block related event.","name":"BlockEvent","qualifiedname":"io.wolfscript.event.block.BlockEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.Event"],"constructors":[{"title":"BlockEvent constructor","description":"BlockEvent constructor","scope":"public","name":"BlockEvent","args":[{"name":"Block","type":"final","description":"Block argument"}]}],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.event.Event"],"properties":[{"name":"Block","modifier":"readonly","args":[],"describe":"final","description":"Get: Gets the block involved in this event.","doc":{"return":["The Block which block is involved in this event"]},"return":"io.wolfscript.block.Block","scope":"public","title":"Get: Gets the block involved in this event."}]},"io.wolfscript.event.block.BlockExpEvent":{"namespace":"io.wolfscript.event.block","title":"An event that's called when a block yields experience.","description":"An event that's called when a block yields experience.","name":"BlockExpEvent","qualifiedname":"io.wolfscript.event.block.BlockExpEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"constructors":[{"title":"BlockExpEvent constructor","description":"BlockExpEvent constructor","scope":"public","name":"BlockExpEvent","args":[{"name":"block","type":"io.wolfscript.block.Block","description":"block argument"},{"name":"exp","type":"int","description":"exp argument"}]}],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"ExpToDrop","modifier":"writeonly","args":[{"name":"exp","type":"int","description":"1 or higher to drop experience, else nothing will drop"}],"description":"Set: Get the experience dropped by the block after the event has processed","doc":{"return":["The experience to drop /\n    public int getExpToDrop() {\n        return exp;\n    }\n\n    /** Set the amount of experience dropped by the block after the event has processed"]},"return":"void","scope":"public","title":"Set: Get the experience dropped by the block after the event has processed"}]},"io.wolfscript.event.block.BlockExplodeEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a block explodes","description":"Called when a block explodes","name":"BlockExplodeEvent","qualifiedname":"io.wolfscript.event.block.BlockExplodeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"BlockExplodeEvent constructor","description":"BlockExplodeEvent constructor","scope":"public","name":"BlockExplodeEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"List","type":"final","description":"List argument"},{"name":"float","type":"final","description":"float argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","java.util.List"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Yield","modifier":"writeonly","args":[{"name":"yield","type":"float","description":"The new yield percentage"}],"description":"Set: Returns the list of blocks that would have been removed or were removed from the explosion event.","doc":{"return":["All blown-up blocks /\n    public List<Block> blockList() {\n        return blocks;\n    }\n\n    /** Returns the percentage of blocks to drop from this explosion","The yield. /\n    public float getYield() {\n        return yield;\n    }\n\n    /** Sets the percentage of blocks to drop from this explosion"]},"return":"void","scope":"public","title":"Set: Returns the list of blocks that would have been removed or were removed"}]},"io.wolfscript.event.block.BlockFadeEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a block fades, melts or disappears based on world conditions","description":"Called when a block fades, melts or disappears based on world conditions <p> Examples: <ul> <li>Snow melting due to being near a light source. <li>Ice melting due to being near a light source. <li>Fire burning out after time, without destroying fuel block. </ul> <p> If a Block Fade event is cancelled, the block will not fade, melt or disappear.","name":"BlockFadeEvent","qualifiedname":"io.wolfscript.event.block.BlockFadeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"BlockFadeEvent constructor","description":"BlockFadeEvent constructor","scope":"public","name":"BlockFadeEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockState","type":"final","description":"BlockState argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.block.BlockState","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"NewState","modifier":"readonly","args":[],"description":"Get: Gets the state of the block that will be fading, melting or disappearing.","doc":{"return":["The block state of the block that will be fading, melting or disappearing"]},"return":"io.wolfscript.block.BlockState","scope":"public","title":"Get: Gets the state of the block that will be fading, melting or"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.block.BlockFormEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a block is formed or spreads based on world conditions.","description":"Called when a block is formed or spreads based on world conditions. <p> Use {@link io.wolfscript.event.block.BlockSpreadEvent} to catch blocks that actually spread and don't just \"randomly\" form. <p> Examples: <ul> <li>Snow forming due to a snow storm. <li>Ice forming in a snowy Biome like Taiga or Tundra. </ul> <p> If a Block Form event is cancelled, the block will not be formed.","doc":{"see":["BlockSpreadEvent"]},"name":"BlockFormEvent","qualifiedname":"io.wolfscript.event.block.BlockFormEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockGrowEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"BlockFormEvent constructor","description":"BlockFormEvent constructor","scope":"public","name":"BlockFormEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockState","type":"final","description":"BlockState argument"}]}],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.block.BlockState","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.block.BlockFromToEvent":{"namespace":"io.wolfscript.event.block","title":"Represents events with a source block and a destination block, currently","description":"Represents events with a source block and a destination block, currently only applies to liquid (lava and water) and teleporting dragon eggs. <p> If a Block From To event is cancelled, the block will not move (the liquid will not flow).","name":"BlockFromToEvent","qualifiedname":"io.wolfscript.event.block.BlockFromToEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"BlockFromToEvent constructor","description":"BlockFromToEvent constructor","scope":"public","name":"BlockFromToEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockFace","type":"final","description":"BlockFace argument"}]},{"title":"BlockFromToEvent constructor","description":"BlockFromToEvent constructor","scope":"public","name":"BlockFromToEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"Block","type":"final","description":"Block argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.block.BlockFace","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"ToBlock","modifier":"readonly","args":[],"description":"Get: Gets the BlockFace that the block is moving to.","doc":{"return":["The BlockFace that the block is moving to /\n    public BlockFace getFace() {\n        return face;\n    }\n\n    /** Convenience method for getting the faced Block.","The faced Block"]},"return":"io.wolfscript.block.Block","scope":"public","title":"Get: Gets the BlockFace that the block is moving to."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.block.BlockGrowEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a block grows naturally in the world.","description":"Called when a block grows naturally in the world. <p> Examples: <ul> <li>Wheat <li>Sugar Cane <li>Cactus <li>Watermelon <li>Pumpkin </ul> <p> If a Block Grow event is cancelled, the block will not grow.","name":"BlockGrowEvent","qualifiedname":"io.wolfscript.event.block.BlockGrowEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"BlockGrowEvent constructor","description":"BlockGrowEvent constructor","scope":"public","name":"BlockGrowEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockState","type":"final","description":"BlockState argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.block.BlockState","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"NewState","modifier":"readonly","args":[],"description":"Get: Gets the state of the block where it will form or spread to.","doc":{"return":["The block state for this events block"]},"return":"io.wolfscript.block.BlockState","scope":"public","title":"Get: Gets the state of the block where it will form or spread to."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.block.BlockMultiPlaceEvent":{"namespace":"io.wolfscript.event.block","title":"Fired when a single block placement action of a player triggers the","description":"Fired when a single block placement action of a player triggers the creation of multiple blocks(e.g. placing a bed block). The block returned by {@link #getBlockPlaced()} and its related methods is the block where the placed block would exist if the placement only affected a single block.","name":"BlockMultiPlaceEvent","qualifiedname":"io.wolfscript.event.block.BlockMultiPlaceEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockPlaceEvent"],"constructors":[{"title":"BlockMultiPlaceEvent constructor","description":"BlockMultiPlaceEvent constructor","scope":"public","name":"BlockMultiPlaceEvent","args":[{"name":"clicked","type":"io.wolfscript.block.Block","description":"clicked argument"},{"name":"itemInHand","type":"io.wolfscript.inventory.ItemStack","description":"itemInHand argument"},{"name":"thePlayer","type":"io.wolfscript.entity.Player","description":"thePlayer argument"},{"name":"canBuild","type":"boolean","description":"canBuild argument"}]}],"methods":[],"imports":["com.google.common.collect.ImmutableList","io.wolfscript.block.Block","io.wolfscript.block.BlockState","io.wolfscript.entity.Player","io.wolfscript.inventory.ItemStack","java.util.List"],"properties":[{"name":"ReplacedBlockStates","modifier":"readonly","args":[],"description":"Get: Gets a list of blockstates for all blocks which were replaced by the placement of the new blocks. Most of these blocks will just have a Material type of AIR.","doc":{"return":["immutable list of replaced BlockStates"]},"return":"List<BlockState>","scope":"public","title":"Get: Gets a list of blockstates for all blocks which were replaced by the"}]},"io.wolfscript.event.block.BlockPhysicsEvent":{"namespace":"io.wolfscript.event.block","title":"Thrown when a block physics check is called","description":"Thrown when a block physics check is called","name":"BlockPhysicsEvent","qualifiedname":"io.wolfscript.event.block.BlockPhysicsEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.Material","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"ChangedType","modifier":"readonly","args":[],"description":"ChangedType property","doc":{"deprecated":["Magic value","Magic value /\n    @Deprecated\n    public int getChangedTypeId() {\n        return changed;\n    }\n\n    /** Gets the type of block that changed, causing this event"],"param":["block the block involved in this event","changed the changed block's type id /\n    @Deprecated\n    public BlockPhysicsEvent(final Block block, final int changed) {\n        super(block);\n        this.changed = changed;\n    }\n\n    /** Gets the type of block that changed, causing this event"],"return":["Changed block's type id","Changed block's type"]},"return":"io.wolfscript.Material","scope":"public","title":"ChangedType property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.block.BlockPistonEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a piston block is triggered","description":"Called when a piston block is triggered","name":"BlockPistonEvent","qualifiedname":"io.wolfscript.event.block.BlockPistonEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"BlockPistonEvent constructor","description":"BlockPistonEvent constructor","scope":"public","name":"BlockPistonEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockFace","type":"final","description":"BlockFace argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.Block","io.wolfscript.block.BlockFace","io.wolfscript.event.Cancellable"],"properties":[{"name":"Direction","modifier":"readonly","args":[],"description":"Get: Returns true if the Piston in the event is sticky.","doc":{"return":["stickiness of the piston /\n    public boolean isSticky() {\n        return block.getType() == Material.PISTON_STICKY_BASE || block.getType() == Material.PISTON_MOVING_PIECE;\n    }\n\n    /** Return the direction in which the piston will operate.","direction of the piston"]},"return":"io.wolfscript.block.BlockFace","scope":"public","title":"Get: Returns true if the Piston in the event is sticky."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancelled","type":"boolean","description":"cancelled argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.block.BlockPistonExtendEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a piston extends","description":"Called when a piston extends","name":"BlockPistonExtendEvent","qualifiedname":"io.wolfscript.event.block.BlockPistonExtendEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockPistonEvent"],"constructors":[{"title":"BlockPistonExtendEvent constructor","description":"BlockPistonExtendEvent constructor","scope":"public","name":"BlockPistonExtendEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"int","type":"final","description":"int argument"},{"name":"BlockFace","type":"final","description":"BlockFace argument"}]},{"title":"BlockPistonExtendEvent constructor","description":"BlockPistonExtendEvent constructor","scope":"public","name":"BlockPistonExtendEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"List","type":"final","description":"List argument"},{"name":"BlockFace","type":"final","description":"BlockFace argument"}]}],"methods":[],"imports":["java.util.ArrayList","java.util.Collections","java.util.List","io.wolfscript.block.Block","io.wolfscript.block.BlockFace","io.wolfscript.event.HandlerList"],"properties":[{"name":"Blocks","modifier":"readonly","args":[],"description":"Get: Get the amount of blocks which will be moved while extending.","doc":{"return":["the amount of moving blocks","Immutable list of the moved blocks."],"deprecated":["slime blocks make the value of this method inaccurate due to blocks being pushed at the side /\n    @Deprecated\n    public int getLength() {\n        return this.length;\n    }\n\n    /** Get an immutable list of the blocks which will be moved by the extending."]},"return":"List<Block>","scope":"public","title":"Get: Get the amount of blocks which will be moved while extending."},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.block.BlockPistonRetractEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a piston retracts","description":"Called when a piston retracts","name":"BlockPistonRetractEvent","qualifiedname":"io.wolfscript.event.block.BlockPistonRetractEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockPistonEvent"],"constructors":[{"title":"BlockPistonRetractEvent constructor","description":"BlockPistonRetractEvent constructor","scope":"public","name":"BlockPistonRetractEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"List","type":"final","description":"List argument"},{"name":"BlockFace","type":"final","description":"BlockFace argument"}]}],"methods":[],"imports":["java.util.List","io.wolfscript.Location","io.wolfscript.block.Block","io.wolfscript.block.BlockFace","io.wolfscript.event.HandlerList"],"properties":[{"name":"Blocks","modifier":"readonly","args":[],"description":"Get: Gets the location where the possible moving block might be if the retracting piston is sticky.","doc":{"return":["The possible location of the possibly moving block. /\n    @Deprecated\n    public Location getRetractLocation() {\n        return getBlock().getRelative(getDirection(), 2).getLocation();\n    }\n    \n    /** Get an immutable list of the blocks which will be moved by the extending.","Immutable list of the moved blocks."]},"return":"List<Block>","scope":"public","title":"Get: Gets the location where the possible moving block might be if the"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.block.BlockPlaceEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a block is placed by a player.","description":"Called when a block is placed by a player. <p> If a Block Place event is cancelled, the block will not be placed.","name":"BlockPlaceEvent","qualifiedname":"io.wolfscript.event.block.BlockPlaceEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"BlockPlaceEvent constructor","description":"BlockPlaceEvent constructor","scope":"public","name":"BlockPlaceEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockState","type":"final","description":"BlockState argument"},{"name":"Block","type":"final","description":"Block argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"},{"name":"Player","type":"final","description":"Player argument"},{"name":"boolean","type":"final","description":"boolean argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.block.BlockState","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Build","modifier":"writeonly","args":[{"name":"canBuild","type":"boolean","description":"true if you want the player to be able to build"}],"description":"Set: Gets the player who placed the block involved in this event.","doc":{"return":["The Player who placed the block involved in this event /\n    public Player getPlayer() {\n        return player;\n    }\n\n    /** Clarity method for getting the placed block. Not really needed except for reasons of clarity.","The Block that was placed /\n    public Block getBlockPlaced() {\n        return getBlock();\n    }\n\n    /** Gets the BlockState for the block which was replaced. Material type air mostly.","The BlockState for the block which was replaced. /\n    public BlockState getBlockReplacedState() {\n        return this.replacedBlockState;\n    }\n\n    /** Gets the block that this block was placed against","Block the block that the new block was placed against /\n    public Block getBlockAgainst() {\n        return placedAgainst;\n    }\n\n    /** Gets the item in the player's hand when they placed the block.","The ItemStack for the item in the player's hand when they placed the block /\n    public ItemStack getItemInHand() {\n        return itemInHand;\n    }\n\n    /** Gets the value whether the player would be allowed to build here. Defaults to spawn if the server was going to stop them (such as, the player is in Spawn). Note that this is an entirely different check than BLOCK_CANBUILD, as this refers to a player, not universe-physics rule like cactus on dirt.","boolean whether the server would allow a player to build here /\n    public boolean canBuild() {\n        return this.canBuild;\n    }\n\n    /** Sets the canBuild state of this event. Set to true if you want the player to be able to build."]},"return":"void","scope":"public","title":"Set: Gets the player who placed the block involved in this event."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.block.BlockRedstoneEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a redstone current changes","description":"Called when a redstone current changes","name":"BlockRedstoneEvent","qualifiedname":"io.wolfscript.event.block.BlockRedstoneEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"constructors":[{"title":"BlockRedstoneEvent constructor","description":"BlockRedstoneEvent constructor","scope":"public","name":"BlockRedstoneEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"int","type":"final","description":"int argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"NewCurrent","modifier":"writeonly","args":[{"name":"newCurrent","type":"int","description":"The new current to set"}],"description":"Set: Gets the old current of this block","doc":{"return":["The previous current /\n    public int getOldCurrent() {\n        return oldCurrent;\n    }\n\n    /** Gets the new current of this block","The new current /\n    public int getNewCurrent() {\n        return newCurrent;\n    }\n\n    /** Sets the new current of this block"]},"return":"void","scope":"public","title":"Set: Gets the old current of this block"}]},"io.wolfscript.event.block.BlockSpreadEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a block spreads based on world conditions.","description":"Called when a block spreads based on world conditions. <p> Use {@link io.wolfscript.event.block.BlockFormEvent} to catch blocks that \"randomly\" form instead of actually spread. <p> Examples: <ul> <li>Mushrooms spreading. <li>Fire spreading. </ul> <p> If a Block Spread event is cancelled, the block will not spread.","doc":{"see":["BlockFormEvent"]},"name":"BlockSpreadEvent","qualifiedname":"io.wolfscript.event.block.BlockSpreadEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockFormEvent"],"constructors":[{"title":"BlockSpreadEvent constructor","description":"BlockSpreadEvent constructor","scope":"public","name":"BlockSpreadEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockState","type":"final","description":"BlockState argument"}]}],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.block.BlockState","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Source","modifier":"readonly","args":[],"description":"Get: Gets the source block involved in this event.","doc":{"return":["the Block for the source block involved in this event."]},"return":"io.wolfscript.block.Block","scope":"public","title":"Get: Gets the source block involved in this event."}]},"io.wolfscript.event.block.EntityBlockFormEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a block is formed by entities.","description":"Called when a block is formed by entities. <p> Examples: <ul> <li>Snow formed by a {@link io.wolfscript.entity.Snowman}. </ul>","name":"EntityBlockFormEvent","qualifiedname":"io.wolfscript.event.block.EntityBlockFormEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockFormEvent"],"constructors":[{"title":"EntityBlockFormEvent constructor","description":"EntityBlockFormEvent constructor","scope":"public","name":"EntityBlockFormEvent","args":[{"name":"Entity","type":"final","description":"Entity argument"},{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockState","type":"final","description":"BlockState argument"}]}],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.block.BlockState","io.wolfscript.entity.Entity"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Get: Get the entity that formed the block.","doc":{"return":["Entity involved in event"]},"return":"io.wolfscript.entity.Entity","scope":"public","title":"Get: Get the entity that formed the block."}]},"io.wolfscript.event.block.IgniteCause":{"namespace":"io.wolfscript.event.block","title":"Called when a block is ignited. If you want to catch when a Player places","description":"Called when a block is ignited. If you want to catch when a Player places fire, you need to use {@link io.wolfscript.event.block.BlockPlaceEvent}. <p> If a Block Ignite event is cancelled, the block will not be ignited. /\npublic class BlockIgniteEvent extends BlockEvent implements Cancellable {\n    private static final HandlerList handlers = new HandlerList();\n    private final IgniteCause cause;\n    private final Entity ignitingEntity;\n    private final Block ignitingBlock;\n    private boolean cancel;\n\n    @Deprecated\n    public BlockIgniteEvent(final Block theBlock, final IgniteCause cause, final Player thePlayer) {\n        this(theBlock, cause, (Entity) thePlayer);\n    }\n\n    public BlockIgniteEvent(final Block theBlock, final IgniteCause cause, final Entity ignitingEntity) {\n        this(theBlock, cause, ignitingEntity, null);\n    }\n\n    public BlockIgniteEvent(final Block theBlock, final IgniteCause cause, final Block ignitingBlock) {\n        this(theBlock, cause, null, ignitingBlock);\n    }\n\n    public BlockIgniteEvent(final Block theBlock, final IgniteCause cause, final Entity ignitingEntity, final Block ignitingBlock) {\n        super(theBlock);\n        this.cause = cause;\n        this.ignitingEntity = ignitingEntity;\n        this.ignitingBlock = ignitingBlock;\n        this.cancel = false;\n    }\n\n    public boolean isCancelled() {\n        return cancel;\n    }\n\n    public void setCancelled(boolean cancel) {\n        this.cancel = cancel;\n    }\n\n    /** Gets the cause of block ignite.","doc":{"return":["An IgniteCause value detailing the cause of block ignition /\n    public IgniteCause getCause() {\n        return cause;\n    }\n\n    /** Gets the player who ignited this block","The Player that placed/ignited the fire block, or null if not ignited by a Player. /\n    public Player getPlayer() {\n        if (ignitingEntity instanceof Player) {\n            return (Player) ignitingEntity;\n        }\n\n        return null;\n    }\n\n    /** Gets the entity who ignited this block","The Entity that placed/ignited the fire block, or null if not ignited by a Entity. /\n    public Entity getIgnitingEntity() {\n        return ignitingEntity;\n    }\n\n    /** Gets the block who ignited this block","The Block that placed/ignited the fire block, or null if not ignited by a Block. /\n    public Block getIgnitingBlock() {\n        return ignitingBlock;\n    }\n\n    /** An enum to specify the cause of the ignite"]},"name":"IgniteCause","qualifiedname":"io.wolfscript.event.block.IgniteCause","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.entity.Entity","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"enum":[{"code":"EXPLOSION","value":"","title":"Block ignition caused by lava.","description":"Block ignition caused by lava. /\n        LAVA,\n        /** Block ignition caused by a player or dispenser using flint-and-steel. /\n        FLINT_AND_STEEL,\n        /** Block ignition caused by dynamic spreading of fire. /\n        SPREAD,\n        /** Block ignition caused by lightning. /\n        LIGHTNING,\n        /** Block ignition caused by an entity using a fireball. /\n        FIREBALL,\n        /** Block ignition caused by an Ender Crystal. /\n        ENDER_CRYSTAL,\n        /** Block ignition caused by explosion.","doc":{}}],"properties":[]},"io.wolfscript.event.block.LeavesDecayEvent":{"namespace":"io.wolfscript.event.block","title":"Called when leaves are decaying naturally.","description":"Called when leaves are decaying naturally. <p> If a Leaves Decay event is cancelled, the leaves will not decay.","name":"LeavesDecayEvent","qualifiedname":"io.wolfscript.event.block.LeavesDecayEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"LeavesDecayEvent constructor","description":"LeavesDecayEvent constructor","scope":"public","name":"LeavesDecayEvent","args":[{"name":"Block","type":"final","description":"Block argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.block.NotePlayEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a note block is being played through player interaction or a","description":"Called when a note block is being played through player interaction or a redstone current.","name":"NotePlayEvent","qualifiedname":"io.wolfscript.event.block.NotePlayEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"NotePlayEvent constructor","description":"NotePlayEvent constructor","scope":"public","name":"NotePlayEvent","args":[{"name":"block","type":"io.wolfscript.block.Block","description":"block argument"},{"name":"instrument","type":"io.wolfscript.Instrument","description":"instrument argument"},{"name":"note","type":"io.wolfscript.Note","description":"note argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.Instrument","io.wolfscript.Note","io.wolfscript.block.Block","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Note","modifier":"writeonly","args":[{"name":"note","type":"io.wolfscript.Note","description":"the Note. Has no effect if null."}],"description":"Set: Gets the {@link io.wolfscript.Instrument} to be used.","doc":{"return":["the Instrument; /\n    public Instrument getInstrument() {\n        return instrument;\n    }\n\n    /** Gets the {@link io.wolfscript.Note} to be played.","the Note. /\n    public Note getNote() {\n        return note;\n    }\n\n    /** Overrides the {@link io.wolfscript.Instrument} to be used."]},"return":"void","scope":"public","title":"Set: Gets the {@link io.wolfscript.Instrument} to be used."}]},"io.wolfscript.event.block.SignChangeEvent":{"namespace":"io.wolfscript.event.block","title":"Called when a sign is changed by a player.","description":"Called when a sign is changed by a player. <p> If a Sign Change event is cancelled, the sign will not be changed.","name":"SignChangeEvent","qualifiedname":"io.wolfscript.event.block.SignChangeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"SignChangeEvent constructor","description":"SignChangeEvent constructor","scope":"public","name":"SignChangeEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"Player","type":"final","description":"Player argument"},{"name":"String","type":"final","description":"String argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Lines","modifier":"readonly","args":[],"description":"Get: Gets the player changing the sign involved in this event.","doc":{"return":["the Player involved in this event /\n    public Player getPlayer() {\n        return player;\n    }\n\n    /** Gets all of the lines of text from the sign involved in this event.","the String array for the sign's lines new text"]},"return":"String[]","scope":"public","title":"Get: Gets the player changing the sign involved in this event."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.enchantment.0":{"namespace":"io.wolfscript.event","title":"{@link io.wolfscript.event.Event Events} triggered from an {@link","description":"{@link io.wolfscript.event.Event Events} triggered from an {@link io.wolfscript.inventory.EnchantingInventory enchantment table}.","name":"enchantment","qualifiedname":"io.wolfscript.event.enchantment.0","packagename":"io.wolfscript.event.enchantment","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.event.enchantment.EnchantItemEvent","io.wolfscript.event.enchantment.PrepareItemEnchantEvent"],"interfaces":[],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.event.enchantment.EnchantItemEvent":{"namespace":"io.wolfscript.event.enchantment","title":"Called when an ItemStack is successfully enchanted (currently at","description":"Called when an ItemStack is successfully enchanted (currently at enchantment table)","name":"EnchantItemEvent","qualifiedname":"io.wolfscript.event.enchantment.EnchantItemEvent","type":"class","scope":"public","extends":["io.wolfscript.event.inventory.InventoryEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"EnchantItemEvent constructor","description":"EnchantItemEvent constructor","scope":"public","name":"EnchantItemEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"InventoryView","type":"final","description":"InventoryView argument"},{"name":"Block","type":"final","description":"Block argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"},{"name":"int","type":"final","description":"int argument"},{"name":"Map","type":"final","description":"Map argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]},{"title":"Gets the player enchanting the item","description":"Gets the player enchanting the item","doc":{"return":["enchanting player /\n    public Player getEnchanter() {\n        return enchanter;\n    }\n\n    /** Gets the block being used to enchant the item","the block used for enchanting /\n    public Block getEnchantBlock() {\n        return table;\n    }\n\n    /** Gets the item to be enchanted (can be modified)","ItemStack of item /\n    public ItemStack getItem() {\n        return item;\n    }\n\n    /** Get cost in exp levels of the enchantment","experience level cost /\n    public int getExpLevelCost() {\n        return level;\n    }\n\n    /** Set cost in exp levels of the enchantment","map of enchantment levels, keyed by enchantment /\n    public Map<Enchantment, Integer> getEnchantsToAdd() {\n        return enchants;\n    }\n\n    /** Which button was pressed to initiate the enchanting.","The button index (0, 1, or 2)."],"param":["level - cost in levels /\n    public void setExpLevelCost(int level) {\n        this.level = level;\n    }\n\n    /** Get map of enchantment (levels, keyed by type) to be added to item (modify map returned to change values). Note: Any enchantments not allowed for the item will be ignored"]},"scope":"public","return":"int","name":"whichButton","args":[]}],"imports":["java.util.HashMap","java.util.Map","io.wolfscript.block.Block","io.wolfscript.enchantments.Enchantment","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.event.inventory.InventoryEvent","io.wolfscript.inventory.InventoryView","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.enchantment.PrepareItemEnchantEvent":{"namespace":"io.wolfscript.event.enchantment","title":"Called when an ItemStack is inserted in an enchantment table - can be","description":"Called when an ItemStack is inserted in an enchantment table - can be called multiple times","name":"PrepareItemEnchantEvent","qualifiedname":"io.wolfscript.event.enchantment.PrepareItemEnchantEvent","type":"class","scope":"public","extends":["io.wolfscript.event.inventory.InventoryEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PrepareItemEnchantEvent constructor","description":"PrepareItemEnchantEvent constructor","scope":"public","name":"PrepareItemEnchantEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"view","type":"io.wolfscript.inventory.InventoryView","description":"view argument"},{"name":"Block","type":"final","description":"Block argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"},{"name":"int","type":"final","description":"int argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.event.inventory.InventoryEvent","io.wolfscript.inventory.InventoryView","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"EnchantmentBonus","modifier":"readonly","args":[],"description":"Get: Gets the player enchanting the item","doc":{"return":["enchanting player /\n    public Player getEnchanter() {\n        return enchanter;\n    }\n\n    /** Gets the block being used to enchant the item","the block used for enchanting /\n    public Block getEnchantBlock() {\n        return table;\n    }\n\n    /** Gets the item to be enchanted (can be modified)","ItemStack of item /\n    public ItemStack getItem() {\n        return item;\n    }\n\n    /** Get list of offered exp level costs of the enchantment (modify values to change offer)","experience level costs offered /\n    public int[] getExpLevelCostsOffered() {\n        return levelsOffered;\n    }\n\n    /** Get enchantment bonus in effect - corresponds to number of bookshelves","enchantment bonus"]},"return":"int","scope":"public","title":"Get: Gets the player enchanting the item"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.entity.0":{"namespace":"io.wolfscript.event","title":"{@link io.wolfscript.event.Event Events} relating to {@link","description":"{@link io.wolfscript.event.Event Events} relating to {@link io.wolfscript.entity.Entity entities}, excluding some directly referencing some more specific entity types.","name":"entity","qualifiedname":"io.wolfscript.event.entity.0","packagename":"io.wolfscript.event.entity","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.event.entity.EntityBreakDoorEvent","io.wolfscript.event.entity.EntityChangeBlockEvent","io.wolfscript.event.entity.EntityCombustByBlockEvent","io.wolfscript.event.entity.EntityCombustByEntityEvent","io.wolfscript.event.entity.EntityCombustEvent","io.wolfscript.event.entity.EntityCreatePortalEvent","io.wolfscript.event.entity.EntityDamageByBlockEvent","io.wolfscript.event.entity.EntityDamageByEntityEvent","io.wolfscript.event.entity.EntityDeathEvent","io.wolfscript.event.entity.EntityEvent","io.wolfscript.event.entity.EntityExplodeEvent","io.wolfscript.event.entity.EntityInteractEvent","io.wolfscript.event.entity.EntityPortalEnterEvent","io.wolfscript.event.entity.EntityPortalEvent","io.wolfscript.event.entity.EntityPortalExitEvent","io.wolfscript.event.entity.EntityShootBowEvent","io.wolfscript.event.entity.EntityTameEvent","io.wolfscript.event.entity.EntityTeleportEvent","io.wolfscript.event.entity.EntityUnleashEvent","io.wolfscript.event.entity.ExpBottleEvent","io.wolfscript.event.entity.ExplosionPrimeEvent","io.wolfscript.event.entity.FoodLevelChangeEvent","io.wolfscript.event.entity.HorseJumpEvent","io.wolfscript.event.entity.ItemDespawnEvent","io.wolfscript.event.entity.ItemSpawnEvent","io.wolfscript.event.entity.PigZapEvent","io.wolfscript.event.entity.PlayerDeathEvent","io.wolfscript.event.entity.PlayerLeashEntityEvent","io.wolfscript.event.entity.PotionSplashEvent","io.wolfscript.event.entity.ProjectileHitEvent","io.wolfscript.event.entity.ProjectileLaunchEvent","io.wolfscript.event.entity.SheepDyeWoolEvent","io.wolfscript.event.entity.SheepRegrowWoolEvent","io.wolfscript.event.entity.SlimeSplitEvent"],"interfaces":[],"enums":["io.wolfscript.event.entity.DamageCause","io.wolfscript.event.entity.PowerCause","io.wolfscript.event.entity.RegainReason","io.wolfscript.event.entity.SpawnReason","io.wolfscript.event.entity.TargetReason"],"namespaces":[],"properties":[]},"io.wolfscript.event.entity.DamageCause":{"namespace":"io.wolfscript.event.entity","title":"Stores data for damage events","description":"Stores data for damage events /\npublic class EntityDamageEvent extends EntityEvent implements Cancellable {\n    private static final HandlerList handlers = new HandlerList();\n    private static final DamageModifier[] MODIFIERS = DamageModifier.values();\n    private static final Function<? super Double, Double> ZERO = Functions.constant(-0.0);\n    private final Map<DamageModifier, Double> modifiers;\n    private final Map<DamageModifier, ? extends Function<? super Double, Double>> modifierFunctions;\n    private final Map<DamageModifier, Double> originals;\n    private boolean cancelled;\n    private final DamageCause cause;\n\n    @Deprecated\n    public EntityDamageEvent(final Entity damagee, final DamageCause cause, final int damage) {\n        this(damagee, cause, (double) damage);\n    }\n\n    @Deprecated\n    public EntityDamageEvent(final Entity damagee, final DamageCause cause, final double damage) {\n        this(damagee, cause, new EnumMap<DamageModifier, Double>(ImmutableMap.of(DamageModifier.BASE, damage)), new EnumMap<DamageModifier, Function<? super Double, Double>>(ImmutableMap.of(DamageModifier.BASE, ZERO)));\n    }\n\n    public EntityDamageEvent(final Entity damagee, final DamageCause cause, final Map<DamageModifier, Double> modifiers, final Map<DamageModifier, ? extends Function<? super Double, Double>> modifierFunctions) {\n        super(damagee);\n        Validate.isTrue(modifiers.containsKey(DamageModifier.BASE), \"BASE DamageModifier missing\");\n        Validate.isTrue(!modifiers.containsKey(null), \"Cannot have null DamageModifier\");\n        Validate.noNullElements(modifiers.values(), \"Cannot have null modifier values\");\n        Validate.isTrue(modifiers.keySet().equals(modifierFunctions.keySet()), \"Must have a modifier function for each DamageModifier\");\n        Validate.noNullElements(modifierFunctions.values(), \"Cannot have null modifier function\");\n        this.originals = new EnumMap<DamageModifier, Double>(modifiers);\n        this.cause = cause;\n        this.modifiers = modifiers;\n        this.modifierFunctions = modifierFunctions;\n    }\n\n    public boolean isCancelled() {\n        return cancelled;\n    }\n\n    public void setCancelled(boolean cancel) {\n        cancelled = cancel;\n    }\n\n    /** Gets the original damage for the specified modifier, as defined at this event's construction.","doc":{"param":["type the modifier","type the damage modifier","damage the scalar value of the damage's modifier","type the damage modifier","type the modifier","damage The raw amount of damage caused by the event /\n    public void setDamage(double damage) {\n        // These have to happen in the same order as the server calculates them, keep the enum sorted\n        double remaining = damage;\n        double oldRemaining = getDamage(DamageModifier.BASE);\n        for (DamageModifier modifier : MODIFIERS) {\n            if (!isApplicable(modifier)) {\n                continue;\n            }\n\n            Function<? super Double, Double> modifierFunction = modifierFunctions.get(modifier);\n            double newVanilla = modifierFunction.apply(remaining);\n            double oldVanilla = modifierFunction.apply(oldRemaining);\n            double difference = oldVanilla - newVanilla;\n\n            // Don't allow value to cross zero, assume zero values should be negative\n            double old = getDamage(modifier);\n            if (old > 0) {\n                setDamage(modifier, Math.max(0, old - difference));\n            } else {\n                setDamage(modifier, Math.min(0, old - difference));\n            }\n            remaining += newVanilla;\n            oldRemaining += oldVanilla;\n        }\n\n        setDamage(DamageModifier.BASE, damage);\n    }\n\n    /** This method exists for legacy reasons to provide backwards compatibility. It will not exist at runtime and should not be used under any circumstances.","damage the new damage value /\n    @Deprecated\n    public void _INVALID_setDamage(int damage) {\n        setDamage(damage);\n    }\n\n    /** Gets the cause of the damage."],"return":["the original damage","The raw amount of damage caused by the event","true if the modifier is supported by the caller, false otherwise","The raw amount of damage caused by the event","the amount of damage caused by the event /\n    public final double getFinalDamage() {\n        double damage = 0;\n        for (DamageModifier modifier : MODIFIERS) {\n            damage += getDamage(modifier);\n        }\n        return damage;\n    }\n\n    /** This method exists for legacy reasons to provide backwards compatibility. It will not exist at runtime and should not be used under any circumstances.","the (rounded) damage /\n    @Deprecated\n    public int _INVALID_getDamage() {\n        return NumberConversions.ceil(getDamage());\n    }\n\n    /** Sets the raw amount of damage caused by the event. <p> For compatibility this also recalculates the modifiers and scales them by the difference between the modifier for the previous damage value and the new one.","A DamageCause value detailing the cause of the damage. /\n    public DamageCause getCause() {\n        return cause;\n    }\n\n    @Override\n    public HandlerList getHandlers() {\n        return handlers;\n    }\n\n    public static HandlerList getHandlerList() {\n        return handlers;\n    }\n\n    /** An enum to specify the types of modifier /\n    public enum DamageModifier {\n        /** This represents the amount of damage being done, also known as the raw {@link EntityDamageEvent#getDamage()}. /\n        BASE,\n        /** This represents the damage reduced by a wearing a helmet when hit by a falling block. /\n        HARD_HAT,\n        /** This represents  the damage reduction caused by blocking, only present for {@link Player Players}. /\n        BLOCKING,\n        /** This represents the damage reduction caused by wearing armor. /\n        ARMOR,\n        /** This represents the damage reduction caused by the Resistance potion effect. /\n        RESISTANCE,\n        /** This represents the damage reduction caused by the combination of: <ul> <li> Armor enchantments </li><li> Witch's potion resistance </li> </ul> /\n        MAGIC,\n        /** This represents the damage reduction caused by the absorption potion effect. /\n        ABSORPTION,\n        ;\n    }\n\n    /** An enum to specify the cause of the damage"],"throws":["IllegalArgumentException if type is null /\n    public double getOriginalDamage(DamageModifier type) throws IllegalArgumentException {\n        final Double damage = originals.get(type);\n        if (damage != null) {\n            return damage;\n        }\n        if (type == null) {\n            throw new IllegalArgumentException(\"Cannot have null DamageModifier\");\n        }\n        return 0;\n    }\n\n    /** Sets the damage for the specified modifier.","IllegalArgumentException if type is null","UnsupportedOperationException if the caller does not support the particular DamageModifier, or to rephrase, when {@link #isApplicable(DamageModifier)} returns false /\n    public void setDamage(DamageModifier type, double damage) throws IllegalArgumentException, UnsupportedOperationException {\n        if (!modifiers.containsKey(type)) {\n            throw type == null ? new IllegalArgumentException(\"Cannot have null DamageModifier\") : new UnsupportedOperationException(type + \" is not applicable to \" + getEntity());\n        }\n        modifiers.put(type, damage);\n    }\n\n    /** Gets the damage change for some modifier","IllegalArgumentException if type is null","IllegalArgumentException if type is null /\n    public boolean isApplicable(DamageModifier type) throws IllegalArgumentException {\n        Validate.notNull(type, \"Cannot have null DamageModifier\");\n        return modifiers.containsKey(type);\n    }\n\n    /** Gets the raw amount of damage caused by the event"],"see":["#getFinalDamage()","DamageModifier#BASE /\n    public double getDamage(DamageModifier type) throws IllegalArgumentException {\n        Validate.notNull(type, \"Cannot have null DamageModifier\");\n        final Double damage = modifiers.get(type);\n        return damage == null ? 0 : damage;\n    }\n\n    /** This checks to see if a particular modifier is valid for this event's caller, such that, {@link #setDamage(DamageModifier, double)} will not throw an {@link UnsupportedOperationException}. <p> {@link DamageModifier#BASE} is always applicable.","DamageModifier#BASE /\n    public double getDamage() {\n        return getDamage(DamageModifier.BASE);\n    }\n\n    /** Gets the amount of damage caused by the event after all damage reduction is applied."]},"name":"DamageCause","qualifiedname":"io.wolfscript.event.entity.DamageCause","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["java.util.EnumMap","java.util.Map","org.apache.commons.lang.Validate","io.wolfscript.entity.Entity","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.util.NumberConversions","com.google.common.base.Function","com.google.common.base.Functions","com.google.common.collect.ImmutableMap"],"enum":[{"code":"THORNS","value":"","title":"Damage caused when an entity contacts a block such as a Cactus.","description":"Damage caused when an entity contacts a block such as a Cactus. <p> Damage: 1 (Cactus) /\n        CONTACT,\n        /** Damage caused when an entity attacks another entity. <p> Damage: variable /\n        ENTITY_ATTACK,\n        /** Damage caused when attacked by a projectile. <p> Damage: variable /\n        PROJECTILE,\n        /** Damage caused by being put in a block <p> Damage: 1 /\n        SUFFOCATION,\n        /** Damage caused when an entity falls a distance greater than 3 blocks <p> Damage: fall height - 3.0 /\n        FALL,\n        /** Damage caused by direct exposure to fire <p> Damage: 1 /\n        FIRE,\n        /** Damage caused due to burns caused by fire <p> Damage: 1 /\n        FIRE_TICK,\n        /** Damage caused due to a snowman melting <p> Damage: 1 /\n        MELTING,\n        /** Damage caused by direct exposure to lava <p> Damage: 4 /\n        LAVA,\n        /** Damage caused by running out of air while in water <p> Damage: 2 /\n        DROWNING,\n        /** Damage caused by being in the area when a block explodes. <p> Damage: variable /\n        BLOCK_EXPLOSION,\n        /** Damage caused by being in the area when an entity, such as a Creeper, explodes. <p> Damage: variable /\n        ENTITY_EXPLOSION,\n        /** Damage caused by falling into the void <p> Damage: 4 for players /\n        VOID,\n        /** Damage caused by being struck by lightning <p> Damage: 5 /\n        LIGHTNING,\n        /** Damage caused by committing suicide using the command \"/kill\" <p> Damage: 1000 /\n        SUICIDE,\n        /** Damage caused by starving due to having an empty hunger bar <p> Damage: 1 /\n        STARVATION,\n        /** Damage caused due to an ongoing poison effect <p> Damage: 1 /\n        POISON,\n        /** Damage caused by being hit by a damage potion or spell <p> Damage: variable /\n        MAGIC,\n        /** Damage caused by Wither potion effect /\n        WITHER,\n        /** Damage caused by being hit by a falling block which deals damage <p> <b>Note:</b> Not every block deals damage <p> Damage: variable /\n        FALLING_BLOCK,\n        /** Damage caused in retaliation to another attack by the Thorns enchantment. <p> Damage: 1-4 (Thorns)","doc":{}}],"properties":[]},"io.wolfscript.event.entity.EntityBreakDoorEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when an {@link io.wolfscript.entity.Entity} breaks a door","description":"Called when an {@link io.wolfscript.entity.Entity} breaks a door <p> Cancelling the event will cause the event to be delayed","name":"EntityBreakDoorEvent","qualifiedname":"io.wolfscript.event.entity.EntityBreakDoorEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityChangeBlockEvent"],"constructors":[{"title":"EntityBreakDoorEvent constructor","description":"EntityBreakDoorEvent constructor","scope":"public","name":"EntityBreakDoorEvent","args":[{"name":"LivingEntity","type":"final","description":"LivingEntity argument"},{"name":"Block","type":"final","description":"Block argument"}]}],"methods":[],"imports":["io.wolfscript.Material","io.wolfscript.block.Block","io.wolfscript.entity.Entity","io.wolfscript.entity.LivingEntity"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.LivingEntity","scope":"public","title":"Entity property"}]},"io.wolfscript.event.entity.EntityChangeBlockEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when any Entity, excluding players, changes a block.","description":"Called when any Entity, excluding players, changes a block.","name":"EntityChangeBlockEvent","qualifiedname":"io.wolfscript.event.entity.EntityChangeBlockEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[],"methods":[],"imports":["io.wolfscript.Material","io.wolfscript.block.Block","io.wolfscript.entity.Entity","io.wolfscript.entity.LivingEntity","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Data","modifier":"readonly","args":[],"deprecated":true,"description":"Data property","doc":{"param":["what the LivingEntity causing the change","block the block (before the change)","to the future material being changed to","what the Entity causing the change","block the block (before the change)","to the future material being changed to","data the future block data"],"deprecated":["Provided as a backward compatibility before the data byte was provided, and type increased to all entities /\n    @Deprecated\n    public EntityChangeBlockEvent(final LivingEntity what, final Block block, final Material to) {\n        this (what, block, to, (byte) 0);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public EntityChangeBlockEvent(final Entity what, final Block block, final Material to, final byte data) {\n        super(what);\n        this.block = block;\n        this.cancel = false;\n        this.to = to;\n        this.data = data;\n    }\n\n    /** Gets the block the entity is changing","Magic value"],"return":["the block that is changing /\n    public Block getBlock() {\n        return block;\n    }\n\n    public boolean isCancelled() {\n        return cancel;\n    }\n\n    public void setCancelled(boolean cancel) {\n        this.cancel = cancel;\n    }\n\n    /** Gets the Material that the block is changing into","the material that the block is changing into /\n    public Material getTo() {\n        return to;\n    }\n\n    /** Gets the data for the block that would be changed into","the data for the block that would be changed into"]},"return":"byte","scope":"public","title":"Data property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.entity.EntityCombustByBlockEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when a block causes an entity to combust.","description":"Called when a block causes an entity to combust.","name":"EntityCombustByBlockEvent","qualifiedname":"io.wolfscript.event.entity.EntityCombustByBlockEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityCombustEvent"],"constructors":[{"title":"EntityCombustByBlockEvent constructor","description":"EntityCombustByBlockEvent constructor","scope":"public","name":"EntityCombustByBlockEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"Entity","type":"final","description":"Entity argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.entity.Entity"],"properties":[{"name":"Combuster","modifier":"readonly","args":[],"description":"Get: The combuster can be lava or a block that is on fire. <p> WARNING: block may be null.","doc":{"return":["the Block that set the combustee alight."]},"return":"io.wolfscript.block.Block","scope":"public","title":"Get: The combuster can be lava or a block that is on fire."}]},"io.wolfscript.event.entity.EntityCombustByEntityEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when an entity causes another entity to combust.","description":"Called when an entity causes another entity to combust.","name":"EntityCombustByEntityEvent","qualifiedname":"io.wolfscript.event.entity.EntityCombustByEntityEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityCombustEvent"],"constructors":[{"title":"EntityCombustByEntityEvent constructor","description":"EntityCombustByEntityEvent constructor","scope":"public","name":"EntityCombustByEntityEvent","args":[{"name":"Entity","type":"final","description":"Entity argument"},{"name":"Entity","type":"final","description":"Entity argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Entity"],"properties":[{"name":"Combuster","modifier":"readonly","args":[],"description":"Get: Get the entity that caused the combustion event.","doc":{"return":["the Entity that set the combustee alight."]},"return":"io.wolfscript.entity.Entity","scope":"public","title":"Get: Get the entity that caused the combustion event."}]},"io.wolfscript.event.entity.EntityCombustEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when an entity combusts.","description":"Called when an entity combusts. <p> If an Entity Combust event is cancelled, the entity will not combust.","name":"EntityCombustEvent","qualifiedname":"io.wolfscript.event.entity.EntityCombustEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"EntityCombustEvent constructor","description":"EntityCombustEvent constructor","scope":"public","name":"EntityCombustEvent","args":[{"name":"Entity","type":"final","description":"Entity argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Entity","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Duration","modifier":"writeonly","args":[{"name":"duration","type":"int","description":"the time in seconds to be alight for."}],"description":"Duration property","doc":{"return":["the amount of time (in seconds) the combustee should be alight for /\n    public int getDuration() {\n        return duration;\n    }\n\n    /** The number of seconds the combustee should be alight for. <p> This value will only ever increase the combustion time, not decrease existing combustion times."]},"return":"void","scope":"public","title":"Duration property"}]},"io.wolfscript.event.entity.EntityCreatePortalEvent":{"namespace":"io.wolfscript.event.entity","title":"Thrown when a Living Entity creates a portal in a world.","description":"Thrown when a Living Entity creates a portal in a world.","name":"EntityCreatePortalEvent","qualifiedname":"io.wolfscript.event.entity.EntityCreatePortalEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"EntityCreatePortalEvent constructor","description":"EntityCreatePortalEvent constructor","scope":"public","name":"EntityCreatePortalEvent","args":[{"name":"LivingEntity","type":"final","description":"LivingEntity argument"},{"name":"List","type":"final","description":"List argument"},{"name":"PortalType","type":"final","description":"PortalType argument"}]}],"methods":[],"imports":["java.util.List","io.wolfscript.PortalType","io.wolfscript.block.BlockState","io.wolfscript.entity.LivingEntity","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.LivingEntity","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"PortalType","modifier":"readonly","args":[],"description":"Get: Gets a list of all blocks associated with the portal.","doc":{"return":["List of blocks that will be changed. /\n    public List<BlockState> getBlocks() {\n        return blocks;\n    }\n\n    public boolean isCancelled() {\n        return cancelled;\n    }\n\n    public void setCancelled(boolean cancel) {\n        this.cancelled = cancel;\n    }\n\n    /** Gets the type of portal that is trying to be created.","Type of portal."]},"return":"io.wolfscript.PortalType","scope":"public","title":"Get: Gets a list of all blocks associated with the portal."}]},"io.wolfscript.event.entity.EntityDamageByBlockEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when an entity is damaged by a block","description":"Called when an entity is damaged by a block","name":"EntityDamageByBlockEvent","qualifiedname":"io.wolfscript.event.entity.EntityDamageByBlockEvent","type":"class","scope":"public","extends":["EntityDamageEvent"],"constructors":[{"title":"EntityDamageByBlockEvent constructor","description":"EntityDamageByBlockEvent constructor","scope":"public","name":"EntityDamageByBlockEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"Entity","type":"final","description":"Entity argument"},{"name":"DamageCause","type":"final","description":"DamageCause argument"},{"name":"int","type":"final","description":"int argument"}]},{"title":"EntityDamageByBlockEvent constructor","description":"EntityDamageByBlockEvent constructor","scope":"public","name":"EntityDamageByBlockEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"Entity","type":"final","description":"Entity argument"},{"name":"DamageCause","type":"final","description":"DamageCause argument"},{"name":"double","type":"final","description":"double argument"}]},{"title":"EntityDamageByBlockEvent constructor","description":"EntityDamageByBlockEvent constructor","scope":"public","name":"EntityDamageByBlockEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"Entity","type":"final","description":"Entity argument"},{"name":"DamageCause","type":"final","description":"DamageCause argument"},{"name":"Map","type":"final","description":"Map argument"},{"name":"Map","type":"final","description":"Map argument"},{"name":"Function","type":"extends","description":"Function argument"}]}],"methods":[],"imports":["java.util.Map","com.google.common.base.Function","io.wolfscript.block.Block","io.wolfscript.entity.Entity"],"properties":[{"name":"Damager","modifier":"readonly","args":[],"description":"Get: Returns the block that damaged the player.","doc":{"return":["Block that damaged the player"]},"return":"io.wolfscript.block.Block","scope":"public","title":"Get: Returns the block that damaged the player."}]},"io.wolfscript.event.entity.EntityDamageByEntityEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when an entity is damaged by an entity","description":"Called when an entity is damaged by an entity","name":"EntityDamageByEntityEvent","qualifiedname":"io.wolfscript.event.entity.EntityDamageByEntityEvent","type":"class","scope":"public","extends":["EntityDamageEvent"],"constructors":[{"title":"EntityDamageByEntityEvent constructor","description":"EntityDamageByEntityEvent constructor","scope":"public","name":"EntityDamageByEntityEvent","args":[{"name":"Entity","type":"final","description":"Entity argument"},{"name":"Entity","type":"final","description":"Entity argument"},{"name":"DamageCause","type":"final","description":"DamageCause argument"},{"name":"int","type":"final","description":"int argument"}]},{"title":"EntityDamageByEntityEvent constructor","description":"EntityDamageByEntityEvent constructor","scope":"public","name":"EntityDamageByEntityEvent","args":[{"name":"Entity","type":"final","description":"Entity argument"},{"name":"Entity","type":"final","description":"Entity argument"},{"name":"DamageCause","type":"final","description":"DamageCause argument"},{"name":"double","type":"final","description":"double argument"}]},{"title":"EntityDamageByEntityEvent constructor","description":"EntityDamageByEntityEvent constructor","scope":"public","name":"EntityDamageByEntityEvent","args":[{"name":"Entity","type":"final","description":"Entity argument"},{"name":"Entity","type":"final","description":"Entity argument"},{"name":"DamageCause","type":"final","description":"DamageCause argument"},{"name":"Map","type":"final","description":"Map argument"},{"name":"Map","type":"final","description":"Map argument"},{"name":"Function","type":"extends","description":"Function argument"}]}],"methods":[],"imports":["java.util.Map","com.google.common.base.Function","io.wolfscript.entity.Entity"],"properties":[{"name":"Damager","modifier":"readonly","args":[],"description":"Get: Returns the entity that damaged the defender.","doc":{"return":["Entity that damaged the defender."]},"return":"io.wolfscript.entity.Entity","scope":"public","title":"Get: Returns the entity that damaged the defender."}]},"io.wolfscript.event.entity.EntityDeathEvent":{"namespace":"io.wolfscript.event.entity","title":"Thrown whenever a LivingEntity dies","description":"Thrown whenever a LivingEntity dies","name":"EntityDeathEvent","qualifiedname":"io.wolfscript.event.entity.EntityDeathEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"constructors":[{"title":"EntityDeathEvent constructor","description":"EntityDeathEvent constructor","scope":"public","name":"EntityDeathEvent","args":[{"name":"LivingEntity","type":"final","description":"LivingEntity argument"},{"name":"List","type":"final","description":"List argument"}]},{"title":"EntityDeathEvent constructor","description":"EntityDeathEvent constructor","scope":"public","name":"EntityDeathEvent","args":[{"name":"LivingEntity","type":"final","description":"LivingEntity argument"},{"name":"List","type":"final","description":"List argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[],"imports":["java.util.List","io.wolfscript.entity.LivingEntity","io.wolfscript.event.HandlerList","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"Drops","modifier":"readonly","args":[],"description":"Get: Gets how much EXP should be dropped from this death. <p> This does not indicate how much EXP should be taken from the entity in question, merely how much should be created after its death.","doc":{"return":["Amount of EXP to drop. /\n    public int getDroppedExp() {\n        return dropExp;\n    }\n\n    /** Sets how much EXP should be dropped from this death. <p> This does not indicate how much EXP should be taken from the entity in question, merely how much should be created after its death.","Items to drop when the entity dies"],"param":["exp Amount of EXP to drop. /\n    public void setDroppedExp(int exp) {\n        this.dropExp = exp;\n    }\n\n    /** Gets all the items which will drop when the entity dies"]},"return":"List<ItemStack>","scope":"public","title":"Get: Gets how much EXP should be dropped from this death."},{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.LivingEntity","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.entity.EntityEvent":{"namespace":"io.wolfscript.event.entity","title":"Represents an Entity-related event","description":"Represents an Entity-related event","name":"EntityEvent","qualifiedname":"io.wolfscript.event.entity.EntityEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.Event"],"constructors":[{"title":"EntityEvent constructor","description":"EntityEvent constructor","scope":"public","name":"EntityEvent","args":[{"name":"Entity","type":"final","description":"Entity argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.EntityType","io.wolfscript.event.Event"],"properties":[{"name":"EntityType","modifier":"readonly","args":[],"description":"Get: Returns the Entity involved in this event","doc":{"return":["Entity who is involved in this event /\n    public Entity getEntity() {\n        return entity;\n    }\n\n    /** Gets the EntityType of the Entity involved in this event.","EntityType of the Entity involved in this event"]},"return":"io.wolfscript.entity.EntityType","scope":"public","title":"Get: Returns the Entity involved in this event"}]},"io.wolfscript.event.entity.EntityExplodeEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when an entity explodes","description":"Called when an entity explodes","name":"EntityExplodeEvent","qualifiedname":"io.wolfscript.event.entity.EntityExplodeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"EntityExplodeEvent constructor","description":"EntityExplodeEvent constructor","scope":"public","name":"EntityExplodeEvent","args":[{"name":"Entity","type":"final","description":"Entity argument"},{"name":"Location","type":"final","description":"Location argument"},{"name":"List","type":"final","description":"List argument"},{"name":"float","type":"final","description":"float argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.Location","io.wolfscript.block.Block","io.wolfscript.entity.Entity","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","java.util.List"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Yield","modifier":"writeonly","args":[{"name":"yield","type":"float","description":"The new yield percentage"}],"description":"Set: Returns the list of blocks that would have been removed or were removed from the explosion event.","doc":{"return":["All blown-up blocks /\n    public List<Block> blockList() {\n        return blocks;\n    }\n\n    /** Returns the location where the explosion happened. <p> It is not possible to get this value from the Entity as the Entity no longer exists in the world.","The location of the explosion /\n    public Location getLocation() {\n        return location;\n    }\n\n    /** Returns the percentage of blocks to drop from this explosion","The yield. /\n    public float getYield() {\n        return yield;\n    }\n\n    /** Sets the percentage of blocks to drop from this explosion"]},"return":"void","scope":"public","title":"Set: Returns the list of blocks that would have been removed or were removed"}]},"io.wolfscript.event.entity.EntityInteractEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when an entity interacts with an object","description":"Called when an entity interacts with an object","name":"EntityInteractEvent","qualifiedname":"io.wolfscript.event.entity.EntityInteractEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"EntityInteractEvent constructor","description":"EntityInteractEvent constructor","scope":"public","name":"EntityInteractEvent","args":[{"name":"Entity","type":"final","description":"Entity argument"},{"name":"Block","type":"final","description":"Block argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.entity.Entity","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Block","modifier":"readonly","args":[],"description":"Get: Returns the involved block","doc":{"return":["the block clicked with this item."]},"return":"io.wolfscript.block.Block","scope":"public","title":"Get: Returns the involved block"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.entity.EntityPortalEnterEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when an entity comes into contact with a portal","description":"Called when an entity comes into contact with a portal","name":"EntityPortalEnterEvent","qualifiedname":"io.wolfscript.event.entity.EntityPortalEnterEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"constructors":[{"title":"EntityPortalEnterEvent constructor","description":"EntityPortalEnterEvent constructor","scope":"public","name":"EntityPortalEnterEvent","args":[{"name":"Entity","type":"final","description":"Entity argument"},{"name":"Location","type":"final","description":"Location argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Entity","io.wolfscript.Location","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Location","modifier":"readonly","args":[],"description":"Get: Gets the portal block the entity is touching","doc":{"return":["The portal block the entity is touching"]},"return":"io.wolfscript.Location","scope":"public","title":"Get: Gets the portal block the entity is touching"}]},"io.wolfscript.event.entity.EntityPortalEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when a non-player entity is about to teleport because it is in","description":"Called when a non-player entity is about to teleport because it is in contact with a portal. <p> For players see {@link io.wolfscript.event.player.PlayerPortalEvent}","name":"EntityPortalEvent","qualifiedname":"io.wolfscript.event.entity.EntityPortalEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityTeleportEvent"],"constructors":[{"title":"EntityPortalEvent constructor","description":"EntityPortalEvent constructor","scope":"public","name":"EntityPortalEvent","args":[{"name":"Entity","type":"final","description":"Entity argument"},{"name":"Location","type":"final","description":"Location argument"},{"name":"Location","type":"final","description":"Location argument"},{"name":"TravelAgent","type":"final","description":"TravelAgent argument"}]}],"methods":[],"imports":["io.wolfscript.Location","io.wolfscript.TravelAgent","io.wolfscript.entity.Entity","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"PortalTravelAgent","modifier":"writeonly","args":[{"name":"travelAgent","type":"io.wolfscript.TravelAgent","description":"the Travel Agent used (or not) in this event"}],"description":"Set: Sets whether or not the Travel Agent will be used. <p> If this is set to true, the TravelAgent will try to find a Portal at the {@link #getTo()} Location, and will try to create one if there is none. <p> If this is set to false, the {@link #getEntity()} will only be teleported to the {@link #getTo()} Location.","doc":{"return":["whether to use the Travel Agent /\n    public boolean useTravelAgent() {\n        return useTravelAgent;\n    }\n\n    /** Gets the Travel Agent used (or not) in this event.","the Travel Agent used (or not) in this event /\n    public TravelAgent getPortalTravelAgent() {\n        return this.travelAgent;\n    }\n\n    /** Sets the Travel Agent used (or not) in this event."]},"return":"void","scope":"public","title":"Set: Sets whether or not the Travel Agent will be used."}]},"io.wolfscript.event.entity.EntityPortalExitEvent":{"namespace":"io.wolfscript.event.entity","title":"Called before an entity exits a portal.","description":"Called before an entity exits a portal. <p> This event allows you to modify the velocity of the entity after they have successfully exited the portal.","name":"EntityPortalExitEvent","qualifiedname":"io.wolfscript.event.entity.EntityPortalExitEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityTeleportEvent"],"constructors":[{"title":"EntityPortalExitEvent constructor","description":"EntityPortalExitEvent constructor","scope":"public","name":"EntityPortalExitEvent","args":[{"name":"Entity","type":"final","description":"Entity argument"},{"name":"Location","type":"final","description":"Location argument"},{"name":"Location","type":"final","description":"Location argument"},{"name":"Vector","type":"final","description":"Vector argument"},{"name":"Vector","type":"final","description":"Vector argument"}]}],"methods":[],"imports":["io.wolfscript.Location","io.wolfscript.entity.Entity","io.wolfscript.event.HandlerList","io.wolfscript.util.Vector"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"After","modifier":"writeonly","args":[{"name":"after","type":"io.wolfscript.util.Vector","description":"the velocity after exiting the portal"}],"description":"Set: Gets a copy of the velocity that the entity has before entering the portal.","doc":{"return":["velocity of entity before entering the portal /\n    public Vector getBefore() {\n        return this.before.clone();\n    }\n\n    /** Gets a copy of the velocity that the entity will have after exiting the portal.","velocity of entity after exiting the portal /\n    public Vector getAfter() {\n        return this.after.clone();\n    }\n\n    /** Sets the velocity that the entity will have after exiting the portal."]},"return":"void","scope":"public","title":"Set: Gets a copy of the velocity that the entity has before entering the"}]},"io.wolfscript.event.entity.EntityShootBowEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when a LivingEntity shoots a bow firing an arrow","description":"Called when a LivingEntity shoots a bow firing an arrow","name":"EntityShootBowEvent","qualifiedname":"io.wolfscript.event.entity.EntityShootBowEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"EntityShootBowEvent constructor","description":"EntityShootBowEvent constructor","scope":"public","name":"EntityShootBowEvent","args":[{"name":"LivingEntity","type":"final","description":"LivingEntity argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"},{"name":"Projectile","type":"final","description":"Projectile argument"},{"name":"float","type":"final","description":"float argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.LivingEntity","io.wolfscript.entity.Projectile","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.LivingEntity","scope":"public","title":"Entity property"},{"name":"Force","modifier":"readonly","args":[],"description":"Get: Gets the bow ItemStack used to fire the arrow.","doc":{"return":["the bow involved in this event /\n    public ItemStack getBow() {\n        return bow;\n    }\n\n    /** Gets the projectile which will be launched by this event","the launched projectile /\n    public Entity getProjectile() {\n        return projectile;\n    }\n\n    /** Replaces the projectile which will be launched","bow shooting force, up to 1.0"],"param":["projectile the new projectile /\n    public void setProjectile(Entity projectile) {\n        this.projectile = projectile;\n    }\n\n    /** Gets the force the arrow was launched with"]},"return":"float","scope":"public","title":"Get: Gets the bow ItemStack used to fire the arrow."},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.entity.EntityTameEvent":{"namespace":"io.wolfscript.event.entity","title":"Thrown when a LivingEntity is tamed","description":"Thrown when a LivingEntity is tamed","name":"EntityTameEvent","qualifiedname":"io.wolfscript.event.entity.EntityTameEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"EntityTameEvent constructor","description":"EntityTameEvent constructor","scope":"public","name":"EntityTameEvent","args":[{"name":"LivingEntity","type":"final","description":"LivingEntity argument"},{"name":"AnimalTamer","type":"final","description":"AnimalTamer argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.AnimalTamer","io.wolfscript.entity.LivingEntity","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.LivingEntity","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Owner","modifier":"readonly","args":[],"description":"Get: Gets the owning AnimalTamer","doc":{"return":["the owning AnimalTamer"]},"return":"io.wolfscript.entity.AnimalTamer","scope":"public","title":"Get: Gets the owning AnimalTamer"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.entity.EntityTeleportEvent":{"namespace":"io.wolfscript.event.entity","title":"Thrown when a non-player entity (such as an Enderman) tries to teleport","description":"Thrown when a non-player entity (such as an Enderman) tries to teleport from one location to another.","name":"EntityTeleportEvent","qualifiedname":"io.wolfscript.event.entity.EntityTeleportEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"EntityTeleportEvent constructor","description":"EntityTeleportEvent constructor","scope":"public","name":"EntityTeleportEvent","args":[{"name":"what","type":"io.wolfscript.entity.Entity","description":"what argument"},{"name":"from","type":"io.wolfscript.Location","description":"from argument"},{"name":"to","type":"io.wolfscript.Location","description":"to argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.Location","io.wolfscript.entity.Entity","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"To","modifier":"writeonly","args":[{"name":"to","type":"io.wolfscript.Location","description":"New Location this entity moved to"}],"description":"Set: Gets the location that this entity moved from","doc":{"return":["Location this entity moved from /\n    public Location getFrom() {\n        return from;\n    }\n\n    /** Sets the location that this entity moved from","Location the entity moved to /\n    public Location getTo() {\n        return to;\n    }\n\n    /** Sets the location that this entity moved to"]},"return":"void","scope":"public","title":"Set: Gets the location that this entity moved from"}]},"io.wolfscript.event.entity.EntityUnleashEvent":{"namespace":"io.wolfscript.event.entity","title":"Called immediately prior to an entity being unleashed.","description":"Called immediately prior to an entity being unleashed.","name":"EntityUnleashEvent","qualifiedname":"io.wolfscript.event.entity.EntityUnleashEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"constructors":[{"title":"EntityUnleashEvent constructor","description":"EntityUnleashEvent constructor","scope":"public","name":"EntityUnleashEvent","args":[{"name":"entity","type":"io.wolfscript.entity.Entity","description":"entity argument"},{"name":"reason","type":"UnleashReason","description":"reason argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Entity","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Reason","modifier":"readonly","args":[],"description":"Get: Returns the reason for the unleashing.","doc":{"return":["The reason"]},"return":"UnleashReason","scope":"public","title":"Get: Returns the reason for the unleashing."}]},"io.wolfscript.event.entity.ExpBottleEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when a ThrownExpBottle hits and releases experience.","description":"Called when a ThrownExpBottle hits and releases experience.","name":"ExpBottleEvent","qualifiedname":"io.wolfscript.event.entity.ExpBottleEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.ProjectileHitEvent"],"constructors":[{"title":"ExpBottleEvent constructor","description":"ExpBottleEvent constructor","scope":"public","name":"ExpBottleEvent","args":[{"name":"ThrownExpBottle","type":"final","description":"ThrownExpBottle argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[],"imports":["io.wolfscript.entity.ThrownExpBottle","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.ThrownExpBottle","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Experience","modifier":"writeonly","args":[{"name":"int","type":"final","description":"int argument"}],"description":"Set: This method indicates if the particle effect should be shown.","doc":{"return":["true if the effect will be shown, false otherwise /\n    public boolean getShowEffect() {\n        return this.showEffect;\n    }\n\n    /** This method sets if the particle effect will be shown. <p> This does not change the experience created.","the total amount of experience to be created /\n    public int getExperience() {\n        return exp;\n    }\n\n    /** This method sets the amount of experience to be created. <p> The number indicates a total amount to be divided into orbs."]},"return":"void","scope":"public","title":"Set: This method indicates if the particle effect should be shown."}]},"io.wolfscript.event.entity.ExplosionPrimeEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when an entity has made a decision to explode.","description":"Called when an entity has made a decision to explode.","name":"ExplosionPrimeEvent","qualifiedname":"io.wolfscript.event.entity.ExplosionPrimeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"ExplosionPrimeEvent constructor","description":"ExplosionPrimeEvent constructor","scope":"public","name":"ExplosionPrimeEvent","args":[{"name":"Entity","type":"final","description":"Entity argument"},{"name":"float","type":"final","description":"float argument"},{"name":"boolean","type":"final","description":"boolean argument"}]},{"title":"ExplosionPrimeEvent constructor","description":"ExplosionPrimeEvent constructor","scope":"public","name":"ExplosionPrimeEvent","args":[{"name":"Explosive","type":"final","description":"Explosive argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.Explosive","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Fire","modifier":"writeonly","args":[{"name":"fire","type":"boolean","description":"true if you want this explosion to create fire"}],"description":"Set: Gets the radius of the explosion","doc":{"return":["returns the radius of the explosion /\n    public float getRadius() {\n        return radius;\n    }\n\n    /** Sets the radius of the explosion","true if this explosion will create fire /\n    public boolean getFire() {\n        return fire;\n    }\n\n    /** Sets whether this explosion will create fire or not"]},"return":"void","scope":"public","title":"Set: Gets the radius of the explosion"}]},"io.wolfscript.event.entity.FoodLevelChangeEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when a human entity's food level changes","description":"Called when a human entity's food level changes","name":"FoodLevelChangeEvent","qualifiedname":"io.wolfscript.event.entity.FoodLevelChangeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"FoodLevelChangeEvent constructor","description":"FoodLevelChangeEvent constructor","scope":"public","name":"FoodLevelChangeEvent","args":[{"name":"HumanEntity","type":"final","description":"HumanEntity argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.HumanEntity","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.HumanEntity","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"FoodLevel","modifier":"writeonly","args":[{"name":"level","type":"int","description":"the resultant food level that the entity involved in this event should be set to"}],"description":"Set: Gets the resultant food level that the entity involved in this event should be set to. <p> Where 20 is a full food bar and 0 is an empty one.","doc":{"return":["The resultant food level /\n    public int getFoodLevel() {\n        return level;\n    }\n\n    /** Sets the resultant food level that the entity involved in this event should be set to"]},"return":"void","scope":"public","title":"Set: Gets the resultant food level that the entity involved in this event"}]},"io.wolfscript.event.entity.HorseJumpEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when a horse jumps.","description":"Called when a horse jumps.","name":"HorseJumpEvent","qualifiedname":"io.wolfscript.event.entity.HorseJumpEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"HorseJumpEvent constructor","description":"HorseJumpEvent constructor","scope":"public","name":"HorseJumpEvent","args":[{"name":"Horse","type":"final","description":"Horse argument"},{"name":"float","type":"final","description":"float argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Horse","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.Horse","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Power","modifier":"writeonly","args":[{"name":"power","type":"float","description":"power of the jump"}],"description":"Set: Gets the power of the jump. <p> Power is a value that defines how much of the horse's jump strength should be used for the jump. Power is effectively multiplied times the horse's jump strength to determine how high the jump is; 0 represents no jump strength while 1 represents full jump strength. Setting power to a value above 1 will use additional jump strength that the horse does not usually have. <p> Power does not affect how high the horse is capable of jumping, only how much of its jumping capability will be used in this jump. To set the horse's overall jump strength, see {@link Horse#setJumpStrength(double)}.","doc":{"return":["jump strength /\n    public float getPower() {\n        return power;\n    }\n\n    /** Sets the power of the jump. <p> Jump power can be set to a value above 1.0 which will increase the strength of this jump above the horse's actual jump strength. <p> Setting the jump power to 0 will result in the jump animation still playing, but the horse not leaving the ground. Only canceling this event will result in no jump animation at all."]},"return":"void","scope":"public","title":"Set: Gets the power of the jump."}]},"io.wolfscript.event.entity.ItemDespawnEvent":{"namespace":"io.wolfscript.event.entity","title":"This event is called when a {@link io.wolfscript.entity.Item} is removed from","description":"This event is called when a {@link io.wolfscript.entity.Item} is removed from the world because it has existed for 5 minutes. <p> Cancelling the event results in the item being allowed to exist for 5 more minutes. This behavior is not guaranteed and may change in future versions.","name":"ItemDespawnEvent","qualifiedname":"io.wolfscript.event.entity.ItemDespawnEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"ItemDespawnEvent constructor","description":"ItemDespawnEvent constructor","scope":"public","name":"ItemDespawnEvent","args":[{"name":"Item","type":"final","description":"Item argument"},{"name":"Location","type":"final","description":"Location argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.Location","io.wolfscript.entity.Item","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.Item","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Location","modifier":"readonly","args":[],"description":"Get: Gets the location at which the item is despawning.","doc":{"return":["The location at which the item is despawning"]},"return":"io.wolfscript.Location","scope":"public","title":"Get: Gets the location at which the item is despawning."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.entity.ItemSpawnEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when an item is spawned into a world","description":"Called when an item is spawned into a world","name":"ItemSpawnEvent","qualifiedname":"io.wolfscript.event.entity.ItemSpawnEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"ItemSpawnEvent constructor","description":"ItemSpawnEvent constructor","scope":"public","name":"ItemSpawnEvent","args":[{"name":"Item","type":"final","description":"Item argument"},{"name":"Location","type":"final","description":"Location argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Item","io.wolfscript.Location","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.Item","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Location","modifier":"readonly","args":[],"description":"Get: Gets the location at which the item is spawning.","doc":{"return":["The location at which the item is spawning"]},"return":"io.wolfscript.Location","scope":"public","title":"Get: Gets the location at which the item is spawning."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.entity.PigZapEvent":{"namespace":"io.wolfscript.event.entity","title":"Stores data for pigs being zapped","description":"Stores data for pigs being zapped","name":"PigZapEvent","qualifiedname":"io.wolfscript.event.entity.PigZapEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PigZapEvent constructor","description":"PigZapEvent constructor","scope":"public","name":"PigZapEvent","args":[{"name":"Pig","type":"final","description":"Pig argument"},{"name":"LightningStrike","type":"final","description":"LightningStrike argument"},{"name":"PigZombie","type":"final","description":"PigZombie argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.LightningStrike","io.wolfscript.entity.Pig","io.wolfscript.entity.PigZombie","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.Pig","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"PigZombie","modifier":"readonly","args":[],"description":"Get: Gets the bolt which is striking the pig.","doc":{"return":["lightning entity /\n    public LightningStrike getLightning() {\n        return bolt;\n    }\n\n    /** Gets the zombie pig that will replace the pig, provided the event is not cancelled first.","resulting entity"]},"return":"io.wolfscript.entity.PigZombie","scope":"public","title":"Get: Gets the bolt which is striking the pig."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.entity.PlayerDeathEvent":{"namespace":"io.wolfscript.event.entity","title":"Thrown whenever a {@link io.wolfscript.entity.Player} dies","description":"Thrown whenever a {@link io.wolfscript.entity.Player} dies","name":"PlayerDeathEvent","qualifiedname":"io.wolfscript.event.entity.PlayerDeathEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityDeathEvent"],"constructors":[{"title":"PlayerDeathEvent constructor","description":"PlayerDeathEvent constructor","scope":"public","name":"PlayerDeathEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"List","type":"final","description":"List argument"},{"name":"int","type":"final","description":"int argument"},{"name":"String","type":"final","description":"String argument"}]},{"title":"PlayerDeathEvent constructor","description":"PlayerDeathEvent constructor","scope":"public","name":"PlayerDeathEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"List","type":"final","description":"List argument"},{"name":"int","type":"final","description":"int argument"},{"name":"int","type":"final","description":"int argument"},{"name":"String","type":"final","description":"String argument"}]},{"title":"PlayerDeathEvent constructor","description":"PlayerDeathEvent constructor","scope":"public","name":"PlayerDeathEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"List","type":"final","description":"List argument"},{"name":"int","type":"final","description":"int argument"},{"name":"int","type":"final","description":"int argument"},{"name":"int","type":"final","description":"int argument"},{"name":"int","type":"final","description":"int argument"},{"name":"String","type":"final","description":"String argument"}]}],"methods":[],"imports":["java.util.List","io.wolfscript.entity.Player","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.Player","scope":"public","title":"Entity property"},{"name":"KeepInventory","modifier":"readonly","args":[],"description":"Get: Set the death message that will appear to everyone on the server.","doc":{"param":["deathMessage Message to appear to other players on the server. /\n    public void setDeathMessage(String deathMessage) {\n        this.deathMessage = deathMessage;\n    }\n\n    /** Get the death message that will appear to everyone on the server.","exp New EXP of the respawned player /\n    public void setNewExp(int exp) {\n        newExp = exp;\n    }\n\n    /** Gets the Level the Player should have at respawn.","level New Level of the respawned player /\n    public void setNewLevel(int level) {\n        newLevel = level;\n    }\n\n    /** Gets the Total EXP the Player should have at respawn.","totalExp New Total EXP of the respawned player /\n    public void setNewTotalExp(int totalExp) {\n        newTotalExp = totalExp;\n    }\n\n    /** Gets if the Player should keep all EXP at respawn. <p> This flag overrides other EXP settings","keepLevel True to keep all current value levels /\n    public void setKeepLevel(boolean keepLevel) {\n        this.keepLevel = keepLevel;\n    }\n\n    /** Sets if the Player keeps inventory on death.","keepInventory True to keep the inventory /\n    public void setKeepInventory(boolean keepInventory) {\n        this.keepInventory = keepInventory;\n    }\n\n    /** Gets if the Player keeps inventory on death."],"return":["Message to appear to other players on the server. /\n    public String getDeathMessage() {\n        return deathMessage;\n    }\n\n    /** Gets how much EXP the Player should have at respawn. <p> This does not indicate how much EXP should be dropped, please see {@link #getDroppedExp()} for that.","New EXP of the respawned player /\n    public int getNewExp() {\n        return newExp;\n    }\n\n    /** Sets how much EXP the Player should have at respawn. <p> This does not indicate how much EXP should be dropped, please see {@link #setDroppedExp(int)} for that.","New Level of the respawned player /\n    public int getNewLevel() {\n        return newLevel;\n    }\n\n    /** Sets the Level the Player should have at respawn.","New Total EXP of the respawned player /\n    public int getNewTotalExp() {\n        return newTotalExp;\n    }\n\n    /** Sets the Total EXP the Player should have at respawn.","True if Player should keep all pre-death exp /\n    public boolean getKeepLevel() {\n        return keepLevel;\n    }\n\n    /** Sets if the Player should keep all EXP at respawn. <p> This overrides all other EXP settings <p> This doesn't prevent prevent the EXP from dropping. {@link #setDroppedExp(int)} should be used stop the EXP from dropping.","True if the player keeps inventory on death"]},"return":"boolean","scope":"public","title":"Get: Set the death message that will appear to everyone on the server."}]},"io.wolfscript.event.entity.PlayerLeashEntityEvent":{"namespace":"io.wolfscript.event.entity","title":"Called immediately prior to a creature being leashed by a player.","description":"Called immediately prior to a creature being leashed by a player.","name":"PlayerLeashEntityEvent","qualifiedname":"io.wolfscript.event.entity.PlayerLeashEntityEvent","type":"class","scope":"public","extends":["io.wolfscript.event.Event"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerLeashEntityEvent constructor","description":"PlayerLeashEntityEvent constructor","scope":"public","name":"PlayerLeashEntityEvent","args":[{"name":"what","type":"io.wolfscript.entity.Entity","description":"what argument"},{"name":"leashHolder","type":"io.wolfscript.entity.Entity","description":"leashHolder argument"},{"name":"leasher","type":"io.wolfscript.entity.Player","description":"leasher argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.Event","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Player","modifier":"readonly","args":[],"describe":"final","description":"Get: Returns the entity that is holding the leash.","doc":{"return":["The leash holder /\n    public Entity getLeashHolder() {\n        return leashHolder;\n    }\n\n    /** Returns the entity being leashed.","The entity /\n    public Entity getEntity() {\n        return entity;\n    }\n\n    /** Returns the player involved in this event","Player who is involved in this event"]},"return":"io.wolfscript.entity.Player","scope":"public","title":"Get: Returns the entity that is holding the leash."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.entity.PotionSplashEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when a splash potion hits an area","description":"Called when a splash potion hits an area","name":"PotionSplashEvent","qualifiedname":"io.wolfscript.event.entity.PotionSplashEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.ProjectileHitEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PotionSplashEvent constructor","description":"PotionSplashEvent constructor","scope":"public","name":"PotionSplashEvent","args":[{"name":"ThrownPotion","type":"final","description":"ThrownPotion argument"},{"name":"Map","type":"final","description":"Map argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]},{"title":"Gets the potion which caused this event","description":"Gets the potion which caused this event","doc":{"return":["The thrown potion entity /\n    public ThrownPotion getPotion() {\n        return (ThrownPotion) getEntity();\n    }\n\n    /** Retrieves a list of all effected entities","A fresh copy of the affected entity list /\n    public Collection<LivingEntity> getAffectedEntities() {\n        return new ArrayList<LivingEntity>(affectedEntities.keySet());\n    }\n\n    /** Gets the intensity of the potion's effects for given entity; This depends on the distance to the impact center","intensity relative to maximum effect; 0.0: not affected; 1.0: fully hit by potion effects /\n    public double getIntensity(LivingEntity entity) {\n        Double intensity = affectedEntities.get(entity);\n        return intensity != null ? intensity : 0.0;\n    }\n\n    /** Overwrites the intensity for a given entity"]},"scope":"public","return":"void","name":"setIntensity","args":[{"name":"entity","type":"io.wolfscript.entity.LivingEntity","description":"Which entity to get intensity for"},{"name":"intensity","type":"double","description":"relative to maximum effect"}]}],"imports":["java.util.ArrayList","java.util.Collection","java.util.Map","org.apache.commons.lang.Validate","io.wolfscript.entity.LivingEntity","io.wolfscript.entity.ThrownPotion","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.ThrownPotion","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.entity.PowerCause":{"namespace":"io.wolfscript.event.entity","title":"Called when a Creeper is struck by lightning.","description":"Called when a Creeper is struck by lightning. <p> If a Creeper Power event is cancelled, the Creeper will not be powered. /\npublic class CreeperPowerEvent extends EntityEvent implements Cancellable {\n    private static final HandlerList handlers = new HandlerList();\n    private boolean canceled;\n    private final PowerCause cause;\n    private LightningStrike bolt;\n\n    public CreeperPowerEvent(final Creeper creeper, final LightningStrike bolt, final PowerCause cause) {\n        this(creeper, cause);\n        this.bolt = bolt;\n    }\n\n    public CreeperPowerEvent(final Creeper creeper, final PowerCause cause) {\n        super(creeper);\n        this.cause = cause;\n    }\n\n    public boolean isCancelled() {\n        return canceled;\n    }\n\n    public void setCancelled(boolean cancel) {\n        canceled = cancel;\n    }\n\n    @Override\n    public Creeper getEntity() {\n        return (Creeper) entity;\n    }\n\n    /** Gets the lightning bolt which is striking the Creeper.","doc":{"return":["The Entity for the lightning bolt which is striking the Creeper /\n    public LightningStrike getLightning() {\n        return bolt;\n    }\n\n    /** Gets the cause of the creeper being (un)powered.","A PowerCause value detailing the cause of change in power. /\n    public PowerCause getCause() {\n        return cause;\n    }\n\n    @Override\n    public HandlerList getHandlers() {\n        return handlers;\n    }\n\n    public static HandlerList getHandlerList() {\n        return handlers;\n    }\n\n    /** An enum to specify the cause of the change in power"]},"name":"PowerCause","qualifiedname":"io.wolfscript.event.entity.PowerCause","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.entity.Creeper","io.wolfscript.entity.LightningStrike","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"enum":[{"code":"SET_ON","value":"","title":"Power change caused by a lightning bolt","description":"Power change caused by a lightning bolt <p> Powered state: true /\n        LIGHTNING,\n        /** Power change caused by something else (probably a plugin) <p> Powered state: true","doc":{}}],"properties":[]},"io.wolfscript.event.entity.ProjectileHitEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when a projectile hits an object","description":"Called when a projectile hits an object","name":"ProjectileHitEvent","qualifiedname":"io.wolfscript.event.entity.ProjectileHitEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"constructors":[{"title":"ProjectileHitEvent constructor","description":"ProjectileHitEvent constructor","scope":"public","name":"ProjectileHitEvent","args":[{"name":"Projectile","type":"final","description":"Projectile argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Projectile","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.Projectile","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.entity.ProjectileLaunchEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when a projectile is launched.","description":"Called when a projectile is launched.","name":"ProjectileLaunchEvent","qualifiedname":"io.wolfscript.event.entity.ProjectileLaunchEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"ProjectileLaunchEvent constructor","description":"ProjectileLaunchEvent constructor","scope":"public","name":"ProjectileLaunchEvent","args":[{"name":"what","type":"io.wolfscript.entity.Entity","description":"what argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.Projectile","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.Projectile","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.entity.RegainReason":{"namespace":"io.wolfscript.event.entity","title":"Stores data for health-regain events","description":"Stores data for health-regain events /\npublic class EntityRegainHealthEvent extends EntityEvent implements Cancellable {\n    private static final HandlerList handlers = new HandlerList();\n    private boolean cancelled;\n    private double amount;\n    private final RegainReason regainReason;\n\n    @Deprecated\n    public EntityRegainHealthEvent(final Entity entity, final int amount, final RegainReason regainReason) {\n        this(entity, (double) amount, regainReason);\n    }\n\n    public EntityRegainHealthEvent(final Entity entity, final double amount, final RegainReason regainReason) {\n        super(entity);\n        this.amount = amount;\n        this.regainReason = regainReason;\n    }\n\n    /** Gets the amount of regained health","doc":{"return":["The amount of health regained /\n    public double getAmount() {\n        return amount;\n    }\n\n    /** This method exists for legacy reasons to provide backwards compatibility. It will not exist at runtime and should not be used under any circumstances.","the (rounded) amount regained /\n    @Deprecated\n    public int _INVALID_getAmount() {\n        return NumberConversions.ceil(getAmount());\n    }\n\n    /** Sets the amount of regained health","A RegainReason detailing the reason for the entity regaining health /\n    public RegainReason getRegainReason() {\n        return regainReason;\n    }\n\n    @Override\n    public HandlerList getHandlers() {\n        return handlers;\n    }\n\n    public static HandlerList getHandlerList() {\n        return handlers;\n    }\n\n    /** An enum to specify the type of health regaining that is occurring"],"param":["amount the amount of health the entity will regain /\n    public void setAmount(double amount) {\n        this.amount = amount;\n    }\n\n    /** This method exists for legacy reasons to provide backwards compatibility. It will not exist at runtime and should not be used under any circumstances.","amount the amount that will be regained /\n    @Deprecated\n    public void _INVALID_setAmount(int amount) {\n        setAmount(amount);\n    }\n\n    @Override\n    public boolean isCancelled() {\n        return cancelled;\n    }\n\n    @Override\n    public void setCancelled(boolean cancel) {\n        cancelled = cancel;\n    }\n\n    /** Gets the reason for why the entity is regaining health"]},"name":"RegainReason","qualifiedname":"io.wolfscript.event.entity.RegainReason","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.entity.Entity","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.util.NumberConversions"],"enum":[{"code":"WITHER","value":"","title":"When a player regains health from regenerating due to Peaceful mode","description":"When a player regains health from regenerating due to Peaceful mode (difficulty=0) /\n        REGEN,\n        /** When a player regains health from regenerating due to their hunger being satisfied /\n        SATIATED,\n        /** When a player regains health from eating consumables /\n        EATING,\n        /** When an ender dragon regains health from an ender crystal /\n        ENDER_CRYSTAL,\n        /** When a player is healed by a potion or spell /\n        MAGIC,\n        /** When a player is healed over time by a potion or spell /\n        MAGIC_REGEN,\n        /** When a wither is filling its health during spawning /\n        WITHER_SPAWN,\n        /** When an entity is damaged by the Wither potion effect","doc":{}}],"properties":[]},"io.wolfscript.event.entity.SheepDyeWoolEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when a sheep's wool is dyed","description":"Called when a sheep's wool is dyed","name":"SheepDyeWoolEvent","qualifiedname":"io.wolfscript.event.entity.SheepDyeWoolEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"SheepDyeWoolEvent constructor","description":"SheepDyeWoolEvent constructor","scope":"public","name":"SheepDyeWoolEvent","args":[{"name":"Sheep","type":"final","description":"Sheep argument"},{"name":"DyeColor","type":"final","description":"DyeColor argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.DyeColor","io.wolfscript.entity.Sheep","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.Sheep","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Color","modifier":"writeonly","args":[{"name":"color","type":"io.wolfscript.DyeColor","description":"the DyeColor the sheep will be dyed"}],"description":"Set: Gets the DyeColor the sheep is being dyed","doc":{"return":["the DyeColor the sheep is being dyed /\n    public DyeColor getColor() {\n        return color;\n    }\n\n    /** Sets the DyeColor the sheep is being dyed"]},"return":"void","scope":"public","title":"Set: Gets the DyeColor the sheep is being dyed"}]},"io.wolfscript.event.entity.SheepRegrowWoolEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when a sheep regrows its wool","description":"Called when a sheep regrows its wool","name":"SheepRegrowWoolEvent","qualifiedname":"io.wolfscript.event.entity.SheepRegrowWoolEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"SheepRegrowWoolEvent constructor","description":"SheepRegrowWoolEvent constructor","scope":"public","name":"SheepRegrowWoolEvent","args":[{"name":"Sheep","type":"final","description":"Sheep argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Sheep","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.Sheep","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.entity.SlimeSplitEvent":{"namespace":"io.wolfscript.event.entity","title":"Called when a Slime splits into smaller Slimes upon death","description":"Called when a Slime splits into smaller Slimes upon death","name":"SlimeSplitEvent","qualifiedname":"io.wolfscript.event.entity.SlimeSplitEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"SlimeSplitEvent constructor","description":"SlimeSplitEvent constructor","scope":"public","name":"SlimeSplitEvent","args":[{"name":"Slime","type":"final","description":"Slime argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Slime","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.Slime","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Count","modifier":"writeonly","args":[{"name":"count","type":"int","description":"the amount of slimes to spawn"}],"description":"Set: Gets the amount of smaller slimes to spawn","doc":{"return":["the amount of slimes to spawn /\n    public int getCount() {\n        return count;\n    }\n\n    /** Sets how many smaller slimes will spawn on the split"]},"return":"void","scope":"public","title":"Set: Gets the amount of smaller slimes to spawn"}]},"io.wolfscript.event.entity.SpawnReason":{"namespace":"io.wolfscript.event.entity","title":"Called when a creature is spawned into a world.","description":"Called when a creature is spawned into a world. <p> If a Creature Spawn event is cancelled, the creature will not spawn. /\npublic class CreatureSpawnEvent extends EntityEvent implements Cancellable {\n    private static final HandlerList handlers = new HandlerList();\n    private boolean canceled;\n    private final SpawnReason spawnReason;\n\n    public CreatureSpawnEvent(final LivingEntity spawnee, final SpawnReason spawnReason) {\n        super(spawnee);\n        this.spawnReason = spawnReason;\n    }\n\n    @Deprecated\n    public CreatureSpawnEvent(Entity spawnee, CreatureType type, Location loc, SpawnReason reason) {\n        super(spawnee);\n        spawnReason = reason;\n    }\n\n    public boolean isCancelled() {\n        return canceled;\n    }\n\n    public void setCancelled(boolean cancel) {\n        canceled = cancel;\n    }\n\n    @Override\n    public LivingEntity getEntity() {\n        return (LivingEntity) entity;\n    }\n\n    /** Gets the location at which the creature is spawning.","doc":{"return":["The location at which the creature is spawning /\n    public Location getLocation() {\n        return getEntity().getLocation();\n    }\n\n    /** Gets the type of creature being spawned.","A CreatureType value detailing the type of creature being spawned","A SpawnReason value detailing the reason for the creature being spawned /\n    public SpawnReason getSpawnReason() {\n        return spawnReason;\n    }\n\n    @Override\n    public HandlerList getHandlers() {\n        return handlers;\n    }\n\n    public static HandlerList getHandlerList() {\n        return handlers;\n    }\n\n    /** An enum to specify the type of spawning"],"deprecated":["In favour of {@link #getEntityType()}. /\n    @Deprecated\n    public CreatureType getCreatureType() {\n        return CreatureType.fromEntityType(getEntityType());\n    }\n\n    /** Gets the reason for why the creature is being spawned."]},"name":"SpawnReason","qualifiedname":"io.wolfscript.event.entity.SpawnReason","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.Location","io.wolfscript.entity.CreatureType","io.wolfscript.entity.Entity","io.wolfscript.entity.LivingEntity","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"enum":[{"code":"CUSTOM","value":"","title":"When something spawns from natural means","description":"When something spawns from natural means /\n        NATURAL,\n        /** When an entity spawns as a jockey of another entity (mostly spider jockeys) /\n        JOCKEY,\n        /** When a creature spawns due to chunk generation /\n        CHUNK_GEN,\n        /** When a creature spawns from a spawner /\n        SPAWNER,\n        /** When a creature spawns from an egg /\n        EGG,\n        /** When a creature spawns from a Spawner Egg /\n        SPAWNER_EGG,\n        /** When a creature spawns because of a lightning strike /\n        LIGHTNING,\n        /** When a creature is spawned by a player that is sleeping","doc":{"deprecated":["No longer used /\n        @Deprecated\n        BED,\n        /** When a snowman is spawned by being built /\n        BUILD_SNOWMAN,\n        /** When an iron golem is spawned by being built /\n        BUILD_IRONGOLEM,\n        /** When a wither boss is spawned by being built /\n        BUILD_WITHER,\n        /** When an iron golem is spawned to defend a village /\n        VILLAGE_DEFENSE,\n        /** When a zombie is spawned to invade a village /\n        VILLAGE_INVASION,\n        /** When an animal breeds to create a child /\n        BREEDING,\n        /** When a slime splits /\n        SLIME_SPLIT,\n        /** When an entity calls for reinforcements /\n        REINFORCEMENTS,\n        /** When a creature is spawned by nether portal /\n        NETHER_PORTAL,\n        /** When a creature is spawned by a dispenser dispensing an egg /\n        DISPENSE_EGG,\n        /** When a zombie infects a villager /\n        INFECTION,\n        /** When a villager is cured from infection /\n        CURED,\n        /** When an ocelot has a baby spawned along with them /\n        OCELOT_BABY,\n        /** When a silverfish spawns from a block /\n        SILVERFISH_BLOCK,\n        /** When an entity spawns as a mount of another entity (mostly chicken jockeys) /\n        MOUNT,\n        /** When a creature is spawned by plugins"]}}],"properties":[]},"io.wolfscript.event.entity.TargetReason":{"namespace":"io.wolfscript.event.entity","title":"Called when a creature targets or untargets another entity","description":"Called when a creature targets or untargets another entity /\npublic class EntityTargetEvent extends EntityEvent implements Cancellable {\n    private static final HandlerList handlers = new HandlerList();\n    private boolean cancel = false;\n    private Entity target;\n    private final TargetReason reason;\n\n    public EntityTargetEvent(final Entity entity, final Entity target, final TargetReason reason) {\n        super(entity);\n        this.target = target;\n        this.reason = reason;\n    }\n\n    public boolean isCancelled() {\n        return cancel;\n    }\n\n    public void setCancelled(boolean cancel) {\n        this.cancel = cancel;\n    }\n\n    /** Returns the reason for the targeting","doc":{"return":["The reason /\n    public TargetReason getReason() {\n        return reason;\n    }\n\n    /** Get the entity that this is targeting. <p> This will be null in the case that the event is called when the mob forgets its target.","The entity /\n    public Entity getTarget() {\n        return target;\n    }\n\n    /** Set the entity that you want the mob to target instead. <p> It is possible to be null, null will cause the entity to be target-less. <p> This is different from cancelling the event. Cancelling the event will cause the entity to keep an original target, while setting to be null will cause the entity to be reset."],"param":["target The entity to target /\n    public void setTarget(Entity target) {\n        this.target = target;\n    }\n\n    @Override\n    public HandlerList getHandlers() {\n        return handlers;\n    }\n\n    public static HandlerList getHandlerList() {\n        return handlers;\n    }\n\n    /** An enum to specify the reason for the targeting"]},"name":"TargetReason","qualifiedname":"io.wolfscript.event.entity.TargetReason","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.entity.Entity","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"enum":[{"code":"UNKNOWN","value":"","title":"When the entity's target has died, and so it no longer targets it","description":"When the entity's target has died, and so it no longer targets it /\n        TARGET_DIED,\n        /** When the entity doesn't have a target, so it attacks the nearest player /\n        CLOSEST_PLAYER,\n        /** When the target attacks the entity, so entity targets it /\n        TARGET_ATTACKED_ENTITY,\n        /** When the target attacks a fellow pig zombie, so the whole group will target him with this reason. /\n        PIG_ZOMBIE_TARGET,\n        /** When the target is forgotten for whatever reason. <p> Currently only occurs in with spiders when there is a high brightness. /\n        FORGOT_TARGET,\n        /** When the target attacks the owner of the entity, so the entity targets it. /\n        TARGET_ATTACKED_OWNER,\n        /** When the owner of the entity attacks the target attacks, so the entity targets it. /\n        OWNER_ATTACKED_TARGET,\n        /** When the entity has no target, so the entity randomly chooses one. /\n        RANDOM_TARGET,\n        /** When an entity selects a target while defending a village. /\n        DEFEND_VILLAGE,\n        /** When the target attacks a nearby entity of the same type, so the entity targets it /\n        TARGET_ATTACKED_NEARBY_ENTITY,\n        /** When a zombie targeting an entity summons reinforcements, so the reinforcements target the same entity /\n        REINFORCEMENT_TARGET,\n        /** When an entity targets another entity after colliding with it. /\n        COLLISION,\n        /** For custom calls to the event. /\n        CUSTOM,\n        /** When the entity doesn't have a target, so it attacks the nearest entity /\n        CLOSEST_ENTITY,\n        /** A currently unknown reason for the entity changing target.","doc":{}}],"properties":[]},"io.wolfscript.event.hanging.0":{"namespace":"io.wolfscript.event","title":"{@link io.wolfscript.event.Event Events} relating to {@link","description":"{@link io.wolfscript.event.Event Events} relating to {@link io.wolfscript.entity.Hanging entities that hang}.","name":"hanging","qualifiedname":"io.wolfscript.event.hanging.0","packagename":"io.wolfscript.event.hanging","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.event.hanging.HangingBreakByEntityEvent","io.wolfscript.event.hanging.HangingEvent","io.wolfscript.event.hanging.HangingPlaceEvent"],"interfaces":[],"enums":["io.wolfscript.event.hanging.RemoveCause"],"namespaces":[],"properties":[]},"io.wolfscript.event.hanging.HangingBreakByEntityEvent":{"namespace":"io.wolfscript.event.hanging","title":"Triggered when a hanging entity is removed by an entity","description":"Triggered when a hanging entity is removed by an entity","name":"HangingBreakByEntityEvent","qualifiedname":"io.wolfscript.event.hanging.HangingBreakByEntityEvent","type":"class","scope":"public","extends":["HangingBreakEvent"],"constructors":[{"title":"HangingBreakByEntityEvent constructor","description":"HangingBreakByEntityEvent constructor","scope":"public","name":"HangingBreakByEntityEvent","args":[{"name":"Hanging","type":"final","description":"Hanging argument"},{"name":"Entity","type":"final","description":"Entity argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.Hanging"],"properties":[{"name":"Remover","modifier":"readonly","args":[],"description":"Get: Gets the entity that removed the hanging entity","doc":{"return":["the entity that removed the hanging entity"]},"return":"io.wolfscript.entity.Entity","scope":"public","title":"Get: Gets the entity that removed the hanging entity"}]},"io.wolfscript.event.hanging.HangingEvent":{"namespace":"io.wolfscript.event.hanging","title":"Represents a hanging entity-related event.","description":"Represents a hanging entity-related event.","name":"HangingEvent","qualifiedname":"io.wolfscript.event.hanging.HangingEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.Event"],"constructors":[],"methods":[],"imports":["io.wolfscript.entity.Hanging","io.wolfscript.event.Event"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Get: Gets the hanging entity involved in this event.","doc":{"return":["the hanging entity"]},"return":"io.wolfscript.entity.Hanging","scope":"public","title":"Get: Gets the hanging entity involved in this event."}]},"io.wolfscript.event.hanging.HangingPlaceEvent":{"namespace":"io.wolfscript.event.hanging","title":"Triggered when a hanging entity is created in the world","description":"Triggered when a hanging entity is created in the world","name":"HangingPlaceEvent","qualifiedname":"io.wolfscript.event.hanging.HangingPlaceEvent","type":"class","scope":"public","extends":["io.wolfscript.event.hanging.HangingEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"HangingPlaceEvent constructor","description":"HangingPlaceEvent constructor","scope":"public","name":"HangingPlaceEvent","args":[{"name":"Hanging","type":"final","description":"Hanging argument"},{"name":"Player","type":"final","description":"Player argument"},{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockFace","type":"final","description":"BlockFace argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.block.BlockFace","io.wolfscript.entity.Hanging","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"BlockFace","modifier":"readonly","args":[],"description":"Get: Returns the player placing the hanging entity","doc":{"return":["the player placing the hanging entity /\n    public Player getPlayer() {\n        return player;\n    }\n\n    /** Returns the block that the hanging entity was placed on","the block that the hanging entity was placed on /\n    public Block getBlock() {\n        return block;\n    }\n\n    /** Returns the face of the block that the hanging entity was placed on","the face of the block that the hanging entity was placed on"]},"return":"io.wolfscript.block.BlockFace","scope":"public","title":"Get: Returns the player placing the hanging entity"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.hanging.RemoveCause":{"namespace":"io.wolfscript.event.hanging","title":"Triggered when a hanging entity is removed","description":"Triggered when a hanging entity is removed /\npublic class HangingBreakEvent extends HangingEvent implements Cancellable {\n    private static final HandlerList handlers = new HandlerList();\n    private boolean cancelled;\n    private final HangingBreakEvent.RemoveCause cause;\n\n    public HangingBreakEvent(final Hanging hanging, final HangingBreakEvent.RemoveCause cause) {\n        super(hanging);\n        this.cause = cause;\n    }\n\n    /** Gets the cause for the hanging entity's removal","doc":{"return":["the RemoveCause for the hanging entity's removal /\n    public HangingBreakEvent.RemoveCause getCause() {\n        return cause;\n    }\n\n    public boolean isCancelled() {\n        return cancelled;\n    }\n\n    public void setCancelled(boolean cancel) {\n        this.cancelled = cancel;\n    }\n\n    /** An enum to specify the cause of the removal"]},"name":"RemoveCause","qualifiedname":"io.wolfscript.event.hanging.RemoveCause","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.entity.Hanging","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"enum":[{"code":"DEFAULT","value":"","title":"Removed by an entity","description":"Removed by an entity /\n        ENTITY,\n        /** Removed by an explosion /\n        EXPLOSION,\n        /** Removed by placing a block on it /\n        OBSTRUCTION,\n        /** Removed by destroying the block behind it, etc /\n        PHYSICS,\n        /** Removed by an uncategorised cause","doc":{}}],"properties":[]},"io.wolfscript.event.inventory.0":{"namespace":"io.wolfscript.event","title":"{@link io.wolfscript.event.Event Events} relating to {@link","description":"{@link io.wolfscript.event.Event Events} relating to {@link io.wolfscript.inventory.Inventory inventory} manipulation.","name":"inventory","qualifiedname":"io.wolfscript.event.inventory.0","packagename":"io.wolfscript.event.inventory","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.event.inventory.BrewEvent","io.wolfscript.event.inventory.CraftItemEvent","io.wolfscript.event.inventory.FurnaceBurnEvent","io.wolfscript.event.inventory.FurnaceExtractEvent","io.wolfscript.event.inventory.FurnaceSmeltEvent","io.wolfscript.event.inventory.InventoryClickEvent","io.wolfscript.event.inventory.InventoryCloseEvent","io.wolfscript.event.inventory.InventoryCreativeEvent","io.wolfscript.event.inventory.InventoryDragEvent","io.wolfscript.event.inventory.InventoryEvent","io.wolfscript.event.inventory.InventoryInteractEvent","io.wolfscript.event.inventory.InventoryMoveItemEvent","io.wolfscript.event.inventory.InventoryOpenEvent","io.wolfscript.event.inventory.InventoryPickupItemEvent","io.wolfscript.event.inventory.PrepareItemCraftEvent"],"interfaces":[],"enums":["io.wolfscript.event.inventory.ClickType","io.wolfscript.event.inventory.DragType","io.wolfscript.event.inventory.InventoryAction","io.wolfscript.event.inventory.InventoryType"],"namespaces":[],"properties":[]},"io.wolfscript.event.inventory.BrewEvent":{"namespace":"io.wolfscript.event.inventory","title":"Called when the brewing of the contents inside the Brewing Stand is","description":"Called when the brewing of the contents inside the Brewing Stand is complete.","name":"BrewEvent","qualifiedname":"io.wolfscript.event.inventory.BrewEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"BrewEvent constructor","description":"BrewEvent constructor","scope":"public","name":"BrewEvent","args":[{"name":"brewer","type":"io.wolfscript.block.Block","description":"brewer argument"},{"name":"contents","type":"io.wolfscript.inventory.BrewerInventory","description":"contents argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.event.block.BlockEvent","io.wolfscript.inventory.BrewerInventory"],"properties":[{"name":"Contents","modifier":"readonly","args":[],"description":"Get: Gets the contents of the Brewing Stand.","doc":{"return":["the contents"]},"return":"io.wolfscript.inventory.BrewerInventory","scope":"public","title":"Get: Gets the contents of the Brewing Stand."},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.inventory.ClickType":{"namespace":"io.wolfscript.event.inventory","title":"What the client did to trigger this action (not the result).","description":"What the client did to trigger this action (not the result).","name":"ClickType","qualifiedname":"io.wolfscript.event.inventory.ClickType","type":"enum","scope":"public","constructors":[],"methods":[{"title":"The left (or primary) mouse button.","description":"The left (or primary) mouse button. /\n    LEFT,\n    /** Holding shift while pressing the left mouse button. /\n    SHIFT_LEFT,\n    /** The right mouse button. /\n    RIGHT,\n    /** Holding shift while pressing the right mouse button. /\n    SHIFT_RIGHT,\n    /** Clicking the left mouse button on the grey area around the inventory. /\n    WINDOW_BORDER_LEFT,\n    /** Clicking the right mouse button on the grey area around the inventory. /\n    WINDOW_BORDER_RIGHT,\n    /** The middle mouse button, or a \"scrollwheel click\". /\n    MIDDLE,\n    /** One of the number keys 1-9, correspond to slots on the hotbar. /\n    NUMBER_KEY,\n    /** Pressing the left mouse button twice in quick succession. /\n    DOUBLE_CLICK,\n    /** The \"Drop\" key (defaults to Q). /\n    DROP,\n    /** Holding Ctrl while pressing the \"Drop\" key (defaults to Q). /\n    CONTROL_DROP,\n    /** Any action done with the Creative inventory open. /\n    CREATIVE,\n    /** A type of inventory manipulation not yet recognized by WolfScript. <p> This is only for transitional purposes on a new Minecraft update, and should never be relied upon. <p> Any ClickType.UNKNOWN is called on a best-effort basis. /\n    UNKNOWN,\n    ;\n\n    /** Gets whether this ClickType represents the pressing of a key on a keyboard.","doc":{"return":["true if this ClickType represents the pressing of a key /\n    public boolean isKeyboardClick() {\n        return (this == ClickType.NUMBER_KEY) || (this == ClickType.DROP) || (this == ClickType.CONTROL_DROP);\n    }\n\n    /** Gets whether this ClickType represents an action that can only be performed by a Player in creative mode.","true if this action requires Creative mode /\n    public boolean isCreativeAction() {\n        // Why use middle click?\n        return (this == ClickType.MIDDLE) || (this == ClickType.CREATIVE);\n    }\n\n    /** Gets whether this ClickType represents a right click.","true if this ClickType represents a right click /\n    public boolean isRightClick() {\n        return (this == ClickType.RIGHT) || (this == ClickType.SHIFT_RIGHT);\n    }\n\n    /** Gets whether this ClickType represents a left click.","true if this ClickType represents a left click /\n    public boolean isLeftClick() {\n        return (this == ClickType.LEFT) || (this == ClickType.SHIFT_LEFT) || (this == ClickType.DOUBLE_CLICK) || (this == ClickType.CREATIVE);\n    }\n\n    /** Gets whether this ClickType indicates that the shift key was pressed down when the click was made.","true if the action uses Shift."]},"scope":"public","return":"boolean","name":"isShiftClick","args":[]}],"imports":[],"enum":[{"code":"UNKNOWN","value":"","title":"The left (or primary) mouse button.","description":"The left (or primary) mouse button. /\n    LEFT,\n    /** Holding shift while pressing the left mouse button. /\n    SHIFT_LEFT,\n    /** The right mouse button. /\n    RIGHT,\n    /** Holding shift while pressing the right mouse button. /\n    SHIFT_RIGHT,\n    /** Clicking the left mouse button on the grey area around the inventory. /\n    WINDOW_BORDER_LEFT,\n    /** Clicking the right mouse button on the grey area around the inventory. /\n    WINDOW_BORDER_RIGHT,\n    /** The middle mouse button, or a \"scrollwheel click\". /\n    MIDDLE,\n    /** One of the number keys 1-9, correspond to slots on the hotbar. /\n    NUMBER_KEY,\n    /** Pressing the left mouse button twice in quick succession. /\n    DOUBLE_CLICK,\n    /** The \"Drop\" key (defaults to Q). /\n    DROP,\n    /** Holding Ctrl while pressing the \"Drop\" key (defaults to Q). /\n    CONTROL_DROP,\n    /** Any action done with the Creative inventory open. /\n    CREATIVE,\n    /** A type of inventory manipulation not yet recognized by WolfScript. <p> This is only for transitional purposes on a new Minecraft update, and should never be relied upon. <p> Any ClickType.UNKNOWN is called on a best-effort basis.","doc":{}}],"properties":[]},"io.wolfscript.event.inventory.CraftItemEvent":{"namespace":"io.wolfscript.event.inventory","title":"Called when the recipe of an Item is completed inside a crafting matrix.","description":"Called when the recipe of an Item is completed inside a crafting matrix.","name":"CraftItemEvent","qualifiedname":"io.wolfscript.event.inventory.CraftItemEvent","type":"class","scope":"public","extends":["io.wolfscript.event.inventory.InventoryClickEvent"],"constructors":[{"title":"CraftItemEvent constructor","description":"CraftItemEvent constructor","scope":"public","name":"CraftItemEvent","args":[{"name":"recipe","type":"io.wolfscript.inventory.Recipe","description":"recipe argument"},{"name":"what","type":"io.wolfscript.inventory.InventoryView","description":"what argument"},{"name":"type","type":"io.wolfscript.event.inventory.InventoryType.SlotType","description":"type argument"},{"name":"slot","type":"int","description":"slot argument"},{"name":"right","type":"boolean","description":"right argument"},{"name":"shift","type":"boolean","description":"shift argument"}]},{"title":"CraftItemEvent constructor","description":"CraftItemEvent constructor","scope":"public","name":"CraftItemEvent","args":[{"name":"recipe","type":"io.wolfscript.inventory.Recipe","description":"recipe argument"},{"name":"what","type":"io.wolfscript.inventory.InventoryView","description":"what argument"},{"name":"type","type":"io.wolfscript.event.inventory.InventoryType.SlotType","description":"type argument"},{"name":"slot","type":"int","description":"slot argument"},{"name":"click","type":"io.wolfscript.event.inventory.ClickType","description":"click argument"},{"name":"action","type":"io.wolfscript.event.inventory.InventoryAction","description":"action argument"}]},{"title":"CraftItemEvent constructor","description":"CraftItemEvent constructor","scope":"public","name":"CraftItemEvent","args":[{"name":"recipe","type":"io.wolfscript.inventory.Recipe","description":"recipe argument"},{"name":"what","type":"io.wolfscript.inventory.InventoryView","description":"what argument"},{"name":"type","type":"io.wolfscript.event.inventory.InventoryType.SlotType","description":"type argument"},{"name":"slot","type":"int","description":"slot argument"},{"name":"click","type":"io.wolfscript.event.inventory.ClickType","description":"click argument"},{"name":"action","type":"io.wolfscript.event.inventory.InventoryAction","description":"action argument"},{"name":"key","type":"int","description":"key argument"}]}],"methods":[],"imports":["io.wolfscript.event.inventory.InventoryType.SlotType","io.wolfscript.inventory.CraftingInventory","io.wolfscript.inventory.InventoryView","io.wolfscript.inventory.Recipe"],"properties":[{"name":"Inventory","modifier":"readonly","args":[],"description":"Inventory property","return":"io.wolfscript.inventory.CraftingInventory","scope":"public","title":"Inventory property"},{"name":"Recipe","modifier":"readonly","args":[],"description":"Recipe property","doc":{"return":["A copy of the current recipe on the crafting matrix."]},"return":"io.wolfscript.inventory.Recipe","scope":"public","title":"Recipe property"}]},"io.wolfscript.event.inventory.DragType":{"namespace":"io.wolfscript.event.inventory","title":"Represents the effect of a drag that will be applied to an Inventory in an","description":"Represents the effect of a drag that will be applied to an Inventory in an InventoryDragEvent.","name":"DragType","qualifiedname":"io.wolfscript.event.inventory.DragType","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"EVEN","value":"","title":"One item from the cursor is placed in each selected slot.","description":"One item from the cursor is placed in each selected slot. /\n    SINGLE,\n    /** The cursor is split evenly across all selected slots, not to exceed the Material's max stack size, with the remainder going to the cursor.","doc":{}}],"properties":[]},"io.wolfscript.event.inventory.FurnaceBurnEvent":{"namespace":"io.wolfscript.event.inventory","title":"Called when an ItemStack is successfully burned as fuel in a furnace.","description":"Called when an ItemStack is successfully burned as fuel in a furnace.","name":"FurnaceBurnEvent","qualifiedname":"io.wolfscript.event.inventory.FurnaceBurnEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"FurnaceBurnEvent constructor","description":"FurnaceBurnEvent constructor","scope":"public","name":"FurnaceBurnEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.event.block.BlockEvent","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Burning","modifier":"writeonly","args":[{"name":"burning","type":"boolean","description":"true if the furnace's fuel is burning"}],"description":"Set: Gets the block for the furnace involved in this event","doc":{"return":["the block of the furnace","the fuel ItemStack /\n    public ItemStack getFuel() {\n        return fuel;\n    }\n\n    /** Gets the burn time for this fuel","the burn time for this fuel /\n    public int getBurnTime() {\n        return burnTime;\n    }\n\n    /** Sets the burn time for this fuel","whether the furnace's fuel is burning or not. /\n    public boolean isBurning() {\n        return this.burning;\n    }\n\n    /** Sets whether the furnace's fuel is burning or not."],"deprecated":["In favour of {@link #getBlock()}. /\n    @Deprecated\n    public Block getFurnace() {\n        return getBlock();\n    }\n\n    /** Gets the fuel ItemStack for this event"]},"return":"void","scope":"public","title":"Set: Gets the block for the furnace involved in this event"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.inventory.FurnaceExtractEvent":{"namespace":"io.wolfscript.event.inventory","title":"This event is called when a player takes items out of the furnace","description":"This event is called when a player takes items out of the furnace","name":"FurnaceExtractEvent","qualifiedname":"io.wolfscript.event.inventory.FurnaceExtractEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockExpEvent"],"constructors":[{"title":"FurnaceExtractEvent constructor","description":"FurnaceExtractEvent constructor","scope":"public","name":"FurnaceExtractEvent","args":[{"name":"player","type":"io.wolfscript.entity.Player","description":"player argument"},{"name":"block","type":"io.wolfscript.block.Block","description":"block argument"},{"name":"itemType","type":"io.wolfscript.Material","description":"itemType argument"},{"name":"itemAmount","type":"int","description":"itemAmount argument"},{"name":"exp","type":"int","description":"exp argument"}]}],"methods":[],"imports":["io.wolfscript.Material","io.wolfscript.block.Block","io.wolfscript.entity.Player","io.wolfscript.event.block.BlockExpEvent"],"properties":[{"name":"ItemAmount","modifier":"readonly","args":[],"description":"Get: Get the player that triggered the event","doc":{"return":["the relevant player /\n    public Player getPlayer() {\n        return player;\n    }\n\n    /** Get the Material of the item being retrieved","the material of the item /\n    public Material getItemType() {\n        return itemType;\n    }\n\n    /** Get the item count being retrieved","the amount of the item"]},"return":"int","scope":"public","title":"Get: Get the player that triggered the event"}]},"io.wolfscript.event.inventory.FurnaceSmeltEvent":{"namespace":"io.wolfscript.event.inventory","title":"Called when an ItemStack is successfully smelted in a furnace.","description":"Called when an ItemStack is successfully smelted in a furnace.","name":"FurnaceSmeltEvent","qualifiedname":"io.wolfscript.event.inventory.FurnaceSmeltEvent","type":"class","scope":"public","extends":["io.wolfscript.event.block.BlockEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"FurnaceSmeltEvent constructor","description":"FurnaceSmeltEvent constructor","scope":"public","name":"FurnaceSmeltEvent","args":[{"name":"Block","type":"final","description":"Block argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.event.block.BlockEvent","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Result","modifier":"writeonly","args":[{"name":"result","type":"io.wolfscript.inventory.ItemStack","description":"new result ItemStack"}],"description":"Set: Gets the block for the furnace involved in this event","doc":{"return":["the block of the furnace","smelting source ItemStack /\n    public ItemStack getSource() {\n        return source;\n    }\n\n    /** Gets the resultant ItemStack for this event","smelting result ItemStack /\n    public ItemStack getResult() {\n        return result;\n    }\n\n    /** Sets the resultant ItemStack for this event"],"deprecated":["In favour of {@link #getBlock()}. /\n    @Deprecated\n    public Block getFurnace() {\n        return getBlock();\n    }\n\n    /** Gets the smelted ItemStack for this event"]},"return":"void","scope":"public","title":"Set: Gets the block for the furnace involved in this event"}]},"io.wolfscript.event.inventory.InventoryAction":{"namespace":"io.wolfscript.event.inventory","title":"An estimation of what the result will be.","description":"An estimation of what the result will be.","name":"InventoryAction","qualifiedname":"io.wolfscript.event.inventory.InventoryAction","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"UNKNOWN","value":"","title":"Nothing will happen from the click.","description":"Nothing will happen from the click. <p> There may be cases where nothing will happen and this is value is not provided, but it is guaranteed that this value is accurate when given. /\n    NOTHING,\n    /** All of the items on the clicked slot are moved to the cursor. /\n    PICKUP_ALL,\n    /** Some of the items on the clicked slot are moved to the cursor. /\n    PICKUP_SOME,\n    /** Half of the items on the clicked slot are moved to the cursor. /\n    PICKUP_HALF,\n    /** One of the items on the clicked slot are moved to the cursor. /\n    PICKUP_ONE,\n    /** All of the items on the cursor are moved to the clicked slot. /\n    PLACE_ALL,\n    /** Some of the items from the cursor are moved to the clicked slot (usually up to the max stack size). /\n    PLACE_SOME,\n    /** A single item from the cursor is moved to the clicked slot. /\n    PLACE_ONE,\n    /** The clicked item and the cursor are exchanged. /\n    SWAP_WITH_CURSOR,\n    /** The entire cursor item is dropped. /\n    DROP_ALL_CURSOR,\n    /** One item is dropped from the cursor. /\n    DROP_ONE_CURSOR,\n    /** The entire clicked slot is dropped. /\n    DROP_ALL_SLOT,\n    /** One item is dropped from the clicked slot. /\n    DROP_ONE_SLOT,\n    /** The item is moved to the opposite inventory if a space is found. /\n    MOVE_TO_OTHER_INVENTORY,\n    /** The clicked item is moved to the hotbar, and the item currently there is re-added to the player's inventory. /\n    HOTBAR_MOVE_AND_READD,\n    /** The clicked slot and the picked hotbar slot are swapped. /\n    HOTBAR_SWAP,\n    /** A max-size stack of the clicked item is put on the cursor. /\n    CLONE_STACK,\n    /** The inventory is searched for the same material, and they are put on the cursor up to {@link io.wolfscript.Material#getMaxStackSize()}. /\n    COLLECT_TO_CURSOR,\n    /** An unrecognized ClickType.","doc":{}}],"properties":[]},"io.wolfscript.event.inventory.InventoryClickEvent":{"namespace":"io.wolfscript.event.inventory","title":"This event is called when a player clicks a slot in an inventory.","description":"This event is called when a player clicks a slot in an inventory. <p> Because InventoryClickEvent occurs within a modification of the Inventory, not all Inventory related methods are safe to use. <p> The following should never be invoked by an EventHandler for InventoryClickEvent using the HumanEntity or InventoryView associated with this event: <ul> <li>{@link HumanEntity#closeInventory()} <li>{@link HumanEntity#openInventory(Inventory)} <li>{@link HumanEntity#openWorkbench(Location, boolean)} <li>{@link HumanEntity#openEnchanting(Location, boolean)} <li>{@link InventoryView#close()} </ul> To invoke one of these methods, schedule a task using {@link WolfScriptScheduler#runTask(Plugin, Runnable)}, which will run the task on the next tick. Also be aware that this is not an exhaustive list, and other methods could potentially create issues as well. <p> Assuming the EntityHuman associated with this event is an instance of a Player, manipulating the MaxStackSize or contents of an Inventory will require an Invocation of {@link Player#updateInventory()}. <p> Modifications to slots that are modified by the results of this InventoryClickEvent can be overwritten. To change these slots, this event should be cancelled and all desired changes to the inventory applied. Alternatively, scheduling a task using {@link WolfScriptScheduler#runTask( Plugin, Runnable)}, which would execute the task on the next tick, would work as well.","name":"InventoryClickEvent","qualifiedname":"io.wolfscript.event.inventory.InventoryClickEvent","type":"class","scope":"public","extends":["io.wolfscript.event.inventory.InventoryInteractEvent"],"constructors":[{"title":"InventoryClickEvent constructor","description":"InventoryClickEvent constructor","scope":"public","name":"InventoryClickEvent","args":[{"name":"view","type":"io.wolfscript.inventory.InventoryView","description":"view argument"},{"name":"type","type":"io.wolfscript.event.inventory.InventoryType.SlotType","description":"type argument"},{"name":"slot","type":"int","description":"slot argument"},{"name":"right","type":"boolean","description":"right argument"},{"name":"shift","type":"boolean","description":"shift argument"}]},{"title":"InventoryClickEvent constructor","description":"InventoryClickEvent constructor","scope":"public","name":"InventoryClickEvent","args":[{"name":"view","type":"io.wolfscript.inventory.InventoryView","description":"view argument"},{"name":"type","type":"io.wolfscript.event.inventory.InventoryType.SlotType","description":"type argument"},{"name":"slot","type":"int","description":"slot argument"},{"name":"click","type":"io.wolfscript.event.inventory.ClickType","description":"click argument"},{"name":"action","type":"io.wolfscript.event.inventory.InventoryAction","description":"action argument"}]},{"title":"InventoryClickEvent constructor","description":"InventoryClickEvent constructor","scope":"public","name":"InventoryClickEvent","args":[{"name":"view","type":"io.wolfscript.inventory.InventoryView","description":"view argument"},{"name":"type","type":"io.wolfscript.event.inventory.InventoryType.SlotType","description":"type argument"},{"name":"slot","type":"int","description":"slot argument"},{"name":"click","type":"io.wolfscript.event.inventory.ClickType","description":"click argument"},{"name":"action","type":"io.wolfscript.event.inventory.InventoryAction","description":"action argument"},{"name":"key","type":"int","description":"key argument"}]}],"methods":[],"imports":["io.wolfscript.inventory.Inventory","io.wolfscript.inventory.InventoryView","io.wolfscript.entity.HumanEntity","io.wolfscript.entity.Player","io.wolfscript.event.HandlerList","io.wolfscript.event.inventory.InventoryType.SlotType","io.wolfscript.Location","io.wolfscript.inventory.ItemStack","io.wolfscript.scheduler.WolfScriptScheduler","io.wolfscript.plugin.Plugin"],"properties":[{"name":"Click","modifier":"readonly","args":[],"description":"Get: Gets the type of slot that was clicked.","doc":{"return":["the slot type /\n    public SlotType getSlotType() {\n        return slot_type;\n    }\n\n    /** Gets the current ItemStack on the cursor.","the cursor ItemStack /\n    public ItemStack getCursor() {\n        return getView().getCursor();\n    }\n\n    /** Gets the ItemStack currently in the clicked slot.","the item in the clicked /\n    public ItemStack getCurrentItem() {\n        if (slot_type == SlotType.OUTSIDE) {\n            return current;\n        }\n        return getView().getItem(rawSlot);\n    }\n\n    /** Gets whether or not the ClickType for this event represents a right click.","true if the ClickType uses the right mouse button.","true if the ClickType uses the left mouse button.","true if the ClickType uses Shift or Ctrl.","The slot number. /\n    public int getSlot() {\n        return whichSlot;\n    }\n\n    /** The raw slot number clicked, ready for passing to {@link InventoryView #getItem(int)} This slot number is unique for the view.","the slot number /\n    public int getRawSlot() {\n        return rawSlot;\n    }\n\n    /** If the ClickType is NUMBER_KEY, this method will return the index of the pressed key (0-8).","the number on the key minus 1 (range 0-8); or -1 if not a NUMBER_KEY action /\n    public int getHotbarButton() {\n        return hotbarKey;\n    }\n\n    /** Gets the InventoryAction that triggered this event. <p> This action cannot be changed, and represents what the normal outcome of the event will be. To change the behavior of this InventoryClickEvent, changes must be manually applied.","the InventoryAction that triggered this event. /\n    public InventoryAction getAction() {\n        return action;\n    }\n\n    /** Gets the ClickType for this event. <p> This is insulated against changes to the inventory by other plugins.","the type of inventory click"],"see":["ClickType#isRightClick() /\n    public boolean isRightClick() {\n        return click.isRightClick();\n    }\n\n    /** Gets whether or not the ClickType for this event represents a left click.","ClickType#isLeftClick() /\n    public boolean isLeftClick() {\n        return click.isLeftClick();\n    }\n\n    /** Gets whether the ClickType for this event indicates that the key was pressed down when the click was made.","ClickType#isShiftClick() /\n    public boolean isShiftClick() {\n        return click.isShiftClick();\n    }\n\n    /** Sets the item on the cursor."],"param":["stack the new cursor item","stack the item to be placed in the current slot /\n    public void setCurrentItem(ItemStack stack) {\n        if (slot_type == SlotType.OUTSIDE) {\n            current = stack;\n        } else {\n            getView().setItem(rawSlot, stack);\n        }\n    }\n\n    /** The slot number that was clicked, ready for passing to {@link Inventory#getItem(int)}. Note that there may be two slots with the same slot number, since a view links two different inventories."],"deprecated":["This changes the ItemStack in their hand before any calculations are applied to the Inventory, which has a tendency to create inconsistencies between the Player and the server, and to make unexpected changes in the behavior of the clicked Inventory. /\n    @Deprecated\n    public void setCursor(ItemStack stack) {\n        getView().setCursor(stack);\n    }\n\n    /** Sets the ItemStack currently in the clicked slot."]},"return":"io.wolfscript.event.inventory.ClickType","scope":"public","title":"Get: Gets the type of slot that was clicked."},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.inventory.InventoryCloseEvent":{"namespace":"io.wolfscript.event.inventory","title":"Represents a player related inventory event","description":"Represents a player related inventory event","name":"InventoryCloseEvent","qualifiedname":"io.wolfscript.event.inventory.InventoryCloseEvent","type":"class","scope":"public","extends":["io.wolfscript.event.inventory.InventoryEvent"],"constructors":[{"title":"InventoryCloseEvent constructor","description":"InventoryCloseEvent constructor","scope":"public","name":"InventoryCloseEvent","args":[{"name":"transaction","type":"io.wolfscript.inventory.InventoryView","description":"transaction argument"}]}],"methods":[],"imports":["io.wolfscript.entity.HumanEntity","io.wolfscript.event.HandlerList","io.wolfscript.inventory.InventoryView"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Player","modifier":"readonly","args":[],"describe":"final","description":"Get: Returns the player involved in this event","doc":{"return":["Player who is involved in this event"]},"return":"io.wolfscript.entity.HumanEntity","scope":"public","title":"Get: Returns the player involved in this event"}]},"io.wolfscript.event.inventory.InventoryCreativeEvent":{"namespace":"io.wolfscript.event.inventory","title":"This event is called when a player in creative mode puts down or picks up","description":"This event is called when a player in creative mode puts down or picks up an item in their inventory / hotbar and when they drop items from their Inventory while in creative mode.","name":"InventoryCreativeEvent","qualifiedname":"io.wolfscript.event.inventory.InventoryCreativeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.inventory.InventoryClickEvent"],"constructors":[{"title":"InventoryCreativeEvent constructor","description":"InventoryCreativeEvent constructor","scope":"public","name":"InventoryCreativeEvent","args":[{"name":"what","type":"io.wolfscript.inventory.InventoryView","description":"what argument"},{"name":"type","type":"io.wolfscript.event.inventory.InventoryType.SlotType","description":"type argument"},{"name":"slot","type":"int","description":"slot argument"},{"name":"newItem","type":"io.wolfscript.inventory.ItemStack","description":"newItem argument"}]}],"methods":[],"imports":["io.wolfscript.event.inventory.InventoryType.SlotType","io.wolfscript.inventory.InventoryView","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"Cursor","args":[{"name":"item","type":"io.wolfscript.inventory.ItemStack","description":"item argument"}],"description":"Cursor property","return":"io.wolfscript.inventory.ItemStack","scope":"public","title":"Cursor property"}]},"io.wolfscript.event.inventory.InventoryDragEvent":{"namespace":"io.wolfscript.event.inventory","title":"This event is called when the player drags an item in their cursor across","description":"This event is called when the player drags an item in their cursor across the inventory. The ItemStack is distributed across the slots the HumanEntity dragged over. The method of distribution is described by the DragType returned by {@link #getType()}. <p> Canceling this event will result in none of the changes described in {@link #getNewItems()} being applied to the Inventory. <p> Because InventoryDragEvent occurs within a modification of the Inventory, not all Inventory related methods are safe to use. <p> The following should never be invoked by an EventHandler for InventoryDragEvent using the HumanEntity or InventoryView associated with this event. <ul> <li>{@link HumanEntity#closeInventory()} <li>{@link HumanEntity#openInventory(Inventory)} <li>{@link HumanEntity#openWorkbench(Location, boolean)} <li>{@link HumanEntity#openEnchanting(Location, boolean)} <li>{@link InventoryView#close()} </ul> To invoke one of these methods, schedule a task using {@link WolfScriptScheduler#runTask(Plugin, Runnable)}, which will run the task on the next tick.  Also be aware that this is not an exhaustive list, and other methods could potentially create issues as well. <p> Assuming the EntityHuman associated with this event is an instance of a Player, manipulating the MaxStackSize or contents of an Inventory will require an Invocation of {@link Player#updateInventory()}. <p> Any modifications to slots that are modified by the results of this InventoryDragEvent will be overwritten. To change these slots, this event should be cancelled and the changes applied. Alternatively, scheduling a task using {@link WolfScriptScheduler#runTask(Plugin, Runnable)}, which would execute the task on the next tick, would work as well.","name":"InventoryDragEvent","qualifiedname":"io.wolfscript.event.inventory.InventoryDragEvent","type":"class","scope":"public","extends":["io.wolfscript.event.inventory.InventoryInteractEvent"],"constructors":[{"title":"InventoryDragEvent constructor","description":"InventoryDragEvent constructor","scope":"public","name":"InventoryDragEvent","args":[{"name":"what","type":"io.wolfscript.inventory.InventoryView","description":"what argument"},{"name":"newCursor","type":"io.wolfscript.inventory.ItemStack","description":"newCursor argument"},{"name":"oldCursor","type":"io.wolfscript.inventory.ItemStack","description":"oldCursor argument"},{"name":"right","type":"boolean","description":"right argument"}]}],"methods":[],"imports":["java.util.Collections","java.util.Map","java.util.Set","org.apache.commons.lang.Validate","io.wolfscript.Location","io.wolfscript.entity.HumanEntity","io.wolfscript.entity.Player","io.wolfscript.event.HandlerList","io.wolfscript.inventory.Inventory","io.wolfscript.inventory.InventoryView","io.wolfscript.inventory.ItemStack","io.wolfscript.plugin.Plugin","io.wolfscript.scheduler.WolfScriptScheduler","com.google.common.collect.ImmutableSet"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Type","modifier":"readonly","args":[],"description":"Get: Gets all items to be added to the inventory in this drag.","doc":{"return":["map from raw slot id to new ItemStack /\n    public Map<Integer, ItemStack> getNewItems() {\n        return Collections.unmodifiableMap(addedItems);\n    }\n\n    /** Gets the raw slot ids to be changed in this drag.","list of raw slot ids, suitable for getView().getItem(int) /\n    public Set<Integer> getRawSlots() {\n        return addedItems.keySet();\n    }\n\n    /** Gets the slots to be changed in this drag.","list of converted slot ids, suitable for {@link io.wolfscript.inventory.Inventory#getItem(int)}. /\n    public Set<Integer> getInventorySlots() {\n        return containerSlots;\n    }\n\n    /** Gets the result cursor after the drag is done. The returned value is mutable.","the result cursor /\n    public ItemStack getCursor() {\n        return newCursor;\n    }\n\n    /** Sets the result cursor after the drag is done. <p> Changing this item stack changes the cursor item. Note that changing the affected \"dragged\" slots does not change this ItemStack, nor does changing this ItemStack affect the \"dragged\" slots.","the original cursor /\n    public ItemStack getOldCursor() {\n        return oldCursor.clone();\n    }\n\n    /** Gets the DragType that describes the behavior of ItemStacks placed after this InventoryDragEvent. <p> The ItemStacks and the raw slots that they're being applied to can be found using {@link #getNewItems()}.","the DragType of this InventoryDragEvent"],"param":["newCursor the new cursor ItemStack /\n    public void setCursor(ItemStack newCursor) {\n        this.newCursor = newCursor;\n    }\n\n    /** Gets an ItemStack representing the cursor prior to any modifications as a result of this drag."]},"return":"io.wolfscript.event.inventory.DragType","scope":"public","title":"Get: Gets all items to be added to the inventory in this drag."}]},"io.wolfscript.event.inventory.InventoryEvent":{"namespace":"io.wolfscript.event.inventory","title":"Represents a player related inventory event","description":"Represents a player related inventory event","name":"InventoryEvent","qualifiedname":"io.wolfscript.event.inventory.InventoryEvent","type":"class","scope":"public","extends":["io.wolfscript.event.Event"],"constructors":[{"title":"InventoryEvent constructor","description":"InventoryEvent constructor","scope":"public","name":"InventoryEvent","args":[{"name":"transaction","type":"io.wolfscript.inventory.InventoryView","description":"transaction argument"}]}],"methods":[],"imports":["java.util.List","io.wolfscript.event.HandlerList","io.wolfscript.entity.HumanEntity","io.wolfscript.event.Event","io.wolfscript.inventory.Inventory","io.wolfscript.inventory.InventoryView"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"View","modifier":"readonly","args":[],"description":"Get: Gets the primary Inventory involved in this transaction","doc":{"return":["The upper inventory. /\n    public Inventory getInventory() {\n        return transaction.getTopInventory();\n    }\n\n    /** Gets the list of players viewing the primary (upper) inventory involved in this event","A list of people viewing. /\n    public List<HumanEntity> getViewers() {\n        return transaction.getTopInventory().getViewers();\n    }\n\n    /** Gets the view object itself","InventoryView"]},"return":"io.wolfscript.inventory.InventoryView","scope":"public","title":"Get: Gets the primary Inventory involved in this transaction"}]},"io.wolfscript.event.inventory.InventoryInteractEvent":{"namespace":"io.wolfscript.event.inventory","title":"An abstract base class for events that describe an interaction between a","description":"An abstract base class for events that describe an interaction between a HumanEntity and the contents of an Inventory.","name":"InventoryInteractEvent","qualifiedname":"io.wolfscript.event.inventory.InventoryInteractEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.inventory.InventoryEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"InventoryInteractEvent constructor","description":"InventoryInteractEvent constructor","scope":"public","name":"InventoryInteractEvent","args":[{"name":"transaction","type":"io.wolfscript.inventory.InventoryView","description":"transaction argument"}]}],"methods":[],"imports":["io.wolfscript.entity.HumanEntity","io.wolfscript.event.Cancellable","io.wolfscript.event.Event.Result","io.wolfscript.inventory.InventoryView","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"Cancelled","modifier":"writeonly","args":[{"name":"toCancel","type":"boolean","description":"result becomes DENY if true, ALLOW if false"}],"description":"Set: Gets the player who performed the click.","doc":{"return":["The clicking player. /\n    public HumanEntity getWhoClicked() {\n        return getView().getPlayer();\n    }\n\n    /** Sets the result of this event. This will change whether or not this event is considered cancelled.","the Result of this event. /\n    public Result getResult() {\n        return result;\n    }\n\n    /** Gets whether or not this event is cancelled. This is based off of the Result value returned by {@link #getResult()}.  Result.ALLOW and Result.DEFAULT will result in a returned value of false, but Result.DENY will result in a returned value of true. <p> {@inheritDoc}","whether the event is cancelled /\n    public boolean isCancelled() {\n        return getResult() == Result.DENY;\n    }\n\n    /** Proxy method to {@link #setResult(Event.Result)} for the Cancellable interface. {@link #setResult(Event.Result)} is preferred, as it allows you to specify the Result beyond Result.DENY and Result.ALLOW. <p> {@inheritDoc}"],"see":["#isCancelled()"]},"return":"void","scope":"public","title":"Set: Gets the player who performed the click."}]},"io.wolfscript.event.inventory.InventoryMoveItemEvent":{"namespace":"io.wolfscript.event.inventory","title":"Called when some entity or block (e.g. hopper) tries to move items directly","description":"Called when some entity or block (e.g. hopper) tries to move items directly from one inventory to another. <p> When this event is called, the initiator may already have removed the item from the source inventory and is ready to move it into the destination inventory. <p> If this event is cancelled, the items will be returned to the source inventory, if needed. <p> If this event is not cancelled, the initiator will try to put the ItemStack into the destination inventory. If this is not possible and the ItemStack has not been modified, the source inventory slot will be restored to its former state. Otherwise any additional items will be discarded.","name":"InventoryMoveItemEvent","qualifiedname":"io.wolfscript.event.inventory.InventoryMoveItemEvent","type":"class","scope":"public","extends":["io.wolfscript.event.Event"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"InventoryMoveItemEvent constructor","description":"InventoryMoveItemEvent constructor","scope":"public","name":"InventoryMoveItemEvent","args":[{"name":"Inventory","type":"final","description":"Inventory argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"},{"name":"Inventory","type":"final","description":"Inventory argument"},{"name":"boolean","type":"final","description":"boolean argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["org.apache.commons.lang.Validate","io.wolfscript.event.Cancellable","io.wolfscript.event.Event","io.wolfscript.event.HandlerList","io.wolfscript.inventory.Inventory","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Initiator","modifier":"readonly","args":[],"description":"Get: Gets the Inventory that the ItemStack is being taken from","doc":{"return":["Inventory that the ItemStack is being taken from /\n    public Inventory getSource() {\n        return sourceInventory;\n    }\n\n    /** Gets the ItemStack being moved; if modified, the original item will not be removed from the source inventory.","ItemStack /\n    public ItemStack getItem() {\n        return itemStack.clone();\n    }\n\n    /** Sets the ItemStack being moved; if this is different from the original ItemStack, the original item will not be removed from the source inventory.","Inventory that the ItemStack is being put into /\n    public Inventory getDestination() {\n        return destinationInventory;\n    }\n\n    /** Gets the Inventory that initiated the transfer. This will always be either the destination or source Inventory.","Inventory that initiated the transfer"],"param":["itemStack The ItemStack /\n    public void setItem(ItemStack itemStack) {\n        Validate.notNull(itemStack, \"ItemStack cannot be null.  Cancel the event if you want nothing to be transferred.\");\n        this.itemStack = itemStack.clone();\n    }\n\n    /** Gets the Inventory that the ItemStack is being put into"]},"return":"io.wolfscript.inventory.Inventory","scope":"public","title":"Get: Gets the Inventory that the ItemStack is being taken from"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.inventory.InventoryOpenEvent":{"namespace":"io.wolfscript.event.inventory","title":"Represents a player related inventory event","description":"Represents a player related inventory event","name":"InventoryOpenEvent","qualifiedname":"io.wolfscript.event.inventory.InventoryOpenEvent","type":"class","scope":"public","extends":["io.wolfscript.event.inventory.InventoryEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"InventoryOpenEvent constructor","description":"InventoryOpenEvent constructor","scope":"public","name":"InventoryOpenEvent","args":[{"name":"transaction","type":"io.wolfscript.inventory.InventoryView","description":"transaction argument"}]}],"methods":[],"imports":["io.wolfscript.inventory.InventoryView","io.wolfscript.entity.HumanEntity","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"true if you wish to cancel this event"}],"description":"Set: Returns the player involved in this event","doc":{"return":["Player who is involved in this event /\n    public final HumanEntity getPlayer() {\n        return transaction.getPlayer();\n    }\n\n    /** Gets the cancellation state of this event. A cancelled event will not be executed in the server, but will still pass to other plugins. <p> If an inventory open event is cancelled, the inventory screen will not show.","true if this event is cancelled /\n    public boolean isCancelled() {\n        return cancelled;\n    }\n\n    /** Sets the cancellation state of this event. A cancelled event will not be executed in the server, but will still pass to other plugins. <p> If an inventory open event is cancelled, the inventory screen will not show."]},"return":"void","scope":"public","title":"Set: Returns the player involved in this event"}]},"io.wolfscript.event.inventory.InventoryPickupItemEvent":{"namespace":"io.wolfscript.event.inventory","title":"Called when a hopper or hopper minecart picks up a dropped item.","description":"Called when a hopper or hopper minecart picks up a dropped item.","name":"InventoryPickupItemEvent","qualifiedname":"io.wolfscript.event.inventory.InventoryPickupItemEvent","type":"class","scope":"public","extends":["io.wolfscript.event.Event"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"InventoryPickupItemEvent constructor","description":"InventoryPickupItemEvent constructor","scope":"public","name":"InventoryPickupItemEvent","args":[{"name":"Inventory","type":"final","description":"Inventory argument"},{"name":"Item","type":"final","description":"Item argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Item","io.wolfscript.event.Cancellable","io.wolfscript.event.Event","io.wolfscript.event.HandlerList","io.wolfscript.inventory.Inventory"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Item","modifier":"readonly","args":[],"description":"Get: Gets the Inventory that picked up the item","doc":{"return":["Inventory /\n    public Inventory getInventory() {\n        return inventory;\n    }\n\n    /** Gets the Item entity that was picked up","Item"]},"return":"io.wolfscript.entity.Item","scope":"public","title":"Get: Gets the Inventory that picked up the item"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.inventory.InventoryType":{"namespace":"io.wolfscript.event.inventory","title":"enum InventoryType","description":"enum InventoryType","name":"InventoryType","qualifiedname":"io.wolfscript.event.inventory.InventoryType","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"MERCHANT","value":"3,\"Villager\"","title":"A chest inventory, with 0, 9, 18, 27, 36, 45, or 54 slots of type","description":"A chest inventory, with 0, 9, 18, 27, 36, 45, or 54 slots of type CONTAINER. /\n    CHEST(27,\"Chest\"),\n    /** A dispenser inventory, with 9 slots of type CONTAINER. /\n    DISPENSER(9,\"Dispenser\"),\n    /** A dropper inventory, with 9 slots of type CONTAINER. /\n    DROPPER(9, \"Dropper\"),\n    /** A furnace inventory, with a RESULT slot, a CRAFTING slot, and a FUEL slot. /\n    FURNACE(3,\"Furnace\"),\n    /** A workbench inventory, with 9 CRAFTING slots and a RESULT slot. /\n    WORKBENCH(10,\"Crafting\"),\n    /** A player's crafting inventory, with 4 CRAFTING slots and a RESULT slot. Also implies that the 4 ARMOR slots are accessible. /\n    CRAFTING(5,\"Crafting\"),\n    /** An enchantment table inventory, with two CRAFTING slots and three enchanting buttons. /\n    ENCHANTING(2,\"Enchanting\"),\n    /** A brewing stand inventory, with one FUEL slot and three CRAFTING slots. /\n    BREWING(4,\"Brewing\"),\n    /** A player's inventory, with 9 QUICKBAR slots, 27 CONTAINER slots, and 4 ARMOR slots. The ARMOUR slots may not be visible to the player, though. /\n    PLAYER(36,\"Player\"),\n    /** The creative mode inventory, with only 9 QUICKBAR slots and nothing else. (The actual creative interface with the items is client-side and cannot be altered by the server.) /\n    CREATIVE(9,\"Creative\"),\n    /** The merchant inventory, with 2 TRADE-IN slots, and 1 RESULT slot.","doc":{}},{"code":"inventory","value":"","title":"inventory InventoryType","description":"inventory InventoryType","doc":{}},{"code":"27","value":"","title":"27 InventoryType","description":"27 InventoryType","doc":{}},{"code":"inventory","value":"","title":"inventory InventoryType","description":"inventory InventoryType","doc":{}},{"code":"3","value":"","title":"3 InventoryType","description":"3 InventoryType","doc":{}},{"code":"inventory","value":"","title":"inventory InventoryType","description":"inventory InventoryType","doc":{}},{"code":"1","value":"","title":"1 InventoryType","description":"1 InventoryType","doc":{}},{"code":"inventory","value":"","title":"inventory InventoryType","description":"inventory InventoryType","doc":{}},{"code":"5","value":"","title":"5 InventoryType","description":"5 InventoryType","doc":{}}],"properties":[{"name":"DefaultSize","modifier":"readonly","args":[],"description":"DefaultSize property","return":"int","scope":"public","title":"DefaultSize property"},{"name":"DefaultTitle","modifier":"readonly","args":[],"description":"DefaultTitle property","return":"String","scope":"public","title":"DefaultTitle property"}]},"io.wolfscript.event.inventory.PrepareItemCraftEvent":{"namespace":"io.wolfscript.event.inventory","title":"class PrepareItemCraftEvent","description":"class PrepareItemCraftEvent","name":"PrepareItemCraftEvent","qualifiedname":"io.wolfscript.event.inventory.PrepareItemCraftEvent","type":"class","scope":"public","extends":["io.wolfscript.event.inventory.InventoryEvent"],"constructors":[{"title":"PrepareItemCraftEvent constructor","description":"PrepareItemCraftEvent constructor","scope":"public","name":"PrepareItemCraftEvent","args":[{"name":"what","type":"io.wolfscript.inventory.CraftingInventory","description":"what argument"},{"name":"view","type":"io.wolfscript.inventory.InventoryView","description":"view argument"},{"name":"isRepair","type":"boolean","description":"isRepair argument"}]}],"methods":[{"title":"Get the recipe that has been formed. If this event was triggered by a","description":"Get the recipe that has been formed. If this event was triggered by a tool repair, this will be a temporary shapeless recipe representing the repair.","doc":{"return":["The recipe being crafted. /\n    public Recipe getRecipe() {\n        return matrix.getRecipe();\n    }\n\n    /**","The crafting inventory on which the recipe was formed. /\n    @Override\n    public CraftingInventory getInventory() {\n        return matrix;\n    }\n\n    /** Check if this event was triggered by a tool repair operation rather than a crafting recipe.","True if this is a repair."]},"scope":"public","return":"boolean","name":"isRepair","args":[]}],"imports":["io.wolfscript.event.HandlerList","io.wolfscript.inventory.CraftingInventory","io.wolfscript.inventory.InventoryView","io.wolfscript.inventory.Recipe"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.painting.0":{"namespace":"io.wolfscript.event","title":"{@link io.wolfscript.event.Event Events} relating to {@link","description":"{@link io.wolfscript.event.Event Events} relating to {@link io.wolfscript.entity.Painting paintings}, but deprecated for more general {@link io.wolfscript.event.hanging hanging} events.","name":"painting","qualifiedname":"io.wolfscript.event.painting.0","packagename":"io.wolfscript.event.painting","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.event.painting.PaintingBreakByEntityEvent","io.wolfscript.event.painting.PaintingEvent","io.wolfscript.event.painting.PaintingPlaceEvent"],"interfaces":[],"enums":["io.wolfscript.event.painting.RemoveCause"],"namespaces":[],"properties":[]},"io.wolfscript.event.painting.PaintingBreakByEntityEvent":{"namespace":"io.wolfscript.event.painting","title":"Triggered when a painting is removed by an entity","description":"Triggered when a painting is removed by an entity","doc":{"deprecated":["Use {@link io.wolfscript.event.hanging.HangingBreakByEntityEvent} instead."]},"name":"PaintingBreakByEntityEvent","qualifiedname":"io.wolfscript.event.painting.PaintingBreakByEntityEvent","deprecated":true,"type":"class","scope":"public","extends":["PaintingBreakEvent"],"constructors":[{"title":"PaintingBreakByEntityEvent constructor","description":"PaintingBreakByEntityEvent constructor","scope":"public","name":"PaintingBreakByEntityEvent","args":[{"name":"Painting","type":"final","description":"Painting argument"},{"name":"Entity","type":"final","description":"Entity argument"}]}],"methods":[],"imports":["io.wolfscript.Warning","io.wolfscript.entity.Entity","io.wolfscript.entity.Painting"],"properties":[{"name":"Remover","modifier":"readonly","args":[],"description":"Get: Gets the entity that removed the painting","doc":{"return":["the entity that removed the painting."]},"return":"io.wolfscript.entity.Entity","scope":"public","title":"Get: Gets the entity that removed the painting"}]},"io.wolfscript.event.painting.PaintingEvent":{"namespace":"io.wolfscript.event.painting","title":"Represents a painting-related event.","description":"Represents a painting-related event.","doc":{"deprecated":["Use {@link io.wolfscript.event.hanging.HangingEvent} instead."]},"name":"PaintingEvent","qualifiedname":"io.wolfscript.event.painting.PaintingEvent","deprecated":true,"type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.Event"],"constructors":[],"methods":[],"imports":["io.wolfscript.Warning","io.wolfscript.entity.Painting","io.wolfscript.event.Event"],"properties":[{"name":"Painting","modifier":"readonly","args":[],"description":"Get: Gets the painting involved in this event.","doc":{"return":["the painting"]},"return":"io.wolfscript.entity.Painting","scope":"public","title":"Get: Gets the painting involved in this event."}]},"io.wolfscript.event.painting.PaintingPlaceEvent":{"namespace":"io.wolfscript.event.painting","title":"Triggered when a painting is created in the world","description":"Triggered when a painting is created in the world","doc":{"deprecated":["Use {@link io.wolfscript.event.hanging.HangingPlaceEvent} instead."]},"name":"PaintingPlaceEvent","qualifiedname":"io.wolfscript.event.painting.PaintingPlaceEvent","deprecated":true,"type":"class","scope":"public","extends":["io.wolfscript.event.painting.PaintingEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PaintingPlaceEvent constructor","description":"PaintingPlaceEvent constructor","scope":"public","name":"PaintingPlaceEvent","args":[{"name":"Painting","type":"final","description":"Painting argument"},{"name":"Player","type":"final","description":"Player argument"},{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockFace","type":"final","description":"BlockFace argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.Warning","io.wolfscript.block.Block","io.wolfscript.block.BlockFace","io.wolfscript.entity.Painting","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"BlockFace","modifier":"readonly","args":[],"description":"Get: Returns the player placing the painting","doc":{"return":["Entity returns the player placing the painting /\n    public Player getPlayer() {\n        return player;\n    }\n\n    /** Returns the block that the painting was placed on","Block returns the block painting placed on /\n    public Block getBlock() {\n        return block;\n    }\n\n    /** Returns the face of the block that the painting was placed on","BlockFace returns the face of the block the painting was placed on"]},"return":"io.wolfscript.block.BlockFace","scope":"public","title":"Get: Returns the player placing the painting"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.painting.RemoveCause":{"namespace":"io.wolfscript.event.painting","title":"Triggered when a painting is removed","description":"Triggered when a painting is removed","doc":{"deprecated":["Use {@link io.wolfscript.event.hanging.HangingBreakEvent} instead. /\n@Deprecated\n@Warning(reason=\"This event has been replaced by HangingBreakEvent\")\npublic class PaintingBreakEvent extends PaintingEvent implements Cancellable {\n    private static final HandlerList handlers = new HandlerList();\n    private boolean cancelled;\n    private final RemoveCause cause;\n\n    public PaintingBreakEvent(final Painting painting, final RemoveCause cause) {\n        super(painting);\n        this.cause = cause;\n    }\n\n    /** Gets the cause for the painting's removal"],"return":["the RemoveCause for the painting's removal /\n    public RemoveCause getCause() {\n        return cause;\n    }\n\n    public boolean isCancelled() {\n        return cancelled;\n    }\n\n    public void setCancelled(boolean cancel) {\n        this.cancelled = cancel;\n    }\n\n    /** An enum to specify the cause of the removal"]},"name":"RemoveCause","qualifiedname":"io.wolfscript.event.painting.RemoveCause","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.Warning","io.wolfscript.entity.Painting","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"enum":[{"code":"PHYSICS","value":"","title":"Removed by an entity","description":"Removed by an entity /\n        ENTITY,\n        /** Removed by fire /\n        FIRE,\n        /** Removed by placing a block on it /\n        OBSTRUCTION,\n        /** Removed by water flowing over it /\n        WATER,\n        /** Removed by destroying the block behind it, etc","doc":{}}],"properties":[]},"io.wolfscript.event.player.0":{"namespace":"io.wolfscript.event","title":"{@link io.wolfscript.event.Event Events} relating to {@link","description":"{@link io.wolfscript.event.Event Events} relating to {@link io.wolfscript.entity.Player players}.","name":"player","qualifiedname":"io.wolfscript.event.player.0","packagename":"io.wolfscript.event.player","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.event.player.AsyncPlayerChatEvent","io.wolfscript.event.player.PlayerAchievementAwardedEvent","io.wolfscript.event.player.PlayerAnimationEvent","io.wolfscript.event.player.PlayerArmorStandManipulateEvent","io.wolfscript.event.player.PlayerBedEnterEvent","io.wolfscript.event.player.PlayerBedLeaveEvent","io.wolfscript.event.player.PlayerBucketEmptyEvent","io.wolfscript.event.player.PlayerBucketEvent","io.wolfscript.event.player.PlayerBucketFillEvent","io.wolfscript.event.player.PlayerChangedWorldEvent","io.wolfscript.event.player.PlayerChannelEvent","io.wolfscript.event.player.PlayerChatEvent","io.wolfscript.event.player.PlayerChatTabCompleteEvent","io.wolfscript.event.player.PlayerCommandPreprocessEvent","io.wolfscript.event.player.PlayerDropItemEvent","io.wolfscript.event.player.PlayerEditBookEvent","io.wolfscript.event.player.PlayerEggThrowEvent","io.wolfscript.event.player.PlayerEvent","io.wolfscript.event.player.PlayerExpChangeEvent","io.wolfscript.event.player.PlayerGameModeChangeEvent","io.wolfscript.event.player.PlayerInteractAtEntityEvent","io.wolfscript.event.player.PlayerInteractEntityEvent","io.wolfscript.event.player.PlayerInteractEvent","io.wolfscript.event.player.PlayerInventoryEvent","io.wolfscript.event.player.PlayerItemBreakEvent","io.wolfscript.event.player.PlayerItemConsumeEvent","io.wolfscript.event.player.PlayerItemHeldEvent","io.wolfscript.event.player.PlayerJoinEvent","io.wolfscript.event.player.PlayerKickEvent","io.wolfscript.event.player.PlayerLevelChangeEvent","io.wolfscript.event.player.PlayerMoveEvent","io.wolfscript.event.player.PlayerPickupItemEvent","io.wolfscript.event.player.PlayerPortalEvent","io.wolfscript.event.player.PlayerQuitEvent","io.wolfscript.event.player.PlayerRegisterChannelEvent","io.wolfscript.event.player.PlayerRespawnEvent","io.wolfscript.event.player.PlayerShearEntityEvent","io.wolfscript.event.player.PlayerStatisticIncrementEvent","io.wolfscript.event.player.PlayerTeleportEvent","io.wolfscript.event.player.PlayerToggleFlightEvent","io.wolfscript.event.player.PlayerToggleSneakEvent","io.wolfscript.event.player.PlayerToggleSprintEvent","io.wolfscript.event.player.PlayerUnleashEntityEvent","io.wolfscript.event.player.PlayerUnregisterChannelEvent","io.wolfscript.event.player.PlayerVelocityEvent"],"interfaces":[],"enums":["io.wolfscript.event.player.PlayerAnimationType","io.wolfscript.event.player.Result","io.wolfscript.event.player.State"],"namespaces":[],"properties":[]},"io.wolfscript.event.player.AsyncPlayerChatEvent":{"namespace":"io.wolfscript.event.player","title":"This event will sometimes fire synchronously, depending on how it was","description":"This event will sometimes fire synchronously, depending on how it was triggered. <p> The constructor provides a boolean to indicate if the event was fired synchronously or asynchronously. When asynchronous, this event can be called from any thread, sans the main thread, and has limited access to the API. <p> If a player is the direct cause of this event by an incoming packet, this event will be asynchronous. If a plugin triggers this event by compelling a player to chat, this event will be synchronous. <p> Care should be taken to check {@link #isAsynchronous()} and treat the event appropriately.","name":"AsyncPlayerChatEvent","qualifiedname":"io.wolfscript.event.player.AsyncPlayerChatEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["java.util.IllegalFormatException","java.util.Set","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Recipients","modifier":"readonly","args":[],"description":"Recipients property","doc":{"param":["async This changes the event to a synchronous state.","who the chat sender","message the message sent","players the players to receive the message. This may be a lazy or unmodifiable collection. /\n    public AsyncPlayerChatEvent(final boolean async, final Player who, final String message, final Set<Player> players) {\n        super(who, async);\n        this.message = message;\n        recipients = players;\n    }\n\n    /** Gets the message that the player is attempting to send. This message will be used with {@link #getFormat()}.","message New message that the player will send /\n    public void setMessage(String message) {\n        this.message = message;\n    }\n\n    /** Gets the format to use to display this chat message. <p> When this event finishes execution, the first format parameter is the {@link Player#getDisplayName()} and the second parameter is {@link #getMessage()}","format {@link String#format(String, Object...)} compatible format string"],"return":["Message the player is attempting to send /\n    public String getMessage() {\n        return message;\n    }\n\n    /** Sets the message that the player will send. This message will be used with {@link #getFormat()}.","{@link String#format(String, Object...)} compatible format string /\n    public String getFormat() {\n        return format;\n    }\n\n    /** Sets the format to use to display this chat message. <p> When this event finishes execution, the first format parameter is the {@link Player#getDisplayName()} and the second parameter is {@link #getMessage()}","All Players who will see this chat message"],"throws":["IllegalFormatException if the underlying API throws the exception","NullPointerException if format is null"],"see":["String#format(String, Object...) /\n    public void setFormat(final String format) throws IllegalFormatException, NullPointerException {\n        // Oh for a better way to do this!\n        try {\n            String.format(format, player, message);\n        } catch (RuntimeException ex) {\n            ex.fillInStackTrace();\n            throw ex;\n        }\n\n        this.format = format;\n    }\n\n    /** Gets a set of recipients that this chat message will be displayed to. <p> The set returned is not guaranteed to be mutable and may auto-populate on access. Any listener accessing the returned set should be aware that it may reduce performance for a lazy set implementation. <p> Listeners should be aware that modifying the list may throw {@link UnsupportedOperationException} if the event caller provides an unmodifiable set."]},"return":"Set<Player>","scope":"public","title":"Recipients property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerAchievementAwardedEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player earns an achievement.","description":"Called when a player earns an achievement.","name":"PlayerAchievementAwardedEvent","qualifiedname":"io.wolfscript.event.player.PlayerAchievementAwardedEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerAchievementAwardedEvent constructor","description":"PlayerAchievementAwardedEvent constructor","scope":"public","name":"PlayerAchievementAwardedEvent","args":[{"name":"player","type":"io.wolfscript.entity.Player","description":"player argument"},{"name":"achievement","type":"io.wolfscript.Achievement","description":"achievement argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.Achievement","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Achievement","modifier":"readonly","args":[],"description":"Get: Gets the Achievement being awarded.","doc":{"return":["the achievement being awarded"]},"return":"io.wolfscript.Achievement","scope":"public","title":"Get: Gets the Achievement being awarded."},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerAnimationEvent":{"namespace":"io.wolfscript.event.player","title":"Represents a player animation event","description":"Represents a player animation event","name":"PlayerAnimationEvent","qualifiedname":"io.wolfscript.event.player.PlayerAnimationEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"AnimationType","modifier":"readonly","args":[],"description":"Get: Construct a new PlayerAnimation event","doc":{"param":["player The player instance /\n    public PlayerAnimationEvent(final Player player) {\n        super(player);\n\n        // Only supported animation type for now:\n        animationType = PlayerAnimationType.ARM_SWING;\n    }\n\n    /** Get the type of this animation event"],"return":["the animation type"]},"return":"io.wolfscript.event.player.PlayerAnimationType","scope":"public","title":"Get: Construct a new PlayerAnimation event"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerAnimationType":{"namespace":"io.wolfscript.event.player","title":"Different types of player animations","description":"Different types of player animations","name":"PlayerAnimationType","qualifiedname":"io.wolfscript.event.player.PlayerAnimationType","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[],"properties":[]},"io.wolfscript.event.player.PlayerArmorStandManipulateEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player interacts with an armor stand and will either swap, retrieve or place an item.","description":"Called when a player interacts with an armor stand and will either swap, retrieve or place an item.","name":"PlayerArmorStandManipulateEvent","qualifiedname":"io.wolfscript.event.player.PlayerArmorStandManipulateEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerInteractEntityEvent"],"constructors":[{"title":"PlayerArmorStandManipulateEvent constructor","description":"PlayerArmorStandManipulateEvent constructor","scope":"public","name":"PlayerArmorStandManipulateEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"ArmorStand","type":"final","description":"ArmorStand argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"},{"name":"EquipmentSlot","type":"final","description":"EquipmentSlot argument"}]}],"methods":[],"imports":["io.wolfscript.inventory.EquipmentSlot","io.wolfscript.entity.Player","io.wolfscript.entity.ArmorStand","io.wolfscript.event.HandlerList","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"RightClicked","modifier":"readonly","args":[],"description":"RightClicked property","return":"io.wolfscript.entity.ArmorStand","scope":"public","title":"RightClicked property"},{"name":"Slot","modifier":"readonly","args":[],"description":"Get: Returns the item held by the player. If this Item is null and the armor stand Item is also null, there will be no transaction between the player and the armor stand. If the Player's item is null, but the armor stand item is not then the player will obtain the armor stand item. In the case that the Player's item is not null, but the armor stand item is null, the players item will be placed on the armor stand. If both items are not null, the items will be swapped. In the case that the event is cancelled the original items will remain the same.","doc":{"return":["the item held by the player. /\r\n    public ItemStack getPlayerItem() {\r\n        return this.playerItem;\r\n    }\r\n\r\n    /** Returns the item held by the armor stand. If this Item is null and the player's Item is also null, there will be no transaction between the player and the armor stand. If the Player's item is null, but the armor stand item is not then the player will obtain the armor stand item. In the case that the Player's item is not null, but the armor stand item is null, the players item will be placed on the armor stand. If both items are not null, the items will be swapped. In the case that the event is cancelled the original items will remain the same.","the item held by the armor stand. /\r\n    public ItemStack getArmorStandItem() {\r\n        return this.armorStandItem;\r\n    }\r\n\r\n    /** Returns the raw item slot of the armor stand in this event.","the index of the item obtained or placed of the armor stand."]},"return":"io.wolfscript.inventory.EquipmentSlot","scope":"public","title":"Get: Returns the item held by the player. If this Item is null and the armor stand Item is also null,"}]},"io.wolfscript.event.player.PlayerBedEnterEvent":{"namespace":"io.wolfscript.event.player","title":"This event is fired when the player is almost about to enter the bed.","description":"This event is fired when the player is almost about to enter the bed.","name":"PlayerBedEnterEvent","qualifiedname":"io.wolfscript.event.player.PlayerBedEnterEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerBedEnterEvent constructor","description":"PlayerBedEnterEvent constructor","scope":"public","name":"PlayerBedEnterEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Block","type":"final","description":"Block argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.block.Block","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Bed","modifier":"readonly","args":[],"description":"Get: Returns the bed block involved in this event.","doc":{"return":["the bed block involved in this event"]},"return":"io.wolfscript.block.Block","scope":"public","title":"Get: Returns the bed block involved in this event."},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerBedLeaveEvent":{"namespace":"io.wolfscript.event.player","title":"This event is fired when the player is leaving a bed.","description":"This event is fired when the player is leaving a bed.","name":"PlayerBedLeaveEvent","qualifiedname":"io.wolfscript.event.player.PlayerBedLeaveEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"constructors":[{"title":"PlayerBedLeaveEvent constructor","description":"PlayerBedLeaveEvent constructor","scope":"public","name":"PlayerBedLeaveEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Block","type":"final","description":"Block argument"}]}],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.entity.Player","io.wolfscript.event.HandlerList"],"properties":[{"name":"Bed","modifier":"readonly","args":[],"description":"Get: Returns the bed block involved in this event.","doc":{"return":["the bed block involved in this event"]},"return":"io.wolfscript.block.Block","scope":"public","title":"Get: Returns the bed block involved in this event."},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.player.PlayerBucketEmptyEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player empties a bucket","description":"Called when a player empties a bucket","name":"PlayerBucketEmptyEvent","qualifiedname":"io.wolfscript.event.player.PlayerBucketEmptyEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerBucketEvent"],"constructors":[{"title":"PlayerBucketEmptyEvent constructor","description":"PlayerBucketEmptyEvent constructor","scope":"public","name":"PlayerBucketEmptyEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockFace","type":"final","description":"BlockFace argument"},{"name":"Material","type":"final","description":"Material argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"}]}],"methods":[],"imports":["io.wolfscript.Material","io.wolfscript.block.Block","io.wolfscript.block.BlockFace","io.wolfscript.entity.Player","io.wolfscript.event.HandlerList","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.player.PlayerBucketEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player interacts with a Bucket","description":"Called when a player interacts with a Bucket","name":"PlayerBucketEvent","qualifiedname":"io.wolfscript.event.player.PlayerBucketEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerBucketEvent constructor","description":"PlayerBucketEvent constructor","scope":"public","name":"PlayerBucketEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockFace","type":"final","description":"BlockFace argument"},{"name":"Material","type":"final","description":"Material argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.Block","io.wolfscript.block.BlockFace","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"BlockFace","modifier":"readonly","args":[],"description":"Get: Returns the bucket used in this event","doc":{"return":["the used bucket /\n    public Material getBucket() {\n        return bucket;\n    }\n\n    /** Get the resulting item in hand after the bucket event","Itemstack hold in hand after the event. /\n    public ItemStack getItemStack() {\n        return itemStack;\n    }\n\n    /** Set the item in hand after the event","the blicked block /\n    public Block getBlockClicked() {\n        return blockClicked;\n    }\n\n    /** Get the face on the clicked block","the clicked face"],"param":["itemStack the new held itemstack after the bucket event. /\n    public void setItemStack(ItemStack itemStack) {\n        this.itemStack = itemStack;\n    }\n\n    /** Return the block clicked"]},"return":"io.wolfscript.block.BlockFace","scope":"public","title":"Get: Returns the bucket used in this event"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerBucketFillEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player fills a bucket","description":"Called when a player fills a bucket","name":"PlayerBucketFillEvent","qualifiedname":"io.wolfscript.event.player.PlayerBucketFillEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerBucketEvent"],"constructors":[{"title":"PlayerBucketFillEvent constructor","description":"PlayerBucketFillEvent constructor","scope":"public","name":"PlayerBucketFillEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockFace","type":"final","description":"BlockFace argument"},{"name":"Material","type":"final","description":"Material argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"}]}],"methods":[],"imports":["io.wolfscript.Material","io.wolfscript.block.Block","io.wolfscript.block.BlockFace","io.wolfscript.entity.Player","io.wolfscript.event.HandlerList","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.player.PlayerChangedWorldEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player switches to another world.","description":"Called when a player switches to another world.","name":"PlayerChangedWorldEvent","qualifiedname":"io.wolfscript.event.player.PlayerChangedWorldEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"constructors":[{"title":"PlayerChangedWorldEvent constructor","description":"PlayerChangedWorldEvent constructor","scope":"public","name":"PlayerChangedWorldEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"World","type":"final","description":"World argument"}]}],"methods":[],"imports":["io.wolfscript.World","io.wolfscript.entity.Player","io.wolfscript.event.HandlerList"],"properties":[{"name":"From","modifier":"readonly","args":[],"description":"Get: Gets the world the player is switching from.","doc":{"return":[" player's previous world"]},"return":"io.wolfscript.World","scope":"public","title":"Get: Gets the world the player is switching from."},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.player.PlayerChannelEvent":{"namespace":"io.wolfscript.event.player","title":"This event is called after a player registers or unregisters a new plugin","description":"This event is called after a player registers or unregisters a new plugin channel.","name":"PlayerChannelEvent","qualifiedname":"io.wolfscript.event.player.PlayerChannelEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.player.PlayerEvent"],"constructors":[{"title":"PlayerChannelEvent constructor","description":"PlayerChannelEvent constructor","scope":"public","name":"PlayerChannelEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"String","type":"final","description":"String argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.HandlerList"],"properties":[{"name":"Channel","modifier":"readonly","args":[],"describe":"final","description":"Channel property","return":"String","scope":"public","title":"Channel property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.player.PlayerChatEvent":{"namespace":"io.wolfscript.event.player","title":"Holds information for player chat and commands","description":"Holds information for player chat and commands","doc":{"deprecated":["This event will fire from the main thread and allows the use of all of the WolfScript API, unlike the {@link AsyncPlayerChatEvent}. <p> Listening to this event forces chat to wait for the main thread which causes delays for chat. {@link AsyncPlayerChatEvent} is the encouraged alternative for thread safe implementations."]},"name":"PlayerChatEvent","qualifiedname":"io.wolfscript.event.player.PlayerChatEvent","deprecated":true,"type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerChatEvent constructor","description":"PlayerChatEvent constructor","scope":"public","name":"PlayerChatEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"String","type":"final","description":"String argument"}]},{"title":"PlayerChatEvent constructor","description":"PlayerChatEvent constructor","scope":"public","name":"PlayerChatEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"String","type":"final","description":"String argument"},{"name":"String","type":"final","description":"String argument"},{"name":"Set","type":"final","description":"Set argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["java.util.HashSet","java.util.Set","org.apache.commons.lang.Validate","io.wolfscript.Warning","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Recipients","modifier":"readonly","args":[],"description":"Get: Gets the message that the player is attempting to send","doc":{"return":["Message the player is attempting to send /\n    public String getMessage() {\n        return message;\n    }\n\n    /** Sets the message that the player will send","String.Format compatible format string /\n    public String getFormat() {\n        return format;\n    }\n\n    /** Sets the format to use to display this chat message","All Players who will see this chat message"],"param":["message New message that the player will send /\n    public void setMessage(String message) {\n        this.message = message;\n    }\n\n    /** Sets the player that this message will display as, or command will be executed as","player New player which this event will execute as /\n    public void setPlayer(final Player player) {\n        Validate.notNull(player, \"Player cannot be null\");\n        this.player = player;\n    }\n\n    /** Gets the format to use to display this chat message","format String.Format compatible format string /\n    public void setFormat(final String format) {\n        // Oh for a better way to do this!\n        try {\n            String.format(format, player, message);\n        } catch (RuntimeException ex) {\n            ex.fillInStackTrace();\n            throw ex;\n        }\n\n        this.format = format;\n    }\n\n    /** Gets a set of recipients that this chat message will be displayed to"]},"return":"Set<Player>","scope":"public","title":"Get: Gets the message that the player is attempting to send"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerChatTabCompleteEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player attempts to tab-complete a chat message.","description":"Called when a player attempts to tab-complete a chat message.","name":"PlayerChatTabCompleteEvent","qualifiedname":"io.wolfscript.event.player.PlayerChatTabCompleteEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"constructors":[{"title":"PlayerChatTabCompleteEvent constructor","description":"PlayerChatTabCompleteEvent constructor","scope":"public","name":"PlayerChatTabCompleteEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"String","type":"final","description":"String argument"},{"name":"Collection","type":"final","description":"Collection argument"}]}],"methods":[],"imports":["java.util.Collection","org.apache.commons.lang.Validate","io.wolfscript.entity.Player","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"TabCompletions","modifier":"readonly","args":[],"description":"Get: Gets the chat message being tab-completed.","doc":{"return":["the chat message /\n    public String getChatMessage() {\n        return message;\n    }\n\n    /** Gets the last 'token' of the message being tab-completed. <p> The token is the substring starting with the character after the last space in the message.","The last token for the chat message /\n    public String getLastToken() {\n        return lastToken;\n    }\n\n    /** This is the collection of completions for this event.","the current completions"]},"return":"Collection<String>","scope":"public","title":"Get: Gets the chat message being tab-completed."}]},"io.wolfscript.event.player.PlayerCommandPreprocessEvent":{"namespace":"io.wolfscript.event.player","title":"This event is called whenever a player runs a command (by placing a slash","description":"This event is called whenever a player runs a command (by placing a slash at the start of their message). It is called early in the command handling process, and modifications in this event (via {@link #setMessage(String)}) will be shown in the behavior. <p> Many plugins will have <b>no use for this event</b>, and you should attempt to avoid using it if it is not necessary. <p> Some examples of valid uses for this event are: <ul> <li>Logging executed commands to a separate file <li>Variable substitution. For example, replacing <code>${nearbyPlayer}</code> with the name of the nearest other player, or simulating the <code>@a</code> and <code>@p</code> decorators used by Command Blocks in plugins that do not handle it. <li>Conditionally blocking commands belonging to other plugins. For example, blocking the use of the <code>/home</code> command in a combat arena. <li>Per-sender command aliases. For example, after a player runs the command <code>/calias cr gamemode creative</code>, the next time they run <code>/cr</code>, it gets replaced into <code>/gamemode creative</code>. (Global command aliases should be done by registering the alias.) </ul> <p> Examples of incorrect uses are: <ul> <li>Using this event to run command logic </ul> <p> If the event is cancelled, processing of the command will halt. <p> The state of whether or not there is a slash (<code>/</code>) at the beginning of the message should be preserved. If a slash is added or removed, unexpected behavior may result.","name":"PlayerCommandPreprocessEvent","qualifiedname":"io.wolfscript.event.player.PlayerCommandPreprocessEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerCommandPreprocessEvent constructor","description":"PlayerCommandPreprocessEvent constructor","scope":"public","name":"PlayerCommandPreprocessEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"String","type":"final","description":"String argument"}]},{"title":"PlayerCommandPreprocessEvent constructor","description":"PlayerCommandPreprocessEvent constructor","scope":"public","name":"PlayerCommandPreprocessEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"String","type":"final","description":"String argument"},{"name":"Set","type":"final","description":"Set argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["java.util.HashSet","java.util.Set","org.apache.commons.lang.Validate","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Recipients","modifier":"readonly","args":[],"deprecated":true,"description":"Get: Gets the command that the player is attempting to send. <p> All commands begin with a special character; implementations do not consider the first character when executing the content.","doc":{"return":["Message the player is attempting to send /\n    public String getMessage() {\n        return message;\n    }\n\n    /** Sets the command that the player will send. <p> All commands begin with a special character; implementations do not consider the first character when executing the content.","String.Format compatible format string /\n    @Deprecated\n    public String getFormat() {\n        return format;\n    }\n\n    /** Sets the format to use to display this chat message","All Players who will see this chat message"],"param":["command New message that the player will send","player New player which this event will execute as","format String.Format compatible format string /\n    @Deprecated\n    public void setFormat(final String format) {\n        // Oh for a better way to do this!\n        try {\n            String.format(format, player, message);\n        } catch (RuntimeException ex) {\n            ex.fillInStackTrace();\n            throw ex;\n        }\n\n        this.format = format;\n    }\n\n    /** Gets a set of recipients that this chat message will be displayed to. <p> The set returned is not guaranteed to be mutable and may auto-populate on access. Any listener accessing the returned set should be aware that it may reduce performance for a lazy set implementation. Listeners should be aware that modifying the list may throw {@link UnsupportedOperationException} if the event caller provides an unmodifiable set."],"throws":["IllegalArgumentException if command is null or empty /\n    public void setMessage(String command) throws IllegalArgumentException {\n        Validate.notNull(command, \"Command cannot be null\");\n        Validate.notEmpty(command, \"Command cannot be empty\");\n        this.message = command;\n    }\n\n    /** Sets the player that this command will be executed as.","IllegalArgumentException if the player provided is null /\n    public void setPlayer(final Player player) throws IllegalArgumentException {\n        Validate.notNull(player, \"Player cannot be null\");\n        this.player = player;\n    }\n\n    /** Gets the format to use to display this chat message"],"deprecated":["This method is provided for backward compatibility with no guarantee to the use of the format.","This method is provided for backward compatibility with no guarantee to the effect of modifying the format.","This method is provided for backward compatibility with no guarantee to the effect of viewing or modifying the set."]},"return":"Set<Player>","scope":"public","title":"Get: Gets the command that the player is attempting to send."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerDropItemEvent":{"namespace":"io.wolfscript.event.player","title":"Thrown when a player drops an item from their inventory","description":"Thrown when a player drops an item from their inventory","name":"PlayerDropItemEvent","qualifiedname":"io.wolfscript.event.player.PlayerDropItemEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerDropItemEvent constructor","description":"PlayerDropItemEvent constructor","scope":"public","name":"PlayerDropItemEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Item","type":"final","description":"Item argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Item","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"ItemDrop","modifier":"readonly","args":[],"description":"Get: Gets the ItemDrop created by the player","doc":{"return":["ItemDrop created by the player"]},"return":"io.wolfscript.entity.Item","scope":"public","title":"Get: Gets the ItemDrop created by the player"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerEditBookEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player edits or signs a book and quill item. If the event is","description":"Called when a player edits or signs a book and quill item. If the event is cancelled, no changes are made to the BookMeta","name":"PlayerEditBookEvent","qualifiedname":"io.wolfscript.event.player.PlayerEditBookEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerEditBookEvent constructor","description":"PlayerEditBookEvent constructor","scope":"public","name":"PlayerEditBookEvent","args":[{"name":"who","type":"io.wolfscript.entity.Player","description":"who argument"},{"name":"slot","type":"int","description":"slot argument"},{"name":"previousBookMeta","type":"io.wolfscript.inventory.meta.BookMeta","description":"previousBookMeta argument"},{"name":"newBookMeta","type":"io.wolfscript.inventory.meta.BookMeta","description":"newBookMeta argument"},{"name":"isSigning","type":"boolean","description":"isSigning argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.inventory.meta.BookMeta"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Signing","modifier":"writeonly","args":[{"name":"signing","type":"boolean","description":"whether or not the book is being signed."}],"description":"Set: Gets the book meta currently on the book. <p> Note: this is a copy of the book meta. You cannot use this object to change the existing book meta.","doc":{"return":["the book meta currently on the book /\n    public BookMeta getPreviousBookMeta() {\n        return previousBookMeta.clone();\n    }\n\n    /** Gets the book meta that the player is attempting to add to the book. <p> Note: this is a copy of the proposed new book meta. Use {@link #setNewBookMeta(BookMeta)} to change what will actually be added to the book.","the book meta that the player is attempting to add /\n    public BookMeta getNewBookMeta() {\n        return newBookMeta.clone();\n    }\n\n    /** Gets the inventory slot number for the book item that triggered this event. <p> This is a slot number on the player's hotbar in the range 0-8.","the inventory slot number that the book item occupies /\n    public int getSlot() {\n        return slot;\n    }\n\n    /** Sets the book meta that will actually be added to the book.","true if the book is being signed /\n    public boolean isSigning() {\n        return isSigning;\n    }\n\n    /** Sets whether or not the book is being signed. If a book is signed the Material changes from BOOK_AND_QUILL to WRITTEN_BOOK."],"throws":["IllegalArgumentException if the new book meta is null /\n    public void setNewBookMeta(BookMeta newBookMeta) throws IllegalArgumentException {\n        Validate.notNull(newBookMeta, \"New book meta must not be null\");\n        WolfScript.getItemFactory().equals(newBookMeta, null);\n        this.newBookMeta = newBookMeta.clone();\n    }\n\n    /** Gets whether or not the book is being signed. If a book is signed the Material changes from BOOK_AND_QUILL to WRITTEN_BOOK."]},"return":"void","scope":"public","title":"Set: Gets the book meta currently on the book."}]},"io.wolfscript.event.player.PlayerEggThrowEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player throws an egg and it might hatch","description":"Called when a player throws an egg and it might hatch","name":"PlayerEggThrowEvent","qualifiedname":"io.wolfscript.event.player.PlayerEggThrowEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"constructors":[{"title":"PlayerEggThrowEvent constructor","description":"PlayerEggThrowEvent constructor","scope":"public","name":"PlayerEggThrowEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Egg","type":"final","description":"Egg argument"},{"name":"boolean","type":"final","description":"boolean argument"},{"name":"byte","type":"final","description":"byte argument"},{"name":"EntityType","type":"final","description":"EntityType argument"}]},{"title":"PlayerEggThrowEvent constructor","description":"PlayerEggThrowEvent constructor","scope":"public","name":"PlayerEggThrowEvent","args":[{"name":"player","type":"io.wolfscript.entity.Player","description":"player argument"},{"name":"egg","type":"io.wolfscript.entity.Egg","description":"egg argument"},{"name":"hatching","type":"boolean","description":"hatching argument"},{"name":"numHatches","type":"byte","description":"numHatches argument"},{"name":"hatchingType","type":"io.wolfscript.entity.CreatureType","description":"hatchingType argument"}]}],"methods":[],"imports":["io.wolfscript.entity.CreatureType","io.wolfscript.entity.Egg","io.wolfscript.entity.EntityType","io.wolfscript.entity.Player","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"NumHatches","modifier":"writeonly","args":[{"name":"numHatches","type":"byte","description":"The number of mobs coming out of the egg"}],"description":"Set: Gets the egg involved in this event.","doc":{"return":["the egg involved in this event /\n    public Egg getEgg() {\n        return egg;\n    }\n\n    /** Gets whether the egg is hatching or not. Will be what the server would've done without interaction.","boolean Whether the egg is going to hatch or not /\n    public boolean isHatching() {\n        return hatching;\n    }\n\n    /** Sets whether the egg will hatch or not.","The type of the mob being hatched by the egg","The type of the mob being hatched by the egg /\n    public EntityType getHatchingType() {\n        return hatchType;\n    }\n\n    /** Change the type of mob being hatched by the egg","The number of mobs going to be hatched by the egg /\n    public byte getNumHatches() {\n        return numHatches;\n    }\n\n    /** Change the number of mobs coming out of the hatched egg <p> The boolean hatching will override this number. Ie. If hatching = false, this number will not matter"],"deprecated":["In favour of {@link #getHatchingType()}. /\n    @Deprecated\n    public CreatureType getHatchType() {\n        return CreatureType.fromEntityType(hatchType);\n    }\n\n    /** Get the type of the mob being hatched (EntityType.CHICKEN by default)","In favour of {@link #setHatchingType(EntityType)}. /\n    @Deprecated\n    public void setHatchType(CreatureType hatchType) {\n        this.hatchType = hatchType.toEntityType();\n    }\n\n    /** Change the type of mob being hatched by the egg"]},"return":"void","scope":"public","title":"Set: Gets the egg involved in this event."}]},"io.wolfscript.event.player.PlayerEvent":{"namespace":"io.wolfscript.event.player","title":"Represents a player related event","description":"Represents a player related event","name":"PlayerEvent","qualifiedname":"io.wolfscript.event.player.PlayerEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.Event"],"constructors":[{"title":"PlayerEvent constructor","description":"PlayerEvent constructor","scope":"public","name":"PlayerEvent","args":[{"name":"Player","type":"final","description":"Player argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.Event"],"properties":[{"name":"Player","modifier":"readonly","args":[],"describe":"final","description":"Get: Returns the player involved in this event","doc":{"return":["Player who is involved in this event"]},"return":"io.wolfscript.entity.Player","scope":"public","title":"Get: Returns the player involved in this event"}]},"io.wolfscript.event.player.PlayerExpChangeEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a players experience changes naturally","description":"Called when a players experience changes naturally","name":"PlayerExpChangeEvent","qualifiedname":"io.wolfscript.event.player.PlayerExpChangeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"constructors":[{"title":"PlayerExpChangeEvent constructor","description":"PlayerExpChangeEvent constructor","scope":"public","name":"PlayerExpChangeEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Amount","modifier":"writeonly","args":[{"name":"amount","type":"int","description":"The amount of experience to set"}],"description":"Set: Get the amount of experience the player will receive","doc":{"return":["The amount of experience /\n    public int getAmount() {\n        return exp;\n    }\n\n    /** Set the amount of experience the player will receive"]},"return":"void","scope":"public","title":"Set: Get the amount of experience the player will receive"}]},"io.wolfscript.event.player.PlayerGameModeChangeEvent":{"namespace":"io.wolfscript.event.player","title":"Called when the GameMode of the player is changed.","description":"Called when the GameMode of the player is changed.","name":"PlayerGameModeChangeEvent","qualifiedname":"io.wolfscript.event.player.PlayerGameModeChangeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerGameModeChangeEvent constructor","description":"PlayerGameModeChangeEvent constructor","scope":"public","name":"PlayerGameModeChangeEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"GameMode","type":"final","description":"GameMode argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.GameMode","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"NewGameMode","modifier":"readonly","args":[],"description":"Get: Gets the GameMode the player is switched to.","doc":{"return":[" player's new GameMode"]},"return":"io.wolfscript.GameMode","scope":"public","title":"Get: Gets the GameMode the player is switched to."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerInteractAtEntityEvent":{"namespace":"io.wolfscript.event.player","title":"Represents an event that is called when a player right clicks an entity","description":"Represents an event that is called when a player right clicks an entity with a location on the entity the was clicked.","name":"PlayerInteractAtEntityEvent","qualifiedname":"io.wolfscript.event.player.PlayerInteractAtEntityEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerInteractEntityEvent"],"constructors":[{"title":"PlayerInteractAtEntityEvent constructor","description":"PlayerInteractAtEntityEvent constructor","scope":"public","name":"PlayerInteractAtEntityEvent","args":[{"name":"who","type":"io.wolfscript.entity.Player","description":"who argument"},{"name":"clickedEntity","type":"io.wolfscript.entity.Entity","description":"clickedEntity argument"},{"name":"position","type":"io.wolfscript.util.Vector","description":"position argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.Player","io.wolfscript.event.HandlerList","io.wolfscript.util.Vector"],"properties":[{"name":"ClickedPosition","modifier":"readonly","args":[],"description":"ClickedPosition property","return":"io.wolfscript.util.Vector","scope":"public","title":"ClickedPosition property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.player.PlayerInteractEntityEvent":{"namespace":"io.wolfscript.event.player","title":"Represents an event that is called when a player right clicks an entity.","description":"Represents an event that is called when a player right clicks an entity.","name":"PlayerInteractEntityEvent","qualifiedname":"io.wolfscript.event.player.PlayerInteractEntityEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerInteractEntityEvent constructor","description":"PlayerInteractEntityEvent constructor","scope":"public","name":"PlayerInteractEntityEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Entity","type":"final","description":"Entity argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"RightClicked","modifier":"readonly","args":[],"description":"Get: Gets the entity that was rightclicked by the player.","doc":{"return":["entity right clicked by player"]},"return":"io.wolfscript.entity.Entity","scope":"public","title":"Get: Gets the entity that was rightclicked by the player."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerInteractEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player interacts with an object or air.","description":"Called when a player interacts with an object or air. <p> This event will fire as cancelled if the vanilla behavior is to do nothing (e.g interacting with air)","name":"PlayerInteractEvent","qualifiedname":"io.wolfscript.event.player.PlayerInteractEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerInteractEvent constructor","description":"PlayerInteractEvent constructor","scope":"public","name":"PlayerInteractEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Action","type":"final","description":"Action argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"},{"name":"Block","type":"final","description":"Block argument"},{"name":"BlockFace","type":"final","description":"BlockFace argument"}]}],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.block.BlockFace","io.wolfscript.event.HandlerList","io.wolfscript.inventory.ItemStack","io.wolfscript.Material","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.block.Action"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"UseItemInHand","modifier":"writeonly","args":[{"name":"useItemInHand","type":"io.wolfscript.event.player.Result","description":"the action to take with the item in hand"}],"description":"Set: Returns the action type","doc":{"return":["Action returns the type of interaction /\n    public Action getAction() {\n        return action;\n    }\n\n    /** Gets the cancellation state of this event. Set to true if you want to prevent buckets from placing water and so forth","boolean cancellation state /\n    public boolean isCancelled() {\n        return useInteractedBlock() == Result.DENY;\n    }\n\n    /** Sets the cancellation state of this event. A canceled event will not be executed in the server, but will still pass to other plugins <p> Canceling this event will prevent use of food (player won't lose the food item), prevent bows/snowballs/eggs from firing, etc. (player won't lose the ammo)","ItemStack the item used /\n    public ItemStack getItem() {\n        return this.item;\n    }\n\n    /** Convenience method. Returns the material of the item represented by this event","Material the material of the item used /\n    public Material getMaterial() {\n        if (!hasItem()) {\n            return Material.AIR;\n        }\n\n        return item.getType();\n    }\n\n    /** Check if this event involved a block","boolean true if it did /\n    public boolean hasBlock() {\n        return this.blockClicked != null;\n    }\n\n    /** Check if this event involved an item","boolean true if it did /\n    public boolean hasItem() {\n        return this.item != null;\n    }\n\n    /** Convenience method to inform the user whether this was a block placement event.","boolean true if the item in hand was a block /\n    public boolean isBlockInHand() {\n        if (!hasItem()) {\n            return false;\n        }\n\n        return item.getType().isBlock();\n    }\n\n    /** Returns the clicked block","Block returns the block clicked with this item. /\n    public Block getClickedBlock() {\n        return blockClicked;\n    }\n\n    /** Returns the face of the block that was clicked","BlockFace returns the face of the block that was clicked /\n    public BlockFace getBlockFace() {\n        return blockFace;\n    }\n\n    /** This controls the action to take with the block (if any) that was clicked on. This event gets processed for all blocks, but most don't have a default action","the action to take with the interacted block /\n    public Result useInteractedBlock() {\n        return useClickedBlock;\n    }\n\n    /**","the action to take with the item in hand /\n    public Result useItemInHand() {\n        return useItemInHand;\n    }\n\n    /**"]},"return":"void","scope":"public","title":"Set: Returns the action type"}]},"io.wolfscript.event.player.PlayerInventoryEvent":{"namespace":"io.wolfscript.event.player","title":"Represents a player related inventory event; note that this event never","description":"Represents a player related inventory event; note that this event never actually did anything","doc":{"deprecated":["Use {@link InventoryClickEvent} or {@link InventoryOpenEvent} instead, or one of the other inventory events in {@link io.wolfscript.event.inventory}."]},"name":"PlayerInventoryEvent","qualifiedname":"io.wolfscript.event.player.PlayerInventoryEvent","deprecated":true,"type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"constructors":[{"title":"PlayerInventoryEvent constructor","description":"PlayerInventoryEvent constructor","scope":"public","name":"PlayerInventoryEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Inventory","type":"final","description":"Inventory argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.HandlerList","io.wolfscript.event.inventory.InventoryClickEvent","io.wolfscript.event.inventory.InventoryOpenEvent","io.wolfscript.inventory.Inventory"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Inventory","modifier":"readonly","args":[],"description":"Get: Gets the Inventory involved in this event","doc":{"return":["Inventory"]},"return":"io.wolfscript.inventory.Inventory","scope":"public","title":"Get: Gets the Inventory involved in this event"}]},"io.wolfscript.event.player.PlayerItemBreakEvent":{"namespace":"io.wolfscript.event.player","title":"Fired when a player's item breaks (such as a shovel or flint and steel).","description":"Fired when a player's item breaks (such as a shovel or flint and steel). <p> The item that's breaking will exist in the inventory with a stack size of 0. After the event, the item's durability will be reset to 0.","name":"PlayerItemBreakEvent","qualifiedname":"io.wolfscript.event.player.PlayerItemBreakEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"constructors":[{"title":"PlayerItemBreakEvent constructor","description":"PlayerItemBreakEvent constructor","scope":"public","name":"PlayerItemBreakEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"ItemStack","type":"final","description":"ItemStack argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.HandlerList","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"BrokenItem","modifier":"readonly","args":[],"description":"Get: Gets the item that broke","doc":{"return":["The broken item"]},"return":"io.wolfscript.inventory.ItemStack","scope":"public","title":"Get: Gets the item that broke"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.player.PlayerItemConsumeEvent":{"namespace":"io.wolfscript.event.player","title":"This event will fire when a player is finishing consuming an item (food,","description":"This event will fire when a player is finishing consuming an item (food, potion, milk bucket). <br> If the ItemStack is modified the server will use the effects of the new item and not remove the original one from the player's inventory. <br> If the event is cancelled the effect will not be applied and the item will not be removed from the player's inventory.","name":"PlayerItemConsumeEvent","qualifiedname":"io.wolfscript.event.player.PlayerItemConsumeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.inventory.ItemStack"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Item","modifier":"writeonly","args":[{"name":"item","type":"io.wolfscript.inventory.ItemStack","description":"the ItemStack being consumed /\n    public PlayerItemConsumeEvent(final Player player, final ItemStack item) {\n        super(player);\n\n        this.item = item;\n    }\n\n    /** Gets the item that is being consumed. Modifying the returned item will have no effect, you must use {@link #setItem(io.wolfscript.inventory.ItemStack)} instead."}],"description":"Item property","doc":{"return":["an ItemStack for the item being consumed /\n    public ItemStack getItem() {\n        return item.clone();\n    }\n\n    /** Set the item being consumed"]},"return":"void","scope":"public","title":"Item property"}]},"io.wolfscript.event.player.PlayerItemHeldEvent":{"namespace":"io.wolfscript.event.player","title":"Fired when a player changes their currently held item","description":"Fired when a player changes their currently held item","name":"PlayerItemHeldEvent","qualifiedname":"io.wolfscript.event.player.PlayerItemHeldEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerItemHeldEvent constructor","description":"PlayerItemHeldEvent constructor","scope":"public","name":"PlayerItemHeldEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"int","type":"final","description":"int argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"NewSlot","modifier":"readonly","args":[],"description":"Get: Gets the previous held slot index","doc":{"return":["Previous slot index /\n    public int getPreviousSlot() {\n        return previous;\n    }\n\n    /** Gets the new held slot index","New slot index"]},"return":"int","scope":"public","title":"Get: Gets the previous held slot index"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerJoinEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player joins a server","description":"Called when a player joins a server","name":"PlayerJoinEvent","qualifiedname":"io.wolfscript.event.player.PlayerJoinEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"constructors":[{"title":"PlayerJoinEvent constructor","description":"PlayerJoinEvent constructor","scope":"public","name":"PlayerJoinEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"String","type":"final","description":"String argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"JoinMessage","modifier":"writeonly","args":[{"name":"joinMessage","type":"String","description":"join message"}],"description":"Set: Gets the join message to send to all online players","doc":{"return":["string join message /\n    public String getJoinMessage() {\n        return joinMessage;\n    }\n\n    /** Sets the join message to send to all online players"]},"return":"void","scope":"public","title":"Set: Gets the join message to send to all online players"}]},"io.wolfscript.event.player.PlayerKickEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player gets kicked from the server","description":"Called when a player gets kicked from the server","name":"PlayerKickEvent","qualifiedname":"io.wolfscript.event.player.PlayerKickEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerKickEvent constructor","description":"PlayerKickEvent constructor","scope":"public","name":"PlayerKickEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"String","type":"final","description":"String argument"},{"name":"String","type":"final","description":"String argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"LeaveMessage","modifier":"writeonly","args":[{"name":"leaveMessage","type":"String","description":"leave message"}],"description":"Set: Gets the reason why the player is getting kicked","doc":{"return":["string kick reason /\n    public String getReason() {\n        return kickReason;\n    }\n\n    /** Gets the leave message send to all online players","string kick reason /\n    public String getLeaveMessage() {\n        return leaveMessage;\n    }\n\n    public boolean isCancelled() {\n        return cancel;\n    }\n\n    public void setCancelled(boolean cancel) {\n        this.cancel = cancel;\n    }\n\n    /** Sets the reason why the player is getting kicked"]},"return":"void","scope":"public","title":"Set: Gets the reason why the player is getting kicked"}]},"io.wolfscript.event.player.PlayerLevelChangeEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a players level changes","description":"Called when a players level changes","name":"PlayerLevelChangeEvent","qualifiedname":"io.wolfscript.event.player.PlayerLevelChangeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"constructors":[{"title":"PlayerLevelChangeEvent constructor","description":"PlayerLevelChangeEvent constructor","scope":"public","name":"PlayerLevelChangeEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"int","type":"final","description":"int argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"NewLevel","modifier":"readonly","args":[],"description":"Get: Gets the old level of the player","doc":{"return":["The old level of the player /\n    public int getOldLevel() {\n        return oldLevel;\n    }\n\n    /** Gets the new level of the player","The new (current) level of the player"]},"return":"int","scope":"public","title":"Get: Gets the old level of the player"}]},"io.wolfscript.event.player.PlayerMoveEvent":{"namespace":"io.wolfscript.event.player","title":"Holds information for player movement events","description":"Holds information for player movement events","name":"PlayerMoveEvent","qualifiedname":"io.wolfscript.event.player.PlayerMoveEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerMoveEvent constructor","description":"PlayerMoveEvent constructor","scope":"public","name":"PlayerMoveEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Location","type":"final","description":"Location argument"},{"name":"Location","type":"final","description":"Location argument"}]}],"methods":[],"imports":["io.wolfscript.Location","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"To","modifier":"writeonly","args":[{"name":"to","type":"io.wolfscript.Location","description":"New Location this player will move to"}],"description":"Set: Gets the cancellation state of this event. A cancelled event will not be executed in the server, but will still pass to other plugins <p> If a move or teleport event is cancelled, the player will be moved or teleported back to the Location as defined by getFrom(). This will not fire an event","doc":{"return":["true if this event is cancelled /\n    public boolean isCancelled() {\n        return cancel;\n    }\n\n    /** Sets the cancellation state of this event. A cancelled event will not be executed in the server, but will still pass to other plugins <p> If a move or teleport event is cancelled, the player will be moved or teleported back to the Location as defined by getFrom(). This will not fire an event","Location the player moved from /\n    public Location getFrom() {\n        return from;\n    }\n\n    /** Sets the location to mark as where the player moved from","Location the player moved to /\n    public Location getTo() {\n        return to;\n    }\n\n    /** Sets the location that this player will move to"]},"return":"void","scope":"public","title":"Set: Gets the cancellation state of this event. A cancelled event will not"}]},"io.wolfscript.event.player.PlayerPickupItemEvent":{"namespace":"io.wolfscript.event.player","title":"Thrown when a player picks an item up from the ground","description":"Thrown when a player picks an item up from the ground","name":"PlayerPickupItemEvent","qualifiedname":"io.wolfscript.event.player.PlayerPickupItemEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerPickupItemEvent constructor","description":"PlayerPickupItemEvent constructor","scope":"public","name":"PlayerPickupItemEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Item","type":"final","description":"Item argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Item","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Remaining","modifier":"readonly","args":[],"description":"Get: Gets the Item picked up by the player.","doc":{"return":["Item /\n    public Item getItem() {\n        return item;\n    }\n\n    /** Gets the amount remaining on the ground, if any","amount remaining on the ground"]},"return":"int","scope":"public","title":"Get: Gets the Item picked up by the player."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerPortalEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player is about to teleport because it is in contact with a","description":"Called when a player is about to teleport because it is in contact with a portal. <p> For other entities see {@link io.wolfscript.event.entity.EntityPortalEvent}","name":"PlayerPortalEvent","qualifiedname":"io.wolfscript.event.player.PlayerPortalEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerTeleportEvent"],"constructors":[{"title":"PlayerPortalEvent constructor","description":"PlayerPortalEvent constructor","scope":"public","name":"PlayerPortalEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Location","type":"final","description":"Location argument"},{"name":"Location","type":"final","description":"Location argument"},{"name":"TravelAgent","type":"final","description":"TravelAgent argument"}]},{"title":"PlayerPortalEvent constructor","description":"PlayerPortalEvent constructor","scope":"public","name":"PlayerPortalEvent","args":[{"name":"player","type":"io.wolfscript.entity.Player","description":"player argument"},{"name":"from","type":"io.wolfscript.Location","description":"from argument"},{"name":"to","type":"io.wolfscript.Location","description":"to argument"},{"name":"pta","type":"io.wolfscript.TravelAgent","description":"pta argument"},{"name":"cause","type":"TeleportCause","description":"cause argument"}]}],"methods":[{"title":"Sets whether or not the Travel Agent will be used.","description":"Sets whether or not the Travel Agent will be used. <p> If this is set to true, the TravelAgent will try to find a Portal at the {@link #getTo()} Location, and will try to create one if there is none. <p> If this is set to false, the {@link #getPlayer()} will only be teleported to the {@link #getTo()} Location.","scope":"public","return":"void","name":"useTravelAgent","args":[{"name":"useTravelAgent","type":"boolean","description":"whether to use the Travel Agent"}]}],"imports":["io.wolfscript.Location","io.wolfscript.TravelAgent","io.wolfscript.entity.Player","io.wolfscript.event.HandlerList"],"properties":[]},"io.wolfscript.event.player.PlayerQuitEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player leaves a server","description":"Called when a player leaves a server","name":"PlayerQuitEvent","qualifiedname":"io.wolfscript.event.player.PlayerQuitEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"constructors":[{"title":"PlayerQuitEvent constructor","description":"PlayerQuitEvent constructor","scope":"public","name":"PlayerQuitEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"String","type":"final","description":"String argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"QuitMessage","modifier":"writeonly","args":[{"name":"quitMessage","type":"String","description":"quit message"}],"description":"Set: Gets the quit message to send to all online players","doc":{"return":["string quit message /\n    public String getQuitMessage() {\n        return quitMessage;\n    }\n\n    /** Sets the quit message to send to all online players"]},"return":"void","scope":"public","title":"Set: Gets the quit message to send to all online players"}]},"io.wolfscript.event.player.PlayerRegisterChannelEvent":{"namespace":"io.wolfscript.event.player","title":"This is called immediately after a player registers for a plugin channel.","description":"This is called immediately after a player registers for a plugin channel.","name":"PlayerRegisterChannelEvent","qualifiedname":"io.wolfscript.event.player.PlayerRegisterChannelEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerChannelEvent"],"constructors":[{"title":"PlayerRegisterChannelEvent constructor","description":"PlayerRegisterChannelEvent constructor","scope":"public","name":"PlayerRegisterChannelEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"String","type":"final","description":"String argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Player"],"properties":[]},"io.wolfscript.event.player.PlayerRespawnEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player respawns.","description":"Called when a player respawns.","name":"PlayerRespawnEvent","qualifiedname":"io.wolfscript.event.player.PlayerRespawnEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"constructors":[{"title":"PlayerRespawnEvent constructor","description":"PlayerRespawnEvent constructor","scope":"public","name":"PlayerRespawnEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Location","type":"final","description":"Location argument"},{"name":"boolean","type":"final","description":"boolean argument"}]}],"methods":[{"title":"Gets the current respawn location","description":"Gets the current respawn location","doc":{"return":["Location current respawn location /\n    public Location getRespawnLocation() {\n        return this.respawnLocation;\n    }\n\n    /** Sets the new respawn location","true if the respawn location is the player's bed."],"param":["respawnLocation new location for the respawn /\n    public void setRespawnLocation(Location respawnLocation) {\n        Validate.notNull(respawnLocation, \"Respawn location can not be null\");\n        Validate.notNull(respawnLocation.getWorld(), \"Respawn world can not be null\");\n\n        this.respawnLocation = respawnLocation;\n    }\n\n    /** Gets whether the respawn location is the player's bed."]},"scope":"public","return":"boolean","name":"isBedSpawn","args":[]}],"imports":["org.apache.commons.lang.Validate","io.wolfscript.Location","io.wolfscript.entity.Player","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.player.PlayerShearEntityEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player shears an entity","description":"Called when a player shears an entity","name":"PlayerShearEntityEvent","qualifiedname":"io.wolfscript.event.player.PlayerShearEntityEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerShearEntityEvent constructor","description":"PlayerShearEntityEvent constructor","scope":"public","name":"PlayerShearEntityEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Entity","type":"final","description":"Entity argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Get: Gets the entity the player is shearing","doc":{"return":["the entity the player is shearing"]},"return":"io.wolfscript.entity.Entity","scope":"public","title":"Get: Gets the entity the player is shearing"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerStatisticIncrementEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player statistic is incremented.","description":"Called when a player statistic is incremented. <p> This event is not called for {@link io.wolfscript.Statistic#PLAY_ONE_TICK} or movement based statistics.","name":"PlayerStatisticIncrementEvent","qualifiedname":"io.wolfscript.event.player.PlayerStatisticIncrementEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerStatisticIncrementEvent constructor","description":"PlayerStatisticIncrementEvent constructor","scope":"public","name":"PlayerStatisticIncrementEvent","args":[{"name":"player","type":"io.wolfscript.entity.Player","description":"player argument"},{"name":"statistic","type":"io.wolfscript.Statistic","description":"statistic argument"},{"name":"initialValue","type":"int","description":"initialValue argument"},{"name":"newValue","type":"int","description":"newValue argument"}]},{"title":"PlayerStatisticIncrementEvent constructor","description":"PlayerStatisticIncrementEvent constructor","scope":"public","name":"PlayerStatisticIncrementEvent","args":[{"name":"player","type":"io.wolfscript.entity.Player","description":"player argument"},{"name":"statistic","type":"io.wolfscript.Statistic","description":"statistic argument"},{"name":"initialValue","type":"int","description":"initialValue argument"},{"name":"newValue","type":"int","description":"newValue argument"},{"name":"entityType","type":"io.wolfscript.entity.EntityType","description":"entityType argument"}]},{"title":"PlayerStatisticIncrementEvent constructor","description":"PlayerStatisticIncrementEvent constructor","scope":"public","name":"PlayerStatisticIncrementEvent","args":[{"name":"player","type":"io.wolfscript.entity.Player","description":"player argument"},{"name":"statistic","type":"io.wolfscript.Statistic","description":"statistic argument"},{"name":"initialValue","type":"int","description":"initialValue argument"},{"name":"newValue","type":"int","description":"newValue argument"},{"name":"material","type":"io.wolfscript.Material","description":"material argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.Statistic","io.wolfscript.entity.EntityType","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Material","modifier":"readonly","args":[],"description":"Get: Gets the statistic that is being incremented.","doc":{"return":["the incremented statistic /\n    public Statistic getStatistic() {\n        return statistic;\n    }\n\n    /** Gets the previous value of the statistic.","the previous value of the statistic /\n    public int getPreviousValue() {\n        return initialValue;\n    }\n\n    /** Gets the new value of the statistic.","the new value of the statistic /\n    public int getNewValue() {\n        return newValue;\n    }\n\n    /** Gets the EntityType if {@link #getStatistic() getStatistic()} is an entity statistic otherwise returns null.","the EntityType of the statistic /\n    public EntityType getEntityType() {\n        return entityType;\n    }\n\n    /** Gets the Material if {@link #getStatistic() getStatistic()} is a block or item statistic otherwise returns null.","the Material of the statistic"]},"return":"io.wolfscript.Material","scope":"public","title":"Get: Gets the statistic that is being incremented."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerTeleportEvent":{"namespace":"io.wolfscript.event.player","title":"Holds information for player teleport events","description":"Holds information for player teleport events","name":"PlayerTeleportEvent","qualifiedname":"io.wolfscript.event.player.PlayerTeleportEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerMoveEvent"],"constructors":[{"title":"PlayerTeleportEvent constructor","description":"PlayerTeleportEvent constructor","scope":"public","name":"PlayerTeleportEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Location","type":"final","description":"Location argument"},{"name":"Location","type":"final","description":"Location argument"}]},{"title":"PlayerTeleportEvent constructor","description":"PlayerTeleportEvent constructor","scope":"public","name":"PlayerTeleportEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Location","type":"final","description":"Location argument"},{"name":"Location","type":"final","description":"Location argument"},{"name":"TeleportCause","type":"final","description":"TeleportCause argument"}]}],"methods":[],"imports":["io.wolfscript.Location","io.wolfscript.entity.Player","io.wolfscript.event.HandlerList"],"properties":[{"name":"Cause","modifier":"readonly","args":[],"description":"Get: Gets the cause of this teleportation event","doc":{"return":["Cause of the event"]},"return":"TeleportCause","scope":"public","title":"Get: Gets the cause of this teleportation event"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.player.PlayerToggleFlightEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player toggles their flying state","description":"Called when a player toggles their flying state","name":"PlayerToggleFlightEvent","qualifiedname":"io.wolfscript.event.player.PlayerToggleFlightEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerToggleFlightEvent constructor","description":"PlayerToggleFlightEvent constructor","scope":"public","name":"PlayerToggleFlightEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"boolean","type":"final","description":"boolean argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]},{"title":"Returns whether the player is trying to start or stop flying.","description":"Returns whether the player is trying to start or stop flying.","doc":{"return":["flying state"]},"scope":"public","return":"boolean","name":"isFlying","args":[]}],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerToggleSneakEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player toggles their sneaking state","description":"Called when a player toggles their sneaking state","name":"PlayerToggleSneakEvent","qualifiedname":"io.wolfscript.event.player.PlayerToggleSneakEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerToggleSneakEvent constructor","description":"PlayerToggleSneakEvent constructor","scope":"public","name":"PlayerToggleSneakEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"boolean","type":"final","description":"boolean argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]},{"title":"Returns whether the player is now sneaking or not.","description":"Returns whether the player is now sneaking or not.","doc":{"return":["sneaking state"]},"scope":"public","return":"boolean","name":"isSneaking","args":[]}],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerToggleSprintEvent":{"namespace":"io.wolfscript.event.player","title":"Called when a player toggles their sprinting state","description":"Called when a player toggles their sprinting state","name":"PlayerToggleSprintEvent","qualifiedname":"io.wolfscript.event.player.PlayerToggleSprintEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerToggleSprintEvent constructor","description":"PlayerToggleSprintEvent constructor","scope":"public","name":"PlayerToggleSprintEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"boolean","type":"final","description":"boolean argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]},{"title":"Gets whether the player is now sprinting or not.","description":"Gets whether the player is now sprinting or not.","doc":{"return":["sprinting state"]},"scope":"public","return":"boolean","name":"isSprinting","args":[]}],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerUnleashEntityEvent":{"namespace":"io.wolfscript.event.player","title":"Called prior to an entity being unleashed due to a player's action.","description":"Called prior to an entity being unleashed due to a player's action.","name":"PlayerUnleashEntityEvent","qualifiedname":"io.wolfscript.event.player.PlayerUnleashEntityEvent","type":"class","scope":"public","extends":["io.wolfscript.event.entity.EntityUnleashEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerUnleashEntityEvent constructor","description":"PlayerUnleashEntityEvent constructor","scope":"public","name":"PlayerUnleashEntityEvent","args":[{"name":"entity","type":"io.wolfscript.entity.Entity","description":"entity argument"},{"name":"player","type":"io.wolfscript.entity.Player","description":"player argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.entity.EntityUnleashEvent"],"properties":[{"name":"Player","modifier":"readonly","args":[],"description":"Get: Returns the player who is unleashing the entity.","doc":{"return":["The player"]},"return":"io.wolfscript.entity.Player","scope":"public","title":"Get: Returns the player who is unleashing the entity."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.player.PlayerUnregisterChannelEvent":{"namespace":"io.wolfscript.event.player","title":"This is called immediately after a player unregisters for a plugin channel.","description":"This is called immediately after a player unregisters for a plugin channel.","name":"PlayerUnregisterChannelEvent","qualifiedname":"io.wolfscript.event.player.PlayerUnregisterChannelEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerChannelEvent"],"constructors":[{"title":"PlayerUnregisterChannelEvent constructor","description":"PlayerUnregisterChannelEvent constructor","scope":"public","name":"PlayerUnregisterChannelEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"String","type":"final","description":"String argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Player"],"properties":[]},"io.wolfscript.event.player.PlayerVelocityEvent":{"namespace":"io.wolfscript.event.player","title":"Called when the velocity of a player changes.","description":"Called when the velocity of a player changes.","name":"PlayerVelocityEvent","qualifiedname":"io.wolfscript.event.player.PlayerVelocityEvent","type":"class","scope":"public","extends":["io.wolfscript.event.player.PlayerEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"PlayerVelocityEvent constructor","description":"PlayerVelocityEvent constructor","scope":"public","name":"PlayerVelocityEvent","args":[{"name":"Player","type":"final","description":"Player argument"},{"name":"Vector","type":"final","description":"Vector argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.util.Vector"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Velocity","modifier":"writeonly","args":[{"name":"velocity","type":"io.wolfscript.util.Vector","description":"The velocity vector that will be sent to the player"}],"description":"Set: Gets the velocity vector that will be sent to the player","doc":{"return":["Vector the player will get /\n    public Vector getVelocity() {\n        return velocity;\n    }\n\n    /** Sets the velocity vector that will be sent to the player"]},"return":"void","scope":"public","title":"Set: Gets the velocity vector that will be sent to the player"}]},"io.wolfscript.event.player.Result":{"namespace":"io.wolfscript.event.player","title":"Stores details for players attempting to log in","description":"Stores details for players attempting to log in","doc":{"deprecated":["This event causes synchronization from the login thread; {@link AsyncPlayerPreLoginEvent} is preferred to keep the secondary threads asynchronous. /\n@Deprecated\n@Warning(reason=\"This event causes a login thread to synchronize with the main thread\")\npublic class PlayerPreLoginEvent extends Event {\n    private static final HandlerList handlers = new HandlerList();\n    private Result result;\n    private String message;\n    private final String name;\n    private final InetAddress ipAddress;\n    private final UUID uniqueId;\n\n    @Deprecated\n    public PlayerPreLoginEvent(final String name, final InetAddress ipAddress) {\n        this(name, ipAddress, null);\n    }\n\n    public PlayerPreLoginEvent(final String name, final InetAddress ipAddress, final UUID uniqueId) {\n        this.result = Result.ALLOWED;\n        this.message = \"\";\n        this.name = name;\n        this.ipAddress = ipAddress;\n        this.uniqueId = uniqueId;\n    }\n\n    /** Gets the current result of the login, as an enum"],"return":["Current Result of the login /\n    public Result getResult() {\n        return result;\n    }\n\n    /** Sets the new result of the login, as an enum","Current kick message /\n    public String getKickMessage() {\n        return message;\n    }\n\n    /** Sets the kick message to display if getResult() != Result.ALLOWED","the player's name /\n    public String getName() {\n        return name;\n    }\n\n    /** Gets the player IP address.","The IP address /\n    public InetAddress getAddress() {\n        return ipAddress;\n    }\n\n    @Override\n    public HandlerList getHandlers() {\n        return handlers;\n    }\n\n    /** Gets the player's unique ID.","The unique ID /\n    public UUID getUniqueId() {\n        return uniqueId;\n    }\n\n    public static HandlerList getHandlerList() {\n        return handlers;\n    }\n\n    /** Basic kick reasons for communicating to plugins"],"param":["result New result to set /\n    public void setResult(final Result result) {\n        this.result = result;\n    }\n\n    /** Gets the current kick message that will be used if getResult() != Result.ALLOWED","message New kick message /\n    public void setKickMessage(final String message) {\n        this.message = message;\n    }\n\n    /** Allows the player to log in /\n    public void allow() {\n        result = Result.ALLOWED;\n        message = \"\";\n    }\n\n    /** Disallows the player from logging in, with the given reason","result New result for disallowing the player","message Kick message to display to the user /\n    public void disallow(final Result result, final String message) {\n        this.result = result;\n        this.message = message;\n    }\n\n    /** Gets the player's name."]},"name":"Result","qualifiedname":"io.wolfscript.event.player.Result","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["java.net.InetAddress","java.util.UUID","io.wolfscript.Warning","io.wolfscript.event.Event","io.wolfscript.event.HandlerList"],"enum":[{"code":"KICK_WHITELIST","value":"","title":"The player is allowed to log in","description":"The player is allowed to log in /\n        ALLOWED,\n        /** The player is not allowed to log in, due to the server being full /\n        KICK_FULL,\n        /** The player is not allowed to log in, due to them being banned /\n        KICK_BANNED,\n        /** The player is not allowed to log in, due to them not being on the white list","doc":{}},{"code":"in","value":"","title":"in Result","description":"in Result","doc":{}}],"properties":[]},"io.wolfscript.event.player.State":{"namespace":"io.wolfscript.event.player","title":"Thrown when a player is fishing","description":"Thrown when a player is fishing /\npublic class PlayerFishEvent extends PlayerEvent implements Cancellable {\n    private static final HandlerList handlers = new HandlerList();\n    private final Entity entity;\n    private boolean cancel = false;\n    private int exp;\n    private final State state;\n    private final Fish hookEntity;\n\n    /**","doc":{"deprecated":["replaced by {@link #PlayerFishEvent(Player, Entity, Fish, State)} to include the {@link Fish} hook entity."],"param":["player the player fishing","entity the caught entity","state the state of fishing /\n    @Deprecated\n    public PlayerFishEvent(final Player player, final Entity entity, final State state) {\n        this(player, entity, null, state);\n    }\n\n    public PlayerFishEvent(final Player player, final Entity entity, final Fish hookEntity, final State state) {\n        super(player);\n        this.entity = entity;\n        this.hookEntity = hookEntity;\n        this.state = state;\n    }\n\n    /** Gets the entity caught by the player. <p> If player has fished successfully, the result may be cast to {@link io.wolfscript.entity.Item}.","amount the amount of experience to drop /\n    public void setExpToDrop(int amount) {\n        exp = amount;\n    }\n\n    /** Gets the state of the fishing"],"return":["Entity caught by the player, Entity if fishing, and null if bobber has gotten stuck in the ground or nothing has been caught /\n    public Entity getCaught() {\n        return entity;\n    }\n\n    /** Gets the fishing hook.","Fish the entity representing the fishing hook/bobber. /\n    public Fish getHook() {\n        return hookEntity;\n    }\n\n    public boolean isCancelled() {\n        return cancel;\n    }\n\n    public void setCancelled(boolean cancel) {\n        this.cancel = cancel;\n    }\n\n    /** Gets the amount of experience received when fishing. <p> Note: This value has no default effect unless the event state is {@link State#CAUGHT_FISH}.","the amount of experience to drop /\n    public int getExpToDrop() {\n        return exp;\n    }\n\n    /** Sets the amount of experience received when fishing. <p> Note: This value has no default effect unless the event state is {@link State#CAUGHT_FISH}.","A State detailing the state of the fishing /\n    public State getState() {\n        return state;\n    }\n\n    @Override\n    public HandlerList getHandlers() {\n        return handlers;\n    }\n\n    public static HandlerList getHandlerList() {\n        return handlers;\n    }\n\n    /** An enum to specify the state of the fishing"]},"name":"State","qualifiedname":"io.wolfscript.event.player.State","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.entity.Fish","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.entity.Entity","io.wolfscript.event.HandlerList"],"enum":[{"code":"FAILED_ATTEMPT","value":"","title":"When a player is fishing, ie casting the line out.","description":"When a player is fishing, ie casting the line out. /\n        FISHING,\n        /** When a player has successfully caught a fish and is reeling it in. /\n        CAUGHT_FISH,\n        /** When a player has successfully caught an entity /\n        CAUGHT_ENTITY,\n        /** When a bobber is stuck in the ground /\n        IN_GROUND,\n        /** When a player fails to catch anything while fishing usually due to poor aiming or timing","doc":{}}],"properties":[]},"io.wolfscript.event.server.0":{"namespace":"io.wolfscript.event","title":"{@link io.wolfscript.event.Event Events} relating to programmatic state","description":"{@link io.wolfscript.event.Event Events} relating to programmatic state changes on the server.","name":"server","qualifiedname":"io.wolfscript.event.server.0","packagename":"io.wolfscript.event.server","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.event.server.MapInitializeEvent","io.wolfscript.event.server.PluginDisableEvent","io.wolfscript.event.server.PluginEnableEvent","io.wolfscript.event.server.PluginEvent","io.wolfscript.event.server.RemoteServerCommandEvent","io.wolfscript.event.server.ServerCommandEvent","io.wolfscript.event.server.ServerEvent","io.wolfscript.event.server.ServerListPingEvent","io.wolfscript.event.server.ServiceEvent","io.wolfscript.event.server.ServiceRegisterEvent","io.wolfscript.event.server.ServiceUnregisterEvent"],"interfaces":[],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.event.server.MapInitializeEvent":{"namespace":"io.wolfscript.event.server","title":"Called when a map is initialized.","description":"Called when a map is initialized.","name":"MapInitializeEvent","qualifiedname":"io.wolfscript.event.server.MapInitializeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.server.ServerEvent"],"constructors":[{"title":"MapInitializeEvent constructor","description":"MapInitializeEvent constructor","scope":"public","name":"MapInitializeEvent","args":[{"name":"MapView","type":"final","description":"MapView argument"}]}],"methods":[],"imports":["io.wolfscript.event.HandlerList","io.wolfscript.map.MapView"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Map","modifier":"readonly","args":[],"description":"Get: Gets the map initialized in this event.","doc":{"return":["Map for this event"]},"return":"io.wolfscript.map.MapView","scope":"public","title":"Get: Gets the map initialized in this event."}]},"io.wolfscript.event.server.PluginDisableEvent":{"namespace":"io.wolfscript.event.server","title":"Called when a plugin is disabled.","description":"Called when a plugin is disabled.","name":"PluginDisableEvent","qualifiedname":"io.wolfscript.event.server.PluginDisableEvent","type":"class","scope":"public","extends":["io.wolfscript.event.server.PluginEvent"],"constructors":[{"title":"PluginDisableEvent constructor","description":"PluginDisableEvent constructor","scope":"public","name":"PluginDisableEvent","args":[{"name":"Plugin","type":"final","description":"Plugin argument"}]}],"methods":[],"imports":["io.wolfscript.event.HandlerList","io.wolfscript.plugin.Plugin"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.server.PluginEnableEvent":{"namespace":"io.wolfscript.event.server","title":"Called when a plugin is enabled.","description":"Called when a plugin is enabled.","name":"PluginEnableEvent","qualifiedname":"io.wolfscript.event.server.PluginEnableEvent","type":"class","scope":"public","extends":["io.wolfscript.event.server.PluginEvent"],"constructors":[{"title":"PluginEnableEvent constructor","description":"PluginEnableEvent constructor","scope":"public","name":"PluginEnableEvent","args":[{"name":"Plugin","type":"final","description":"Plugin argument"}]}],"methods":[],"imports":["io.wolfscript.event.HandlerList","io.wolfscript.plugin.Plugin"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.server.PluginEvent":{"namespace":"io.wolfscript.event.server","title":"Used for plugin enable and disable events","description":"Used for plugin enable and disable events","name":"PluginEvent","qualifiedname":"io.wolfscript.event.server.PluginEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.server.ServerEvent"],"constructors":[{"title":"PluginEvent constructor","description":"PluginEvent constructor","scope":"public","name":"PluginEvent","args":[{"name":"Plugin","type":"final","description":"Plugin argument"}]}],"methods":[],"imports":["io.wolfscript.plugin.Plugin"],"properties":[{"name":"Plugin","modifier":"readonly","args":[],"description":"Get: Gets the plugin involved in this event","doc":{"return":["Plugin for this event"]},"return":"io.wolfscript.plugin.Plugin","scope":"public","title":"Get: Gets the plugin involved in this event"}]},"io.wolfscript.event.server.RemoteServerCommandEvent":{"namespace":"io.wolfscript.event.server","title":"This event is called when a command is recieved over RCON. See the javadocs","description":"This event is called when a command is recieved over RCON. See the javadocs of {@link io.wolfscript.event.server.ServerCommandEvent} for more information.","name":"RemoteServerCommandEvent","qualifiedname":"io.wolfscript.event.server.RemoteServerCommandEvent","type":"class","scope":"public","extends":["io.wolfscript.event.server.ServerCommandEvent"],"constructors":[{"title":"RemoteServerCommandEvent constructor","description":"RemoteServerCommandEvent constructor","scope":"public","name":"RemoteServerCommandEvent","args":[{"name":"CommandSender","type":"final","description":"CommandSender argument"},{"name":"String","type":"final","description":"String argument"}]}],"methods":[],"imports":["io.wolfscript.command.CommandSender","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.server.ServerCommandEvent":{"namespace":"io.wolfscript.event.server","title":"This event is called when a command is run from the server console. It is","description":"This event is called when a command is run from the server console. It is called early in the command handling process, and modifications in this event (via {@link #setCommand(String)}) will be shown in the behavior. <p> Many plugins will have <b>no use for this event</b>, and you should attempt to avoid using it if it is not necessary. <p> Some examples of valid uses for this event are: <ul> <li>Logging executed commands to a separate file <li>Variable substitution. For example, replacing <code>${ip:Steve}</code> with the connection IP of the player named Steve, or simulating the <code>@a</code> and <code>@p</code> decorators used by Command Blocks for plugins that do not handle it. <li>Conditionally blocking commands belonging to other plugins. <li>Per-sender command aliases. For example, after the console runs the command <code>/calias cr gamemode creative</code>, the next time they run <code>/cr</code>, it gets replaced into <code>/gamemode creative</code>. (Global command aliases should be done by registering the alias.) </ul> <p> Examples of incorrect uses are: <ul> <li>Using this event to run command logic </ul> <p> If the event is cancelled, processing of the command will halt. <p> The state of whether or not there is a slash (<code>/</code>) at the beginning of the message should be preserved. If a slash is added or removed, unexpected behavior may result.","name":"ServerCommandEvent","qualifiedname":"io.wolfscript.event.server.ServerCommandEvent","type":"class","scope":"public","extends":["io.wolfscript.event.server.ServerEvent"],"constructors":[{"title":"ServerCommandEvent constructor","description":"ServerCommandEvent constructor","scope":"public","name":"ServerCommandEvent","args":[{"name":"CommandSender","type":"final","description":"CommandSender argument"},{"name":"String","type":"final","description":"String argument"}]}],"methods":[],"imports":["io.wolfscript.command.CommandSender","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Sender","modifier":"readonly","args":[],"description":"Get: Gets the command that the user is attempting to execute from the console","doc":{"return":["Command the user is attempting to execute /\n    public String getCommand() {\n        return command;\n    }\n\n    /** Sets the command that the server will execute","The sender"],"param":["message New message that the server will execute /\n    public void setCommand(String message) {\n        this.command = message;\n    }\n\n    /** Get the command sender."]},"return":"io.wolfscript.command.CommandSender","scope":"public","title":"Get: Gets the command that the user is attempting to execute from the"}]},"io.wolfscript.event.server.ServerEvent":{"namespace":"io.wolfscript.event.server","title":"Miscellaneous server events","description":"Miscellaneous server events","name":"ServerEvent","qualifiedname":"io.wolfscript.event.server.ServerEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.Event"],"constructors":[],"methods":[],"imports":["io.wolfscript.event.Event"],"properties":[]},"io.wolfscript.event.server.ServerListPingEvent":{"namespace":"io.wolfscript.event.server","title":"Called when a server list ping is coming in. Displayed players can be","description":"Called when a server list ping is coming in. Displayed players can be checked and removed by {@link #iterator() iterating} over this event.","name":"ServerListPingEvent","qualifiedname":"io.wolfscript.event.server.ServerListPingEvent","type":"class","scope":"public","extends":["io.wolfscript.event.server.ServerEvent"],"implements":["Iterable<Player"],"constructors":[{"title":"ServerListPingEvent constructor","description":"ServerListPingEvent constructor","scope":"public","name":"ServerListPingEvent","args":[{"name":"InetAddress","type":"final","description":"InetAddress argument"},{"name":"String","type":"final","description":"String argument"},{"name":"int","type":"final","description":"int argument"},{"name":"int","type":"final","description":"int argument"}]}],"methods":[],"imports":["java.net.InetAddress","java.util.Iterator","org.apache.commons.lang.Validate","io.wolfscript.entity.Player","io.wolfscript.event.HandlerList","io.wolfscript.util.CachedServerIcon"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"MaxPlayers","modifier":"writeonly","args":[{"name":"maxPlayers","type":"int","description":"the max number of players /\n    protected ServerListPingEvent(final InetAddress address, final String motd, final int maxPlayers) {\n        this.numPlayers = MAGIC_PLAYER_COUNT;\n        this.address = address;\n        this.motd = motd;\n        this.maxPlayers = maxPlayers;\n    }\n\n    /** Get the address the ping is coming from."}],"description":"Set: This constructor is intended for implementations that provide the {@link #iterator()} method, thus provided the {@link #getNumPlayers()} count.","doc":{"return":["the address /\n    public InetAddress getAddress() {\n        return address;\n    }\n\n    /** Get the message of the day message.","the message of the day /\n    public String getMotd() {\n        return motd;\n    }\n\n    /** Change the message of the day message.","the number of players /\n    public int getNumPlayers() {\n        int numPlayers = this.numPlayers;\n        if (numPlayers == MAGIC_PLAYER_COUNT) {\n            numPlayers = 0;\n            for (@SuppressWarnings(\"unused\") final Player player : this) {\n                numPlayers++;\n            }\n        }\n        return numPlayers;\n    }\n\n    /** Get the maximum number of players sent.","the maximum number of players /\n    public int getMaxPlayers() {\n        return maxPlayers;\n    }\n\n    /** Set the maximum number of players sent."]},"return":"void","scope":"public","title":"Set: This constructor is intended for implementations that provide the"}]},"io.wolfscript.event.server.ServiceEvent":{"namespace":"io.wolfscript.event.server","title":"An event relating to a registered service. This is called in a {@link","description":"An event relating to a registered service. This is called in a {@link io.wolfscript.plugin.ServicesManager}","name":"ServiceEvent","qualifiedname":"io.wolfscript.event.server.ServiceEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.server.ServerEvent"],"constructors":[{"title":"ServiceEvent constructor","description":"ServiceEvent constructor","scope":"public","name":"ServiceEvent","args":[{"name":"RegisteredServiceProvider","type":"final","description":"RegisteredServiceProvider argument"}]}],"methods":[],"imports":["io.wolfscript.plugin.RegisteredServiceProvider"],"properties":[{"name":"Provider","modifier":"readonly","args":[],"description":"Provider property","return":"RegisteredServiceProvider<?>","scope":"public","title":"Provider property"}]},"io.wolfscript.event.server.ServiceRegisterEvent":{"namespace":"io.wolfscript.event.server","title":"This event is called when a service is registered.","description":"This event is called when a service is registered. <p> Warning: The order in which register and unregister events are called should not be relied upon.","name":"ServiceRegisterEvent","qualifiedname":"io.wolfscript.event.server.ServiceRegisterEvent","type":"class","scope":"public","extends":["io.wolfscript.event.server.ServiceEvent"],"constructors":[{"title":"ServiceRegisterEvent constructor","description":"ServiceRegisterEvent constructor","scope":"public","name":"ServiceRegisterEvent","args":[]}],"methods":[],"imports":["io.wolfscript.event.HandlerList","io.wolfscript.plugin.RegisteredServiceProvider"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.server.ServiceUnregisterEvent":{"namespace":"io.wolfscript.event.server","title":"This event is called when a service is unregistered.","description":"This event is called when a service is unregistered. <p> Warning: The order in which register and unregister events are called should not be relied upon.","name":"ServiceUnregisterEvent","qualifiedname":"io.wolfscript.event.server.ServiceUnregisterEvent","type":"class","scope":"public","extends":["io.wolfscript.event.server.ServiceEvent"],"constructors":[{"title":"ServiceUnregisterEvent constructor","description":"ServiceUnregisterEvent constructor","scope":"public","name":"ServiceUnregisterEvent","args":[]}],"methods":[],"imports":["io.wolfscript.event.HandlerList","io.wolfscript.plugin.RegisteredServiceProvider"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.vehicle.0":{"namespace":"io.wolfscript.event","title":"{@link io.wolfscript.event.Event Events} relating to {@link","description":"{@link io.wolfscript.event.Event Events} relating to {@link io.wolfscript.entity.Vehicle vehicular entities}.","name":"vehicle","qualifiedname":"io.wolfscript.event.vehicle.0","packagename":"io.wolfscript.event.vehicle","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.event.vehicle.VehicleBlockCollisionEvent","io.wolfscript.event.vehicle.VehicleCollisionEvent","io.wolfscript.event.vehicle.VehicleCreateEvent","io.wolfscript.event.vehicle.VehicleDamageEvent","io.wolfscript.event.vehicle.VehicleDestroyEvent","io.wolfscript.event.vehicle.VehicleEnterEvent","io.wolfscript.event.vehicle.VehicleEntityCollisionEvent","io.wolfscript.event.vehicle.VehicleEvent","io.wolfscript.event.vehicle.VehicleExitEvent","io.wolfscript.event.vehicle.VehicleMoveEvent","io.wolfscript.event.vehicle.VehicleUpdateEvent"],"interfaces":[],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.event.vehicle.VehicleBlockCollisionEvent":{"namespace":"io.wolfscript.event.vehicle","title":"Raised when a vehicle collides with a block.","description":"Raised when a vehicle collides with a block.","name":"VehicleBlockCollisionEvent","qualifiedname":"io.wolfscript.event.vehicle.VehicleBlockCollisionEvent","type":"class","scope":"public","extends":["io.wolfscript.event.vehicle.VehicleCollisionEvent"],"constructors":[{"title":"VehicleBlockCollisionEvent constructor","description":"VehicleBlockCollisionEvent constructor","scope":"public","name":"VehicleBlockCollisionEvent","args":[{"name":"Vehicle","type":"final","description":"Vehicle argument"},{"name":"Block","type":"final","description":"Block argument"}]}],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.entity.Vehicle","io.wolfscript.event.HandlerList"],"properties":[{"name":"Block","modifier":"readonly","args":[],"description":"Get: Gets the block the vehicle collided with","doc":{"return":["the block the vehicle collided with"]},"return":"io.wolfscript.block.Block","scope":"public","title":"Get: Gets the block the vehicle collided with"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.vehicle.VehicleCollisionEvent":{"namespace":"io.wolfscript.event.vehicle","title":"Raised when a vehicle collides.","description":"Raised when a vehicle collides.","name":"VehicleCollisionEvent","qualifiedname":"io.wolfscript.event.vehicle.VehicleCollisionEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.vehicle.VehicleEvent"],"constructors":[{"title":"VehicleCollisionEvent constructor","description":"VehicleCollisionEvent constructor","scope":"public","name":"VehicleCollisionEvent","args":[{"name":"Vehicle","type":"final","description":"Vehicle argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Vehicle"],"properties":[]},"io.wolfscript.event.vehicle.VehicleCreateEvent":{"namespace":"io.wolfscript.event.vehicle","title":"Raised when a vehicle is created.","description":"Raised when a vehicle is created.","name":"VehicleCreateEvent","qualifiedname":"io.wolfscript.event.vehicle.VehicleCreateEvent","type":"class","scope":"public","extends":["io.wolfscript.event.vehicle.VehicleEvent"],"constructors":[{"title":"VehicleCreateEvent constructor","description":"VehicleCreateEvent constructor","scope":"public","name":"VehicleCreateEvent","args":[{"name":"Vehicle","type":"final","description":"Vehicle argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Vehicle","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.vehicle.VehicleDamageEvent":{"namespace":"io.wolfscript.event.vehicle","title":"Raised when a vehicle receives damage.","description":"Raised when a vehicle receives damage.","name":"VehicleDamageEvent","qualifiedname":"io.wolfscript.event.vehicle.VehicleDamageEvent","type":"class","scope":"public","extends":["io.wolfscript.event.vehicle.VehicleEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"VehicleDamageEvent constructor","description":"VehicleDamageEvent constructor","scope":"public","name":"VehicleDamageEvent","args":[{"name":"Vehicle","type":"final","description":"Vehicle argument"},{"name":"Entity","type":"final","description":"Entity argument"},{"name":"int","type":"final","description":"int argument"}]},{"title":"VehicleDamageEvent constructor","description":"VehicleDamageEvent constructor","scope":"public","name":"VehicleDamageEvent","args":[{"name":"Vehicle","type":"final","description":"Vehicle argument"},{"name":"Entity","type":"final","description":"Entity argument"},{"name":"double","type":"final","description":"double argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.Vehicle","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","io.wolfscript.util.NumberConversions"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"Damage","modifier":"writeonly","args":[{"name":"damage","type":"double","description":"The damage"}],"description":"Set: Gets the Entity that is attacking the vehicle","doc":{"return":["the Entity that is attacking the vehicle /\n    public Entity getAttacker() {\n        return attacker;\n    }\n\n    /** Gets the damage done to the vehicle","the damage done to the vehicle /\n    public double getDamage() {\n        return damage;\n    }\n\n    /** This method exists for legacy reasons to provide backwards compatibility. It will not exist at runtime and should not be used under any circumstances.","the damage /\n    @Deprecated\n    public int _INVALID_getDamage() {\n        return NumberConversions.ceil(getDamage());\n    }\n\n    /** Sets the damage done to the vehicle"]},"return":"void","scope":"public","title":"Set: Gets the Entity that is attacking the vehicle"}]},"io.wolfscript.event.vehicle.VehicleDestroyEvent":{"namespace":"io.wolfscript.event.vehicle","title":"Raised when a vehicle is destroyed, which could be caused by either a","description":"Raised when a vehicle is destroyed, which could be caused by either a player or the environment. This is not raised if the boat is simply 'removed' due to other means.","name":"VehicleDestroyEvent","qualifiedname":"io.wolfscript.event.vehicle.VehicleDestroyEvent","type":"class","scope":"public","extends":["io.wolfscript.event.vehicle.VehicleEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"VehicleDestroyEvent constructor","description":"VehicleDestroyEvent constructor","scope":"public","name":"VehicleDestroyEvent","args":[{"name":"Vehicle","type":"final","description":"Vehicle argument"},{"name":"Entity","type":"final","description":"Entity argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.Vehicle","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Attacker","modifier":"readonly","args":[],"description":"Get: Gets the Entity that has destroyed the vehicle, potentially null","doc":{"return":["the Entity that has destroyed the vehicle, potentially null"]},"return":"io.wolfscript.entity.Entity","scope":"public","title":"Get: Gets the Entity that has destroyed the vehicle, potentially null"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.vehicle.VehicleEnterEvent":{"namespace":"io.wolfscript.event.vehicle","title":"Raised when an entity enters a vehicle.","description":"Raised when an entity enters a vehicle.","name":"VehicleEnterEvent","qualifiedname":"io.wolfscript.event.vehicle.VehicleEnterEvent","type":"class","scope":"public","extends":["io.wolfscript.event.vehicle.VehicleEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"VehicleEnterEvent constructor","description":"VehicleEnterEvent constructor","scope":"public","name":"VehicleEnterEvent","args":[{"name":"Vehicle","type":"final","description":"Vehicle argument"},{"name":"Entity","type":"final","description":"Entity argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.Vehicle","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entered","modifier":"readonly","args":[],"description":"Get: Gets the Entity that entered the vehicle.","doc":{"return":["the Entity that entered the vehicle"]},"return":"io.wolfscript.entity.Entity","scope":"public","title":"Get: Gets the Entity that entered the vehicle."},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.vehicle.VehicleEntityCollisionEvent":{"namespace":"io.wolfscript.event.vehicle","title":"Raised when a vehicle collides with an entity.","description":"Raised when a vehicle collides with an entity.","name":"VehicleEntityCollisionEvent","qualifiedname":"io.wolfscript.event.vehicle.VehicleEntityCollisionEvent","type":"class","scope":"public","extends":["io.wolfscript.event.vehicle.VehicleCollisionEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"VehicleEntityCollisionEvent constructor","description":"VehicleEntityCollisionEvent constructor","scope":"public","name":"VehicleEntityCollisionEvent","args":[{"name":"Vehicle","type":"final","description":"Vehicle argument"},{"name":"Entity","type":"final","description":"Entity argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]},{"title":"isCollisionCancelled method","description":"isCollisionCancelled method","scope":"public","return":"boolean","name":"isCollisionCancelled","args":[]},{"title":"isPickupCancelled method","description":"isPickupCancelled method","scope":"public","return":"boolean","name":"isPickupCancelled","args":[]}],"imports":["io.wolfscript.entity.Entity","io.wolfscript.entity.Vehicle","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Entity","modifier":"readonly","args":[],"description":"Entity property","return":"io.wolfscript.entity.Entity","scope":"public","title":"Entity property"},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"},{"name":"CollisionCancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"CollisionCancelled property","return":"void","scope":"public","title":"CollisionCancelled property"},{"name":"PickupCancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"PickupCancelled property","return":"void","scope":"public","title":"PickupCancelled property"}]},"io.wolfscript.event.vehicle.VehicleEvent":{"namespace":"io.wolfscript.event.vehicle","title":"Represents a vehicle-related event.","description":"Represents a vehicle-related event.","name":"VehicleEvent","qualifiedname":"io.wolfscript.event.vehicle.VehicleEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.Event"],"constructors":[{"title":"VehicleEvent constructor","description":"VehicleEvent constructor","scope":"public","name":"VehicleEvent","args":[{"name":"Vehicle","type":"final","description":"Vehicle argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Vehicle","io.wolfscript.event.Event"],"properties":[{"name":"Vehicle","modifier":"readonly","args":[],"describe":"final","description":"Get: Get the vehicle.","doc":{"return":["the vehicle"]},"return":"io.wolfscript.entity.Vehicle","scope":"public","title":"Get: Get the vehicle."}]},"io.wolfscript.event.vehicle.VehicleExitEvent":{"namespace":"io.wolfscript.event.vehicle","title":"Raised when a living entity exits a vehicle.","description":"Raised when a living entity exits a vehicle.","name":"VehicleExitEvent","qualifiedname":"io.wolfscript.event.vehicle.VehicleExitEvent","type":"class","scope":"public","extends":["io.wolfscript.event.vehicle.VehicleEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"VehicleExitEvent constructor","description":"VehicleExitEvent constructor","scope":"public","name":"VehicleExitEvent","args":[{"name":"Vehicle","type":"final","description":"Vehicle argument"},{"name":"LivingEntity","type":"final","description":"LivingEntity argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.entity.LivingEntity","io.wolfscript.entity.Vehicle","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Exited","modifier":"readonly","args":[],"description":"Get: Get the living entity that exited the vehicle.","doc":{"return":["The entity."]},"return":"io.wolfscript.entity.LivingEntity","scope":"public","title":"Get: Get the living entity that exited the vehicle."},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.vehicle.VehicleMoveEvent":{"namespace":"io.wolfscript.event.vehicle","title":"Raised when a vehicle moves.","description":"Raised when a vehicle moves.","name":"VehicleMoveEvent","qualifiedname":"io.wolfscript.event.vehicle.VehicleMoveEvent","type":"class","scope":"public","extends":["io.wolfscript.event.vehicle.VehicleEvent"],"constructors":[{"title":"VehicleMoveEvent constructor","description":"VehicleMoveEvent constructor","scope":"public","name":"VehicleMoveEvent","args":[{"name":"Vehicle","type":"final","description":"Vehicle argument"},{"name":"Location","type":"final","description":"Location argument"},{"name":"Location","type":"final","description":"Location argument"}]}],"methods":[],"imports":["io.wolfscript.Location","io.wolfscript.entity.Vehicle","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"To","modifier":"readonly","args":[],"description":"Get: Get the previous position.","doc":{"return":["Old position. /\n    public Location getFrom() {\n        return from;\n    }\n\n    /** Get the next position.","New position."]},"return":"io.wolfscript.Location","scope":"public","title":"Get: Get the previous position."}]},"io.wolfscript.event.vehicle.VehicleUpdateEvent":{"namespace":"io.wolfscript.event.vehicle","title":"Called when a vehicle updates","description":"Called when a vehicle updates","name":"VehicleUpdateEvent","qualifiedname":"io.wolfscript.event.vehicle.VehicleUpdateEvent","type":"class","scope":"public","extends":["io.wolfscript.event.vehicle.VehicleEvent"],"constructors":[{"title":"VehicleUpdateEvent constructor","description":"VehicleUpdateEvent constructor","scope":"public","name":"VehicleUpdateEvent","args":[{"name":"Vehicle","type":"final","description":"Vehicle argument"}]}],"methods":[],"imports":["io.wolfscript.entity.Vehicle","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.weather.0":{"namespace":"io.wolfscript.event","title":"{@link io.wolfscript.event.Event Events} relating to weather.","description":"{@link io.wolfscript.event.Event Events} relating to weather.","name":"weather","qualifiedname":"io.wolfscript.event.weather.0","packagename":"io.wolfscript.event.weather","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.event.weather.LightningStrikeEvent","io.wolfscript.event.weather.ThunderChangeEvent","io.wolfscript.event.weather.WeatherChangeEvent","io.wolfscript.event.weather.WeatherEvent"],"interfaces":[],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.event.weather.LightningStrikeEvent":{"namespace":"io.wolfscript.event.weather","title":"Stores data for lightning striking","description":"Stores data for lightning striking","name":"LightningStrikeEvent","qualifiedname":"io.wolfscript.event.weather.LightningStrikeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.weather.WeatherEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"LightningStrikeEvent constructor","description":"LightningStrikeEvent constructor","scope":"public","name":"LightningStrikeEvent","args":[{"name":"World","type":"final","description":"World argument"},{"name":"LightningStrike","type":"final","description":"LightningStrike argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.World","io.wolfscript.entity.LightningStrike","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Lightning","modifier":"readonly","args":[],"description":"Get: Gets the bolt which is striking the earth.","doc":{"return":["lightning entity"]},"return":"io.wolfscript.entity.LightningStrike","scope":"public","title":"Get: Gets the bolt which is striking the earth."},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.weather.ThunderChangeEvent":{"namespace":"io.wolfscript.event.weather","title":"Stores data for thunder state changing in a world","description":"Stores data for thunder state changing in a world","name":"ThunderChangeEvent","qualifiedname":"io.wolfscript.event.weather.ThunderChangeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.weather.WeatherEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"ThunderChangeEvent constructor","description":"ThunderChangeEvent constructor","scope":"public","name":"ThunderChangeEvent","args":[{"name":"World","type":"final","description":"World argument"},{"name":"boolean","type":"final","description":"boolean argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]},{"title":"Gets the state of thunder that the world is being set to","description":"Gets the state of thunder that the world is being set to","doc":{"return":["true if the weather is being set to thundering, false otherwise"]},"scope":"public","return":"boolean","name":"toThunderState","args":[]}],"imports":["io.wolfscript.World","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.weather.WeatherChangeEvent":{"namespace":"io.wolfscript.event.weather","title":"Stores data for weather changing in a world","description":"Stores data for weather changing in a world","name":"WeatherChangeEvent","qualifiedname":"io.wolfscript.event.weather.WeatherChangeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.weather.WeatherEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"WeatherChangeEvent constructor","description":"WeatherChangeEvent constructor","scope":"public","name":"WeatherChangeEvent","args":[{"name":"World","type":"final","description":"World argument"},{"name":"boolean","type":"final","description":"boolean argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]},{"title":"Gets the state of weather that the world is being set to","description":"Gets the state of weather that the world is being set to","doc":{"return":["true if the weather is being set to raining, false otherwise"]},"scope":"public","return":"boolean","name":"toWeatherState","args":[]}],"imports":["io.wolfscript.World","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.weather.WeatherEvent":{"namespace":"io.wolfscript.event.weather","title":"Represents a Weather-related event","description":"Represents a Weather-related event","name":"WeatherEvent","qualifiedname":"io.wolfscript.event.weather.WeatherEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.Event"],"constructors":[{"title":"WeatherEvent constructor","description":"WeatherEvent constructor","scope":"public","name":"WeatherEvent","args":[{"name":"World","type":"final","description":"World argument"}]}],"methods":[],"imports":["io.wolfscript.World","io.wolfscript.event.Event"],"properties":[{"name":"World","modifier":"readonly","args":[],"describe":"final","description":"Get: Returns the World where this event is occurring","doc":{"return":["World this event is occurring in"]},"return":"io.wolfscript.World","scope":"public","title":"Get: Returns the World where this event is occurring"}]},"io.wolfscript.event.world.0":{"namespace":"io.wolfscript.event","title":"{@link io.wolfscript.event.Event Events} triggered by various {@link","description":"{@link io.wolfscript.event.Event Events} triggered by various {@link io.wolfscript.World world} states or changes.","name":"world","qualifiedname":"io.wolfscript.event.world.0","packagename":"io.wolfscript.event.world","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.event.world.ChunkEvent","io.wolfscript.event.world.ChunkLoadEvent","io.wolfscript.event.world.ChunkPopulateEvent","io.wolfscript.event.world.ChunkUnloadEvent","io.wolfscript.event.world.SpawnChangeEvent","io.wolfscript.event.world.StructureGrowEvent","io.wolfscript.event.world.WorldEvent","io.wolfscript.event.world.WorldInitEvent","io.wolfscript.event.world.WorldLoadEvent","io.wolfscript.event.world.WorldSaveEvent","io.wolfscript.event.world.WorldUnloadEvent"],"interfaces":[],"enums":["io.wolfscript.event.world.CreateReason"],"namespaces":[],"properties":[]},"io.wolfscript.event.world.ChunkEvent":{"namespace":"io.wolfscript.event.world","title":"Represents a Chunk related event","description":"Represents a Chunk related event","name":"ChunkEvent","qualifiedname":"io.wolfscript.event.world.ChunkEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.world.WorldEvent"],"constructors":[],"methods":[],"imports":["io.wolfscript.Chunk"],"properties":[{"name":"Chunk","modifier":"readonly","args":[],"description":"Get: Gets the chunk being loaded/unloaded","doc":{"return":["Chunk that triggered this event"]},"return":"io.wolfscript.Chunk","scope":"public","title":"Get: Gets the chunk being loaded/unloaded"}]},"io.wolfscript.event.world.ChunkLoadEvent":{"namespace":"io.wolfscript.event.world","title":"Called when a chunk is loaded","description":"Called when a chunk is loaded","name":"ChunkLoadEvent","qualifiedname":"io.wolfscript.event.world.ChunkLoadEvent","type":"class","scope":"public","extends":["io.wolfscript.event.world.ChunkEvent"],"constructors":[{"title":"ChunkLoadEvent constructor","description":"ChunkLoadEvent constructor","scope":"public","name":"ChunkLoadEvent","args":[{"name":"Chunk","type":"final","description":"Chunk argument"},{"name":"boolean","type":"final","description":"boolean argument"}]}],"methods":[{"title":"Gets if this chunk was newly created or not.","description":"Gets if this chunk was newly created or not. <p> Note that if this chunk is new, it will not be populated at this time.","doc":{"return":["true if the chunk is new, otherwise false"]},"scope":"public","return":"boolean","name":"isNewChunk","args":[]}],"imports":["io.wolfscript.Chunk","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.world.ChunkPopulateEvent":{"namespace":"io.wolfscript.event.world","title":"Thrown when a new chunk has finished being populated.","description":"Thrown when a new chunk has finished being populated. <p> If your intent is to populate the chunk using this event, please see {@link io.wolfscript.generator.BlockPopulator}","name":"ChunkPopulateEvent","qualifiedname":"io.wolfscript.event.world.ChunkPopulateEvent","type":"class","scope":"public","extends":["io.wolfscript.event.world.ChunkEvent"],"constructors":[{"title":"ChunkPopulateEvent constructor","description":"ChunkPopulateEvent constructor","scope":"public","name":"ChunkPopulateEvent","args":[{"name":"Chunk","type":"final","description":"Chunk argument"}]}],"methods":[],"imports":["io.wolfscript.Chunk","io.wolfscript.event.HandlerList","io.wolfscript.generator.BlockPopulator"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.world.ChunkUnloadEvent":{"namespace":"io.wolfscript.event.world","title":"Called when a chunk is unloaded","description":"Called when a chunk is unloaded","name":"ChunkUnloadEvent","qualifiedname":"io.wolfscript.event.world.ChunkUnloadEvent","type":"class","scope":"public","extends":["io.wolfscript.event.world.ChunkEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"ChunkUnloadEvent constructor","description":"ChunkUnloadEvent constructor","scope":"public","name":"ChunkUnloadEvent","args":[{"name":"Chunk","type":"final","description":"Chunk argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.Chunk","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.world.CreateReason":{"namespace":"io.wolfscript.event.world","title":"Called when a portal is created","description":"Called when a portal is created /\npublic class PortalCreateEvent extends WorldEvent implements Cancellable {\n    private static final HandlerList handlers = new HandlerList();\n    private boolean cancel = false;\n    private final ArrayList<Block> blocks = new ArrayList<Block>();\n    private CreateReason reason = CreateReason.FIRE;\n\n    public PortalCreateEvent(final Collection<Block> blocks, final World world, CreateReason reason) {\n        super(world);\n\n        this.blocks.addAll(blocks);\n        this.reason = reason;\n    }\n\n    /** Gets an array list of all the blocks associated with the created portal","doc":{"return":["array list of all the blocks associated with the created portal /\n    public ArrayList<Block> getBlocks() {\n        return this.blocks;\n    }\n\n    public boolean isCancelled() {\n        return cancel;\n    }\n\n    public void setCancelled(boolean cancel) {\n        this.cancel = cancel;\n    }\n\n    /** Gets the reason for the portal's creation","CreateReason for the portal's creation /\n    public CreateReason getReason() {\n        return reason;\n    }\n\n    @Override\n    public HandlerList getHandlers() {\n        return handlers;\n    }\n\n    public static HandlerList getHandlerList() {\n        return handlers;\n    }\n\n    /** An enum to specify the various reasons for a portal's creation"]},"name":"CreateReason","qualifiedname":"io.wolfscript.event.world.CreateReason","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.block.Block","io.wolfscript.World","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList","java.util.ArrayList","java.util.Collection"],"enum":[{"code":"FIRE","value":"","title":"When a portal is created 'traditionally' due to a portal frame","description":"When a portal is created 'traditionally' due to a portal frame being set on fire.","doc":{}}],"properties":[]},"io.wolfscript.event.world.SpawnChangeEvent":{"namespace":"io.wolfscript.event.world","title":"An event that is called when a world's spawn changes. The world's previous","description":"An event that is called when a world's spawn changes. The world's previous spawn location is included.","name":"SpawnChangeEvent","qualifiedname":"io.wolfscript.event.world.SpawnChangeEvent","type":"class","scope":"public","extends":["io.wolfscript.event.world.WorldEvent"],"constructors":[{"title":"SpawnChangeEvent constructor","description":"SpawnChangeEvent constructor","scope":"public","name":"SpawnChangeEvent","args":[{"name":"World","type":"final","description":"World argument"},{"name":"Location","type":"final","description":"Location argument"}]}],"methods":[],"imports":["io.wolfscript.World","io.wolfscript.Location","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"PreviousLocation","modifier":"readonly","args":[],"description":"Get: Gets the previous spawn location","doc":{"return":["Location that used to be spawn"]},"return":"io.wolfscript.Location","scope":"public","title":"Get: Gets the previous spawn location"}]},"io.wolfscript.event.world.StructureGrowEvent":{"namespace":"io.wolfscript.event.world","title":"Event that is called when an organic structure attempts to grow (Sapling {@literal ->}","description":"Event that is called when an organic structure attempts to grow (Sapling {@literal ->} Tree), (Mushroom {@literal ->} Huge Mushroom), naturally or using bonemeal.","name":"StructureGrowEvent","qualifiedname":"io.wolfscript.event.world.StructureGrowEvent","type":"class","scope":"public","extends":["io.wolfscript.event.world.WorldEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"StructureGrowEvent constructor","description":"StructureGrowEvent constructor","scope":"public","name":"StructureGrowEvent","args":[{"name":"Location","type":"final","description":"Location argument"},{"name":"TreeType","type":"final","description":"TreeType argument"},{"name":"boolean","type":"final","description":"boolean argument"},{"name":"Player","type":"final","description":"Player argument"},{"name":"List","type":"final","description":"List argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["java.util.List","io.wolfscript.Location","io.wolfscript.TreeType","io.wolfscript.block.BlockState","io.wolfscript.entity.Player","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"Blocks","modifier":"readonly","args":[],"description":"Get: Gets the location of the structure.","doc":{"return":["Location of the structure /\n    public Location getLocation() {\n        return location;\n    }\n\n    /** Gets the species type (birch, normal, pine, red mushroom, brown mushroom)","Structure species /\n    public TreeType getSpecies() {\n        return species;\n    }\n\n    /** Checks if structure was grown using bonemeal.","True if the structure was grown using bonemeal. /\n    public boolean isFromBonemeal() {\n        return bonemeal;\n    }\n\n    /** Gets the player that created the structure.","Player that created the structure, null if was not created manually /\n    public Player getPlayer() {\n        return player;\n    }\n\n    /** Gets an ArrayList of all blocks associated with the structure.","ArrayList of all blocks associated with the structure."]},"return":"List<BlockState>","scope":"public","title":"Get: Gets the location of the structure."},{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.event.world.WorldEvent":{"namespace":"io.wolfscript.event.world","title":"Represents events within a world","description":"Represents events within a world","name":"WorldEvent","qualifiedname":"io.wolfscript.event.world.WorldEvent","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.event.Event"],"constructors":[{"title":"WorldEvent constructor","description":"WorldEvent constructor","scope":"public","name":"WorldEvent","args":[{"name":"World","type":"final","description":"World argument"}]}],"methods":[],"imports":["io.wolfscript.World","io.wolfscript.event.Event"],"properties":[{"name":"World","modifier":"readonly","args":[],"description":"Get: Gets the world primarily involved with this event","doc":{"return":["World which caused this event"]},"return":"io.wolfscript.World","scope":"public","title":"Get: Gets the world primarily involved with this event"}]},"io.wolfscript.event.world.WorldInitEvent":{"namespace":"io.wolfscript.event.world","title":"Called when a World is initializing","description":"Called when a World is initializing","name":"WorldInitEvent","qualifiedname":"io.wolfscript.event.world.WorldInitEvent","type":"class","scope":"public","extends":["io.wolfscript.event.world.WorldEvent"],"constructors":[{"title":"WorldInitEvent constructor","description":"WorldInitEvent constructor","scope":"public","name":"WorldInitEvent","args":[{"name":"World","type":"final","description":"World argument"}]}],"methods":[],"imports":["io.wolfscript.World","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.world.WorldLoadEvent":{"namespace":"io.wolfscript.event.world","title":"Called when a World is loaded","description":"Called when a World is loaded","name":"WorldLoadEvent","qualifiedname":"io.wolfscript.event.world.WorldLoadEvent","type":"class","scope":"public","extends":["io.wolfscript.event.world.WorldEvent"],"constructors":[{"title":"WorldLoadEvent constructor","description":"WorldLoadEvent constructor","scope":"public","name":"WorldLoadEvent","args":[{"name":"World","type":"final","description":"World argument"}]}],"methods":[],"imports":["io.wolfscript.World","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.world.WorldSaveEvent":{"namespace":"io.wolfscript.event.world","title":"Called when a World is saved.","description":"Called when a World is saved.","name":"WorldSaveEvent","qualifiedname":"io.wolfscript.event.world.WorldSaveEvent","type":"class","scope":"public","extends":["io.wolfscript.event.world.WorldEvent"],"constructors":[{"title":"WorldSaveEvent constructor","description":"WorldSaveEvent constructor","scope":"public","name":"WorldSaveEvent","args":[{"name":"World","type":"final","description":"World argument"}]}],"methods":[],"imports":["io.wolfscript.World","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"}]},"io.wolfscript.event.world.WorldUnloadEvent":{"namespace":"io.wolfscript.event.world","title":"Called when a World is unloaded","description":"Called when a World is unloaded","name":"WorldUnloadEvent","qualifiedname":"io.wolfscript.event.world.WorldUnloadEvent","type":"class","scope":"public","extends":["io.wolfscript.event.world.WorldEvent"],"implements":["io.wolfscript.event.Cancellable"],"constructors":[{"title":"WorldUnloadEvent constructor","description":"WorldUnloadEvent constructor","scope":"public","name":"WorldUnloadEvent","args":[{"name":"World","type":"final","description":"World argument"}]}],"methods":[{"title":"isCancelled method","description":"isCancelled method","scope":"public","return":"boolean","name":"isCancelled","args":[]}],"imports":["io.wolfscript.World","io.wolfscript.event.Cancellable","io.wolfscript.event.HandlerList"],"properties":[{"name":"HandlerList","modifier":"readonly","args":[],"describe":"static","description":"HandlerList property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"HandlerList property"},{"name":"Handlers","modifier":"readonly","args":[],"description":"Handlers property","return":"io.wolfscript.event.HandlerList","scope":"public","title":"Handlers property"},{"name":"Cancelled","modifier":"writeonly","args":[{"name":"cancel","type":"boolean","description":"cancel argument"}],"description":"Cancelled property","return":"void","scope":"public","title":"Cancelled property"}]},"io.wolfscript.generator.0":{"namespace":"io.wolfscript","title":"Classes to facilitate {@link io.wolfscript.World world} generation","description":"Classes to facilitate {@link io.wolfscript.World world} generation implementation.","name":"generator","qualifiedname":"io.wolfscript.generator.0","packagename":"io.wolfscript.generator","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.generator.BlockPopulator"],"interfaces":["io.wolfscript.generator.BiomeGrid"],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.generator.BiomeGrid":{"namespace":"io.wolfscript.generator","title":"A chunk generator is responsible for the initial shaping of an entire","description":"A chunk generator is responsible for the initial shaping of an entire chunk. For example, the nether chunk generator should shape netherrack and soulsand /\npublic abstract class ChunkGenerator {\n\n    /** Interface to biome data for chunk to be generated: initialized with default values for world type and seed. <p> Custom generator is free to access and tailor values during generateBlockSections() or generateExtBlockSections().","name":"BiomeGrid","qualifiedname":"io.wolfscript.generator.BiomeGrid","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["java.util.ArrayList","java.util.List","java.util.Random","io.wolfscript.Location","io.wolfscript.Material","io.wolfscript.World","io.wolfscript.block.Biome","io.wolfscript.block.Block"],"properties":[]},"io.wolfscript.generator.BlockPopulator":{"namespace":"io.wolfscript.generator","title":"A block populator is responsible for generating a small area of blocks.","description":"A block populator is responsible for generating a small area of blocks. <p> For example, generating glowstone inside the nether or generating dungeons full of treasure","name":"BlockPopulator","qualifiedname":"io.wolfscript.generator.BlockPopulator","type":"class","scope":"public","describe":"abstract","constructors":[],"methods":[{"title":"Populates an area of blocks at or around the given chunk.","description":"Populates an area of blocks at or around the given chunk. <p> The chunks on each side of the specified chunk must already exist; that is, there must be one north, east, south and west of the specified chunk. The \"corner\" chunks may not exist, in which scenario the populator should record any changes required for those chunks and perform the changes when they are ready.","scope":"public","describe":"abstract","return":"void","name":"populate","args":[{"name":"world","type":"io.wolfscript.World","description":"The world to generate in"},{"name":"random","type":"java.util.Random","description":"The random generator to use"},{"name":"source","type":"io.wolfscript.Chunk","description":"The chunk to generate for"}]}],"imports":["java.util.Random","io.wolfscript.Chunk","io.wolfscript.World"],"properties":[]},"io.wolfscript.help.0":{"namespace":"io.wolfscript","title":"Classes used to manipulate the default command and topic assistance system.","description":"Classes used to manipulate the default command and topic assistance system.","name":"help","qualifiedname":"io.wolfscript.help.0","packagename":"io.wolfscript.help","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.help.GenericCommandHelpTopic","io.wolfscript.help.HelpTopic","io.wolfscript.help.HelpTopicComparator","io.wolfscript.help.IndexHelpTopic"],"interfaces":["io.wolfscript.help.HelpMap","io.wolfscript.help.HelpTopicFactory"],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.help.GenericCommandHelpTopic":{"namespace":"io.wolfscript.help","title":"Lacking an alternative, the help system will create instances of","description":"Lacking an alternative, the help system will create instances of GenericCommandHelpTopic for each command in the server's CommandMap. You can use this class as a base class for custom help topics, or as an example for how to write your own.","name":"GenericCommandHelpTopic","qualifiedname":"io.wolfscript.help.GenericCommandHelpTopic","type":"class","scope":"public","extends":["io.wolfscript.help.HelpTopic"],"constructors":[{"title":"GenericCommandHelpTopic constructor","description":"GenericCommandHelpTopic constructor","scope":"public","name":"GenericCommandHelpTopic","args":[{"name":"command","type":"io.wolfscript.command.Command","description":"command argument"}]}],"methods":[{"title":"canSee method","description":"canSee method","scope":"public","return":"boolean","name":"canSee","args":[{"name":"sender","type":"io.wolfscript.command.CommandSender","description":"sender argument"}]}],"imports":["io.wolfscript.ChatColor","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","org.apache.commons.lang.StringUtils","io.wolfscript.command.ConsoleCommandSender","io.wolfscript.command.PluginCommand","io.wolfscript.command.defaults.VanillaCommand","io.wolfscript.help.HelpTopic"],"properties":[]},"io.wolfscript.help.HelpMap":{"namespace":"io.wolfscript.help","title":"The HelpMap tracks all help topics registered in a WolfScript server. When the","description":"The HelpMap tracks all help topics registered in a WolfScript server. When the server starts up or is reloaded, help is processed and topics are added in the following order: <ol> <li>General topics are loaded from the help.yml <li>Plugins load and optionally call {@code addTopic()} <li>Registered plugin commands are processed by {@link io.wolfscript.help.HelpTopicFactory} objects to create topics <li>Topic contents are amended as directed in help.yml </ol>","name":"HelpMap","qualifiedname":"io.wolfscript.help.HelpMap","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["java.util.Collection","java.util.List"],"properties":[{"name":"IgnoredPlugins","modifier":"readonly","args":[],"description":"Get: Returns a help topic for a given topic name.","doc":{"param":["topicName The help topic name to look up.","topic The new help topic to add. /\n    public void addTopic(HelpTopic topic);\n\n    /** Clears out the contents of the help index. Normally called during server reload. /\n    public void clear();\n\n    /** Associates a {@link HelpTopicFactory} object with given command base class. Plugins typically call this method during {@code onLoad()}. Once registered, the custom HelpTopicFactory will be used to create a custom {@link HelpTopic} for all commands deriving from the {@code commandClass} base class, or all commands deriving from {@link io.wolfscript.command.PluginCommand} who's executor derives from {@code commandClass} base class.","commandClass The class for which the custom HelpTopicFactory applies. Must derive from either {@link io.wolfscript.command.Command} or {@link io.wolfscript.command.CommandExecutor}.","factory The {@link HelpTopicFactory} implementation to associate with the {@code commandClass}."],"return":["A {@link io.wolfscript.help.HelpTopic} object matching the topic name or null if none can be found. /\n    public HelpTopic getHelpTopic(String topicName);\n\n    /** Returns a collection of all the registered help topics.","All the registered help topics. /\n    public Collection<HelpTopic> getHelpTopics();\n    \n    /** Adds a topic to the server's help index.","A list of plugins that should be excluded from the help index."],"throws":["IllegalArgumentException Thrown if {@code commandClass} does not derive from a legal base class. /\n    public void registerHelpTopicFactory(Class<?> commandClass, HelpTopicFactory<?> factory);\n\n    /** Gets the list of plugins the server administrator has chosen to exclude from the help index. Plugin authors who choose to directly extend {@link io.wolfscript.command.Command} instead of {@link io.wolfscript.command.PluginCommand} will need to check this collection in their {@link HelpTopicFactory} implementations to ensure they meet the server administrator's expectations."]},"return":"List<String>","scope":"public","title":"Get: Returns a help topic for a given topic name."}]},"io.wolfscript.help.HelpTopic":{"namespace":"io.wolfscript.help","title":"HelpTopic implementations are displayed to the user when the user uses the","description":"HelpTopic implementations are displayed to the user when the user uses the /help command. <p> Custom implementations of this class can work at two levels. A simple implementation only needs to set the value of {@code name}, {@code shortText}, and {@code fullText} in the constructor. This base class will take care of the rest. <p> Complex implementations can be created by overriding the behavior of all the methods in this class.","name":"HelpTopic","qualifiedname":"io.wolfscript.help.HelpTopic","type":"class","scope":"public","describe":"abstract","constructors":[],"methods":[],"imports":["io.wolfscript.command.CommandSender","io.wolfscript.entity.Player"],"properties":[]},"io.wolfscript.help.HelpTopicComparator":{"namespace":"io.wolfscript.help","title":"Used to impose a custom total ordering on help topics.","description":"Used to impose a custom total ordering on help topics. <p> All topics are listed in alphabetic order, but topics that start with a slash come after topics that don't.","name":"HelpTopicComparator","qualifiedname":"io.wolfscript.help.HelpTopicComparator","type":"class","scope":"public","implements":["Comparator<HelpTopic"],"constructors":[],"methods":[{"title":"compare method","description":"compare method","scope":"public","return":"int","name":"compare","args":[{"name":"lhs","type":"io.wolfscript.help.HelpTopic","description":"lhs argument"},{"name":"rhs","type":"io.wolfscript.help.HelpTopic","description":"rhs argument"}]},{"title":"compare method","description":"compare method","scope":"public","return":"int","name":"compare","args":[{"name":"lhs","type":"String","description":"lhs argument"},{"name":"rhs","type":"String","description":"rhs argument"}]},{"title":"helpTopicComparatorInstance method","description":"helpTopicComparatorInstance method","scope":"public","describe":"static","return":"io.wolfscript.help.HelpTopicComparator","name":"helpTopicComparatorInstance","args":[]},{"title":"topicNameComparatorInstance method","description":"topicNameComparatorInstance method","scope":"public","describe":"static","return":"TopicNameComparator","name":"topicNameComparatorInstance","args":[]}],"imports":["io.wolfscript.help.HelpTopic","java.util.Comparator"],"properties":[]},"io.wolfscript.help.HelpTopicFactory":{"namespace":"io.wolfscript.help","title":"A HelpTopicFactory is used to create custom {@link io.wolfscript.help.HelpTopic} objects from","description":"A HelpTopicFactory is used to create custom {@link io.wolfscript.help.HelpTopic} objects from commands that inherit from a common base class or have executors that inherit from a common base class. You can use a custom HelpTopic to change the way all the commands in your plugin display in the help. If your plugin implements a complex permissions system, a custom help topic may also be appropriate. <p> To automatically bind your plugin's commands to your custom HelpTopic implementation, first make sure all your commands or executors derive from a custom base class (it doesn't have to do anything). Next implement a custom HelpTopicFactory that accepts your custom command base class and instantiates an instance of your custom HelpTopic from it. Finally, register your HelpTopicFactory against your command base class using the {@link HelpMap#registerHelpTopicFactory(Class, HelpTopicFactory)} method. <p> As the help system iterates over all registered commands to make help topics, it first checks to see if there is a HelpTopicFactory registered for the command's base class. If so, the factory is used to make a help topic rather than a generic help topic. If no factory is found for the command's base class and the command derives from {@link io.wolfscript.command.PluginCommand}, then the type of the command's executor is inspected looking for a registered HelpTopicFactory. Finally, if no factory is found, a generic help topic is created for the command.","doc":{"param":["<TCommand> The base class for your custom commands."]},"name":"HelpTopicFactory","qualifiedname":"io.wolfscript.help.HelpTopicFactory","type":"interface","scope":"public","extends":["io.wolfscript.command.Command"],"constructors":[],"methods":[{"title":"This method accepts a command deriving from a custom command base class","description":"This method accepts a command deriving from a custom command base class and constructs a custom HelpTopic for it.","doc":{"return":["A new custom help topic or {@code null} to intentionally NOT create a topic."]},"scope":"public","return":"io.wolfscript.help.HelpTopic","name":"createTopic","args":[{"name":"command","type":"TCommand","description":"The custom command to build a help topic for."}]}],"imports":["io.wolfscript.command.Command"],"properties":[]},"io.wolfscript.help.IndexHelpTopic":{"namespace":"io.wolfscript.help","title":"This help topic generates a list of other help topics. This class is useful","description":"This help topic generates a list of other help topics. This class is useful for adding your own index help topics. To enforce a particular order, use a sorted collection. <p> If a preamble is provided to the constructor, that text will be displayed before the first item in the index.","name":"IndexHelpTopic","qualifiedname":"io.wolfscript.help.IndexHelpTopic","type":"class","scope":"public","extends":["io.wolfscript.help.HelpTopic"],"constructors":[{"title":"IndexHelpTopic constructor","description":"IndexHelpTopic constructor","scope":"public","name":"IndexHelpTopic","args":[{"name":"name","type":"String","description":"name argument"},{"name":"shortText","type":"String","description":"shortText argument"},{"name":"permission","type":"String","description":"permission argument"}]},{"title":"IndexHelpTopic constructor","description":"IndexHelpTopic constructor","scope":"public","name":"IndexHelpTopic","args":[{"name":"name","type":"String","description":"name argument"},{"name":"shortText","type":"String","description":"shortText argument"},{"name":"permission","type":"String","description":"permission argument"},{"name":"preamble","type":"String","description":"preamble argument"}]}],"methods":[],"imports":["io.wolfscript.ChatColor","io.wolfscript.command.CommandSender","io.wolfscript.command.ConsoleCommandSender","io.wolfscript.entity.Player","io.wolfscript.util.ChatPaginator","java.util.Collection"],"properties":[]},"io.wolfscript.inventory.0":{"namespace":"io.wolfscript","title":"Classes involved in manipulating player inventories and item interactions.","description":"Classes involved in manipulating player inventories and item interactions.","name":"inventory","qualifiedname":"io.wolfscript.inventory.0","packagename":"io.wolfscript.inventory","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.inventory.FurnaceRecipe","io.wolfscript.inventory.ShapedRecipe","io.wolfscript.inventory.ShapelessRecipe"],"interfaces":["io.wolfscript.inventory.AnvilInventory","io.wolfscript.inventory.BeaconInventory","io.wolfscript.inventory.BrewerInventory","io.wolfscript.inventory.CraftingInventory","io.wolfscript.inventory.DoubleChestInventory","io.wolfscript.inventory.EnchantingInventory","io.wolfscript.inventory.EntityEquipment","io.wolfscript.inventory.FurnaceInventory","io.wolfscript.inventory.HorseInventory","io.wolfscript.inventory.Inventory","io.wolfscript.inventory.InventoryHolder","io.wolfscript.inventory.ItemFactory","io.wolfscript.inventory.MerchantInventory","io.wolfscript.inventory.PlayerInventory","io.wolfscript.inventory.Recipe"],"enums":["io.wolfscript.inventory.EquipmentSlot","io.wolfscript.inventory.ItemFlag","io.wolfscript.inventory.Property"],"namespaces":["io.wolfscript.inventory.meta.0"],"properties":[]},"io.wolfscript.inventory.AnvilInventory":{"namespace":"io.wolfscript.inventory","title":"Interface to the inventory of an Anvil.","description":"Interface to the inventory of an Anvil.","name":"AnvilInventory","qualifiedname":"io.wolfscript.inventory.AnvilInventory","type":"interface","scope":"public","extends":["io.wolfscript.inventory.Inventory"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.inventory.BeaconInventory":{"namespace":"io.wolfscript.inventory","title":"Interface to the inventory of a Beacon.","description":"Interface to the inventory of a Beacon.","name":"BeaconInventory","qualifiedname":"io.wolfscript.inventory.BeaconInventory","type":"interface","scope":"public","extends":["io.wolfscript.inventory.Inventory"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.inventory.BrewerInventory":{"namespace":"io.wolfscript.inventory","title":"Interface to the inventory of a Brewing Stand.","description":"Interface to the inventory of a Brewing Stand.","name":"BrewerInventory","qualifiedname":"io.wolfscript.inventory.BrewerInventory","type":"interface","scope":"public","extends":["io.wolfscript.inventory.Inventory"],"constructors":[],"methods":[],"imports":["io.wolfscript.block.BrewingStand"],"properties":[]},"io.wolfscript.inventory.CraftingInventory":{"namespace":"io.wolfscript.inventory","title":"Interface to the crafting inventories","description":"Interface to the crafting inventories","name":"CraftingInventory","qualifiedname":"io.wolfscript.inventory.CraftingInventory","type":"interface","scope":"public","extends":["io.wolfscript.inventory.Inventory"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.inventory.DoubleChestInventory":{"namespace":"io.wolfscript.inventory","title":"Interface to the inventory of a Double Chest.","description":"Interface to the inventory of a Double Chest.","name":"DoubleChestInventory","qualifiedname":"io.wolfscript.inventory.DoubleChestInventory","type":"interface","scope":"public","extends":["io.wolfscript.inventory.Inventory"],"constructors":[],"methods":[],"imports":["io.wolfscript.block.DoubleChest"],"properties":[]},"io.wolfscript.inventory.EnchantingInventory":{"namespace":"io.wolfscript.inventory","title":"Interface to the inventory of an Enchantment Table.","description":"Interface to the inventory of an Enchantment Table.","name":"EnchantingInventory","qualifiedname":"io.wolfscript.inventory.EnchantingInventory","type":"interface","scope":"public","extends":["io.wolfscript.inventory.Inventory"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.inventory.EntityEquipment":{"namespace":"io.wolfscript.inventory","title":"An interface to a creatures inventory","description":"An interface to a creatures inventory","name":"EntityEquipment","qualifiedname":"io.wolfscript.inventory.EntityEquipment","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.entity.Entity"],"properties":[]},"io.wolfscript.inventory.EquipmentSlot":{"namespace":"io.wolfscript.inventory","title":"enum EquipmentSlot","description":"enum EquipmentSlot","name":"EquipmentSlot","qualifiedname":"io.wolfscript.inventory.EquipmentSlot","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"HAND","value":"","title":"HAND EquipmentSlot","description":"HAND EquipmentSlot"},{"code":"FEET","value":"","title":"FEET EquipmentSlot","description":"FEET EquipmentSlot"},{"code":"LEGS","value":"","title":"LEGS EquipmentSlot","description":"LEGS EquipmentSlot"},{"code":"CHEST","value":"","title":"CHEST EquipmentSlot","description":"CHEST EquipmentSlot"}],"properties":[]},"io.wolfscript.inventory.FurnaceInventory":{"namespace":"io.wolfscript.inventory","title":"Interface to the inventory of a Furnace.","description":"Interface to the inventory of a Furnace.","name":"FurnaceInventory","qualifiedname":"io.wolfscript.inventory.FurnaceInventory","type":"interface","scope":"public","extends":["io.wolfscript.inventory.Inventory"],"constructors":[],"methods":[],"imports":["io.wolfscript.block.Furnace"],"properties":[]},"io.wolfscript.inventory.FurnaceRecipe":{"namespace":"io.wolfscript.inventory","title":"Represents a smelting recipe.","description":"Represents a smelting recipe.","name":"FurnaceRecipe","qualifiedname":"io.wolfscript.inventory.FurnaceRecipe","type":"class","scope":"public","implements":["io.wolfscript.inventory.Recipe"],"constructors":[],"methods":[],"imports":["io.wolfscript.Material","io.wolfscript.material.MaterialData"],"properties":[{"name":"Result","modifier":"readonly","args":[],"description":"Get: Create a furnace recipe to craft the specified ItemStack.","doc":{"param":["result The item you want the recipe to create.","source The input material. /\n    public FurnaceRecipe(ItemStack result, Material source) {\n        this(result, source, 0);\n    }\n\n    /** Create a furnace recipe to craft the specified ItemStack.","result The item you want the recipe to create.","source The input material. /\n    public FurnaceRecipe(ItemStack result, MaterialData source) {\n        this(result, source.getItemType(), source.getData());\n    }\n\n    /** Create a furnace recipe to craft the specified ItemStack.","result The item you want the recipe to create.","source The input material.","data The data value. (Note: This is currently ignored by the CraftWolfScript server.)","input The input material.","input The input material.","input The input material.","data The data value. (Note: This is currently ignored by the CraftWolfScript server.)"],"deprecated":["Magic value /\n    @Deprecated\n    public FurnaceRecipe(ItemStack result, Material source, int data) {\n        this.output = new ItemStack(result);\n        this.ingredient = new ItemStack(source, 1, (short) data);\n    }\n\n    /** Sets the input of this furnace recipe.","Magic value /\n    @Deprecated\n    public FurnaceRecipe setInput(Material input, int data) {\n        this.ingredient = new ItemStack(input, 1, (short) data);\n        return this;\n    }\n\n    /** Get the input material."],"return":["The changed recipe, so you can chain calls. /\n    public FurnaceRecipe setInput(MaterialData input) {\n        return setInput(input.getItemType(), input.getData());\n    }\n\n    /** Sets the input of this furnace recipe.","The changed recipe, so you can chain calls. /\n    public FurnaceRecipe setInput(Material input) {\n        return setInput(input, 0);\n    }\n\n    /** Sets the input of this furnace recipe.","The changed recipe, so you can chain calls.","The input material. /\n    public ItemStack getInput() {\n        return this.ingredient.clone();\n    }\n\n    /** Get the result of this recipe.","The resulting stack."]},"return":"ItemStack","scope":"public","title":"Get: Create a furnace recipe to craft the specified ItemStack."}]},"io.wolfscript.inventory.HorseInventory":{"namespace":"io.wolfscript.inventory","title":"An interface to the inventory of a Horse.","description":"An interface to the inventory of a Horse.","name":"HorseInventory","qualifiedname":"io.wolfscript.inventory.HorseInventory","type":"interface","scope":"public","extends":["io.wolfscript.inventory.Inventory"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.inventory.Inventory":{"namespace":"io.wolfscript.inventory","title":"Interface to the various inventories. Behavior relating to {@link","description":"Interface to the various inventories. Behavior relating to {@link Material#AIR} is unspecified.","name":"Inventory","qualifiedname":"io.wolfscript.inventory.Inventory","type":"interface","scope":"public","extends":["Iterable<ItemStack"],"constructors":[],"methods":[{"title":"Returns the size of the inventory","description":"Returns the size of the inventory","doc":{"return":["The size of the inventory /\n    public int getSize();\n\n    /** Returns the maximum stack size for an ItemStack in this inventory.","The maximum size for an ItemStack in this inventory. /\n    public int getMaxStackSize();\n\n    /** This method allows you to change the maximum stack size for an inventory. <p> <b>Caveats:</b> <ul> <li>Not all inventories respect this value. <li>Stacks larger than 127 may be clipped when the world is saved. <li>This value is not guaranteed to be preserved; be sure to set it before every time you want to set a slot over the max stack size. <li>Stacks larger than the default max size for this type of inventory may not display correctly in the client. </ul>","The String with the name of the inventory /\n    public String getName();\n\n    /** Returns the ItemStack found in the slot at the given index","The ItemStack in the slot /\n    public ItemStack getItem(int index);\n\n    /** Stores the ItemStack at the given index of the inventory.","A HashMap containing items that didn't fit.","A HashMap containing items that couldn't be removed.","An array of ItemStacks from the inventory. /\n    public ItemStack[] getContents();\n\n    /** Completely replaces the inventory's contents. Removes all existing contents and replaces it with the ItemStacks given in the array.","true if an ItemStack in this inventory contains the materialId","true if an ItemStack is found with the given Material","false if item is null, true if any exactly matching ItemStacks were found /\n    public boolean contains(ItemStack item);\n\n    /** Checks if the inventory contains any ItemStacks with the given materialId, adding to at least the minimum amount specified.","true if this contains any matching ItemStack with the given materialId and amount","true if amount is less than 1, true if enough ItemStacks were found to add to the given amount","false if item is null, true if amount less than 1, true if amount of exactly matching ItemStacks were found","false if item is null, true if amount less than 1, true if enough ItemStacks were found to add to the given amount /\n    public boolean containsAtLeast(ItemStack item, int amount);\n\n    /** Returns a HashMap with all slots and ItemStacks in the inventory with given materialId. <p> The HashMap contains entries where, the key is the slot index, and the value is the ItemStack in that slot. If no matching ItemStack with the given materialId is found, an empty map is returned.","A HashMap containing the slot index, ItemStack pairs","A HashMap containing the slot index, ItemStack pairs","A map from slot indexes to item at index /\n    public HashMap<Integer, ? extends ItemStack> all(ItemStack item);\n\n    /** Finds the first slot in the inventory containing an ItemStack with the given materialId.","The slot index of the given materialId or -1 if not found","The slot index of the given Material or -1 if not found","The slot index of the given ItemStack or -1 if not found /\n    public int first(ItemStack item);\n\n    /** Returns the first empty Slot.","The first empty Slot found, or -1 if no empty slots. /\n    public int firstEmpty();\n\n    /** Removes all stacks in the inventory matching the given materialId.","A list of HumanEntities who are viewing this Inventory. /\n    public List<HumanEntity> getViewers();\n\n    /** Returns the title of this inventory.","A String with the title. /\n    public String getTitle();\n\n    /** Returns what type of inventory this is.","The InventoryType representing the type of inventory. /\n    public InventoryType getType();\n\n    /** Gets the block or entity belonging to the open inventory","The holder of the inventory; null if it has no holder. /\n    public InventoryHolder getHolder();\n\n    @Override\n    public ListIterator<ItemStack> iterator();\n\n    /** Returns an iterator starting at the given index. If the index is positive, then the first call to next() will return the item at that index; if it is negative, the first call to previous will return the item at index (getSize() + index).","An iterator."],"throws":["IllegalArgumentException if items or any element in it is null /\n    public HashMap<Integer, ItemStack> addItem(ItemStack... items) throws IllegalArgumentException;\n\n    /** Removes the given ItemStacks from the inventory. <p> It will try to remove 'as much as possible' from the types and amounts you give as arguments. <p> The returned HashMap contains what it couldn't remove, where the key is the index of the parameter, and the value is the ItemStack at that index of the varargs parameter. If all the given ItemStacks are removed, it will return an empty HashMap.","IllegalArgumentException if items is null /\n    public HashMap<Integer, ItemStack> removeItem(ItemStack... items) throws IllegalArgumentException;\n\n    /** Returns all ItemStacks from the inventory","IllegalArgumentException If the array has more items than the inventory. /\n    public void setContents(ItemStack[] items) throws IllegalArgumentException;\n\n    /** Checks if the inventory contains any ItemStacks with the given materialId","IllegalArgumentException if material is null /\n    public boolean contains(Material material) throws IllegalArgumentException;\n\n    /** Checks if the inventory contains any ItemStacks matching the given ItemStack. <p> This will only return true if both the type and the amount of the stack match.","IllegalArgumentException if material is null /\n    public boolean contains(Material material, int amount) throws IllegalArgumentException;\n\n    /** Checks if the inventory contains at least the minimum amount specified of exactly matching ItemStacks. <p> An ItemStack only counts if both the type and the amount of the stack match.","IllegalArgumentException if material is null /\n    public HashMap<Integer, ? extends ItemStack> all(Material material) throws IllegalArgumentException;\n\n    /** Finds all slots in the inventory containing any ItemStacks with the given ItemStack. This will only match slots if both the type and the amount of the stack match <p> The HashMap contains entries where, the key is the slot index, and the value is the ItemStack in that slot. If no matching ItemStack with the given Material is found, an empty map is returned.","IllegalArgumentException if material is null /\n    public int first(Material material) throws IllegalArgumentException;\n\n    /** Returns the first slot in the inventory containing an ItemStack with the given stack. This will only match a slot if both the type and the amount of the stack match","IllegalArgumentException if material is null /\n    public void remove(Material material) throws IllegalArgumentException;\n\n    /** Removes all stacks in the inventory matching the given stack. <p> This will only match a slot if both the type and the amount of the stack match"],"deprecated":["Magic value /\n    @Deprecated\n    public boolean contains(int materialId);\n\n    /** Checks if the inventory contains any ItemStacks with the given material.","Magic value /\n    @Deprecated\n    public boolean contains(int materialId, int amount);\n\n    /** Checks if the inventory contains any ItemStacks with the given material, adding to at least the minimum amount specified.","Magic value /\n    @Deprecated\n    public HashMap<Integer, ? extends ItemStack> all(int materialId);\n\n    /** Returns a HashMap with all slots and ItemStacks in the inventory with the given Material. <p> The HashMap contains entries where, the key is the slot index, and the value is the ItemStack in that slot. If no matching ItemStack with the given Material is found, an empty map is returned.","Magic value /\n    @Deprecated\n    public int first(int materialId);\n\n    /** Finds the first slot in the inventory containing an ItemStack with the given material","Magic value /\n    @Deprecated\n    public void remove(int materialId);\n\n    /** Removes all stacks in the inventory matching the given material."],"see":["#containsAtLeast(ItemStack, int) /\n    public boolean contains(ItemStack item, int amount);\n\n    /** Checks if the inventory contains ItemStacks matching the given ItemStack whose amounts sum to at least the minimum amount specified."]},"scope":"public","return":"ListIterator<ItemStack>","name":"iterator","args":[{"name":"index","type":"int","description":"The index of the Slot's ItemStack to return"}]}],"imports":["java.util.HashMap","java.util.List","java.util.ListIterator","io.wolfscript.Material","io.wolfscript.entity.HumanEntity","io.wolfscript.event.inventory.InventoryType"],"properties":[]},"io.wolfscript.inventory.InventoryHolder":{"namespace":"io.wolfscript.inventory","title":"interface InventoryHolder","description":"interface InventoryHolder","name":"InventoryHolder","qualifiedname":"io.wolfscript.inventory.InventoryHolder","type":"interface","scope":"public","constructors":[],"methods":[],"imports":[],"properties":[{"name":"Inventory","modifier":"readonly","args":[],"description":"Get: Get the object's inventory.","doc":{"return":["The inventory."]},"return":"io.wolfscript.inventory.Inventory","scope":"public","title":"Get: Get the object's inventory."}]},"io.wolfscript.inventory.ItemFactory":{"namespace":"io.wolfscript.inventory","title":"An instance of the ItemFactory can be obtained with {@link","description":"An instance of the ItemFactory can be obtained with {@link Server#getItemFactory()}. <p> The ItemFactory is solely responsible for creating item meta containers to apply on item stacks.","name":"ItemFactory","qualifiedname":"io.wolfscript.inventory.ItemFactory","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.Color","io.wolfscript.Material","io.wolfscript.Server","io.wolfscript.inventory.meta.BookMeta","io.wolfscript.inventory.meta.ItemMeta","io.wolfscript.inventory.meta.SkullMeta"],"properties":[]},"io.wolfscript.inventory.ItemFlag":{"namespace":"io.wolfscript.inventory","title":"A ItemFlag can hide some Attributes from ItemStacks","description":"A ItemFlag can hide some Attributes from ItemStacks","name":"ItemFlag","qualifiedname":"io.wolfscript.inventory.ItemFlag","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"HIDE_POTION_EFFECTS","value":"","title":"Setting to show/hide enchants","description":"Setting to show/hide enchants /\n    HIDE_ENCHANTS,\n    /** Setting to show/hide Attributes like Damage /\n    HIDE_ATTRIBUTES,\n    /** Setting to show/hide the unbreakable State /\n    HIDE_UNBREAKABLE,\n    /** Setting to show/hide what the ItemStack can break/destroy /\n    HIDE_DESTROYS,\n    /** Setting to show/hide where this ItemStack can be build/placed on /\n    HIDE_PLACED_ON,\n    /** Setting to show/hide potion effects on this ItemStack","doc":{}}],"properties":[]},"io.wolfscript.inventory.MerchantInventory":{"namespace":"io.wolfscript.inventory","title":"interface MerchantInventory","description":"interface MerchantInventory","name":"MerchantInventory","qualifiedname":"io.wolfscript.inventory.MerchantInventory","type":"interface","scope":"public","extends":["io.wolfscript.inventory.Inventory"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.inventory.PlayerInventory":{"namespace":"io.wolfscript.inventory","title":"Interface to the inventory of a Player, including the four armor slots.","description":"Interface to the inventory of a Player, including the four armor slots.","name":"PlayerInventory","qualifiedname":"io.wolfscript.inventory.PlayerInventory","type":"interface","scope":"public","extends":["io.wolfscript.inventory.Inventory"],"constructors":[],"methods":[{"title":"Get all ItemStacks from the armor slots","description":"Get all ItemStacks from the armor slots","doc":{"return":["All the ItemStacks from the armor slots /\n    public ItemStack[] getArmorContents();\n\n    /** Return the ItemStack from the helmet slot","The ItemStack in the helmet slot /\n    public ItemStack getHelmet();\n\n    /** Return the ItemStack from the chestplate slot","The ItemStack in the chestplate slot /\n    public ItemStack getChestplate();\n\n    /** Return the ItemStack from the leg slot","The ItemStack in the leg slot /\n    public ItemStack getLeggings();\n\n    /** Return the ItemStack from the boots slot","The ItemStack in the boots slot /\n    public ItemStack getBoots();\n\n    /** Put the given ItemStacks into the armor slots","The currently held ItemStack /\n    public ItemStack getItemInHand();\n\n    /** Sets the item in hand","Held item slot number /\n    public int getHeldItemSlot();\n\n    /** Set the slot number of the currently held item. <p> This validates whether the slot is between 0 and 8 inclusive.","The number of items cleared"],"throws":["IllegalArgumentException Thrown if slot is not between 0 and 8 inclusive /\n    public void setHeldItemSlot(int slot);\n\n    /** Clears all matching items from the inventory. Setting either value to -1 will skip it's check, while setting both to -1 will clear all items in your inventory unconditionally."],"deprecated":["Magic value"]},"scope":"public","return":"int","name":"clear","deprecated":true,"args":[{"name":"id","type":"int","description":"the id of the item you want to clear from the inventory"},{"name":"data","type":"int","description":"the data of the item you want to clear from the inventory"}]}],"imports":["io.wolfscript.entity.HumanEntity"],"properties":[{"name":"Holder","modifier":"readonly","args":[],"description":"Holder property","return":"io.wolfscript.entity.HumanEntity","scope":"public","title":"Holder property"}]},"io.wolfscript.inventory.Property":{"namespace":"io.wolfscript.inventory","title":"Represents a view linking two inventories and a single player (whose","description":"Represents a view linking two inventories and a single player (whose inventory may or may not be one of the two). <p> Note: If you implement this interface but fail to satisfy the expected contracts of certain methods, there's no guarantee that the game will work as it should. /\npublic abstract class InventoryView {\n    public final static int OUTSIDE = -999;\n    /** Represents various extra properties of certain inventory windows.","name":"Property","qualifiedname":"io.wolfscript.inventory.Property","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.GameMode","io.wolfscript.entity.HumanEntity","io.wolfscript.event.inventory.InventoryType"],"enum":[{"code":"0","value":"","title":"0 Property","description":"0 Property"},{"code":"0","value":"","title":"0 Property","description":"0 Property"},{"code":"1","value":"","title":"1 Property","description":"1 Property"},{"code":"2","value":"","title":"2 Property","description":"2 Property"},{"code":"inventory","value":"","title":"inventory Property","description":"inventory Property"},{"code":"0","value":"","title":"0 Property","description":"0 Property"},{"code":"inventory","value":"","title":"inventory Property","description":"inventory Property"},{"code":"1","value":"","title":"1 Property","description":"1 Property"},{"code":"inventory","value":"","title":"inventory Property","description":"inventory Property"},{"code":"2","value":"","title":"2 Property","description":"2 Property"}],"properties":[{"name":"Id","modifier":"readonly","args":[],"deprecated":true,"description":"Get: The progress of the down-pointing arrow in a brewing inventory. /\n        BREW_TIME(0, InventoryType.BREWING),\n        /** The progress of the right-pointing arrow in a furnace inventory. /\n        COOK_TIME(0, InventoryType.FURNACE),\n        /** The progress of the flame in a furnace inventory. /\n        BURN_TIME(1, InventoryType.FURNACE),\n        /** How many total ticks the current fuel should last. /\n        TICKS_FOR_CURRENT_FUEL(2, InventoryType.FURNACE),\n        /** In an enchanting inventory, the top button's experience level value. /\n        ENCHANT_BUTTON1(0, InventoryType.ENCHANTING),\n        /** In an enchanting inventory, the middle button's experience level value. /\n        ENCHANT_BUTTON2(1, InventoryType.ENCHANTING),\n        /** In an enchanting inventory, the bottom button's experience level value. /\n        ENCHANT_BUTTON3(2, InventoryType.ENCHANTING);\n        int id;\n        InventoryType style;\n        private Property(int id, InventoryType appliesTo) {\n            this.id = id;\n            style = appliesTo;\n        }\n\n        public InventoryType getType() {\n            return style;\n        }\n\n        /**","doc":{"return":["the id of this view"],"deprecated":["Magic value"]},"return":"int","scope":"public","title":"Get: The progress of the down-pointing arrow in a brewing inventory."}]},"io.wolfscript.inventory.Recipe":{"namespace":"io.wolfscript.inventory","title":"Represents some type of crafting recipe.","description":"Represents some type of crafting recipe.","name":"Recipe","qualifiedname":"io.wolfscript.inventory.Recipe","type":"interface","scope":"public","constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.inventory.ShapedRecipe":{"namespace":"io.wolfscript.inventory","title":"Represents a shaped (ie normal) crafting recipe.","description":"Represents a shaped (ie normal) crafting recipe.","name":"ShapedRecipe","qualifiedname":"io.wolfscript.inventory.ShapedRecipe","type":"class","scope":"public","implements":["io.wolfscript.inventory.Recipe"],"constructors":[],"methods":[],"imports":["java.util.HashMap","java.util.Map","org.apache.commons.lang.Validate","io.wolfscript.Material","io.wolfscript.material.MaterialData"],"properties":[{"name":"Result","modifier":"readonly","args":[],"description":"Get: Create a shaped recipe to craft the specified ItemStack. The constructor merely determines the result and type; to set the actual recipe, you'll need to call the appropriate methods.","doc":{"param":["result The item you want the recipe to create.","shape The rows of the recipe (up to 3 rows).","key The character that represents the ingredient in the shape.","ingredient The ingredient.","key The character that represents the ingredient in the shape.","ingredient The ingredient.","key The character that represents the ingredient in the shape.","ingredient The ingredient.","raw The raw material data as an integer."],"see":["ShapedRecipe#shape(String...)","ShapedRecipe#setIngredient(char, Material)","ShapedRecipe#setIngredient(char, Material, int)","ShapedRecipe#setIngredient(char, MaterialData) /\n    public ShapedRecipe(ItemStack result) {\n        this.output = new ItemStack(result);\n    }\n\n    /** Set the shape of this recipe to the specified rows. Each character represents a different ingredient; exactly what each character represents is set separately. The first row supplied corresponds with the upper most part of the recipe on the workbench e.g. if all three rows are supplies the first string represents the top row on the workbench."],"return":["The changed recipe, so you can chain calls. /\n    public ShapedRecipe shape(final String... shape) {\n        Validate.notNull(shape, \"Must provide a shape\");\n        Validate.isTrue(shape.length > 0 && shape.length < 4, \"Crafting recipes should be 1, 2, 3 rows, not \", shape.length);\n\n        for (String row : shape) {\n            Validate.notNull(row, \"Shape cannot have null rows\");\n            Validate.isTrue(row.length() > 0 && row.length() < 4, \"Crafting rows should be 1, 2, or 3 characters, not \", row.length());\n        }\n        this.rows = new String[shape.length];\n        for (int i = 0; i < shape.length; i++) {\n            this.rows[i] = shape[i];\n        }\n\n        // Remove character mappings for characters that no longer exist in the shape\n        HashMap<Character, ItemStack> newIngredients = new HashMap<Character, ItemStack>();\n        for (String row : shape) {\n            for (Character c : row.toCharArray()) {\n                newIngredients.put(c, ingredients.get(c));\n            }\n        }\n        this.ingredients = newIngredients;\n\n        return this;\n    }\n\n    /** Sets the material that a character in the recipe shape refers to.","The changed recipe, so you can chain calls. /\n    public ShapedRecipe setIngredient(char key, MaterialData ingredient) {\n        return setIngredient(key, ingredient.getItemType(), ingredient.getData());\n    }\n\n    /** Sets the material that a character in the recipe shape refers to.","The changed recipe, so you can chain calls. /\n    public ShapedRecipe setIngredient(char key, Material ingredient) {\n        return setIngredient(key, ingredient, 0);\n    }\n\n    /** Sets the material that a character in the recipe shape refers to.","The changed recipe, so you can chain calls.","The mapping of character to ingredients. /\n    public Map<Character, ItemStack> getIngredientMap() {\n        HashMap<Character, ItemStack> result = new HashMap<Character, ItemStack>();\n        for (Map.Entry<Character, ItemStack> ingredient : ingredients.entrySet()) {\n            if (ingredient.getValue() == null) {\n                result.put(ingredient.getKey(), null);\n            } else {\n                result.put(ingredient.getKey(), ingredient.getValue().clone());\n            }\n        }\n        return result;\n    }\n\n    /** Get the shape.","The recipe's shape. /\n    public String[] getShape() {\n        return rows.clone();\n    }\n\n    /** Get the result.","The result stack."],"deprecated":["Magic value /\n    @Deprecated\n    public ShapedRecipe setIngredient(char key, Material ingredient, int raw) {\n        Validate.isTrue(ingredients.containsKey(key), \"Symbol does not appear in the shape:\", key);\n\n        // -1 is the old wildcard, map to Short.MAX_VALUE as the new one\n        if (raw == -1) {\n            raw = Short.MAX_VALUE;\n        }\n\n        ingredients.put(key, new ItemStack(ingredient, 1, (short) raw));\n        return this;\n    }\n\n    /** Get a copy of the ingredients map."]},"return":"ItemStack","scope":"public","title":"Get: Create a shaped recipe to craft the specified ItemStack. The"}]},"io.wolfscript.inventory.ShapelessRecipe":{"namespace":"io.wolfscript.inventory","title":"Represents a shapeless recipe, where the arrangement of the ingredients on","description":"Represents a shapeless recipe, where the arrangement of the ingredients on the crafting grid does not matter.","name":"ShapelessRecipe","qualifiedname":"io.wolfscript.inventory.ShapelessRecipe","type":"class","scope":"public","implements":["io.wolfscript.inventory.Recipe"],"constructors":[],"methods":[],"imports":["java.util.ArrayList","java.util.Iterator","java.util.List","org.apache.commons.lang.Validate","io.wolfscript.Material","io.wolfscript.material.MaterialData"],"properties":[{"name":"IngredientList","modifier":"readonly","args":[],"description":"Get: Create a shapeless recipe to craft the specified ItemStack. The constructor merely determines the result and type; to set the actual recipe, you'll need to call the appropriate methods.","doc":{"param":["result The item you want the recipe to create.","ingredient The ingredient to add.","ingredient The ingredient to add.","ingredient The ingredient to add.","rawdata The data value, or -1 to allow any data value.","count How many to add (can't be more than 9!)","ingredient The ingredient to add.","count How many to add (can't be more than 9!)","ingredient The ingredient to add.","count How many to add (can't be more than 9!)","ingredient The ingredient to add.","rawdata The data value, or -1 to allow any data value.","ingredient The ingredient to remove","ingredient The ingredient to remove","count The number of copies to remove.","ingredient The ingredient to remove","count The number of copies to remove.","ingredient The ingredient to remove.","ingredient The ingredient to remove","rawdata The data value;","count The number of copies to remove.","ingredient The ingredient to remove.","rawdata The data value."],"see":["ShapelessRecipe#addIngredient(Material)","ShapelessRecipe#addIngredient(MaterialData)","ShapelessRecipe#addIngredient(Material,int)","ShapelessRecipe#addIngredient(int,Material)","ShapelessRecipe#addIngredient(int,MaterialData)","ShapelessRecipe#addIngredient(int,Material,int) /\n    public ShapelessRecipe(ItemStack result) {\n        this.output = new ItemStack(result);\n    }\n\n    /** Adds the specified ingredient."],"return":["The changed recipe, so you can chain calls. /\n    public ShapelessRecipe addIngredient(MaterialData ingredient) {\n        return addIngredient(1, ingredient);\n    }\n\n    /** Adds the specified ingredient.","The changed recipe, so you can chain calls. /\n    public ShapelessRecipe addIngredient(Material ingredient) {\n        return addIngredient(1, ingredient, 0);\n    }\n\n    /** Adds the specified ingredient.","The changed recipe, so you can chain calls.","The changed recipe, so you can chain calls. /\n    public ShapelessRecipe addIngredient(int count, MaterialData ingredient) {\n        return addIngredient(count, ingredient.getItemType(), ingredient.getData());\n    }\n\n    /** Adds multiples of the specified ingredient.","The changed recipe, so you can chain calls. /\n    public ShapelessRecipe addIngredient(int count, Material ingredient) {\n        return addIngredient(count, ingredient, 0);\n    }\n\n    /** Adds multiples of the specified ingredient.","The changed recipe, so you can chain calls.","The changed recipe. /\n    public ShapelessRecipe removeIngredient(Material ingredient) {\n        return removeIngredient(ingredient, 0);\n    }\n\n    /** Removes an ingredient from the list. If the ingredient occurs multiple times, only one instance of it is removed. If the data value is -1, only ingredients with a -1 data value will be removed.","The changed recipe. /\n    public ShapelessRecipe removeIngredient(MaterialData ingredient) {\n        return removeIngredient(ingredient.getItemType(), ingredient.getData());\n    }\n\n    /** Removes multiple instances of an ingredient from the list. If there are less instances then specified, all will be removed. Only removes exact matches, with a data value of 0.","The changed recipe. /\n    public ShapelessRecipe removeIngredient(int count, Material ingredient) {\n        return removeIngredient(count, ingredient, 0);\n    }\n\n    /** Removes multiple instances of an ingredient from the list. If there are less instances then specified, all will be removed. If the data value is -1, only ingredients with a -1 data value will be removed.","The changed recipe. /\n    public ShapelessRecipe removeIngredient(int count, MaterialData ingredient) {\n        return removeIngredient(count, ingredient.getItemType(), ingredient.getData());\n    }\n\n    /** Removes an ingredient from the list. If the ingredient occurs multiple times, only one instance of it is removed. If the data value is -1, only ingredients with a -1 data value will be removed.","The changed recipe.","The changed recipe.","The result stack. /\n    public ItemStack getResult() {\n        return output.clone();\n    }\n\n    /** Get the list of ingredients used for this recipe.","The input list"],"deprecated":["Magic value /\n    @Deprecated\n    public ShapelessRecipe addIngredient(Material ingredient, int rawdata) {\n        return addIngredient(1, ingredient, rawdata);\n    }\n\n    /** Adds multiples of the specified ingredient.","Magic value /\n    @Deprecated\n    public ShapelessRecipe addIngredient(int count, Material ingredient, int rawdata) {\n        Validate.isTrue(ingredients.size() + count <= 9, \"Shapeless recipes cannot have more than 9 ingredients\");\n\n        // -1 is the old wildcard, map to Short.MAX_VALUE as the new one\n        if (rawdata == -1) {\n            rawdata = Short.MAX_VALUE;\n        }\n\n        while (count-- > 0) {\n            ingredients.add(new ItemStack(ingredient, 1, (short) rawdata));\n        }\n        return this;\n    }\n\n    /** Removes an ingredient from the list. If the ingredient occurs multiple times, only one instance of it is removed. Only removes exact matches, with a data value of 0.","Magic value /\n    @Deprecated\n    public ShapelessRecipe removeIngredient(Material ingredient, int rawdata) {\n        return removeIngredient(1, ingredient, rawdata);\n    }\n\n    /** Removes multiple instances of an ingredient from the list. If there are less instances then specified, all will be removed. If the data value is -1, only ingredients with a -1 data value will be removed.","Magic value /\n    @Deprecated\n    public ShapelessRecipe removeIngredient(int count, Material ingredient, int rawdata) {\n        Iterator<ItemStack> iterator = ingredients.iterator();\n        while (count > 0 && iterator.hasNext()) {\n            ItemStack stack = iterator.next();\n            if (stack.getType() == ingredient && stack.getDurability() == rawdata) {\n                iterator.remove();\n                count--;\n            }\n        }\n        return this;\n    }\n\n    /** Get the result of this recipe."]},"return":"List<ItemStack>","scope":"public","title":"Get: Create a shapeless recipe to craft the specified ItemStack. The"}]},"io.wolfscript.inventory.meta.0":{"namespace":"io.wolfscript.inventory","title":"The interfaces used when manipulating extra data can can be stored inside","description":"The interfaces used when manipulating extra data can can be stored inside {@link io.wolfscript.inventory.ItemStack item stacks}.","name":"meta","qualifiedname":"io.wolfscript.inventory.meta.0","packagename":"io.wolfscript.inventory.meta","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":[],"interfaces":["io.wolfscript.inventory.meta.BannerMeta","io.wolfscript.inventory.meta.BlockStateMeta","io.wolfscript.inventory.meta.BookMeta","io.wolfscript.inventory.meta.EnchantmentStorageMeta","io.wolfscript.inventory.meta.FireworkEffectMeta","io.wolfscript.inventory.meta.FireworkMeta","io.wolfscript.inventory.meta.LeatherArmorMeta","io.wolfscript.inventory.meta.MapMeta","io.wolfscript.inventory.meta.PotionMeta","io.wolfscript.inventory.meta.Repairable","io.wolfscript.inventory.meta.SkullMeta"],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.inventory.meta.BannerMeta":{"namespace":"io.wolfscript.inventory.meta","title":"interface BannerMeta","description":"interface BannerMeta","name":"BannerMeta","qualifiedname":"io.wolfscript.inventory.meta.BannerMeta","type":"interface","scope":"public","extends":["ItemMeta"],"constructors":[],"methods":[],"imports":["java.util.List","io.wolfscript.DyeColor","io.wolfscript.block.banner.Pattern"],"properties":[]},"io.wolfscript.inventory.meta.BlockStateMeta":{"namespace":"io.wolfscript.inventory.meta","title":"interface BlockStateMeta","description":"interface BlockStateMeta","name":"BlockStateMeta","qualifiedname":"io.wolfscript.inventory.meta.BlockStateMeta","type":"interface","scope":"public","extends":["ItemMeta"],"constructors":[],"methods":[],"imports":["io.wolfscript.block.BlockState"],"properties":[]},"io.wolfscript.inventory.meta.BookMeta":{"namespace":"io.wolfscript.inventory.meta","title":"Represents a book ({@link Material#BOOK_AND_QUILL} or {@link","description":"Represents a book ({@link Material#BOOK_AND_QUILL} or {@link Material#WRITTEN_BOOK}) that can have a title, an author, and pages.","name":"BookMeta","qualifiedname":"io.wolfscript.inventory.meta.BookMeta","type":"interface","scope":"public","extends":["ItemMeta"],"constructors":[],"methods":[],"imports":["java.util.List","io.wolfscript.Material"],"properties":[]},"io.wolfscript.inventory.meta.EnchantmentStorageMeta":{"namespace":"io.wolfscript.inventory.meta","title":"EnchantmentMeta is specific to items that can <i>store</i> enchantments, as","description":"EnchantmentMeta is specific to items that can <i>store</i> enchantments, as opposed to being enchanted. {@link Material#ENCHANTED_BOOK} is an example of an item with enchantment storage.","name":"EnchantmentStorageMeta","qualifiedname":"io.wolfscript.inventory.meta.EnchantmentStorageMeta","type":"interface","scope":"public","extends":["ItemMeta"],"constructors":[],"methods":[],"imports":["java.util.Map","io.wolfscript.Material","io.wolfscript.enchantments.Enchantment"],"properties":[]},"io.wolfscript.inventory.meta.FireworkEffectMeta":{"namespace":"io.wolfscript.inventory.meta","title":"Represents a meta that can store a single FireworkEffect. An example","description":"Represents a meta that can store a single FireworkEffect. An example includes {@link Material#FIREWORK_CHARGE}.","name":"FireworkEffectMeta","qualifiedname":"io.wolfscript.inventory.meta.FireworkEffectMeta","type":"interface","scope":"public","extends":["ItemMeta"],"constructors":[],"methods":[],"imports":["io.wolfscript.FireworkEffect","io.wolfscript.Material"],"properties":[]},"io.wolfscript.inventory.meta.FireworkMeta":{"namespace":"io.wolfscript.inventory.meta","title":"Represents a {@link Material#FIREWORK} and its effects.","description":"Represents a {@link Material#FIREWORK} and its effects.","name":"FireworkMeta","qualifiedname":"io.wolfscript.inventory.meta.FireworkMeta","type":"interface","scope":"public","extends":["ItemMeta"],"constructors":[],"methods":[],"imports":["java.util.List","io.wolfscript.FireworkEffect","io.wolfscript.Material"],"properties":[]},"io.wolfscript.inventory.meta.LeatherArmorMeta":{"namespace":"io.wolfscript.inventory.meta","title":"Represents leather armor ({@link Material#LEATHER_BOOTS}, {@link","description":"Represents leather armor ({@link Material#LEATHER_BOOTS}, {@link Material#LEATHER_CHESTPLATE}, {@link Material#LEATHER_HELMET}, or {@link Material#LEATHER_LEGGINGS}) that can be colored.","name":"LeatherArmorMeta","qualifiedname":"io.wolfscript.inventory.meta.LeatherArmorMeta","type":"interface","scope":"public","extends":["ItemMeta"],"constructors":[],"methods":[],"imports":["io.wolfscript.Color","io.wolfscript.Material","io.wolfscript.inventory.ItemFactory"],"properties":[]},"io.wolfscript.inventory.meta.MapMeta":{"namespace":"io.wolfscript.inventory.meta","title":"Represents a map that can be scalable.","description":"Represents a map that can be scalable.","name":"MapMeta","qualifiedname":"io.wolfscript.inventory.meta.MapMeta","type":"interface","scope":"public","extends":["ItemMeta"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.inventory.meta.PotionMeta":{"namespace":"io.wolfscript.inventory.meta","title":"Represents a potion ({@link Material#POTION}) that can have custom effects.","description":"Represents a potion ({@link Material#POTION}) that can have custom effects.","name":"PotionMeta","qualifiedname":"io.wolfscript.inventory.meta.PotionMeta","type":"interface","scope":"public","extends":["ItemMeta"],"constructors":[],"methods":[],"imports":["io.wolfscript.Material","io.wolfscript.potion.PotionEffect","io.wolfscript.potion.PotionEffectType","java.util.List"],"properties":[]},"io.wolfscript.inventory.meta.Repairable":{"namespace":"io.wolfscript.inventory.meta","title":"Represents an item that can be repaired at an anvil.","description":"Represents an item that can be repaired at an anvil.","name":"Repairable","qualifiedname":"io.wolfscript.inventory.meta.Repairable","type":"interface","scope":"public","constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.inventory.meta.SkullMeta":{"namespace":"io.wolfscript.inventory.meta","title":"Represents a skull ({@link Material#SKULL_ITEM}) that can have an owner.","description":"Represents a skull ({@link Material#SKULL_ITEM}) that can have an owner.","name":"SkullMeta","qualifiedname":"io.wolfscript.inventory.meta.SkullMeta","type":"interface","scope":"public","extends":["ItemMeta"],"constructors":[],"methods":[],"imports":["io.wolfscript.Material"],"properties":[]},"io.wolfscript.map.0":{"namespace":"io.wolfscript","title":"Classes to facilitate plugin handling of {@link io.wolfscript.Material#MAP","description":"Classes to facilitate plugin handling of {@link io.wolfscript.Material#MAP map} displays.","name":"map","qualifiedname":"io.wolfscript.map.0","packagename":"io.wolfscript.map","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.map.CharacterSprite","io.wolfscript.map.MapCursorCollection","io.wolfscript.map.MapPalette","io.wolfscript.map.MapRenderer","io.wolfscript.map.MinecraftFont"],"interfaces":["io.wolfscript.map.MapCanvas"],"enums":["io.wolfscript.map.Scale","io.wolfscript.map.Type"],"namespaces":[],"properties":[]},"io.wolfscript.map.CharacterSprite":{"namespace":"io.wolfscript.map","title":"Represents a bitmap font drawable to a map.","description":"Represents a bitmap font drawable to a map. /\npublic class MapFont {\n\n    private final HashMap<Character, CharacterSprite> chars = new HashMap<Character, CharacterSprite>();\n    private int height = 0;\n    protected boolean malleable = true;\n\n    /** Set the sprite for a given character.","doc":{"param":["ch The character to set the sprite for.","sprite The CharacterSprite to set.","ch The character to get the sprite for.","text The text.","text The text."],"throws":["IllegalStateException if this font is static. /\n    public void setChar(char ch, CharacterSprite sprite) {\n        if (!malleable) {\n            throw new IllegalStateException(\"this font is not malleable\");\n        }\n\n        chars.put(ch, sprite);\n        if (sprite.getHeight() > height) {\n            height = sprite.getHeight();\n        }\n    }\n\n    /** Get the sprite for a given character."],"return":["The CharacterSprite associated with the character, or null if there is none. /\n    public CharacterSprite getChar(char ch) {\n        return chars.get(ch);\n    }\n\n    /** Get the width of the given text as it would be rendered using this font.","The width in pixels. /\n    public int getWidth(String text) {\n        if (!isValid(text)) {\n            throw new IllegalArgumentException(\"text contains invalid characters\");\n        }\n\n        if (text.length() == 0){\n            return 0;\n        }\n\n        int result = 0;\n        for (int i = 0; i < text.length(); ++i) {\n            result += chars.get(text.charAt(i)).getWidth();\n        }\n        result += text.length() - 1; // Account for 1px spacing between characters\n\n        return result;\n    }\n\n    /** Get the height of this font.","The height of the font. /\n    public int getHeight() {\n        return height;\n    }\n\n    /** Check whether the given text is valid.","True if the string contains only defined characters, false otherwise. /\n    public boolean isValid(String text) {\n        for (int i = 0; i < text.length(); ++i) {\n            char ch = text.charAt(i);\n            if (ch == '\\u00A7' || ch == '\\n') continue;\n            if (chars.get(ch) == null) return false;\n        }\n        return true;\n    }\n\n    /** Represents the graphics for a single character in a MapFont."]},"name":"CharacterSprite","qualifiedname":"io.wolfscript.map.CharacterSprite","type":"class","scope":"public","describe":"static","constructors":[{"title":"CharacterSprite constructor","description":"CharacterSprite constructor","scope":"public","name":"CharacterSprite","args":[{"name":"width","type":"int","description":"width argument"},{"name":"height","type":"int","description":"height argument"}]}],"methods":[],"imports":["java.util.HashMap"],"properties":[{"name":"Height","modifier":"readonly","args":[],"description":"Get: Get the value of a pixel of the character.","doc":{"param":["row The row, in the range [0,8).","col The column, in the range [0,8)."],"return":["True if the pixel is solid, false if transparent. /\n        public boolean get(int row, int col) {\n            if (row < 0 || col < 0 || row >= height || col >= width) return false;\n            return data[row width + col];\n        }\n\n        /** Get the width of the character sprite.","The width of the character. /\n        public int getWidth() {\n            return width;\n        }\n\n        /** Get the height of the character sprite.","The height of the character."]},"return":"int","scope":"public","title":"Get: Get the value of a pixel of the character."}]},"io.wolfscript.map.MapCanvas":{"namespace":"io.wolfscript.map","title":"Represents a canvas for drawing to a map. Each canvas is associated with a","description":"Represents a canvas for drawing to a map. Each canvas is associated with a specific {@link io.wolfscript.map.MapRenderer} and represents that renderer's layer on the map.","name":"MapCanvas","qualifiedname":"io.wolfscript.map.MapCanvas","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Get the map this canvas is attached to.","description":"Get the map this canvas is attached to.","doc":{"return":["The MapView this canvas is attached to. /\n    public MapView getMapView();\n\n    /** Get the cursor collection associated with this canvas.","The MapCursorCollection associated with this canvas. /\n    public MapCursorCollection getCursors();\n\n    /** Set the cursor collection associated with this canvas. This does not usually need to be called since a MapCursorCollection is already provided.","The color. See {@link io.wolfscript.map.MapPalette}. /\n    public byte getPixel(int x, int y);\n\n    /** Get a pixel from the layers below this canvas.","The color. See {@link io.wolfscript.map.MapPalette}. /\n    public byte getBasePixel(int x, int y);\n\n    /** Draw an image to the map. The image will be clipped if necessary."]},"scope":"public","return":"void","name":"drawText","args":[{"name":"x","type":"int","description":"The x coordinate, from 0 to 127."},{"name":"y","type":"int","description":"The y coordinate, from 0 to 127."},{"name":"font","type":"MapFont","description":"The font to use."},{"name":"text","type":"String","description":"The formatted text to render."}]}],"imports":["java.awt.Image"],"properties":[]},"io.wolfscript.map.MapCursorCollection":{"namespace":"io.wolfscript.map","title":"Represents all the map cursors on a {@link io.wolfscript.map.MapCanvas}. Like MapCanvas, a","description":"Represents all the map cursors on a {@link io.wolfscript.map.MapCanvas}. Like MapCanvas, a MapCursorCollection is linked to a specific {@link io.wolfscript.map.MapRenderer}.","name":"MapCursorCollection","qualifiedname":"io.wolfscript.map.MapCursorCollection","type":"class","scope":"public","describe":"final","constructors":[],"methods":[{"title":"Get the amount of cursors in this collection.","description":"Get the amount of cursors in this collection.","doc":{"return":["The size of this collection. /\n    public int size() {\n        return cursors.size();\n    }\n\n    /** Get a cursor from this collection.","The MapCursor. /\n    public MapCursor getCursor(int index) {\n        return cursors.get(index);\n    }\n\n    /** Remove a cursor from the collection.","Whether the cursor was removed successfully. /\n    public boolean removeCursor(MapCursor cursor) {\n        return cursors.remove(cursor);\n    }\n\n    /** Add a cursor to the collection.","The MapCursor that was passed. /\n    public MapCursor addCursor(MapCursor cursor) {\n        cursors.add(cursor);\n        return cursor;\n    }\n\n    /** Add a cursor to the collection.","The newly added MapCursor. /\n    public MapCursor addCursor(int x, int y, byte direction) {\n        return addCursor(x, y, direction, (byte) 0, true);\n    }\n\n    /** Add a cursor to the collection.","The newly added MapCursor.","The newly added MapCursor."],"deprecated":["Magic value /\n    @Deprecated\n    public MapCursor addCursor(int x, int y, byte direction, byte type) {\n        return addCursor(x, y, direction, type, true);\n    }\n\n    /** Add a cursor to the collection.","Magic value"]},"scope":"public","return":"MapCursor","name":"addCursor","deprecated":true,"args":[{"name":"x","type":"int","description":"The x coordinate, from -128 to 127."},{"name":"y","type":"int","description":"The y coordinate, from -128 to 127."},{"name":"direction","type":"byte","description":"The facing of the cursor, from 0 to 15."},{"name":"type","type":"byte","description":"The type (color/style) of the map cursor."},{"name":"visible","type":"boolean","description":"Whether the cursor is visible."}]}],"imports":["java.util.ArrayList","java.util.List"],"properties":[]},"io.wolfscript.map.MapPalette":{"namespace":"io.wolfscript.map","title":"Represents the palette that map items use.","description":"Represents the palette that map items use. <p> These fields are hee base color ranges. Each entry corresponds to four colors of varying shades with values entry to entry + 3.","name":"MapPalette","qualifiedname":"io.wolfscript.map.MapPalette","type":"class","scope":"public","describe":"final","constructors":[],"fields":[{"title":"TRANSPARENT field","description":"TRANSPARENT field","name":"TRANSPARENT","scope":"public","type":"byte","describe":"static final"},{"title":"LIGHT field","description":"LIGHT field","name":"LIGHT","scope":"public","type":"byte","describe":"static final"},{"title":"LIGHT field","description":"LIGHT field","name":"LIGHT","scope":"public","type":"byte","describe":"static final"},{"title":"GRAY field","description":"GRAY field","name":"GRAY","scope":"public","type":"byte","describe":"static final"},{"title":"RED field","description":"RED field","name":"RED","scope":"public","type":"byte","describe":"static final"},{"title":"PALE field","description":"PALE field","name":"PALE","scope":"public","type":"byte","describe":"static final"},{"title":"GRAY field","description":"GRAY field","name":"GRAY","scope":"public","type":"byte","describe":"static final"},{"title":"DARK field","description":"DARK field","name":"DARK","scope":"public","type":"byte","describe":"static final"},{"title":"WHITE field","description":"WHITE field","name":"WHITE","scope":"public","type":"byte","describe":"static final"},{"title":"LIGHT field","description":"LIGHT field","name":"LIGHT","scope":"public","type":"byte","describe":"static final"},{"title":"BROWN field","description":"BROWN field","name":"BROWN","scope":"public","type":"byte","describe":"static final"},{"title":"DARK field","description":"DARK field","name":"DARK","scope":"public","type":"byte","describe":"static final"},{"title":"BLUE field","description":"BLUE field","name":"BLUE","scope":"public","type":"byte","describe":"static final"},{"title":"DARK field","description":"DARK field","name":"DARK","scope":"public","type":"byte","describe":"static final"}],"methods":[{"title":"getColor method","description":"getColor method","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public static final byte TRANSPARENT = 0;\n    /**","Magic value /\n    @Deprecated\n    public static final byte LIGHT_GREEN = 4;\n    /**","Magic value /\n    @Deprecated\n    public static final byte LIGHT_BROWN = 8;\n    /**","Magic value /\n    @Deprecated\n    public static final byte GRAY_1 = 12;\n    /**","Magic value /\n    @Deprecated\n    public static final byte RED = 16;\n    /**","Magic value /\n    @Deprecated\n    public static final byte PALE_BLUE = 20;\n    /**","Magic value /\n    @Deprecated\n    public static final byte GRAY_2 = 24;\n    /**","Magic value /\n    @Deprecated\n    public static final byte DARK_GREEN = 28;\n    /**","Magic value /\n    @Deprecated\n    public static final byte WHITE = 32;\n    /**","Magic value /\n    @Deprecated\n    public static final byte LIGHT_GRAY = 36;\n    /**","Magic value /\n    @Deprecated\n    public static final byte BROWN = 40;\n    /**","Magic value /\n    @Deprecated\n    public static final byte DARK_GRAY = 44;\n    /**","Magic value /\n    @Deprecated\n    public static final byte BLUE = 48;\n    /**","Magic value /\n    @Deprecated\n    public static final byte DARK_BROWN = 52;\n\n    /** Resize an image to 128x128.","Magic value /\n    @Deprecated\n    public static byte[] imageToBytes(Image image) {\n        BufferedImage temp = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_ARGB);\n        Graphics2D graphics = temp.createGraphics();\n        graphics.drawImage(image, 0, 0, null);\n        graphics.dispose();\n\n        int[] pixels = new int[temp.getWidth() temp.getHeight()];\n        temp.getRGB(0, 0, temp.getWidth(), temp.getHeight(), pixels, 0, temp.getWidth());\n\n        byte[] result = new byte[temp.getWidth() temp.getHeight()];\n        for (int i = 0; i < pixels.length; i++) {\n            result[i] = matchColor(new Color(pixels[i], true));\n        }\n        return result;\n    }\n\n    /** Get the index of the closest matching color in the palette to the given color.","Magic value /\n    @Deprecated\n    public static byte matchColor(int r, int g, int b) {\n        return matchColor(new Color(r, g, b));\n    }\n\n    /** Get the index of the closest matching color in the palette to the given color.","Magic value /\n    @Deprecated\n    public static byte matchColor(Color color) {\n        if (color.getAlpha() < 128) return 0;\n\n        int index = 0;\n        double best = -1;\n\n        for (int i = 4; i < colors.length; i++) {\n            double distance = getDistance(color, colors[i]);\n            if (distance < best || best == -1) {\n                best = distance;\n                index = i;\n            }\n        }\n\n        // Minecraft has 143 colors, some of which have negative byte representations\n        return (byte) (index < 128 ? index : -129 + (index - 127));\n    }\n\n    /** Get the value of the given color in the palette.","Magic value"],"return":["The resized image. /\n    public static BufferedImage resizeImage(Image image) {\n        BufferedImage result = new BufferedImage(128, 128, BufferedImage.TYPE_INT_ARGB);\n        Graphics2D graphics = result.createGraphics();\n        graphics.drawImage(image, 0, 0, 128, 128, null);\n        graphics.dispose();\n        return result;\n    }\n\n    /** Convert an Image to a byte[] using the palette.","A byte[] containing the pixels of the image.","The index in the palette.","The index in the palette.","The Color of the palette entry."]},"scope":"public","describe":"static","return":"java.awt.Color","name":"getColor","deprecated":true,"args":[{"name":"index","type":"byte","description":"The index in the palette."}]}],"imports":["java.awt.Color","java.awt.Graphics2D","java.awt.Image","java.awt.image.BufferedImage"],"properties":[]},"io.wolfscript.map.MapRenderer":{"namespace":"io.wolfscript.map","title":"Represents a renderer for a map.","description":"Represents a renderer for a map.","name":"MapRenderer","qualifiedname":"io.wolfscript.map.MapRenderer","type":"class","scope":"public","describe":"abstract","constructors":[],"methods":[{"title":"Initialize the map renderer base to be non-contextual. See {@link","description":"Initialize the map renderer base to be non-contextual. See {@link #isContextual()}. /\n    public MapRenderer() {\n        this(false);\n    }\n\n    /** Initialize the map renderer base with the given contextual status.","doc":{"return":["True if contextual, false otherwise. /\n    final public boolean isContextual() {\n        return contextual;\n    }\n\n    /** Initialize this MapRenderer for the given map."]},"scope":"public","return":"void","name":"initialize","args":[{"name":"map","type":"MapView","description":"The MapView being initialized."}]},{"title":"render method","description":"render method","scope":"public","return":"void","name":"render","args":[{"name":"map","type":"MapView","description":"map argument"},{"name":"canvas","type":"io.wolfscript.map.MapCanvas","description":"canvas argument"},{"name":"player","type":"io.wolfscript.entity.Player","description":"player argument"}]}],"imports":["io.wolfscript.entity.Player"],"properties":[]},"io.wolfscript.map.MinecraftFont":{"namespace":"io.wolfscript.map","title":"Represents the built-in Minecraft font.","description":"Represents the built-in Minecraft font.","name":"MinecraftFont","qualifiedname":"io.wolfscript.map.MinecraftFont","type":"class","scope":"public","extends":["MapFont"],"constructors":[{"title":"/  {0,0,9,6,9,0,0,0},\n        /* +","description":"/  {0,0,9,6,9,0,0,0},\n        /* + /  {0,4,4,31,4,4,0,0},\n        /* , /  {0,0,0,0,0,1,1,1},\n        /* - /  {0,0,0,31,0,0,0,0},\n        /* . /  {0,0,0,0,0,1,1,0},\n        /* / /  {16,8,8,4,2,2,1,0},\n        /* 0 /  {14,17,25,21,19,17,14,0},\n        /* 1 /  {4,6,4,4,4,4,31,0},\n        /* 2 /  {14,17,16,12,2,17,31,0},\n        /* 3 /  {14,17,16,12,16,17,14,0},\n        /* 4 /  {24,20,18,17,31,16,16,0},\n        /* 5 /  {31,1,15,16,16,17,14,0},\n        /* 6 /  {12,2,1,15,17,17,14,0},\n        /* 7 /  {31,17,16,8,4,4,4,0},\n        /* 8 /  {14,17,17,14,17,17,14,0},\n        /* 9 /  {14,17,17,30,16,8,6,0},\n        /* : /  {0,1,1,0,0,1,1,0},\n        /* ; /  {0,1,1,0,0,1,1,1},\n        /* < /  {8,4,2,1,2,4,8,0},\n        /* = /  {0,0,31,0,0,31,0,0},\n        /* > /  {1,2,4,8,4,2,1,0},\n        /* ? /  {14,17,16,8,4,0,4,0},\n        /* @ /  {30,33,45,45,61,1,30,0},\n        /* A /  {14,17,31,17,17,17,17,0},\n        /* B /  {15,17,15,17,17,17,15,0},\n        /* C /  {14,17,1,1,1,17,14,0},\n        /* D /  {15,17,17,17,17,17,15,0},\n        /* E /  {31,1,7,1,1,1,31,0},\n        /* F /  {31,1,7,1,1,1,1,0},\n        /* G /  {30,1,25,17,17,17,14,0},\n        /* H /  {17,17,31,17,17,17,17,0},\n        /* I /  {7,2,2,2,2,2,7,0},\n        /* J /  {16,16,16,16,16,17,14,0},\n        /* K /  {17,9,7,9,17,17,17,0},\n        /* L /  {1,1,1,1,1,1,31,0},\n        /* M /  {17,27,21,17,17,17,17,0},\n        /* N /  {17,19,21,25,17,17,17,0},\n        /* O /  {14,17,17,17,17,17,14,0},\n        /* P /  {15,17,15,1,1,1,1,0},\n        /* Q /  {14,17,17,17,17,9,22,0},\n        /* R /  {15,17,15,17,17,17,17,0},\n        /* S /  {30,1,14,16,16,17,14,0},\n        /* T /  {31,4,4,4,4,4,4,0},\n        /* U /  {17,17,17,17,17,17,14,0},\n        /* V /  {17,17,17,17,10,10,4,0},\n        /* W /  {17,17,17,17,21,27,17,0},\n        /* X /  {17,10,4,10,17,17,17,0},\n        /* Y /  {17,10,4,4,4,4,4,0},\n        /* Z /  {31,16,8,4,2,1,31,0},\n        /* [ /  {7,1,1,1,1,1,7,0},\n        /* \\ /  {1,2,2,4,8,8,16,0},\n        /* ] /  {7,4,4,4,4,4,7,0},\n        /* ^ /  {4,10,17,0,0,0,0,0},\n        /* _ /  {0,0,0,0,0,0,0,31},\n        /* ` /  {1,1,2,0,0,0,0,0},\n        /* a /  {0,0,14,16,30,17,30,0},\n        /* b /  {1,1,13,19,17,17,15,0},\n        /* c /  {0,0,14,17,1,17,14,0},\n        /* d /  {16,16,22,25,17,17,30,0},\n        /* e /  {0,0,14,17,31,1,30,0},\n        /* f /  {12,2,15,2,2,2,2,0},\n        /* g /  {0,0,30,17,17,30,16,15},\n        /* h /  {1,1,13,19,17,17,17,0},\n        /* i /  {1,0,1,1,1,1,1,0},\n        /* j /  {16,0,16,16,16,17,17,14},\n        /* k /  {1,1,9,5,3,5,9,0},\n        /* l /  {1,1,1,1,1,1,2,0},\n        /* m /  {0,0,11,21,21,17,17,0},\n        /* n /  {0,0,15,17,17,17,17,0},\n        /* o /  {0,0,14,17,17,17,14,0},\n        /* p /  {0,0,13,19,17,15,1,1},\n        /* q /  {0,0,22,25,17,30,16,16},\n        /* r /  {0,0,13,19,1,1,1,0},\n        /* s /  {0,0,30,1,14,16,15,0},\n        /* t /  {2,2,7,2,2,2,4,0},\n        /* u /  {0,0,17,17,17,17,30,0},\n        /* v /  {0,0,17,17,17,10,4,0},\n        /* w /  {0,0,17,17,21,21,30,0},\n        /* x /  {0,0,17,10,4,10,17,0},\n        /* y /  {0,0,17,17,17,30,16,15},\n        /* z /  {0,0,31,8,4,2,31,0},\n        /* { /  {12,2,2,1,2,2,12,0},\n        /* | /  {1,1,1,0,1,1,1,0},\n        /* } /  {3,4,4,8,4,4,3,0},\n        /* ~ /  {38,25,0,0,0,0,0,0},\n        /* ⌂ /  {0,0,4,10,17,17,31,0},\n        /* Ç /  {14,17,1,1,17,14,16,12},\n        /* ü /  {10,0,17,17,17,17,30,0},\n        /* é /  {24,0,14,17,31,1,30,0},\n        /* â /  {14,17,14,16,30,17,30,0},\n        /* ä /  {10,0,14,16,30,17,30,0},\n        /* à /  {3,0,14,16,30,17,30,0},\n        /* å /  {4,0,14,16,30,17,30,0},\n        /* ç /  {0,14,17,1,17,14,16,12},\n        /* ê /  {14,17,14,17,31,1,30,0},\n        /* ë /  {10,0,14,17,31,1,30,0},\n        /* è /  {3,0,14,17,31,1,30,0},\n        /* ï /  {5,0,2,2,2,2,2,0},\n        /* î /  {14,17,4,4,4,4,4,0},\n        /* ì /  {3,0,2,2,2,2,2,0},\n        /* Ä /  {17,14,17,31,17,17,17,0},\n        /* Å /  {4,0,14,17,31,17,17,0},\n        /* É /  {24,0,31,1,7,1,31,0},\n        /* æ /  {0,0,10,20,30,5,30,0},\n        /* Æ /  {30,5,15,5,5,5,29,0},\n        /* ô /  {14,17,14,17,17,17,14,0},\n        /* ö /  {10,0,14,17,17,17,14,0},\n        /* ò /  {3,0,14,17,17,17,14,0},\n        /* û /  {14,17,0,17,17,17,30,0},\n        /* ù /  {3,0,17,17,17,17,30,0},\n        /* ÿ /  {10,0,17,17,17,30,16,15},\n        /* Ö /  {17,14,17,17,17,17,14,0},\n        /* Ü /  {17,0,17,17,17,17,14,0},\n        /* ø /  {0,0,14,25,21,19,14,4},\n        /* £ /  {12,18,2,15,2,2,31,0},\n        /* Ø /  {14,17,25,21,19,17,14,0},\n        /* × /  {0,0,5,2,5,0,0,0},\n        /* ƒ /  {8,20,4,14,4,4,5,2},\n        /* á /  {24,0,14,16,30,17,30,0},\n        /* í /  {3,0,1,1,1,1,1,0},\n        /* ó /  {24,0,14,17,17,17,14,0},\n        /* ú /  {24,0,17,17,17,17,30,0},\n        /* ñ /  {31,0,15,17,17,17,17,0},\n        /* Ñ /  {31,0,17,19,21,25,17,0},\n        /* ª /  {14,16,31,30,0,31,0,0},\n        /* º /  {14,17,17,14,0,31,0,0},\n        /* ¿ /  {4,0,4,2,1,17,14,0},\n        /* ® /  {0,30,45,37,43,30,0,0},\n        /* ¬ /  {0,0,0,31,16,16,0,0},\n        /* ½ /  {17,9,8,4,18,10,25,0},\n        /* ¼ /  {17,9,8,4,26,26,17,0},\n        /* ¡ /  {0,1,0,1,1,1,1,0},\n        /* « /  {0,20,10,5,10,20,0,0},\n        /* » /  {0,5,10,20,10,5,0,0},\n        /* 176 /  {68,17,68,17,68,17,68,17},\n        /* 177 /  {170,85,170,85,170,85,170,85},\n        /* 178 /  {219,238,219,119,219,238,219,119},\n        /* 179 /  {24,24,24,24,24,24,24,24},\n        /* 180 /  {24,24,24,24,31,24,24,24},\n        /* 181 /  {24,24,31,24,31,24,24,24},\n        /* 182 /  {108,108,108,108,111,108,108,108},\n        /* 183 /  {0,0,0,0,127,108,108,108},\n        /* 184 /  {0,0,31,24,31,24,24,24},\n        /* 185 /  {108,108,111,96,111,108,108,108},\n        /* 186 /  {108,108,108,108,108,108,108,108},\n        /* 187 /  {0,0,127,96,111,108,108,108},\n        /* 188 /  {108,108,111,96,127,0,0,0},\n        /* 189 /  {108,108,108,108,127,0,0,0},\n        /* 190 /  {24,24,31,24,31,0,0,0},\n        /* 191 /  {0,0,0,0,31,24,24,24},\n        /* 192 /  {24,24,24,24,248,0,0,0},\n        /* 193 /  {24,24,24,24,255,0,0,0},\n        /* 194 /  {0,0,0,0,255,24,24,24},\n        /* 195 /  {24,24,24,24,248,24,24,24},\n        /* 196 /  {0,0,0,0,255,0,0,0},\n        /* 197 /  {24,24,24,24,255,24,24,24},\n        /* 198 /  {24,24,248,24,248,24,24,24},\n        /* 199 /  {108,108,108,108,236,108,108,108},\n        /* 200 /  {108,108,236,12,252,0,0,0},\n        /* 201 /  {0,0,252,12,236,108,108,108},\n        /* 202 /  {108,108,239,0,255,0,0,0},\n        /* 203 /  {0,0,255,0,239,108,108,108},\n        /* 204 /  {108,108,236,12,236,108,108,108},\n        /* 205 /  {0,0,255,0,255,0,0,0},\n        /* 206 /  {108,108,239,0,239,108,108,108},\n        /* 207 /  {24,24,255,0,255,0,0,0},\n        /* 208 /  {108,108,108,108,255,0,0,0},\n        /* 209 /  {0,0,255,0,255,24,24,24},\n        /* 210 /  {0,0,0,0,255,108,108,108},\n        /* 211 /  {108,108,108,108,252,0,0,0},\n        /* 212 /  {24,24,248,24,248,0,0,0},\n        /* 213 /  {0,0,248,24,248,24,24,24},\n        /* 214 /  {0,0,0,0,252,108,108,108},\n        /* 215 /  {108,108,108,108,255,108,108,108},\n        /* 216 /  {24,24,255,24,255,24,24,24},\n        /* 217 /  {24,24,24,24,31,0,0,0},\n        /* 218 /  {0,0,0,0,248,24,24,24},\n        /* 219 /  {255,255,255,255,255,255,255,255},\n        /* 220 /  {0,0,0,0,255,255,255,255},\n        /* 221 /  {15,15,15,15,15,15,15,15},\n        /* 222 /  {240,240,240,240,240,240,240,240},\n        /* 223 /  {255,255,255,255,0,0,0,0},\n        /* 224 /  {0,0,110,59,19,59,110,0},\n        /* 225 /  {0,30,51,31,51,31,3,3},\n        /* 226 /  {0,63,51,3,3,3,3,0},\n        /* 227 /  {0,127,54,54,54,54,54,0},\n        /* 228 /  {63,51,6,12,6,51,63,0},\n        /* 229 /  {0,0,126,27,27,27,14,0},\n        /* 230 /  {0,102,102,102,102,62,6,3},\n        /* 231 /  {0,110,59,24,24,24,24,0},\n        /* 232 /  {63,12,30,51,51,30,12,63},\n        /* 233 /  {28,54,99,127,99,54,28,0},\n        /* 234 /  {28,54,99,99,54,54,119,0},\n        /* 235 /  {56,12,24,62,51,51,30,0},\n        /* 236 /  {0,0,126,219,219,126,0,0},\n        /* 237 /  {96,48,126,219,219,126,6,3},\n        /* 238 /  {28,6,3,31,3,6,28,0},\n        /* 239 /  {30,51,51,51,51,51,51,0},\n        /* 240 /  {0,63,0,63,0,63,0,0},\n        /* 241 /  {12,12,63,12,12,0,63,0},\n        /* 242 /  {6,12,24,12,6,0,63,0},\n        /* 243 /  {24,12,6,12,24,0,63,0},\n        /* 244 /  {112,216,216,24,24,24,24,24},\n        /* 245 /  {24,24,24,24,24,27,27,14},\n        /* 246 /  {12,12,0,63,0,12,12,0},\n        /* 247 /  {0,110,59,0,110,59,0,0},\n        /* 248 /  {28,54,54,28,0,0,0,0},\n        /* 249 /  {0,0,0,24,24,0,0,0},\n        /* 250 /  {0,0,0,0,24,0,0,0},\n        /* 251 /  {240,48,48,48,55,54,60,56},\n        /* 252 /  {30,54,54,54,54,0,0,0},\n        /* 253 /  {14,24,12,6,30,0,0,0},\n        /* 254 /  {0,0,60,60,60,60,0,0},\n        /* 255 /  {0,0,0,0,0,0,0,0},\n    };\n\n    /** A static non-malleable MinecraftFont. /\n    public static final MinecraftFont Font = new MinecraftFont(false);\n\n    /** Initialize a new MinecraftFont.","doc":{},"scope":"public","name":"MinecraftFont","args":[]}],"fields":[{"title":"/  {0,0,9,6,9,0,0,0},\n        /* +","description":"/  {0,0,9,6,9,0,0,0},\n        /* + /  {0,4,4,31,4,4,0,0},\n        /* , /  {0,0,0,0,0,1,1,1},\n        /* - /  {0,0,0,31,0,0,0,0},\n        /* . /  {0,0,0,0,0,1,1,0},\n        /* / /  {16,8,8,4,2,2,1,0},\n        /* 0 /  {14,17,25,21,19,17,14,0},\n        /* 1 /  {4,6,4,4,4,4,31,0},\n        /* 2 /  {14,17,16,12,2,17,31,0},\n        /* 3 /  {14,17,16,12,16,17,14,0},\n        /* 4 /  {24,20,18,17,31,16,16,0},\n        /* 5 /  {31,1,15,16,16,17,14,0},\n        /* 6 /  {12,2,1,15,17,17,14,0},\n        /* 7 /  {31,17,16,8,4,4,4,0},\n        /* 8 /  {14,17,17,14,17,17,14,0},\n        /* 9 /  {14,17,17,30,16,8,6,0},\n        /* : /  {0,1,1,0,0,1,1,0},\n        /* ; /  {0,1,1,0,0,1,1,1},\n        /* < /  {8,4,2,1,2,4,8,0},\n        /* = /  {0,0,31,0,0,31,0,0},\n        /* > /  {1,2,4,8,4,2,1,0},\n        /* ? /  {14,17,16,8,4,0,4,0},\n        /* @ /  {30,33,45,45,61,1,30,0},\n        /* A /  {14,17,31,17,17,17,17,0},\n        /* B /  {15,17,15,17,17,17,15,0},\n        /* C /  {14,17,1,1,1,17,14,0},\n        /* D /  {15,17,17,17,17,17,15,0},\n        /* E /  {31,1,7,1,1,1,31,0},\n        /* F /  {31,1,7,1,1,1,1,0},\n        /* G /  {30,1,25,17,17,17,14,0},\n        /* H /  {17,17,31,17,17,17,17,0},\n        /* I /  {7,2,2,2,2,2,7,0},\n        /* J /  {16,16,16,16,16,17,14,0},\n        /* K /  {17,9,7,9,17,17,17,0},\n        /* L /  {1,1,1,1,1,1,31,0},\n        /* M /  {17,27,21,17,17,17,17,0},\n        /* N /  {17,19,21,25,17,17,17,0},\n        /* O /  {14,17,17,17,17,17,14,0},\n        /* P /  {15,17,15,1,1,1,1,0},\n        /* Q /  {14,17,17,17,17,9,22,0},\n        /* R /  {15,17,15,17,17,17,17,0},\n        /* S /  {30,1,14,16,16,17,14,0},\n        /* T /  {31,4,4,4,4,4,4,0},\n        /* U /  {17,17,17,17,17,17,14,0},\n        /* V /  {17,17,17,17,10,10,4,0},\n        /* W /  {17,17,17,17,21,27,17,0},\n        /* X /  {17,10,4,10,17,17,17,0},\n        /* Y /  {17,10,4,4,4,4,4,0},\n        /* Z /  {31,16,8,4,2,1,31,0},\n        /* [ /  {7,1,1,1,1,1,7,0},\n        /* \\ /  {1,2,2,4,8,8,16,0},\n        /* ] /  {7,4,4,4,4,4,7,0},\n        /* ^ /  {4,10,17,0,0,0,0,0},\n        /* _ /  {0,0,0,0,0,0,0,31},\n        /* ` /  {1,1,2,0,0,0,0,0},\n        /* a /  {0,0,14,16,30,17,30,0},\n        /* b /  {1,1,13,19,17,17,15,0},\n        /* c /  {0,0,14,17,1,17,14,0},\n        /* d /  {16,16,22,25,17,17,30,0},\n        /* e /  {0,0,14,17,31,1,30,0},\n        /* f /  {12,2,15,2,2,2,2,0},\n        /* g /  {0,0,30,17,17,30,16,15},\n        /* h /  {1,1,13,19,17,17,17,0},\n        /* i /  {1,0,1,1,1,1,1,0},\n        /* j /  {16,0,16,16,16,17,17,14},\n        /* k /  {1,1,9,5,3,5,9,0},\n        /* l /  {1,1,1,1,1,1,2,0},\n        /* m /  {0,0,11,21,21,17,17,0},\n        /* n /  {0,0,15,17,17,17,17,0},\n        /* o /  {0,0,14,17,17,17,14,0},\n        /* p /  {0,0,13,19,17,15,1,1},\n        /* q /  {0,0,22,25,17,30,16,16},\n        /* r /  {0,0,13,19,1,1,1,0},\n        /* s /  {0,0,30,1,14,16,15,0},\n        /* t /  {2,2,7,2,2,2,4,0},\n        /* u /  {0,0,17,17,17,17,30,0},\n        /* v /  {0,0,17,17,17,10,4,0},\n        /* w /  {0,0,17,17,21,21,30,0},\n        /* x /  {0,0,17,10,4,10,17,0},\n        /* y /  {0,0,17,17,17,30,16,15},\n        /* z /  {0,0,31,8,4,2,31,0},\n        /* { /  {12,2,2,1,2,2,12,0},\n        /* | /  {1,1,1,0,1,1,1,0},\n        /* } /  {3,4,4,8,4,4,3,0},\n        /* ~ /  {38,25,0,0,0,0,0,0},\n        /* ⌂ /  {0,0,4,10,17,17,31,0},\n        /* Ç /  {14,17,1,1,17,14,16,12},\n        /* ü /  {10,0,17,17,17,17,30,0},\n        /* é /  {24,0,14,17,31,1,30,0},\n        /* â /  {14,17,14,16,30,17,30,0},\n        /* ä /  {10,0,14,16,30,17,30,0},\n        /* à /  {3,0,14,16,30,17,30,0},\n        /* å /  {4,0,14,16,30,17,30,0},\n        /* ç /  {0,14,17,1,17,14,16,12},\n        /* ê /  {14,17,14,17,31,1,30,0},\n        /* ë /  {10,0,14,17,31,1,30,0},\n        /* è /  {3,0,14,17,31,1,30,0},\n        /* ï /  {5,0,2,2,2,2,2,0},\n        /* î /  {14,17,4,4,4,4,4,0},\n        /* ì /  {3,0,2,2,2,2,2,0},\n        /* Ä /  {17,14,17,31,17,17,17,0},\n        /* Å /  {4,0,14,17,31,17,17,0},\n        /* É /  {24,0,31,1,7,1,31,0},\n        /* æ /  {0,0,10,20,30,5,30,0},\n        /* Æ /  {30,5,15,5,5,5,29,0},\n        /* ô /  {14,17,14,17,17,17,14,0},\n        /* ö /  {10,0,14,17,17,17,14,0},\n        /* ò /  {3,0,14,17,17,17,14,0},\n        /* û /  {14,17,0,17,17,17,30,0},\n        /* ù /  {3,0,17,17,17,17,30,0},\n        /* ÿ /  {10,0,17,17,17,30,16,15},\n        /* Ö /  {17,14,17,17,17,17,14,0},\n        /* Ü /  {17,0,17,17,17,17,14,0},\n        /* ø /  {0,0,14,25,21,19,14,4},\n        /* £ /  {12,18,2,15,2,2,31,0},\n        /* Ø /  {14,17,25,21,19,17,14,0},\n        /* × /  {0,0,5,2,5,0,0,0},\n        /* ƒ /  {8,20,4,14,4,4,5,2},\n        /* á /  {24,0,14,16,30,17,30,0},\n        /* í /  {3,0,1,1,1,1,1,0},\n        /* ó /  {24,0,14,17,17,17,14,0},\n        /* ú /  {24,0,17,17,17,17,30,0},\n        /* ñ /  {31,0,15,17,17,17,17,0},\n        /* Ñ /  {31,0,17,19,21,25,17,0},\n        /* ª /  {14,16,31,30,0,31,0,0},\n        /* º /  {14,17,17,14,0,31,0,0},\n        /* ¿ /  {4,0,4,2,1,17,14,0},\n        /* ® /  {0,30,45,37,43,30,0,0},\n        /* ¬ /  {0,0,0,31,16,16,0,0},\n        /* ½ /  {17,9,8,4,18,10,25,0},\n        /* ¼ /  {17,9,8,4,26,26,17,0},\n        /* ¡ /  {0,1,0,1,1,1,1,0},\n        /* « /  {0,20,10,5,10,20,0,0},\n        /* » /  {0,5,10,20,10,5,0,0},\n        /* 176 /  {68,17,68,17,68,17,68,17},\n        /* 177 /  {170,85,170,85,170,85,170,85},\n        /* 178 /  {219,238,219,119,219,238,219,119},\n        /* 179 /  {24,24,24,24,24,24,24,24},\n        /* 180 /  {24,24,24,24,31,24,24,24},\n        /* 181 /  {24,24,31,24,31,24,24,24},\n        /* 182 /  {108,108,108,108,111,108,108,108},\n        /* 183 /  {0,0,0,0,127,108,108,108},\n        /* 184 /  {0,0,31,24,31,24,24,24},\n        /* 185 /  {108,108,111,96,111,108,108,108},\n        /* 186 /  {108,108,108,108,108,108,108,108},\n        /* 187 /  {0,0,127,96,111,108,108,108},\n        /* 188 /  {108,108,111,96,127,0,0,0},\n        /* 189 /  {108,108,108,108,127,0,0,0},\n        /* 190 /  {24,24,31,24,31,0,0,0},\n        /* 191 /  {0,0,0,0,31,24,24,24},\n        /* 192 /  {24,24,24,24,248,0,0,0},\n        /* 193 /  {24,24,24,24,255,0,0,0},\n        /* 194 /  {0,0,0,0,255,24,24,24},\n        /* 195 /  {24,24,24,24,248,24,24,24},\n        /* 196 /  {0,0,0,0,255,0,0,0},\n        /* 197 /  {24,24,24,24,255,24,24,24},\n        /* 198 /  {24,24,248,24,248,24,24,24},\n        /* 199 /  {108,108,108,108,236,108,108,108},\n        /* 200 /  {108,108,236,12,252,0,0,0},\n        /* 201 /  {0,0,252,12,236,108,108,108},\n        /* 202 /  {108,108,239,0,255,0,0,0},\n        /* 203 /  {0,0,255,0,239,108,108,108},\n        /* 204 /  {108,108,236,12,236,108,108,108},\n        /* 205 /  {0,0,255,0,255,0,0,0},\n        /* 206 /  {108,108,239,0,239,108,108,108},\n        /* 207 /  {24,24,255,0,255,0,0,0},\n        /* 208 /  {108,108,108,108,255,0,0,0},\n        /* 209 /  {0,0,255,0,255,24,24,24},\n        /* 210 /  {0,0,0,0,255,108,108,108},\n        /* 211 /  {108,108,108,108,252,0,0,0},\n        /* 212 /  {24,24,248,24,248,0,0,0},\n        /* 213 /  {0,0,248,24,248,24,24,24},\n        /* 214 /  {0,0,0,0,252,108,108,108},\n        /* 215 /  {108,108,108,108,255,108,108,108},\n        /* 216 /  {24,24,255,24,255,24,24,24},\n        /* 217 /  {24,24,24,24,31,0,0,0},\n        /* 218 /  {0,0,0,0,248,24,24,24},\n        /* 219 /  {255,255,255,255,255,255,255,255},\n        /* 220 /  {0,0,0,0,255,255,255,255},\n        /* 221 /  {15,15,15,15,15,15,15,15},\n        /* 222 /  {240,240,240,240,240,240,240,240},\n        /* 223 /  {255,255,255,255,0,0,0,0},\n        /* 224 /  {0,0,110,59,19,59,110,0},\n        /* 225 /  {0,30,51,31,51,31,3,3},\n        /* 226 /  {0,63,51,3,3,3,3,0},\n        /* 227 /  {0,127,54,54,54,54,54,0},\n        /* 228 /  {63,51,6,12,6,51,63,0},\n        /* 229 /  {0,0,126,27,27,27,14,0},\n        /* 230 /  {0,102,102,102,102,62,6,3},\n        /* 231 /  {0,110,59,24,24,24,24,0},\n        /* 232 /  {63,12,30,51,51,30,12,63},\n        /* 233 /  {28,54,99,127,99,54,28,0},\n        /* 234 /  {28,54,99,99,54,54,119,0},\n        /* 235 /  {56,12,24,62,51,51,30,0},\n        /* 236 /  {0,0,126,219,219,126,0,0},\n        /* 237 /  {96,48,126,219,219,126,6,3},\n        /* 238 /  {28,6,3,31,3,6,28,0},\n        /* 239 /  {30,51,51,51,51,51,51,0},\n        /* 240 /  {0,63,0,63,0,63,0,0},\n        /* 241 /  {12,12,63,12,12,0,63,0},\n        /* 242 /  {6,12,24,12,6,0,63,0},\n        /* 243 /  {24,12,6,12,24,0,63,0},\n        /* 244 /  {112,216,216,24,24,24,24,24},\n        /* 245 /  {24,24,24,24,24,27,27,14},\n        /* 246 /  {12,12,0,63,0,12,12,0},\n        /* 247 /  {0,110,59,0,110,59,0,0},\n        /* 248 /  {28,54,54,28,0,0,0,0},\n        /* 249 /  {0,0,0,24,24,0,0,0},\n        /* 250 /  {0,0,0,0,24,0,0,0},\n        /* 251 /  {240,48,48,48,55,54,60,56},\n        /* 252 /  {30,54,54,54,54,0,0,0},\n        /* 253 /  {14,24,12,6,30,0,0,0},\n        /* 254 /  {0,0,60,60,60,60,0,0},\n        /* 255 /  {0,0,0,0,0,0,0,0},\n    };\n\n    /** A static non-malleable MinecraftFont.","doc":{},"name":"Font","scope":"public","type":"io.wolfscript.map.MinecraftFont","describe":"static final"}],"methods":[],"imports":[],"properties":[]},"io.wolfscript.map.Scale":{"namespace":"io.wolfscript.map","title":"Represents a map item.","description":"Represents a map item. /\npublic interface MapView {\n\n    /** An enum representing all possible scales a map can be set to.","name":"Scale","qualifiedname":"io.wolfscript.map.Scale","type":"enum","scope":"public","describe":"static","constructors":[],"methods":[],"imports":["java.util.List","io.wolfscript.World"],"enum":[{"code":"CLOSEST","value":"0","title":"CLOSEST Scale","description":"CLOSEST Scale"},{"code":"CLOSE","value":"1","title":"CLOSE Scale","description":"CLOSE Scale"},{"code":"NORMAL","value":"2","title":"NORMAL Scale","description":"NORMAL Scale"},{"code":"FAR","value":"3","title":"FAR Scale","description":"FAR Scale"},{"code":"FARTHEST","value":"4","title":"FARTHEST Scale","description":"FARTHEST Scale"}],"properties":[{"name":"Value","modifier":"readonly","args":[],"deprecated":true,"description":"Get: Get the scale given the raw value.","doc":{"param":["value The raw scale"],"return":["The enum scale, or null for an invalid input","The scale value"],"deprecated":["Magic value /\n        @Deprecated\n        public static Scale valueOf(byte value) {\n            switch (value) {\n            case 0: return CLOSEST;\n            case 1: return CLOSE;\n            case 2: return NORMAL;\n            case 3: return FAR;\n            case 4: return FARTHEST;\n            default: return null;\n            }\n        }\n\n        /** Get the raw value of this scale level.","Magic value"]},"return":"byte","scope":"public","title":"Get: Get the scale given the raw value."}]},"io.wolfscript.map.Type":{"namespace":"io.wolfscript.map","title":"Represents a cursor on a map.","description":"Represents a cursor on a map. /\npublic final class MapCursor {\n    private byte x, y;\n    private byte direction, type;\n    private boolean visible;\n\n    /** Initialize the map cursor.","doc":{"param":["x The x coordinate, from -128 to 127.","y The y coordinate, from -128 to 127.","direction The facing of the cursor, from 0 to 15.","type The type (color/style) of the map cursor.","visible Whether the cursor is visible by default.","x The X coordinate. /\n    public void setX(byte x) {\n        this.x = x;\n    }\n\n    /** Set the Y position of this cursor.","y The Y coordinate. /\n    public void setY(byte y) {\n        this.y = y;\n    }\n\n    /** Set the direction of this cursor.","direction The facing of the cursor, from 0 to 15. /\n    public void setDirection(byte direction) {\n        if (direction < 0 || direction > 15) {\n            throw new IllegalArgumentException(\"Direction must be in the range 0-15\");\n        }\n        this.direction = direction;\n    }\n\n    /** Set the type of this cursor.","type The type (color/style) of the map cursor. /\n    public void setType(Type type) {\n        setRawType(type.value);\n    }\n\n    /** Set the type of this cursor.","type The type (color/style) of the map cursor.","visible True if visible. /\n    public void setVisible(boolean visible) {\n        this.visible = visible;\n    }\n\n    /** Represents the standard types of map cursors. More may be made available by texture packs - the value is used by the client as an index in the file './misc/mapicons.png' from minecraft.jar or from a texture pack."],"deprecated":["Magic value /\n    @Deprecated\n    public MapCursor(byte x, byte y, byte direction, byte type, boolean visible) {\n        this.x = x;\n        this.y = y;\n        setDirection(direction);\n        setRawType(type);\n        this.visible = visible;\n    }\n\n    /** Get the X position of this cursor.","Magic value /\n    @Deprecated\n    public byte getRawType() {\n        return type;\n    }\n\n    /** Get the visibility status of this cursor.","Magic value /\n    @Deprecated\n    public void setRawType(byte type) {\n        if (type < 0 || type > 15) {\n            throw new IllegalArgumentException(\"Type must be in the range 0-15\");\n        }\n        this.type = type;\n    }\n\n    /** Set the visibility status of this cursor."],"return":["The X coordinate. /\n    public byte getX() {\n        return x;\n    }\n\n    /** Get the Y position of this cursor.","The Y coordinate. /\n    public byte getY() {\n        return y;\n    }\n\n    /** Get the direction of this cursor.","The facing of the cursor, from 0 to 15. /\n    public byte getDirection() {\n        return direction;\n    }\n\n    /** Get the type of this cursor.","The type (color/style) of the map cursor. /\n    public Type getType() {\n        return Type.byValue(type);\n    }\n\n    /** Get the type of this cursor.","The type (color/style) of the map cursor.","True if visible, false otherwise. /\n    public boolean isVisible() {\n        return visible;\n    }\n\n    /** Set the X position of this cursor."]},"name":"Type","qualifiedname":"io.wolfscript.map.Type","type":"enum","scope":"public","constructors":[],"methods":[{"title":"byValue method","description":"byValue method","doc":{"return":["the value","the matching type"],"deprecated":["Magic value /\n        @Deprecated\n        public byte getValue() {\n            return value;\n        }\n\n        /**","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.map.Type","name":"byValue","deprecated":true,"args":[{"name":"value","type":"byte","description":"the value"}]}],"imports":[],"enum":[{"code":"WHITE_POINTER","value":"0","title":"WHITE_POINTER Type","description":"WHITE_POINTER Type","doc":{"param":["x The x coordinate, from -128 to 127.","y The y coordinate, from -128 to 127.","direction The facing of the cursor, from 0 to 15.","type The type (color/style) of the map cursor.","visible Whether the cursor is visible by default.","x The X coordinate. /\n    public void setX(byte x) {\n        this.x = x;\n    }\n\n    /** Set the Y position of this cursor.","y The Y coordinate. /\n    public void setY(byte y) {\n        this.y = y;\n    }\n\n    /** Set the direction of this cursor.","direction The facing of the cursor, from 0 to 15. /\n    public void setDirection(byte direction) {\n        if (direction < 0 || direction > 15) {\n            throw new IllegalArgumentException(\"Direction must be in the range 0-15\");\n        }\n        this.direction = direction;\n    }\n\n    /** Set the type of this cursor.","type The type (color/style) of the map cursor. /\n    public void setType(Type type) {\n        setRawType(type.value);\n    }\n\n    /** Set the type of this cursor.","type The type (color/style) of the map cursor.","visible True if visible. /\n    public void setVisible(boolean visible) {\n        this.visible = visible;\n    }\n\n    /** Represents the standard types of map cursors. More may be made available by texture packs - the value is used by the client as an index in the file './misc/mapicons.png' from minecraft.jar or from a texture pack."],"deprecated":["Magic value /\n    @Deprecated\n    public MapCursor(byte x, byte y, byte direction, byte type, boolean visible) {\n        this.x = x;\n        this.y = y;\n        setDirection(direction);\n        setRawType(type);\n        this.visible = visible;\n    }\n\n    /** Get the X position of this cursor.","Magic value /\n    @Deprecated\n    public byte getRawType() {\n        return type;\n    }\n\n    /** Get the visibility status of this cursor.","Magic value /\n    @Deprecated\n    public void setRawType(byte type) {\n        if (type < 0 || type > 15) {\n            throw new IllegalArgumentException(\"Type must be in the range 0-15\");\n        }\n        this.type = type;\n    }\n\n    /** Set the visibility status of this cursor."],"return":["The X coordinate. /\n    public byte getX() {\n        return x;\n    }\n\n    /** Get the Y position of this cursor.","The Y coordinate. /\n    public byte getY() {\n        return y;\n    }\n\n    /** Get the direction of this cursor.","The facing of the cursor, from 0 to 15. /\n    public byte getDirection() {\n        return direction;\n    }\n\n    /** Get the type of this cursor.","The type (color/style) of the map cursor. /\n    public Type getType() {\n        return Type.byValue(type);\n    }\n\n    /** Get the type of this cursor.","The type (color/style) of the map cursor.","True if visible, false otherwise. /\n    public boolean isVisible() {\n        return visible;\n    }\n\n    /** Set the X position of this cursor."]}},{"code":"GREEN_POINTER","value":"1","title":"GREEN_POINTER Type","description":"GREEN_POINTER Type","doc":{"param":["x The x coordinate, from -128 to 127.","y The y coordinate, from -128 to 127.","direction The facing of the cursor, from 0 to 15.","type The type (color/style) of the map cursor.","visible Whether the cursor is visible by default.","x The X coordinate. /\n    public void setX(byte x) {\n        this.x = x;\n    }\n\n    /** Set the Y position of this cursor.","y The Y coordinate. /\n    public void setY(byte y) {\n        this.y = y;\n    }\n\n    /** Set the direction of this cursor.","direction The facing of the cursor, from 0 to 15. /\n    public void setDirection(byte direction) {\n        if (direction < 0 || direction > 15) {\n            throw new IllegalArgumentException(\"Direction must be in the range 0-15\");\n        }\n        this.direction = direction;\n    }\n\n    /** Set the type of this cursor.","type The type (color/style) of the map cursor. /\n    public void setType(Type type) {\n        setRawType(type.value);\n    }\n\n    /** Set the type of this cursor.","type The type (color/style) of the map cursor.","visible True if visible. /\n    public void setVisible(boolean visible) {\n        this.visible = visible;\n    }\n\n    /** Represents the standard types of map cursors. More may be made available by texture packs - the value is used by the client as an index in the file './misc/mapicons.png' from minecraft.jar or from a texture pack."],"deprecated":["Magic value /\n    @Deprecated\n    public MapCursor(byte x, byte y, byte direction, byte type, boolean visible) {\n        this.x = x;\n        this.y = y;\n        setDirection(direction);\n        setRawType(type);\n        this.visible = visible;\n    }\n\n    /** Get the X position of this cursor.","Magic value /\n    @Deprecated\n    public byte getRawType() {\n        return type;\n    }\n\n    /** Get the visibility status of this cursor.","Magic value /\n    @Deprecated\n    public void setRawType(byte type) {\n        if (type < 0 || type > 15) {\n            throw new IllegalArgumentException(\"Type must be in the range 0-15\");\n        }\n        this.type = type;\n    }\n\n    /** Set the visibility status of this cursor."],"return":["The X coordinate. /\n    public byte getX() {\n        return x;\n    }\n\n    /** Get the Y position of this cursor.","The Y coordinate. /\n    public byte getY() {\n        return y;\n    }\n\n    /** Get the direction of this cursor.","The facing of the cursor, from 0 to 15. /\n    public byte getDirection() {\n        return direction;\n    }\n\n    /** Get the type of this cursor.","The type (color/style) of the map cursor. /\n    public Type getType() {\n        return Type.byValue(type);\n    }\n\n    /** Get the type of this cursor.","The type (color/style) of the map cursor.","True if visible, false otherwise. /\n    public boolean isVisible() {\n        return visible;\n    }\n\n    /** Set the X position of this cursor."]}},{"code":"RED_POINTER","value":"2","title":"RED_POINTER Type","description":"RED_POINTER Type","doc":{"param":["x The x coordinate, from -128 to 127.","y The y coordinate, from -128 to 127.","direction The facing of the cursor, from 0 to 15.","type The type (color/style) of the map cursor.","visible Whether the cursor is visible by default.","x The X coordinate. /\n    public void setX(byte x) {\n        this.x = x;\n    }\n\n    /** Set the Y position of this cursor.","y The Y coordinate. /\n    public void setY(byte y) {\n        this.y = y;\n    }\n\n    /** Set the direction of this cursor.","direction The facing of the cursor, from 0 to 15. /\n    public void setDirection(byte direction) {\n        if (direction < 0 || direction > 15) {\n            throw new IllegalArgumentException(\"Direction must be in the range 0-15\");\n        }\n        this.direction = direction;\n    }\n\n    /** Set the type of this cursor.","type The type (color/style) of the map cursor. /\n    public void setType(Type type) {\n        setRawType(type.value);\n    }\n\n    /** Set the type of this cursor.","type The type (color/style) of the map cursor.","visible True if visible. /\n    public void setVisible(boolean visible) {\n        this.visible = visible;\n    }\n\n    /** Represents the standard types of map cursors. More may be made available by texture packs - the value is used by the client as an index in the file './misc/mapicons.png' from minecraft.jar or from a texture pack."],"deprecated":["Magic value /\n    @Deprecated\n    public MapCursor(byte x, byte y, byte direction, byte type, boolean visible) {\n        this.x = x;\n        this.y = y;\n        setDirection(direction);\n        setRawType(type);\n        this.visible = visible;\n    }\n\n    /** Get the X position of this cursor.","Magic value /\n    @Deprecated\n    public byte getRawType() {\n        return type;\n    }\n\n    /** Get the visibility status of this cursor.","Magic value /\n    @Deprecated\n    public void setRawType(byte type) {\n        if (type < 0 || type > 15) {\n            throw new IllegalArgumentException(\"Type must be in the range 0-15\");\n        }\n        this.type = type;\n    }\n\n    /** Set the visibility status of this cursor."],"return":["The X coordinate. /\n    public byte getX() {\n        return x;\n    }\n\n    /** Get the Y position of this cursor.","The Y coordinate. /\n    public byte getY() {\n        return y;\n    }\n\n    /** Get the direction of this cursor.","The facing of the cursor, from 0 to 15. /\n    public byte getDirection() {\n        return direction;\n    }\n\n    /** Get the type of this cursor.","The type (color/style) of the map cursor. /\n    public Type getType() {\n        return Type.byValue(type);\n    }\n\n    /** Get the type of this cursor.","The type (color/style) of the map cursor.","True if visible, false otherwise. /\n    public boolean isVisible() {\n        return visible;\n    }\n\n    /** Set the X position of this cursor."]}},{"code":"BLUE_POINTER","value":"3","title":"BLUE_POINTER Type","description":"BLUE_POINTER Type","doc":{"param":["x The x coordinate, from -128 to 127.","y The y coordinate, from -128 to 127.","direction The facing of the cursor, from 0 to 15.","type The type (color/style) of the map cursor.","visible Whether the cursor is visible by default.","x The X coordinate. /\n    public void setX(byte x) {\n        this.x = x;\n    }\n\n    /** Set the Y position of this cursor.","y The Y coordinate. /\n    public void setY(byte y) {\n        this.y = y;\n    }\n\n    /** Set the direction of this cursor.","direction The facing of the cursor, from 0 to 15. /\n    public void setDirection(byte direction) {\n        if (direction < 0 || direction > 15) {\n            throw new IllegalArgumentException(\"Direction must be in the range 0-15\");\n        }\n        this.direction = direction;\n    }\n\n    /** Set the type of this cursor.","type The type (color/style) of the map cursor. /\n    public void setType(Type type) {\n        setRawType(type.value);\n    }\n\n    /** Set the type of this cursor.","type The type (color/style) of the map cursor.","visible True if visible. /\n    public void setVisible(boolean visible) {\n        this.visible = visible;\n    }\n\n    /** Represents the standard types of map cursors. More may be made available by texture packs - the value is used by the client as an index in the file './misc/mapicons.png' from minecraft.jar or from a texture pack."],"deprecated":["Magic value /\n    @Deprecated\n    public MapCursor(byte x, byte y, byte direction, byte type, boolean visible) {\n        this.x = x;\n        this.y = y;\n        setDirection(direction);\n        setRawType(type);\n        this.visible = visible;\n    }\n\n    /** Get the X position of this cursor.","Magic value /\n    @Deprecated\n    public byte getRawType() {\n        return type;\n    }\n\n    /** Get the visibility status of this cursor.","Magic value /\n    @Deprecated\n    public void setRawType(byte type) {\n        if (type < 0 || type > 15) {\n            throw new IllegalArgumentException(\"Type must be in the range 0-15\");\n        }\n        this.type = type;\n    }\n\n    /** Set the visibility status of this cursor."],"return":["The X coordinate. /\n    public byte getX() {\n        return x;\n    }\n\n    /** Get the Y position of this cursor.","The Y coordinate. /\n    public byte getY() {\n        return y;\n    }\n\n    /** Get the direction of this cursor.","The facing of the cursor, from 0 to 15. /\n    public byte getDirection() {\n        return direction;\n    }\n\n    /** Get the type of this cursor.","The type (color/style) of the map cursor. /\n    public Type getType() {\n        return Type.byValue(type);\n    }\n\n    /** Get the type of this cursor.","The type (color/style) of the map cursor.","True if visible, false otherwise. /\n    public boolean isVisible() {\n        return visible;\n    }\n\n    /** Set the X position of this cursor."]}},{"code":"WHITE_CROSS","value":"4","title":"WHITE_CROSS Type","description":"WHITE_CROSS Type","doc":{"param":["x The x coordinate, from -128 to 127.","y The y coordinate, from -128 to 127.","direction The facing of the cursor, from 0 to 15.","type The type (color/style) of the map cursor.","visible Whether the cursor is visible by default.","x The X coordinate. /\n    public void setX(byte x) {\n        this.x = x;\n    }\n\n    /** Set the Y position of this cursor.","y The Y coordinate. /\n    public void setY(byte y) {\n        this.y = y;\n    }\n\n    /** Set the direction of this cursor.","direction The facing of the cursor, from 0 to 15. /\n    public void setDirection(byte direction) {\n        if (direction < 0 || direction > 15) {\n            throw new IllegalArgumentException(\"Direction must be in the range 0-15\");\n        }\n        this.direction = direction;\n    }\n\n    /** Set the type of this cursor.","type The type (color/style) of the map cursor. /\n    public void setType(Type type) {\n        setRawType(type.value);\n    }\n\n    /** Set the type of this cursor.","type The type (color/style) of the map cursor.","visible True if visible. /\n    public void setVisible(boolean visible) {\n        this.visible = visible;\n    }\n\n    /** Represents the standard types of map cursors. More may be made available by texture packs - the value is used by the client as an index in the file './misc/mapicons.png' from minecraft.jar or from a texture pack."],"deprecated":["Magic value /\n    @Deprecated\n    public MapCursor(byte x, byte y, byte direction, byte type, boolean visible) {\n        this.x = x;\n        this.y = y;\n        setDirection(direction);\n        setRawType(type);\n        this.visible = visible;\n    }\n\n    /** Get the X position of this cursor.","Magic value /\n    @Deprecated\n    public byte getRawType() {\n        return type;\n    }\n\n    /** Get the visibility status of this cursor.","Magic value /\n    @Deprecated\n    public void setRawType(byte type) {\n        if (type < 0 || type > 15) {\n            throw new IllegalArgumentException(\"Type must be in the range 0-15\");\n        }\n        this.type = type;\n    }\n\n    /** Set the visibility status of this cursor."],"return":["The X coordinate. /\n    public byte getX() {\n        return x;\n    }\n\n    /** Get the Y position of this cursor.","The Y coordinate. /\n    public byte getY() {\n        return y;\n    }\n\n    /** Get the direction of this cursor.","The facing of the cursor, from 0 to 15. /\n    public byte getDirection() {\n        return direction;\n    }\n\n    /** Get the type of this cursor.","The type (color/style) of the map cursor. /\n    public Type getType() {\n        return Type.byValue(type);\n    }\n\n    /** Get the type of this cursor.","The type (color/style) of the map cursor.","True if visible, false otherwise. /\n    public boolean isVisible() {\n        return visible;\n    }\n\n    /** Set the X position of this cursor."]}}],"properties":[]},"io.wolfscript.material.0":{"namespace":"io.wolfscript","title":"Classes that represents various voxel types and states.","description":"Classes that represents various voxel types and states.","name":"material","qualifiedname":"io.wolfscript.material.0","packagename":"io.wolfscript.material","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.material.Banner","io.wolfscript.material.Bed","io.wolfscript.material.Button","io.wolfscript.material.Cake","io.wolfscript.material.Cauldron","io.wolfscript.material.Chest","io.wolfscript.material.Coal","io.wolfscript.material.Command","io.wolfscript.material.Crops","io.wolfscript.material.DetectorRail","io.wolfscript.material.Diode","io.wolfscript.material.DirectionalContainer","io.wolfscript.material.Dispenser","io.wolfscript.material.Dye","io.wolfscript.material.EnderChest","io.wolfscript.material.ExtendedRails","io.wolfscript.material.FlowerPot","io.wolfscript.material.Furnace","io.wolfscript.material.FurnaceAndDispenser","io.wolfscript.material.Ladder","io.wolfscript.material.Leaves","io.wolfscript.material.Lever","io.wolfscript.material.LongGrass","io.wolfscript.material.MaterialData","io.wolfscript.material.MonsterEggs","io.wolfscript.material.Mushroom","io.wolfscript.material.NetherWarts","io.wolfscript.material.PistonExtensionMaterial","io.wolfscript.material.PoweredRail","io.wolfscript.material.PressurePlate","io.wolfscript.material.Pumpkin","io.wolfscript.material.Rails","io.wolfscript.material.RedstoneTorch","io.wolfscript.material.RedstoneWire","io.wolfscript.material.Sandstone","io.wolfscript.material.Sign","io.wolfscript.material.SimpleAttachableMaterialData","io.wolfscript.material.Skull","io.wolfscript.material.SmoothBrick","io.wolfscript.material.SpawnEgg","io.wolfscript.material.Stairs","io.wolfscript.material.Step","io.wolfscript.material.TexturedMaterial","io.wolfscript.material.Torch","io.wolfscript.material.TrapDoor","io.wolfscript.material.Tree","io.wolfscript.material.Tripwire","io.wolfscript.material.TripwireHook","io.wolfscript.material.Vine","io.wolfscript.material.WoodenStep","io.wolfscript.material.Wool"],"interfaces":["io.wolfscript.material.Attachable","io.wolfscript.material.Colorable","io.wolfscript.material.Directional","io.wolfscript.material.Openable","io.wolfscript.material.PressureSensor","io.wolfscript.material.Redstone"],"enums":["io.wolfscript.material.CocoaPlantSize"],"namespaces":[],"properties":[]},"io.wolfscript.material.Attachable":{"namespace":"io.wolfscript.material","title":"Indicates that a block can be attached to another block","description":"Indicates that a block can be attached to another block","name":"Attachable","qualifiedname":"io.wolfscript.material.Attachable","type":"interface","scope":"public","extends":["io.wolfscript.material.Directional"],"constructors":[],"methods":[],"imports":["io.wolfscript.block.BlockFace"],"properties":[{"name":"AttachedFace","modifier":"readonly","args":[],"description":"Get: Gets the face that this block is attached on","doc":{"return":["BlockFace attached to"]},"return":"io.wolfscript.block.BlockFace","scope":"public","title":"Get: Gets the face that this block is attached on"}]},"io.wolfscript.material.Banner":{"namespace":"io.wolfscript.material","title":"class Banner","description":"class Banner","name":"Banner","qualifiedname":"io.wolfscript.material.Banner","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Attachable"],"constructors":[{"title":"Banner constructor","description":"Banner constructor","scope":"public","name":"Banner","args":[]},{"title":"Banner constructor","description":"Banner constructor","scope":"public","name":"Banner","args":[{"name":"type","type":"io.wolfscript.Material","description":"type argument"}]},{"title":"Banner constructor","description":"Banner constructor","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Banner(int type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Banner(Material type, byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"Banner","deprecated":true,"args":[{"name":"type","type":"int","description":"the raw type id"},{"name":"data","type":"byte","description":"the raw data value"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Banner","name":"clone","args":[]},{"title":"isWallBanner method","description":"isWallBanner method","scope":"public","return":"boolean","name":"isWallBanner","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[{"name":"AttachedFace","modifier":"readonly","args":[],"description":"AttachedFace property","return":"io.wolfscript.block.BlockFace","scope":"public","title":"AttachedFace property"},{"name":"Facing","modifier":"readonly","args":[],"description":"Facing property","return":"io.wolfscript.block.BlockFace","scope":"public","title":"Facing property"},{"name":"FacingDirection","modifier":"writeonly","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"}],"description":"FacingDirection property","return":"void","scope":"public","title":"FacingDirection property"}]},"io.wolfscript.material.Bed":{"namespace":"io.wolfscript.material","title":"Represents a bed.","description":"Represents a bed.","name":"Bed","qualifiedname":"io.wolfscript.material.Bed","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Directional"],"constructors":[],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Bed","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[{"name":"Facing","modifier":"readonly","args":[],"description":"Get: Default constructor for a bed. /\n    public Bed() {\n        super(Material.BED_BLOCK);\n    }\n\n    /** Instantiate a bed facing in a particular direction.","doc":{"param":["direction the direction the bed's head is facing /\n    public Bed(BlockFace direction) {\n        this();\n        setFacingDirection(direction);\n    }\n\n    /**","type the raw type id","type the raw type id","data the raw data value","type the type","data the raw data value","isHeadOfBed True to make it the head. /\n    public void setHeadOfBed(boolean isHeadOfBed) {\n        setData((byte) (isHeadOfBed ? (getData() | 0x8) : (getData() & ~0x8)));\n    }\n\n    /** Set which direction the head of the bed is facing. Note that this will only affect one of the two blocks the bed is made of. /\n    public void setFacingDirection(BlockFace face) {\n        byte data;\n\n        switch (face) {\n        case SOUTH:\n            data = 0x0;\n            break;\n\n        case WEST:\n            data = 0x1;\n            break;\n\n        case NORTH:\n            data = 0x2;\n            break;\n\n        case EAST:\n        default:\n            data = 0x3;\n        }\n\n        if (isHeadOfBed()) {\n            data |= 0x8;\n        }\n\n        setData(data);\n    }\n\n    /** Get the direction that this bed's head is facing toward"],"deprecated":["Magic value /\n    @Deprecated\n    public Bed(final int type) {\n        super(type);\n    }\n\n    public Bed(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Bed(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Bed(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Determine if this block represents the head of the bed"],"return":["true if this is the head of the bed, false if it is the foot /\n    public boolean isHeadOfBed() {\n        return (getData() & 0x8) == 0x8;\n    }\n\n    /** Configure this to be either the head or the foot of the bed","the direction the head of the bed is facing"]},"return":"io.wolfscript.block.BlockFace","scope":"public","title":"Get: Default constructor for a bed."}]},"io.wolfscript.material.Button":{"namespace":"io.wolfscript.material","title":"Represents a button","description":"Represents a button","name":"Button","qualifiedname":"io.wolfscript.material.Button","type":"class","scope":"public","extends":["io.wolfscript.material.SimpleAttachableMaterialData"],"implements":["io.wolfscript.material.Redstone"],"constructors":[{"title":"Button constructor","description":"Button constructor","scope":"public","name":"Button","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Button","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.block.BlockFace","io.wolfscript.Material"],"properties":[{"name":"FacingDirection","modifier":"writeonly","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"}],"description":"FacingDirection property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Button(final int type) {\n        super(type);\n    }\n\n    public Button(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Button(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Button(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current state of this Material, indicating if it's powered or unpowered"],"return":["true if powered, otherwise false /\n    public boolean isPowered() {\n        return (getData() & 0x8) == 0x8;\n    }\n\n    /** Sets the current state of this button","BlockFace attached to /\n    public BlockFace getAttachedFace() {\n        byte data = (byte) (getData() & 0x7);\n\n        switch (data) {\n        case 0x0:\n            return BlockFace.UP;\n\n        case 0x1:\n            return BlockFace.WEST;\n\n        case 0x2:\n            return BlockFace.EAST;\n\n        case 0x3:\n            return BlockFace.NORTH;\n\n        case 0x4:\n            return BlockFace.SOUTH;\n\n        case 0x5:\n            return BlockFace.DOWN;\n        }\n\n        return null;\n    }\n\n    /** Sets the direction this button is pointing toward"]},"return":"void","scope":"public","title":"FacingDirection property"}]},"io.wolfscript.material.Cake":{"namespace":"io.wolfscript.material","title":"class Cake","description":"class Cake","name":"Cake","qualifiedname":"io.wolfscript.material.Cake","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"Cake constructor","description":"Cake constructor","scope":"public","name":"Cake","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Cake","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material"],"properties":[{"name":"SlicesRemaining","modifier":"writeonly","args":[{"name":"n","type":"int","description":"The number of slices eaten /\n    public void setSlicesEaten(int n) {\n        if (n < 6) {\n            setData((byte) n);\n        } // TODO: else destroy the block? Probably not possible though\n    }\n\n    /** Sets the number of slices remaining on this cake"}],"description":"SlicesRemaining property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Cake(int type) {\n        super(type);\n    }\n\n    public Cake(Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Cake(int type, byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Cake(Material type, byte data) {\n        super(type, data);\n    }\n\n    /** Gets the number of slices eaten from this cake"],"return":["The number of slices eaten /\n    public int getSlicesEaten() {\n        return getData();\n    }\n\n    /** Gets the number of slices remaining on this cake","The number of slices remaining /\n    public int getSlicesRemaining() {\n        return 6 - getData();\n    }\n\n    /** Sets the number of slices eaten from this cake"]},"return":"void","scope":"public","title":"SlicesRemaining property"}]},"io.wolfscript.material.Cauldron":{"namespace":"io.wolfscript.material","title":"Represents a cauldron","description":"Represents a cauldron","name":"Cauldron","qualifiedname":"io.wolfscript.material.Cauldron","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"Cauldron constructor","description":"Cauldron constructor","scope":"public","name":"Cauldron","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Cauldron","name":"clone","args":[]},{"title":"isEmpty method","description":"isEmpty method","doc":{"param":["type the raw type id","data the raw data value","data the raw data value"],"deprecated":["Magic value /\n    @Deprecated\n    public Cauldron(int type, byte data){\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Cauldron(byte data) {\n        super(Material.CAULDRON, data);\n    }\n\n    /** Check if the cauldron is full."],"return":["True if it is full. /\n    public boolean isFull() {\n        return getData() >= CAULDRON_FULL;\n    }\n\n    /** Check if the cauldron is empty.","True if it is empty."]},"scope":"public","return":"boolean","name":"isEmpty","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material"],"properties":[]},"io.wolfscript.material.Chest":{"namespace":"io.wolfscript.material","title":"Represents a chest","description":"Represents a chest","name":"Chest","qualifiedname":"io.wolfscript.material.Chest","type":"class","scope":"public","extends":["io.wolfscript.material.DirectionalContainer"],"constructors":[{"title":"Chest constructor","description":"Chest constructor","scope":"public","name":"Chest","args":[]},{"title":"Instantiate a chest facing in a particular direction.","description":"Instantiate a chest facing in a particular direction.","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Chest(final int type) {\n        super(type);\n    }\n\n    public Chest(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Chest(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"Chest","deprecated":true,"args":[{"name":"Material","type":"final","description":"Material argument"},{"name":"byte","type":"final","description":"byte argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Chest","name":"clone","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[]},"io.wolfscript.material.Coal":{"namespace":"io.wolfscript.material","title":"Represents the different types of coals.","description":"Represents the different types of coals.","name":"Coal","qualifiedname":"io.wolfscript.material.Coal","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"Coal constructor","description":"Coal constructor","scope":"public","name":"Coal","args":[]},{"title":"Coal constructor","description":"Coal constructor","scope":"public","name":"Coal","args":[{"name":"type","type":"io.wolfscript.CoalType","description":"type argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Coal","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.CoalType","io.wolfscript.Material"],"properties":[{"name":"Type","modifier":"writeonly","args":[{"name":"type","type":"io.wolfscript.CoalType","description":"the raw type id"}],"description":"Type property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Coal(final int type) {\n        super(type);\n    }\n\n    public Coal(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Coal(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Coal(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current type of this coal"],"return":["CoalType of this coal /\n    public CoalType getType() {\n        return CoalType.getByData(getData());\n    }\n\n    /** Sets the type of this coal"]},"return":"void","scope":"public","title":"Type property"}]},"io.wolfscript.material.CocoaPlantSize":{"namespace":"io.wolfscript.material","title":"enum CocoaPlantSize","description":"enum CocoaPlantSize","name":"CocoaPlantSize","qualifiedname":"io.wolfscript.material.CocoaPlantSize","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"enum":[{"code":"SMALL","value":"","title":"SMALL CocoaPlantSize","description":"SMALL CocoaPlantSize"},{"code":"MEDIUM","value":"","title":"MEDIUM CocoaPlantSize","description":"MEDIUM CocoaPlantSize"}],"properties":[]},"io.wolfscript.material.Colorable":{"namespace":"io.wolfscript.material","title":"An object that can be colored.","description":"An object that can be colored.","name":"Colorable","qualifiedname":"io.wolfscript.material.Colorable","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.DyeColor"],"properties":[{"name":"Color","modifier":"writeonly","args":[{"name":"color","type":"io.wolfscript.DyeColor","description":"The color of the object, as a DyeColor."}],"description":"Set: Gets the color of this object.","doc":{"return":["The DyeColor of this object. /\n    public DyeColor getColor();\n\n    /** Sets the color of this object to the specified DyeColor."]},"return":"void","scope":"public","title":"Set: Gets the color of this object."}]},"io.wolfscript.material.Command":{"namespace":"io.wolfscript.material","title":"Represents a command block","description":"Represents a command block","name":"Command","qualifiedname":"io.wolfscript.material.Command","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Redstone"],"constructors":[{"title":"Command constructor","description":"Command constructor","scope":"public","name":"Command","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Command","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material"],"properties":[{"name":"Powered","modifier":"writeonly","args":[{"name":"bool","type":"boolean","description":"whether or not the command block is powered"}],"description":"Powered property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Command(final int type) {\n        super(type);\n    }\n\n    public Command(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Command(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Command(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current state of this Material, indicating if it's powered or unpowered"],"return":["true if powered, otherwise false /\n    public boolean isPowered() {\n        return (getData() & 1) != 0;\n    }\n\n    /** Sets the current state of this Material"]},"return":"void","scope":"public","title":"Powered property"}]},"io.wolfscript.material.Crops":{"namespace":"io.wolfscript.material","title":"Represents the different types of crops.","description":"Represents the different types of crops.","name":"Crops","qualifiedname":"io.wolfscript.material.Crops","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"Crops constructor","description":"Crops constructor","scope":"public","name":"Crops","args":[]},{"title":"Crops constructor","description":"Crops constructor","scope":"public","name":"Crops","args":[{"name":"state","type":"io.wolfscript.CropState","description":"state argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Crops","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.CropState","io.wolfscript.Material"],"properties":[{"name":"State","modifier":"writeonly","args":[{"name":"state","type":"io.wolfscript.CropState","description":"New growth state of this crop"}],"description":"State property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Crops(final int type) {\n        super(type);\n    }\n\n    public Crops(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Crops(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Crops(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current growth state of this crop"],"return":["CropState of this crop /\n    public CropState getState() {\n        return CropState.getByData(getData());\n    }\n\n    /** Sets the growth state of this crop"]},"return":"void","scope":"public","title":"State property"}]},"io.wolfscript.material.DetectorRail":{"namespace":"io.wolfscript.material","title":"Represents a detector rail","description":"Represents a detector rail","name":"DetectorRail","qualifiedname":"io.wolfscript.material.DetectorRail","type":"class","scope":"public","extends":["io.wolfscript.material.ExtendedRails"],"implements":["io.wolfscript.material.PressureSensor"],"constructors":[{"title":"DetectorRail constructor","description":"DetectorRail constructor","scope":"public","name":"DetectorRail","args":[]},{"title":"DetectorRail constructor","description":"DetectorRail constructor","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public DetectorRail(final int type) {\n        super(type);\n    }\n\n    public DetectorRail(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public DetectorRail(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"DetectorRail","deprecated":true,"args":[{"name":"Material","type":"final","description":"Material argument"},{"name":"byte","type":"final","description":"byte argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.DetectorRail","name":"clone","args":[]},{"title":"isPressed method","description":"isPressed method","scope":"public","return":"boolean","name":"isPressed","args":[]}],"imports":["io.wolfscript.Material"],"properties":[{"name":"Pressed","modifier":"writeonly","args":[{"name":"isPressed","type":"boolean","description":"isPressed argument"}],"description":"Pressed property","return":"void","scope":"public","title":"Pressed property"}]},"io.wolfscript.material.Diode":{"namespace":"io.wolfscript.material","title":"class Diode","description":"class Diode","name":"Diode","qualifiedname":"io.wolfscript.material.Diode","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Directional"],"constructors":[{"title":"Diode constructor","description":"Diode constructor","scope":"public","name":"Diode","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Diode","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[{"name":"Delay","modifier":"readonly","args":[],"description":"Delay property","doc":{"param":["type the raw type id","type the raw type id","data the raw data value","type the type","data the raw data value","delay The new delay (1-4) /\n    public void setDelay(int delay) {\n        if (delay > 4) {\n            delay = 4;\n        }\n        if (delay < 1) {\n            delay = 1;\n        }\n        byte newData = (byte) (getData() & 0x3);\n\n        setData((byte) (newData | ((delay - 1) << 2)));\n    }\n\n    /** Gets the delay of the repeater in ticks"],"deprecated":["Magic value /\n    @Deprecated\n    public Diode(int type) {\n        super(type);\n    }\n\n    public Diode(Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Diode(int type, byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Diode(Material type, byte data) {\n        super(type, data);\n    }\n\n    /** Sets the delay of the repeater"],"return":["The delay (1-4)"]},"return":"int","scope":"public","title":"Delay property"},{"name":"Facing","modifier":"readonly","args":[],"description":"Facing property","return":"io.wolfscript.block.BlockFace","scope":"public","title":"Facing property"},{"name":"FacingDirection","modifier":"writeonly","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"}],"description":"FacingDirection property","return":"void","scope":"public","title":"FacingDirection property"}]},"io.wolfscript.material.Directional":{"namespace":"io.wolfscript.material","title":"interface Directional","description":"interface Directional","name":"Directional","qualifiedname":"io.wolfscript.material.Directional","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.block.BlockFace"],"properties":[{"name":"Facing","modifier":"readonly","args":[],"description":"Get: Sets the direction that this block is facing in","doc":{"param":["face The facing direction /\n    public void setFacingDirection(BlockFace face);\n\n    /** Gets the direction this block is facing"],"return":["the direction this block is facing"]},"return":"io.wolfscript.block.BlockFace","scope":"public","title":"Get: Sets the direction that this block is facing in"}]},"io.wolfscript.material.DirectionalContainer":{"namespace":"io.wolfscript.material","title":"Represents a furnace or a dispenser.","description":"Represents a furnace or a dispenser.","name":"DirectionalContainer","qualifiedname":"io.wolfscript.material.DirectionalContainer","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Directional"],"constructors":[{"title":"DirectionalContainer constructor","description":"DirectionalContainer constructor","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public DirectionalContainer(final int type) {\n        super(type);\n    }\n\n    public DirectionalContainer(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public DirectionalContainer(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"DirectionalContainer","deprecated":true,"args":[{"name":"Material","type":"final","description":"Material argument"},{"name":"byte","type":"final","description":"byte argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.DirectionalContainer","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[{"name":"Facing","modifier":"readonly","args":[],"description":"Facing property","return":"io.wolfscript.block.BlockFace","scope":"public","title":"Facing property"},{"name":"FacingDirection","modifier":"writeonly","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"}],"description":"FacingDirection property","return":"void","scope":"public","title":"FacingDirection property"}]},"io.wolfscript.material.Dispenser":{"namespace":"io.wolfscript.material","title":"Represents a dispenser.","description":"Represents a dispenser.","name":"Dispenser","qualifiedname":"io.wolfscript.material.Dispenser","type":"class","scope":"public","extends":["io.wolfscript.material.FurnaceAndDispenser"],"constructors":[{"title":"Dispenser constructor","description":"Dispenser constructor","scope":"public","name":"Dispenser","args":[]},{"title":"Dispenser constructor","description":"Dispenser constructor","scope":"public","name":"Dispenser","args":[{"name":"direction","type":"io.wolfscript.block.BlockFace","description":"direction argument"}]},{"title":"Dispenser constructor","description":"Dispenser constructor","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Dispenser(final int type) {\n        super(type);\n    }\n\n    public Dispenser(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Dispenser(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"Dispenser","deprecated":true,"args":[{"name":"Material","type":"final","description":"Material argument"},{"name":"byte","type":"final","description":"byte argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Dispenser","name":"clone","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[{"name":"Facing","modifier":"readonly","args":[],"description":"Facing property","return":"io.wolfscript.block.BlockFace","scope":"public","title":"Facing property"},{"name":"FacingDirection","modifier":"writeonly","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"}],"description":"FacingDirection property","return":"void","scope":"public","title":"FacingDirection property"}]},"io.wolfscript.material.Dye":{"namespace":"io.wolfscript.material","title":"Represents dye","description":"Represents dye","name":"Dye","qualifiedname":"io.wolfscript.material.Dye","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Colorable"],"constructors":[{"title":"Dye constructor","description":"Dye constructor","scope":"public","name":"Dye","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Dye","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.DyeColor","io.wolfscript.Material"],"properties":[{"name":"Color","modifier":"writeonly","args":[{"name":"color","type":"io.wolfscript.DyeColor","description":"New color of this dye"}],"description":"Color property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Dye(final int type) {\n        super(type);\n    }\n\n    public Dye(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Dye(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Dye(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current color of this dye"],"return":["DyeColor of this dye /\n    public DyeColor getColor() {\n        return DyeColor.getByDyeData(getData());\n    }\n\n    /** Sets the color of this dye"]},"return":"void","scope":"public","title":"Color property"}]},"io.wolfscript.material.EnderChest":{"namespace":"io.wolfscript.material","title":"Represents an ender chest","description":"Represents an ender chest","name":"EnderChest","qualifiedname":"io.wolfscript.material.EnderChest","type":"class","scope":"public","extends":["io.wolfscript.material.DirectionalContainer"],"constructors":[{"title":"EnderChest constructor","description":"EnderChest constructor","scope":"public","name":"EnderChest","args":[]},{"title":"Instantiate an ender chest facing in a particular direction.","description":"Instantiate an ender chest facing in a particular direction.","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public EnderChest(final int type) {\n        super(type);\n    }\n\n    public EnderChest(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public EnderChest(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"EnderChest","deprecated":true,"args":[{"name":"Material","type":"final","description":"Material argument"},{"name":"byte","type":"final","description":"byte argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.EnderChest","name":"clone","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[]},"io.wolfscript.material.ExtendedRails":{"namespace":"io.wolfscript.material","title":"This is the superclass for the {@link io.wolfscript.material.DetectorRail} and {@link io.wolfscript.material.PoweredRail}","description":"This is the superclass for the {@link io.wolfscript.material.DetectorRail} and {@link io.wolfscript.material.PoweredRail} classes","name":"ExtendedRails","qualifiedname":"io.wolfscript.material.ExtendedRails","type":"class","scope":"public","extends":["io.wolfscript.material.Rails"],"constructors":[],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.ExtendedRails","name":"clone","args":[]},{"title":"setDirection method","description":"setDirection method","scope":"public","return":"void","name":"setDirection","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"},{"name":"isOnSlope","type":"boolean","description":"isOnSlope argument"}]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[]},"io.wolfscript.material.FlowerPot":{"namespace":"io.wolfscript.material","title":"Represents a flower pot.","description":"Represents a flower pot.","name":"FlowerPot","qualifiedname":"io.wolfscript.material.FlowerPot","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.FlowerPot","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.GrassSpecies","io.wolfscript.Material","io.wolfscript.TreeSpecies"],"properties":[{"name":"Contents","modifier":"writeonly","args":[{"name":"materialData","type":"io.wolfscript.material.MaterialData","description":"MaterialData of the block to put in the flower pot."}],"description":"Set: Default constructor for a flower pot. /\n    public FlowerPot() {\n        super(Material.FLOWER_POT);\n    }\n\n    /**","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public FlowerPot(final int type) {\n        super(type);\n    }\n\n    public FlowerPot(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public FlowerPot(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public FlowerPot(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Get the material in the flower pot"],"return":["material MaterialData for the block currently in the flower pot or null if empty /\n    public MaterialData getContents() {\n        switch (getData()) {\n            case 1:\n                return new MaterialData(Material.RED_ROSE);\n            case 2:\n                return new MaterialData(Material.YELLOW_FLOWER);\n            case 3:\n                return new Tree(TreeSpecies.GENERIC);\n            case 4:\n                return new Tree(TreeSpecies.REDWOOD);\n            case 5:\n                return new Tree(TreeSpecies.BIRCH);\n            case 6:\n                return new Tree(TreeSpecies.JUNGLE);\n            case 7:\n                return new MaterialData(Material.RED_MUSHROOM);\n            case 8:\n                return new MaterialData(Material.BROWN_MUSHROOM);\n            case 9:\n                return new MaterialData(Material.CACTUS);\n            case 10:\n                return new MaterialData(Material.DEAD_BUSH);\n            case 11:\n                return new LongGrass(GrassSpecies.FERN_LIKE);\n            default:\n                return null;\n        }\n    }\n\n    /** Set the contents of the flower pot"]},"return":"void","scope":"public","title":"Set: Default constructor for a flower pot."}]},"io.wolfscript.material.Furnace":{"namespace":"io.wolfscript.material","title":"Represents a furnace.","description":"Represents a furnace.","name":"Furnace","qualifiedname":"io.wolfscript.material.Furnace","type":"class","scope":"public","extends":["io.wolfscript.material.FurnaceAndDispenser"],"constructors":[{"title":"Furnace constructor","description":"Furnace constructor","scope":"public","name":"Furnace","args":[]},{"title":"Instantiate a furnace facing in a particular direction.","description":"Instantiate a furnace facing in a particular direction.","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Furnace(final int type) {\n        super(type);\n    }\n\n    public Furnace(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Furnace(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"Furnace","deprecated":true,"args":[{"name":"Material","type":"final","description":"Material argument"},{"name":"byte","type":"final","description":"byte argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Furnace","name":"clone","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[]},"io.wolfscript.material.FurnaceAndDispenser":{"namespace":"io.wolfscript.material","title":"Represents a furnace or dispenser, two types of directional containers","description":"Represents a furnace or dispenser, two types of directional containers","name":"FurnaceAndDispenser","qualifiedname":"io.wolfscript.material.FurnaceAndDispenser","type":"class","scope":"public","extends":["io.wolfscript.material.DirectionalContainer"],"constructors":[{"title":"FurnaceAndDispenser constructor","description":"FurnaceAndDispenser constructor","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public FurnaceAndDispenser(final int type) {\n        super(type);\n    }\n\n    public FurnaceAndDispenser(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public FurnaceAndDispenser(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"FurnaceAndDispenser","deprecated":true,"args":[{"name":"Material","type":"final","description":"Material argument"},{"name":"byte","type":"final","description":"byte argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.FurnaceAndDispenser","name":"clone","args":[]}],"imports":["io.wolfscript.Material"],"properties":[]},"io.wolfscript.material.Ladder":{"namespace":"io.wolfscript.material","title":"Represents Ladder data","description":"Represents Ladder data","name":"Ladder","qualifiedname":"io.wolfscript.material.Ladder","type":"class","scope":"public","extends":["io.wolfscript.material.SimpleAttachableMaterialData"],"constructors":[{"title":"Ladder constructor","description":"Ladder constructor","scope":"public","name":"Ladder","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Ladder","name":"clone","args":[]}],"imports":["io.wolfscript.block.BlockFace","io.wolfscript.Material"],"properties":[{"name":"FacingDirection","modifier":"writeonly","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"}],"description":"FacingDirection property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Ladder(final int type) {\n        super(type);\n    }\n\n    public Ladder(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Ladder(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Ladder(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the face that this block is attached on"],"return":["BlockFace attached to /\n    public BlockFace getAttachedFace() {\n        byte data = getData();\n\n        switch (data) {\n        case 0x2:\n            return BlockFace.SOUTH;\n\n        case 0x3:\n            return BlockFace.NORTH;\n\n        case 0x4:\n            return BlockFace.EAST;\n\n        case 0x5:\n            return BlockFace.WEST;\n        }\n\n        return null;\n    }\n\n    /** Sets the direction this ladder is facing"]},"return":"void","scope":"public","title":"FacingDirection property"}]},"io.wolfscript.material.Leaves":{"namespace":"io.wolfscript.material","title":"Represents the different types of leaves.","description":"Represents the different types of leaves.","name":"Leaves","qualifiedname":"io.wolfscript.material.Leaves","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"Leaves constructor","description":"Leaves constructor","scope":"public","name":"Leaves","args":[]},{"title":"Leaves constructor","description":"Leaves constructor","scope":"public","name":"Leaves","args":[{"name":"species","type":"io.wolfscript.TreeSpecies","description":"species argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Leaves","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.TreeSpecies"],"properties":[{"name":"Species","modifier":"writeonly","args":[{"name":"species","type":"io.wolfscript.TreeSpecies","description":"New species of this leave"}],"description":"Species property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Leaves(final int type) {\n        super(type);\n    }\n\n    public Leaves(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Leaves(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Leaves(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current species of this leave"],"return":["TreeSpecies of this leave /\n    public TreeSpecies getSpecies() {\n        return TreeSpecies.getByData((byte) (getData() & 3));\n    }\n\n    /** Sets the species of this leave"]},"return":"void","scope":"public","title":"Species property"}]},"io.wolfscript.material.Lever":{"namespace":"io.wolfscript.material","title":"Represents a lever","description":"Represents a lever","name":"Lever","qualifiedname":"io.wolfscript.material.Lever","type":"class","scope":"public","extends":["io.wolfscript.material.SimpleAttachableMaterialData"],"implements":["io.wolfscript.material.Redstone"],"constructors":[{"title":"Lever constructor","description":"Lever constructor","scope":"public","name":"Lever","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Lever","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.block.BlockFace","io.wolfscript.Material"],"properties":[{"name":"FacingDirection","modifier":"writeonly","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"}],"description":"FacingDirection property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Lever(final int type) {\n        super(type);\n    }\n\n    public Lever(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Lever(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Lever(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current state of this Material, indicating if it's powered or unpowered"],"return":["true if powered, otherwise false /\n    public boolean isPowered() {\n        return (getData() & 0x8) == 0x8;\n    }\n\n    /** Set this lever to be powered or not.","BlockFace attached to /\n    public BlockFace getAttachedFace() {\n        byte data = (byte) (getData() & 0x7);\n\n        switch (data) {\n        case 0x1:\n            return BlockFace.WEST;\n\n        case 0x2:\n            return BlockFace.EAST;\n\n        case 0x3:\n            return BlockFace.NORTH;\n\n        case 0x4:\n            return BlockFace.SOUTH;\n\n        case 0x5:\n        case 0x6:\n            return BlockFace.DOWN;\n\n        case 0x0:\n        case 0x7:\n            return BlockFace.UP;\n\n        }\n\n        return null;\n    }\n\n    /** Sets the direction this lever is pointing in"]},"return":"void","scope":"public","title":"FacingDirection property"}]},"io.wolfscript.material.LongGrass":{"namespace":"io.wolfscript.material","title":"Represents the different types of long grasses.","description":"Represents the different types of long grasses.","name":"LongGrass","qualifiedname":"io.wolfscript.material.LongGrass","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"LongGrass constructor","description":"LongGrass constructor","scope":"public","name":"LongGrass","args":[]},{"title":"LongGrass constructor","description":"LongGrass constructor","scope":"public","name":"LongGrass","args":[{"name":"species","type":"io.wolfscript.GrassSpecies","description":"species argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.LongGrass","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.GrassSpecies","io.wolfscript.Material"],"properties":[{"name":"Species","modifier":"writeonly","args":[{"name":"species","type":"io.wolfscript.GrassSpecies","description":"New species of this grass"}],"description":"Species property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public LongGrass(final int type) {\n        super(type);\n    }\n\n    public LongGrass(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public LongGrass(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public LongGrass(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current species of this grass"],"return":["GrassSpecies of this grass /\n    public GrassSpecies getSpecies() {\n        return GrassSpecies.getByData(getData());\n    }\n\n    /** Sets the species of this grass"]},"return":"void","scope":"public","title":"Species property"}]},"io.wolfscript.material.MaterialData":{"namespace":"io.wolfscript.material","title":"Handles specific metadata for certain items or blocks","description":"Handles specific metadata for certain items or blocks","name":"MaterialData","qualifiedname":"io.wolfscript.material.MaterialData","type":"class","scope":"public","implements":["Cloneable"],"constructors":[],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.MaterialData","name":"clone","args":[]},{"title":"equals method","description":"equals method","scope":"public","return":"boolean","name":"equals","args":[{"name":"obj","type":"Object","description":"obj argument"}]},{"title":"hashCode method","description":"hashCode method","scope":"public","return":"int","name":"hashCode","args":[]},{"title":"toItemStack method","description":"toItemStack method","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public MaterialData(final int type) {\n        this(type, (byte) 0);\n    }\n\n    public MaterialData(final Material type) {\n        this(type, (byte) 0);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public MaterialData(final int type, final byte data) {\n        this.type = type;\n        this.data = data;\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public MaterialData(final Material type, final byte data) {\n        this(type.getId(), data);\n    }\n\n    /** Gets the raw data in this material","Magic value /\n    @Deprecated\n    public byte getData() {\n        return data;\n    }\n\n    /** Sets the raw data of this material","Magic value /\n    @Deprecated\n    public void setData(byte data) {\n        this.data = data;\n    }\n\n    /** Gets the Material that this MaterialData represents","Magic value /\n    @Deprecated\n    public int getItemTypeId() {\n        return type;\n    }\n\n    /** Creates a new ItemStack based on this MaterialData"],"return":["Raw data","Material represented by this MaterialData /\n    public Material getItemType() {\n        return Material.getMaterial(type);\n    }\n\n    /** Gets the Material Id that this MaterialData represents","Material Id represented by this MaterialData","New ItemStack containing a copy of this MaterialData /\n    public ItemStack toItemStack() {\n        return new ItemStack(type, 0, data);\n    }\n\n    /** Creates a new ItemStack based on this MaterialData","New ItemStack containing a copy of this MaterialData"]},"scope":"public","return":"io.wolfscript.inventory.ItemStack","name":"toItemStack","args":[{"name":"amount","type":"int","description":"The stack size of the new stack"}]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.inventory.ItemStack","io.wolfscript.Material"],"properties":[]},"io.wolfscript.material.MonsterEggs":{"namespace":"io.wolfscript.material","title":"Represents the different types of monster eggs","description":"Represents the different types of monster eggs","name":"MonsterEggs","qualifiedname":"io.wolfscript.material.MonsterEggs","type":"class","scope":"public","extends":["io.wolfscript.material.TexturedMaterial"],"constructors":[{"title":"MonsterEggs constructor","description":"MonsterEggs constructor","scope":"public","name":"MonsterEggs","args":[]},{"title":"MonsterEggs constructor","description":"MonsterEggs constructor","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public MonsterEggs(final int type) {\n        super(type);\n    }\n\n    public MonsterEggs(final Material type) {\n        super((textures.contains(type)) ? Material.MONSTER_EGGS : type);\n        if (textures.contains(type)) {\n            setMaterial(type);\n        }\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public MonsterEggs(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"MonsterEggs","deprecated":true,"args":[{"name":"Material","type":"final","description":"Material argument"},{"name":"byte","type":"final","description":"byte argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.MonsterEggs","name":"clone","args":[]}],"imports":["java.util.ArrayList","java.util.List","io.wolfscript.Material"],"properties":[{"name":"Textures","modifier":"readonly","args":[],"description":"Textures property","return":"List<Material>","scope":"public","title":"Textures property"}]},"io.wolfscript.material.Mushroom":{"namespace":"io.wolfscript.material","title":"Represents a huge mushroom block","description":"Represents a huge mushroom block","name":"Mushroom","qualifiedname":"io.wolfscript.material.Mushroom","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"Mushroom constructor","description":"Mushroom constructor","scope":"public","name":"Mushroom","args":[{"name":"shroom","type":"io.wolfscript.Material","description":"shroom argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Mushroom","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["java.util.EnumSet","java.util.Set","org.apache.commons.lang.Validate","io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[{"name":"PaintedFaces","modifier":"readonly","args":[],"description":"PaintedFaces property","doc":{"param":["shroom the type","data the raw data value","type the raw type id","data the raw data value","face The face to check.","face The face to paint or unpaint.","painted True if you want to paint it, false if you want the pores to show. /\n    public void setFacePainted(BlockFace face, boolean painted) {\n        if (painted == isFacePainted(face)) {\n            return;\n        }\n\n        byte data = getData();\n\n        if (data == SHROOM_STEM) {\n            data = 5;\n        }\n\n        switch (face) {\n            case WEST:\n                if (painted) {\n                    data -= NORTH_SOUTH_MOD;\n                } else {\n                    data += NORTH_SOUTH_MOD;\n                }\n\n                break;\n            case EAST:\n                if (painted) {\n                    data += NORTH_SOUTH_MOD;\n                } else {\n                    data -= NORTH_SOUTH_MOD;\n                }\n\n                break;\n            case NORTH:\n                if (painted) {\n                    data += EAST_WEST_MOD;\n                } else {\n                    data -= EAST_WEST_MOD;\n                }\n\n                break;\n            case SOUTH:\n                if (painted) {\n                    data -= EAST_WEST_MOD;\n                } else {\n                    data += EAST_WEST_MOD;\n                }\n\n                break;\n            case UP:\n                if (!painted) {\n                    data = 0;\n                }\n\n                break;\n            default:\n                throw new IllegalArgumentException(\"Can't paint that face of a mushroom!\");\n        }\n\n        setData(data);\n    }\n\n    /**"],"deprecated":["Magic value /\n    @Deprecated\n    public Mushroom(Material shroom, byte data) {\n        super(shroom, data);\n        Validate.isTrue(shroom == Material.HUGE_MUSHROOM_1 || shroom == Material.HUGE_MUSHROOM_2, \"Not a mushroom!\");\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Mushroom(int type, byte data){\n        super(type, data);\n        Validate.isTrue(type == Material.HUGE_MUSHROOM_1.getId() || type == Material.HUGE_MUSHROOM_2.getId(), \"Not a mushroom!\");\n    }\n\n    /**"],"return":["Whether this is a mushroom stem. /\n    public boolean isStem() {\n        return getData() == SHROOM_STEM;\n    }\n\n    /** Sets this to be a mushroom stem. /\n    public void setStem() {\n        setData((byte) 10);\n    }\n\n    /** Checks whether a face of the block is painted.","True if it is painted. /\n    public boolean isFacePainted(BlockFace face) {\n        byte data = getData();\n\n        if (data == SHROOM_NONE || data == SHROOM_STEM) {\n            return false;\n        }\n\n        switch (face) {\n            case WEST:\n                return data < NORTH_LIMIT;\n            case EAST:\n                return data > SOUTH_LIMIT;\n            case NORTH:\n                return data % EAST_WEST_LIMIT == EAST_REMAINDER;\n            case SOUTH:\n                return data % EAST_WEST_LIMIT == WEST_REMAINDER;\n            case UP:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /** Set a face of the block to be painted or not. Note that due to the nature of how the data is stored, setting a face painted or not is not guaranteed to leave the other faces unchanged.","A set of all faces that are currently painted (an empty set if it is a stem)"]},"return":"Set<BlockFace>","scope":"public","title":"PaintedFaces property"}]},"io.wolfscript.material.NetherWarts":{"namespace":"io.wolfscript.material","title":"Represents nether wart","description":"Represents nether wart","name":"NetherWarts","qualifiedname":"io.wolfscript.material.NetherWarts","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"NetherWarts constructor","description":"NetherWarts constructor","scope":"public","name":"NetherWarts","args":[]},{"title":"NetherWarts constructor","description":"NetherWarts constructor","scope":"public","name":"NetherWarts","args":[{"name":"state","type":"io.wolfscript.NetherWartsState","description":"state argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.NetherWarts","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.NetherWartsState"],"properties":[{"name":"State","modifier":"writeonly","args":[{"name":"state","type":"io.wolfscript.NetherWartsState","description":"New growth state of this nether wart"}],"description":"State property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public NetherWarts(final int type) {\n        super(type);\n    }\n\n    public NetherWarts(final Material type) {\n        super (type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public NetherWarts(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public NetherWarts(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current growth state of this nether wart"],"return":["NetherWartsState of this nether wart /\n    public NetherWartsState getState() {\n        switch (getData()) {\n            case 0:\n                return NetherWartsState.SEEDED;\n            case 1:\n                return NetherWartsState.STAGE_ONE;\n            case 2:\n                return NetherWartsState.STAGE_TWO;\n            default:\n                return NetherWartsState.RIPE;\n        }\n    }\n\n    /** Sets the growth state of this nether wart"]},"return":"void","scope":"public","title":"State property"}]},"io.wolfscript.material.Openable":{"namespace":"io.wolfscript.material","title":"interface Openable","description":"interface Openable","name":"Openable","qualifiedname":"io.wolfscript.material.Openable","type":"interface","scope":"public","constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.material.PistonExtensionMaterial":{"namespace":"io.wolfscript.material","title":"Material data for the piston extension block","description":"Material data for the piston extension block","name":"PistonExtensionMaterial","qualifiedname":"io.wolfscript.material.PistonExtensionMaterial","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Attachable"],"constructors":[],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.PistonExtensionMaterial","name":"clone","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[{"name":"AttachedFace","modifier":"readonly","args":[],"description":"AttachedFace property","return":"io.wolfscript.block.BlockFace","scope":"public","title":"AttachedFace property"},{"name":"Sticky","modifier":"writeonly","args":[{"name":"sticky","type":"boolean","description":"true if sticky, otherwise false"}],"description":"Sticky property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public PistonExtensionMaterial(final int type) {\n        super(type);\n    }\n\n    public PistonExtensionMaterial(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public PistonExtensionMaterial(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public PistonExtensionMaterial(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    public void setFacingDirection(BlockFace face) {\n        byte data = (byte) (getData() & 0x8);\n\n        switch (face) {\n        case UP:\n            data |= 1;\n            break;\n        case NORTH:\n            data |= 2;\n            break;\n        case SOUTH:\n            data |= 3;\n            break;\n        case WEST:\n            data |= 4;\n            break;\n        case EAST:\n            data |= 5;\n            break;\n        }\n        setData(data);\n    }\n\n    public BlockFace getFacing() {\n        byte dir = (byte) (getData() & 7);\n\n        switch (dir) {\n        case 0:\n            return BlockFace.DOWN;\n        case 1:\n            return BlockFace.UP;\n        case 2:\n            return BlockFace.NORTH;\n        case 3:\n            return BlockFace.SOUTH;\n        case 4:\n            return BlockFace.WEST;\n        case 5:\n            return BlockFace.EAST;\n        default:\n            return BlockFace.SELF;\n        }\n    }\n\n    /** Checks if this piston extension is sticky, and returns true if so"],"return":["true if this piston is \"sticky\", or false /\n    public boolean isSticky() {\n        return (getData() & 8) == 8;\n    }\n\n    /** Sets whether or not this extension is sticky"]},"return":"void","scope":"public","title":"Sticky property"}]},"io.wolfscript.material.PoweredRail":{"namespace":"io.wolfscript.material","title":"Represents a powered rail","description":"Represents a powered rail","name":"PoweredRail","qualifiedname":"io.wolfscript.material.PoweredRail","type":"class","scope":"public","extends":["io.wolfscript.material.ExtendedRails"],"implements":["io.wolfscript.material.Redstone"],"constructors":[{"title":"PoweredRail constructor","description":"PoweredRail constructor","scope":"public","name":"PoweredRail","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.PoweredRail","name":"clone","args":[]}],"imports":["io.wolfscript.Material"],"properties":[{"name":"Powered","modifier":"writeonly","args":[{"name":"isPowered","type":"boolean","description":"whether or not the rail is powered"}],"description":"Powered property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public PoweredRail(final int type) {\n        super(type);\n    }\n\n    public PoweredRail(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public PoweredRail(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public PoweredRail(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    public boolean isPowered() {\n        return (getData() & 0x8) == 0x8;\n    }\n\n    /** Set whether this PoweredRail should be powered or not."]},"return":"void","scope":"public","title":"Powered property"}]},"io.wolfscript.material.PressurePlate":{"namespace":"io.wolfscript.material","title":"Represents a pressure plate","description":"Represents a pressure plate","name":"PressurePlate","qualifiedname":"io.wolfscript.material.PressurePlate","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.PressureSensor"],"constructors":[{"title":"PressurePlate constructor","description":"PressurePlate constructor","scope":"public","name":"PressurePlate","args":[]},{"title":"PressurePlate constructor","description":"PressurePlate constructor","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public PressurePlate(int type) {\n        super(type);\n    }\n\n    public PressurePlate(Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public PressurePlate(int type, byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"PressurePlate","deprecated":true,"args":[{"name":"type","type":"io.wolfscript.Material","description":"the raw type id"},{"name":"data","type":"byte","description":"the raw data value"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.PressurePlate","name":"clone","args":[]},{"title":"isPressed method","description":"isPressed method","scope":"public","return":"boolean","name":"isPressed","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material"],"properties":[]},"io.wolfscript.material.PressureSensor":{"namespace":"io.wolfscript.material","title":"interface PressureSensor","description":"interface PressureSensor","name":"PressureSensor","qualifiedname":"io.wolfscript.material.PressureSensor","type":"interface","scope":"public","constructors":[],"methods":[{"title":"isPressed method","description":"isPressed method","scope":"public","return":"boolean","name":"isPressed","args":[]}],"imports":[],"properties":[]},"io.wolfscript.material.Pumpkin":{"namespace":"io.wolfscript.material","title":"Represents a pumpkin.","description":"Represents a pumpkin.","name":"Pumpkin","qualifiedname":"io.wolfscript.material.Pumpkin","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Directional"],"constructors":[{"title":"Pumpkin constructor","description":"Pumpkin constructor","scope":"public","name":"Pumpkin","args":[]},{"title":"Instantiate a pumpkin facing in a particular direction.","description":"Instantiate a pumpkin facing in a particular direction.","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Pumpkin(final int type) {\n        super(type);\n    }\n\n    public Pumpkin(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Pumpkin(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"Pumpkin","deprecated":true,"args":[{"name":"Material","type":"final","description":"Material argument"},{"name":"byte","type":"final","description":"byte argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Pumpkin","name":"clone","args":[]},{"title":"isLit method","description":"isLit method","scope":"public","return":"boolean","name":"isLit","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[{"name":"Facing","modifier":"readonly","args":[],"description":"Facing property","return":"io.wolfscript.block.BlockFace","scope":"public","title":"Facing property"},{"name":"FacingDirection","modifier":"writeonly","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"}],"description":"FacingDirection property","return":"void","scope":"public","title":"FacingDirection property"}]},"io.wolfscript.material.Rails":{"namespace":"io.wolfscript.material","title":"Represents minecart rails.","description":"Represents minecart rails.","name":"Rails","qualifiedname":"io.wolfscript.material.Rails","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"Rails constructor","description":"Rails constructor","scope":"public","name":"Rails","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Rails","name":"clone","args":[]},{"title":"setDirection method","description":"setDirection method","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Rails(final int type) {\n        super(type);\n    }\n\n    public Rails(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Rails(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Rails(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    protected byte getConvertedData() {\n        return getData();\n    }\n\n    /** Set the direction of these tracks <p> Note that tracks are bidirectional and that the direction returned is the ascending direction if the track is set on a slope. If it is set as a curve, the corner of the track should be supplied."],"return":["the whether this track is set on a slope /\n    public boolean isOnSlope() {\n        byte d = getConvertedData();\n\n        return (d == 0x2 || d == 0x3 || d == 0x4 || d == 0x5);\n    }\n\n    /**","the whether this track is set as a curve /\n    public boolean isCurve() {\n        byte d = getConvertedData();\n\n        return (d == 0x6 || d == 0x7 || d == 0x8 || d == 0x9);\n    }\n\n    /**","the direction these tracks are set <p> Note that tracks are bidirectional and that the direction returned is the ascending direction if the track is set on a slope. If it is set as a curve, the corner of the track is returned. /\n    public BlockFace getDirection() {\n        byte d = getConvertedData();\n\n        switch (d) {\n        case 0x0:\n        default:\n            return BlockFace.SOUTH;\n\n        case 0x1:\n            return BlockFace.EAST;\n\n        case 0x2:\n            return BlockFace.EAST;\n\n        case 0x3:\n            return BlockFace.WEST;\n\n        case 0x4:\n            return BlockFace.NORTH;\n\n        case 0x5:\n            return BlockFace.SOUTH;\n\n        case 0x6:\n            return BlockFace.NORTH_WEST;\n\n        case 0x7:\n            return BlockFace.NORTH_EAST;\n\n        case 0x8:\n            return BlockFace.SOUTH_EAST;\n\n        case 0x9:\n            return BlockFace.SOUTH_WEST;\n        }\n    }\n\n    @Override\n    public String toString() {\n        return super.toString() + \" facing \" + getDirection() + (isCurve() ? \" on a curve\" : (isOnSlope() ? \" on a slope\" : \"\"));\n    }\n\n    /** Return the data without the extended properties used by {@link io.wolfscript.material.PoweredRail} and {@link io.wolfscript.material.DetectorRail}. Overridden in {@link io.wolfscript.material.ExtendedRails}","the data without the extended part"]},"scope":"public","return":"void","name":"setDirection","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"the direction the track should be facing"},{"name":"isOnSlope","type":"boolean","description":"whether or not the track should be on a slope"}]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[]},"io.wolfscript.material.Redstone":{"namespace":"io.wolfscript.material","title":"Indicated a Material that may carry or create a Redstone current","description":"Indicated a Material that may carry or create a Redstone current","name":"Redstone","qualifiedname":"io.wolfscript.material.Redstone","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Gets the current state of this Material, indicating if it's powered or","description":"Gets the current state of this Material, indicating if it's powered or unpowered","doc":{"return":["true if powered, otherwise false"]},"scope":"public","return":"boolean","name":"isPowered","args":[]}],"imports":[],"properties":[]},"io.wolfscript.material.RedstoneTorch":{"namespace":"io.wolfscript.material","title":"Represents a redstone torch","description":"Represents a redstone torch","name":"RedstoneTorch","qualifiedname":"io.wolfscript.material.RedstoneTorch","type":"class","scope":"public","extends":["io.wolfscript.material.Torch"],"implements":["io.wolfscript.material.Redstone"],"constructors":[{"title":"RedstoneTorch constructor","description":"RedstoneTorch constructor","scope":"public","name":"RedstoneTorch","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.RedstoneTorch","name":"clone","args":[]},{"title":"isPowered method","description":"isPowered method","doc":{"param":["type the raw type id","type the raw type id","data the raw data value","type the type","data the raw data value"],"deprecated":["Magic value /\n    @Deprecated\n    public RedstoneTorch(final int type) {\n        super(type);\n    }\n\n    public RedstoneTorch(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public RedstoneTorch(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public RedstoneTorch(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current state of this Material, indicating if it's powered or unpowered"],"return":["true if powered, otherwise false"]},"scope":"public","return":"boolean","name":"isPowered","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material"],"properties":[]},"io.wolfscript.material.RedstoneWire":{"namespace":"io.wolfscript.material","title":"Represents redstone wire","description":"Represents redstone wire","name":"RedstoneWire","qualifiedname":"io.wolfscript.material.RedstoneWire","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Redstone"],"constructors":[{"title":"RedstoneWire constructor","description":"RedstoneWire constructor","scope":"public","name":"RedstoneWire","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.RedstoneWire","name":"clone","args":[]},{"title":"isPowered method","description":"isPowered method","doc":{"param":["type the raw type id","type the raw type id","data the raw data value","type the type","data the raw data value"],"deprecated":["Magic value /\n    @Deprecated\n    public RedstoneWire(final int type) {\n        super(type);\n    }\n\n    public RedstoneWire(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public RedstoneWire(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public RedstoneWire(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current state of this Material, indicating if it's powered or unpowered"],"return":["true if powered, otherwise false"]},"scope":"public","return":"boolean","name":"isPowered","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material"],"properties":[]},"io.wolfscript.material.Sandstone":{"namespace":"io.wolfscript.material","title":"Represents the different types of sandstone.","description":"Represents the different types of sandstone.","name":"Sandstone","qualifiedname":"io.wolfscript.material.Sandstone","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"Sandstone constructor","description":"Sandstone constructor","scope":"public","name":"Sandstone","args":[]},{"title":"Sandstone constructor","description":"Sandstone constructor","scope":"public","name":"Sandstone","args":[{"name":"type","type":"io.wolfscript.SandstoneType","description":"type argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Sandstone","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.SandstoneType"],"properties":[{"name":"Type","modifier":"writeonly","args":[{"name":"type","type":"io.wolfscript.SandstoneType","description":"the raw type id"}],"description":"Type property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Sandstone(final int type) {\n        super(type);\n    }\n\n    public Sandstone(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Sandstone(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Sandstone(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current type of this sandstone"],"return":["SandstoneType of this sandstone /\n    public SandstoneType getType() {\n        return SandstoneType.getByData(getData());\n    }\n\n    /** Sets the type of this sandstone"]},"return":"void","scope":"public","title":"Type property"}]},"io.wolfscript.material.Sign":{"namespace":"io.wolfscript.material","title":"MaterialData for signs","description":"MaterialData for signs","name":"Sign","qualifiedname":"io.wolfscript.material.Sign","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Attachable"],"constructors":[{"title":"Sign constructor","description":"Sign constructor","scope":"public","name":"Sign","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Sign","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.block.BlockFace","io.wolfscript.Material"],"properties":[{"name":"Facing","modifier":"readonly","args":[],"description":"Facing property","doc":{"param":["type the raw type id","type the raw type id","data the raw data value","type the raw type id","data the raw data value"],"deprecated":["Magic value /\n    @Deprecated\n    public Sign(final int type) {\n        super(type);\n    }\n\n    public Sign(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Sign(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Sign(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Check if this sign is attached to a wall"],"return":["true if this sign is attached to a wall, false if set on top of a block /\n    public boolean isWallSign() {\n        return getItemType() == Material.WALL_SIGN;\n    }\n\n    /** Gets the face that this block is attached on","BlockFace attached to /\n    public BlockFace getAttachedFace() {\n        if (isWallSign()) {\n            byte data = getData();\n\n            switch (data) {\n            case 0x2:\n                return BlockFace.SOUTH;\n\n            case 0x3:\n                return BlockFace.NORTH;\n\n            case 0x4:\n                return BlockFace.EAST;\n\n            case 0x5:\n                return BlockFace.WEST;\n            }\n\n            return null;\n        } else {\n            return BlockFace.DOWN;\n        }\n    }\n\n    /** Gets the direction that this sign is currently facing","BlockFace indicating where this sign is facing"]},"return":"io.wolfscript.block.BlockFace","scope":"public","title":"Facing property"},{"name":"FacingDirection","modifier":"writeonly","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"}],"description":"FacingDirection property","return":"void","scope":"public","title":"FacingDirection property"}]},"io.wolfscript.material.SimpleAttachableMaterialData":{"namespace":"io.wolfscript.material","title":"Simple utility class for attachable MaterialData subclasses","description":"Simple utility class for attachable MaterialData subclasses","name":"SimpleAttachableMaterialData","qualifiedname":"io.wolfscript.material.SimpleAttachableMaterialData","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Attachable"],"constructors":[{"title":"SimpleAttachableMaterialData constructor","description":"SimpleAttachableMaterialData constructor","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public SimpleAttachableMaterialData(int type) {\n        super(type);\n    }\n\n    public SimpleAttachableMaterialData(int type, BlockFace direction) {\n        this(type);\n        setFacingDirection(direction);\n    }\n\n    public SimpleAttachableMaterialData(Material type, BlockFace direction) {\n        this(type);\n        setFacingDirection(direction);\n    }\n\n    public SimpleAttachableMaterialData(Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public SimpleAttachableMaterialData(int type, byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"SimpleAttachableMaterialData","deprecated":true,"args":[{"name":"type","type":"io.wolfscript.Material","description":"the raw type id"},{"name":"data","type":"byte","description":"the raw data value"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.SimpleAttachableMaterialData","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[{"name":"Facing","modifier":"readonly","args":[],"description":"Facing property","return":"io.wolfscript.block.BlockFace","scope":"public","title":"Facing property"}]},"io.wolfscript.material.Skull":{"namespace":"io.wolfscript.material","title":"Represents a skull.","description":"Represents a skull.","name":"Skull","qualifiedname":"io.wolfscript.material.Skull","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Directional"],"constructors":[{"title":"Skull constructor","description":"Skull constructor","scope":"public","name":"Skull","args":[]},{"title":"Instantiate a skull facing in a particular direction.","description":"Instantiate a skull facing in a particular direction.","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Skull(final int type) {\n        super(type);\n    }\n\n    public Skull(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Skull(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"Skull","deprecated":true,"args":[{"name":"Material","type":"final","description":"Material argument"},{"name":"byte","type":"final","description":"byte argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Skull","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[{"name":"Facing","modifier":"readonly","args":[],"description":"Facing property","return":"io.wolfscript.block.BlockFace","scope":"public","title":"Facing property"},{"name":"FacingDirection","modifier":"writeonly","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"}],"description":"FacingDirection property","return":"void","scope":"public","title":"FacingDirection property"}]},"io.wolfscript.material.SmoothBrick":{"namespace":"io.wolfscript.material","title":"Represents the different types of smooth bricks.","description":"Represents the different types of smooth bricks.","name":"SmoothBrick","qualifiedname":"io.wolfscript.material.SmoothBrick","type":"class","scope":"public","extends":["io.wolfscript.material.TexturedMaterial"],"constructors":[{"title":"SmoothBrick constructor","description":"SmoothBrick constructor","scope":"public","name":"SmoothBrick","args":[]},{"title":"SmoothBrick constructor","description":"SmoothBrick constructor","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public SmoothBrick(final int type) {\n        super(type);\n    }\n\n    public SmoothBrick(final Material type) {\n        super((textures.contains(type)) ? Material.SMOOTH_BRICK : type);\n        if (textures.contains(type)) {\n            setMaterial(type);\n        }\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public SmoothBrick(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value"]},"scope":"public","name":"SmoothBrick","deprecated":true,"args":[{"name":"Material","type":"final","description":"Material argument"},{"name":"byte","type":"final","description":"byte argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.SmoothBrick","name":"clone","args":[]}],"imports":["java.util.ArrayList","java.util.List","io.wolfscript.Material"],"properties":[{"name":"Textures","modifier":"readonly","args":[],"description":"Textures property","return":"List<Material>","scope":"public","title":"Textures property"}]},"io.wolfscript.material.SpawnEgg":{"namespace":"io.wolfscript.material","title":"Represents a spawn egg that can be used to spawn mobs","description":"Represents a spawn egg that can be used to spawn mobs","name":"SpawnEgg","qualifiedname":"io.wolfscript.material.SpawnEgg","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"SpawnEgg constructor","description":"SpawnEgg constructor","scope":"public","name":"SpawnEgg","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.SpawnEgg","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.entity.EntityType"],"properties":[{"name":"SpawnedType","modifier":"writeonly","args":[{"name":"type","type":"io.wolfscript.entity.EntityType","description":"the raw type id"}],"description":"SpawnedType property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public SpawnEgg(int type, byte data){\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public SpawnEgg(byte data) {\n        super(Material.MONSTER_EGG, data);\n    }\n\n    public SpawnEgg(EntityType type) {\n        this();\n        setSpawnedType(type);\n    }\n\n    /** Get the type of entity this egg will spawn."],"return":["The entity type. /\n    public EntityType getSpawnedType() {\n        return EntityType.fromId(getData());\n    }\n\n    /** Set the type of entity this egg will spawn."]},"return":"void","scope":"public","title":"SpawnedType property"}]},"io.wolfscript.material.Stairs":{"namespace":"io.wolfscript.material","title":"Represents stairs.","description":"Represents stairs.","name":"Stairs","qualifiedname":"io.wolfscript.material.Stairs","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Directional"],"constructors":[],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Stairs","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[{"name":"Inverted","modifier":"writeonly","args":[{"name":"inv","type":"boolean","description":"- true if step is inverted (top half), false if step is normal (bottom half)"}],"description":"Inverted property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Stairs(final int type) {\n        super(type);\n    }\n\n    public Stairs(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Stairs(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Stairs(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /**"],"return":["the direction the stairs ascend towards /\n    public BlockFace getAscendingDirection() {\n        byte data = getData();\n\n        switch (data & 0x3) {\n        case 0x0:\n        default:\n            return BlockFace.EAST;\n\n        case 0x1:\n            return BlockFace.WEST;\n\n        case 0x2:\n            return BlockFace.SOUTH;\n\n        case 0x3:\n            return BlockFace.NORTH;\n        }\n    }\n\n    /**","the direction the stairs descend towards /\n    public BlockFace getDescendingDirection() {\n        return getAscendingDirection().getOppositeFace();\n    }\n\n    /** Set the direction the stair part of the block is facing /\n    public void setFacingDirection(BlockFace face) {\n        byte data;\n\n        switch (face) {\n        case NORTH:\n            data = 0x3;\n            break;\n\n        case SOUTH:\n            data = 0x2;\n            break;\n\n        case EAST:\n        default:\n            data = 0x0;\n            break;\n\n        case WEST:\n            data = 0x1;\n            break;\n        }\n\n        setData((byte) ((getData() & 0xC) | data));\n    }\n\n    /**","the direction the stair part of the block is facing /\n    public BlockFace getFacing() {\n        return getDescendingDirection();\n    }\n\n    /** Test if step is inverted","true if inverted (top half), false if normal (bottom half) /\n    public boolean isInverted() {\n        return ((getData() & 0x4) != 0);\n    }\n\n    /** Set step inverted state"]},"return":"void","scope":"public","title":"Inverted property"}]},"io.wolfscript.material.Step":{"namespace":"io.wolfscript.material","title":"Represents the different types of steps.","description":"Represents the different types of steps.","name":"Step","qualifiedname":"io.wolfscript.material.Step","type":"class","scope":"public","extends":["io.wolfscript.material.TexturedMaterial"],"constructors":[{"title":"Step constructor","description":"Step constructor","scope":"public","name":"Step","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Step","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["java.util.ArrayList","java.util.List","io.wolfscript.Material"],"properties":[]},"io.wolfscript.material.TexturedMaterial":{"namespace":"io.wolfscript.material","title":"Represents textured materials like steps and smooth bricks","description":"Represents textured materials like steps and smooth bricks","name":"TexturedMaterial","qualifiedname":"io.wolfscript.material.TexturedMaterial","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"TexturedMaterial constructor","description":"TexturedMaterial constructor","scope":"public","name":"TexturedMaterial","args":[{"name":"m","type":"io.wolfscript.Material","description":"m argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.TexturedMaterial","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["java.util.List","io.wolfscript.Material"],"properties":[]},"io.wolfscript.material.Torch":{"namespace":"io.wolfscript.material","title":"MaterialData for torches","description":"MaterialData for torches","name":"Torch","qualifiedname":"io.wolfscript.material.Torch","type":"class","scope":"public","extends":["io.wolfscript.material.SimpleAttachableMaterialData"],"constructors":[{"title":"Torch constructor","description":"Torch constructor","scope":"public","name":"Torch","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Torch","name":"clone","args":[]}],"imports":["io.wolfscript.block.BlockFace","io.wolfscript.Material"],"properties":[{"name":"AttachedFace","modifier":"readonly","args":[],"description":"AttachedFace property","doc":{"param":["type the raw type id","type the raw type id","data the raw data value","type the type","data the raw data value"],"deprecated":["Magic value /\n    @Deprecated\n    public Torch(final int type) {\n        super(type);\n    }\n\n    public Torch(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Torch(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Torch(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the face that this block is attached on"],"return":["BlockFace attached to"]},"return":"io.wolfscript.block.BlockFace","scope":"public","title":"AttachedFace property"},{"name":"FacingDirection","modifier":"writeonly","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"}],"description":"FacingDirection property","return":"void","scope":"public","title":"FacingDirection property"}]},"io.wolfscript.material.TrapDoor":{"namespace":"io.wolfscript.material","title":"Represents a trap door","description":"Represents a trap door","name":"TrapDoor","qualifiedname":"io.wolfscript.material.TrapDoor","type":"class","scope":"public","extends":["io.wolfscript.material.SimpleAttachableMaterialData"],"implements":["io.wolfscript.material.Openable"],"constructors":[{"title":"TrapDoor constructor","description":"TrapDoor constructor","scope":"public","name":"TrapDoor","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.TrapDoor","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[{"name":"AttachedFace","modifier":"readonly","args":[],"description":"AttachedFace property","return":"io.wolfscript.block.BlockFace","scope":"public","title":"AttachedFace property"},{"name":"FacingDirection","modifier":"writeonly","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"}],"description":"FacingDirection property","return":"void","scope":"public","title":"FacingDirection property"},{"name":"Inverted","modifier":"writeonly","args":[{"name":"inv","type":"boolean","description":"- true if inverted (top half), false if normal (bottom half)"}],"description":"Inverted property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public TrapDoor(final int type) {\n        super(type);\n    }\n\n    public TrapDoor(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public TrapDoor(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public TrapDoor(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    public boolean isOpen() {\n        return ((getData() & 0x4) == 0x4);\n    }\n\n    public void setOpen(boolean isOpen) {\n        byte data = getData();\n\n        if (isOpen) {\n            data |= 0x4;\n        } else {\n            data &= ~0x4;\n        }\n\n        setData(data);\n    }\n\n    /** Test if trapdoor is inverted"],"return":["true if inverted (top half), false if normal (bottom half) /\n    public boolean isInverted() {\n        return ((getData() & 0x8) != 0);\n    }\n\n    /** Set trapdoor inverted state"]},"return":"void","scope":"public","title":"Inverted property"}]},"io.wolfscript.material.Tree":{"namespace":"io.wolfscript.material","title":"Represents the different types of Trees.","description":"Represents the different types of Trees.","name":"Tree","qualifiedname":"io.wolfscript.material.Tree","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"Tree constructor","description":"Tree constructor","scope":"public","name":"Tree","args":[]},{"title":"Tree constructor","description":"Tree constructor","scope":"public","name":"Tree","args":[{"name":"species","type":"io.wolfscript.TreeSpecies","description":"species argument"}]},{"title":"Tree constructor","description":"Tree constructor","scope":"public","name":"Tree","args":[{"name":"species","type":"io.wolfscript.TreeSpecies","description":"species argument"},{"name":"dir","type":"io.wolfscript.block.BlockFace","description":"dir argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Tree","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.TreeSpecies","io.wolfscript.block.BlockFace"],"properties":[{"name":"Direction","modifier":"writeonly","args":[{"name":"dir","type":"io.wolfscript.block.BlockFace","description":"- direction of end of log (BlockFace.SELF for no direction)"}],"description":"Direction property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Tree(final int type) {\n        super(type);\n    }\n\n    public Tree(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Tree(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Tree(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current species of this tree"],"return":["TreeSpecies of this tree /\n    public TreeSpecies getSpecies() {\n        return TreeSpecies.getByData((byte) (getData() & 0x3));\n    }\n\n    /** Sets the species of this tree","one of: <ul> <li>BlockFace.TOP for upright (default) <li>BlockFace.NORTH (east-west) <li>BlockFace.WEST (north-south) <li>BlockFace.SELF (directionless) </ul> /\n    public BlockFace getDirection() {\n        switch ((getData() >> 2) & 0x3) {\n            case 0: // Up-down\n            default:\n                return BlockFace.UP;\n            case 1: // North-south\n                return BlockFace.WEST;\n            case 2: // East-west\n                return BlockFace.NORTH;\n            case 3: // Directionless (bark on all sides)\n                return BlockFace.SELF;\n        }\n    }\n    /** Set direction of the log"]},"return":"void","scope":"public","title":"Direction property"}]},"io.wolfscript.material.Tripwire":{"namespace":"io.wolfscript.material","title":"Represents the tripwire","description":"Represents the tripwire","name":"Tripwire","qualifiedname":"io.wolfscript.material.Tripwire","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"Tripwire constructor","description":"Tripwire constructor","scope":"public","name":"Tripwire","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Tripwire","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material"],"properties":[{"name":"ObjectTriggering","modifier":"writeonly","args":[{"name":"trig","type":"boolean","description":"- true if object activating tripwire, false if not"}],"description":"ObjectTriggering property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Tripwire(final int type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Tripwire(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /** Test if tripwire is currently activated"],"return":["true if activated, false if not /\n    public boolean isActivated() {\n        return (getData() & 0x4) != 0;\n    }\n    \n    /** Set tripwire activated state","true if object activating tripwire, false if not /\n    public boolean isObjectTriggering() {\n        return (getData() & 0x1) != 0;\n    }\n\n    /** Set object triggering state for this tripwire"]},"return":"void","scope":"public","title":"ObjectTriggering property"}]},"io.wolfscript.material.TripwireHook":{"namespace":"io.wolfscript.material","title":"Represents the tripwire hook","description":"Represents the tripwire hook","name":"TripwireHook","qualifiedname":"io.wolfscript.material.TripwireHook","type":"class","scope":"public","extends":["io.wolfscript.material.SimpleAttachableMaterialData"],"implements":["io.wolfscript.material.Redstone"],"constructors":[{"title":"TripwireHook constructor","description":"TripwireHook constructor","scope":"public","name":"TripwireHook","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.TripwireHook","name":"clone","args":[]},{"title":"isPowered method","description":"isPowered method","scope":"public","return":"boolean","name":"isPowered","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[{"name":"AttachedFace","modifier":"readonly","args":[],"description":"AttachedFace property","return":"io.wolfscript.block.BlockFace","scope":"public","title":"AttachedFace property"},{"name":"Activated","modifier":"writeonly","args":[{"name":"act","type":"boolean","description":"- true if activated, false if not"}],"description":"Activated property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public TripwireHook(final int type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public TripwireHook(final int type, final byte data) {\n        super(type, data);\n    }\n\n    public TripwireHook(BlockFace dir) {\n        this();\n        setFacingDirection(dir);\n    }\n\n    /** Test if tripwire is connected"],"return":["true if connected, false if not /\n    public boolean isConnected() {\n        return (getData() & 0x4) != 0;\n    }\n\n    /** Set tripwire connection state","true if activated, false if not /\n    public boolean isActivated() {\n        return (getData() & 0x8) != 0;\n    }\n\n    /** Set hook activated state"]},"return":"void","scope":"public","title":"Activated property"},{"name":"FacingDirection","modifier":"writeonly","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"face argument"}],"description":"FacingDirection property","return":"void","scope":"public","title":"FacingDirection property"}]},"io.wolfscript.material.Vine":{"namespace":"io.wolfscript.material","title":"Represents a vine","description":"Represents a vine","name":"Vine","qualifiedname":"io.wolfscript.material.Vine","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"Vine constructor","description":"Vine constructor","scope":"public","name":"Vine","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Vine","name":"clone","args":[]},{"title":"removeFromFace method","description":"removeFromFace method","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Vine(int type, byte data){\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Vine(byte data) {\n        super(Material.VINE, data);\n    }\n\n    public Vine(BlockFace... faces) {\n        this(EnumSet.copyOf(Arrays.asList(faces)));\n    }\n\n    public Vine(EnumSet<BlockFace> faces) {\n        this((byte) 0);\n        faces.retainAll(possibleFaces);\n\n        byte data = 0;\n\n        if (faces.contains(BlockFace.WEST)) {\n            data |= VINE_WEST;\n        }\n\n        if (faces.contains(BlockFace.NORTH)) {\n            data |= VINE_NORTH;\n        }\n\n        if (faces.contains(BlockFace.SOUTH)) {\n            data |= VINE_SOUTH;\n        }\n\n        if (faces.contains(BlockFace.EAST)) {\n            data |= VINE_EAST;\n        }\n\n        setData(data);\n    }\n\n    /** Check if the vine is attached to the specified face of an adjacent block. You can check two faces at once by passing e.g. {@link BlockFace#NORTH_EAST}."],"return":["Whether it is attached to that face. /\n    public boolean isOnFace(BlockFace face) {\n        switch (face) {\n            case WEST:\n                return (getData() & VINE_WEST) == VINE_WEST;\n            case NORTH:\n                return (getData() & VINE_NORTH) == VINE_NORTH;\n            case SOUTH:\n                return (getData() & VINE_SOUTH) == VINE_SOUTH;\n            case EAST:\n                return (getData() & VINE_EAST) == VINE_EAST;\n            case NORTH_EAST:\n                return isOnFace(BlockFace.EAST) && isOnFace(BlockFace.NORTH);\n            case NORTH_WEST:\n                return isOnFace(BlockFace.WEST) && isOnFace(BlockFace.NORTH);\n            case SOUTH_EAST:\n                return isOnFace(BlockFace.EAST) && isOnFace(BlockFace.SOUTH);\n            case SOUTH_WEST:\n                return isOnFace(BlockFace.WEST) && isOnFace(BlockFace.SOUTH);\n            case UP: // It's impossible to be accurate with this since it's contextual\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /** Attach the vine to the specified face of an adjacent block."]},"scope":"public","return":"void","name":"removeFromFace","args":[{"name":"face","type":"io.wolfscript.block.BlockFace","description":"The face to check."}]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["java.util.Arrays","java.util.EnumSet","io.wolfscript.Material","io.wolfscript.block.BlockFace"],"properties":[]},"io.wolfscript.material.WoodenStep":{"namespace":"io.wolfscript.material","title":"Represents the different types of wooden steps.","description":"Represents the different types of wooden steps.","name":"WoodenStep","qualifiedname":"io.wolfscript.material.WoodenStep","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"constructors":[{"title":"WoodenStep constructor","description":"WoodenStep constructor","scope":"public","name":"WoodenStep","args":[]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.WoodenStep","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.Material","io.wolfscript.TreeSpecies"],"properties":[{"name":"Inverted","modifier":"writeonly","args":[{"name":"inv","type":"boolean","description":"- true if step is inverted (top half), false if step is normal (bottom half)"}],"description":"Inverted property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public WoodenStep(final int type) {\n        super(type);\n    }\n\n    public WoodenStep(TreeSpecies species) {\n        this();\n        setSpecies(species);\n    }\n\n    public WoodenStep(TreeSpecies species, boolean inv) {\n        this();\n        setSpecies(species);\n        setInverted(inv);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public WoodenStep(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public WoodenStep(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current species of this tree"],"return":["TreeSpecies of this tree /\n    public TreeSpecies getSpecies() {\n        return TreeSpecies.getByData((byte) (getData() & 0x3));\n    }\n\n    /** Sets the species of this tree","true if inverted (top half), false if normal (bottom half) /\n    public boolean isInverted() {\n        return ((getData() & 0x8) != 0);\n    }\n    \n    /** Set step inverted state"]},"return":"void","scope":"public","title":"Inverted property"}]},"io.wolfscript.material.Wool":{"namespace":"io.wolfscript.material","title":"Represents a Wool/Cloth block","description":"Represents a Wool/Cloth block","name":"Wool","qualifiedname":"io.wolfscript.material.Wool","type":"class","scope":"public","extends":["io.wolfscript.material.MaterialData"],"implements":["io.wolfscript.material.Colorable"],"constructors":[{"title":"Wool constructor","description":"Wool constructor","scope":"public","name":"Wool","args":[]},{"title":"Wool constructor","description":"Wool constructor","scope":"public","name":"Wool","args":[{"name":"color","type":"io.wolfscript.DyeColor","description":"color argument"}]}],"methods":[{"title":"clone method","description":"clone method","scope":"public","return":"io.wolfscript.material.Wool","name":"clone","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["io.wolfscript.DyeColor","io.wolfscript.Material"],"properties":[{"name":"Color","modifier":"writeonly","args":[{"name":"color","type":"io.wolfscript.DyeColor","description":"New color of this dye"}],"description":"Color property","doc":{"deprecated":["Magic value /\n    @Deprecated\n    public Wool(final int type) {\n        super(type);\n    }\n\n    public Wool(final Material type) {\n        super(type);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Wool(final int type, final byte data) {\n        super(type, data);\n    }\n\n    /**","Magic value /\n    @Deprecated\n    public Wool(final Material type, final byte data) {\n        super(type, data);\n    }\n\n    /** Gets the current color of this dye"],"return":["DyeColor of this dye /\n    public DyeColor getColor() {\n        return DyeColor.getByWoolData(getData());\n    }\n\n    /** Sets the color of this dye"]},"return":"void","scope":"public","title":"Color property"}]},"io.wolfscript.metadata.0":{"namespace":"io.wolfscript","title":"Classes dedicated to providing a layer of plugin specified data on various","description":"Classes dedicated to providing a layer of plugin specified data on various Minecraft concepts.","name":"metadata","qualifiedname":"io.wolfscript.metadata.0","packagename":"io.wolfscript.metadata","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.metadata.FixedMetadataValue","io.wolfscript.metadata.MetadataConversionException","io.wolfscript.metadata.MetadataEvaluationException","io.wolfscript.metadata.MetadataStoreBase","io.wolfscript.metadata.MetadataValueAdapter"],"interfaces":["io.wolfscript.metadata.MetadataStore","io.wolfscript.metadata.MetadataValue","io.wolfscript.metadata.Metadatable"],"enums":["io.wolfscript.metadata.CacheStrategy"],"namespaces":[],"properties":[]},"io.wolfscript.metadata.CacheStrategy":{"namespace":"io.wolfscript.metadata","title":"The LazyMetadataValue class implements a type of metadata that is not","description":"The LazyMetadataValue class implements a type of metadata that is not computed until another plugin asks for it. <p> By making metadata values lazy, no computation is done by the providing plugin until absolutely necessary (if ever). Additionally, LazyMetadataValue objects cache their values internally unless overridden by a {@link io.wolfscript.metadata.CacheStrategy} or invalidated at the individual or plugin level. Once invalidated, the LazyMetadataValue will recompute its value when asked. /\npublic class LazyMetadataValue extends MetadataValueAdapter implements MetadataValue {\n    private Callable<Object> lazyValue;\n    private CacheStrategy cacheStrategy;\n    private SoftReference<Object> internalValue;\n    private static final Object ACTUALLY_NULL = new Object();\n\n    /** Initialized a LazyMetadataValue object with the default CACHE_AFTER_FIRST_EVAL cache strategy.","doc":{"param":["owningPlugin the {@link Plugin} that created this metadata value.","lazyValue the lazy value assigned to this metadata value. /\n    public LazyMetadataValue(Plugin owningPlugin, Callable<Object> lazyValue) {\n        this(owningPlugin, CacheStrategy.CACHE_AFTER_FIRST_EVAL, lazyValue);\n    }\n\n    /** Initializes a LazyMetadataValue object with a specific cache strategy.","owningPlugin the {@link Plugin} that created this metadata value.","cacheStrategy determines the rules for caching this metadata value.","lazyValue the lazy value assigned to this metadata value. /\n    public LazyMetadataValue(Plugin owningPlugin, CacheStrategy cacheStrategy, Callable<Object> lazyValue) {\n        super(owningPlugin);\n        Validate.notNull(cacheStrategy, \"cacheStrategy cannot be null\");\n        Validate.notNull(lazyValue, \"lazyValue cannot be null\");\n        this.internalValue = new SoftReference<Object>(null);\n        this.lazyValue = lazyValue;\n        this.cacheStrategy = cacheStrategy;\n    }\n\n    /** Protected special constructor used by FixedMetadataValue to bypass standard setup.","owningPlugin the owning plugin /\n    protected LazyMetadataValue(Plugin owningPlugin) {\n        super(owningPlugin);\n    }\n\n    public Object value() {\n        eval();\n        Object value = internalValue.get();\n        if (value == ACTUALLY_NULL) {\n            return null;\n        }\n        return value;\n    }\n\n    /** Lazily evaluates the value of this metadata item."],"throws":["MetadataEvaluationException if computing the metadata value fails. /\n    private synchronized void eval() throws MetadataEvaluationException {\n        if (cacheStrategy == CacheStrategy.NEVER_CACHE || internalValue.get() == null) {\n            try {\n                Object value = lazyValue.call();\n                if (value == null) {\n                    value = ACTUALLY_NULL;\n                }\n                internalValue = new SoftReference<Object>(value);\n            } catch (Exception e) {\n                throw new MetadataEvaluationException(e);\n            }\n        }\n    }\n\n    public synchronized void invalidate() {\n        if (cacheStrategy != CacheStrategy.CACHE_ETERNALLY) {\n            internalValue.clear();\n        }\n    }\n\n    /** Describes possible caching strategies for metadata."]},"name":"CacheStrategy","qualifiedname":"io.wolfscript.metadata.CacheStrategy","type":"enum","scope":"public","constructors":[],"methods":[],"imports":["java.lang.ref.SoftReference","java.util.concurrent.Callable","org.apache.commons.lang.Validate","io.wolfscript.plugin.Plugin"],"enum":[{"code":"NEVER_CACHE","value":"","title":"Once the metadata value has been evaluated, do not re-evaluate the","description":"Once the metadata value has been evaluated, do not re-evaluate the value until it is manually invalidated. /\n        CACHE_AFTER_FIRST_EVAL,\n\n        /** Re-evaluate the metadata item every time it is requested","doc":{}},{"code":"evaluated","value":"","title":"evaluated CacheStrategy","description":"evaluated CacheStrategy","doc":{}}],"properties":[]},"io.wolfscript.metadata.FixedMetadataValue":{"namespace":"io.wolfscript.metadata","title":"A FixedMetadataValue is a special case metadata item that contains the same","description":"A FixedMetadataValue is a special case metadata item that contains the same value forever after initialization. Invalidating a FixedMetadataValue has no effect. <p> This class extends LazyMetadataValue for historical reasons, even though it overrides all the implementation methods. it is possible that in the future that the inheritance hierarchy may change.","name":"FixedMetadataValue","qualifiedname":"io.wolfscript.metadata.FixedMetadataValue","type":"class","scope":"public","extends":["LazyMetadataValue"],"constructors":[{"title":"Store the internal value that is represented by this fixed value.","description":"Store the internal value that is represented by this fixed value. /\n    private final Object internalValue;\n\n    /** Initializes a FixedMetadataValue with an Object","scope":"public","name":"FixedMetadataValue","args":[{"name":"owningPlugin","type":"io.wolfscript.plugin.Plugin","description":"the {@link io.wolfscript.plugin.Plugin} that created this metadata value"},{"name":"Object","type":"final","description":"Object argument"}]}],"methods":[{"title":"invalidate method","description":"invalidate method","scope":"public","return":"void","name":"invalidate","args":[]},{"title":"value method","description":"value method","scope":"public","return":"Object","name":"value","args":[]}],"imports":["io.wolfscript.plugin.Plugin","java.util.concurrent.Callable"],"properties":[]},"io.wolfscript.metadata.MetadataConversionException":{"namespace":"io.wolfscript.metadata","title":"A MetadataConversionException is thrown any time a {@link","description":"A MetadataConversionException is thrown any time a {@link LazyMetadataValue} attempts to convert a metadata value to an inappropriate data type.","name":"MetadataConversionException","qualifiedname":"io.wolfscript.metadata.MetadataConversionException","type":"class","scope":"public","extends":["RuntimeException"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.metadata.MetadataEvaluationException":{"namespace":"io.wolfscript.metadata","title":"A MetadataEvaluationException is thrown any time a {@link","description":"A MetadataEvaluationException is thrown any time a {@link LazyMetadataValue} fails to evaluate its value due to an exception. The originating exception will be included as this exception's cause.","name":"MetadataEvaluationException","qualifiedname":"io.wolfscript.metadata.MetadataEvaluationException","type":"class","scope":"public","extends":["RuntimeException"],"constructors":[],"methods":[],"imports":[],"properties":[]},"io.wolfscript.metadata.MetadataStore":{"namespace":"io.wolfscript.metadata","title":"interface MetadataStore","description":"interface MetadataStore","name":"MetadataStore","qualifiedname":"io.wolfscript.metadata.MetadataStore","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Adds a metadata value to an object.","description":"Adds a metadata value to an object.","doc":{"throws":["IllegalArgumentException If value is null, or the owning plugin is null /\n    public void setMetadata(T subject, String metadataKey, MetadataValue newMetadataValue);\n\n    /** Returns all metadata values attached to an object. If multiple plugins have attached metadata, each will value will be included.","IllegalArgumentException If plugin is null /\n    public void removeMetadata(T subject, String metadataKey, Plugin owningPlugin);\n\n    /** Invalidates all metadata in the metadata store that originates from the given plugin. Doing this will force each invalidated metadata item to be recalculated the next time it is accessed.","IllegalArgumentException If plugin is null"],"return":["A list of values, one for each plugin that has set the requested value. /\n    public List<MetadataValue> getMetadata(T subject, String metadataKey);\n\n    /** Tests to see if a metadata attribute has been set on an object.","the existence of the metadataKey within subject. /\n    public boolean hasMetadata(T subject, String metadataKey);\n\n    /** Removes a metadata item owned by a plugin from a subject."]},"scope":"public","return":"void","name":"invalidateAll","args":[{"name":"owningPlugin","type":"io.wolfscript.plugin.Plugin","description":"the plugin attempting to remove a metadata item."}]}],"imports":["io.wolfscript.plugin.Plugin","java.util.List"],"properties":[]},"io.wolfscript.metadata.MetadataStoreBase":{"namespace":"io.wolfscript.metadata","title":"class MetadataStoreBase","description":"class MetadataStoreBase","name":"MetadataStoreBase","qualifiedname":"io.wolfscript.metadata.MetadataStoreBase","type":"class","scope":"public","describe":"abstract","constructors":[],"methods":[],"imports":["org.apache.commons.lang.Validate","io.wolfscript.plugin.Plugin","java.util.*"],"properties":[]},"io.wolfscript.metadata.MetadataValue":{"namespace":"io.wolfscript.metadata","title":"interface MetadataValue","description":"interface MetadataValue","name":"MetadataValue","qualifiedname":"io.wolfscript.metadata.MetadataValue","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Fetches the value of this metadata item.","description":"Fetches the value of this metadata item.","doc":{"return":["the metadata value. /\n    public Object value();\n\n    /** Attempts to convert the value of this metadata item into an int.","the value as an int. /\n    public int asInt();\n\n    /** Attempts to convert the value of this metadata item into a float.","the value as a float. /\n    public float asFloat();\n\n    /** Attempts to convert the value of this metadata item into a double.","the value as a double. /\n    public double asDouble();\n\n    /** Attempts to convert the value of this metadata item into a long.","the value as a long. /\n    public long asLong();\n\n    /** Attempts to convert the value of this metadata item into a short.","the value as a short. /\n    public short asShort();\n\n    /** Attempts to convert the value of this metadata item into a byte.","the value as a byte. /\n    public byte asByte();\n\n    /** Attempts to convert the value of this metadata item into a boolean.","the value as a boolean. /\n    public boolean asBoolean();\n\n    /** Attempts to convert the value of this metadata item into a string.","the value as a string. /\n    public String asString();\n\n    /** Returns the {@link io.wolfscript.plugin.Plugin} that created this metadata item.","the plugin that owns this metadata value. This should never be null. /\n    public Plugin getOwningPlugin();\n\n    /** Invalidates this metadata item, forcing it to recompute when next accessed."]},"scope":"public","return":"void","name":"invalidate","args":[]}],"imports":["io.wolfscript.plugin.Plugin"],"properties":[]},"io.wolfscript.metadata.MetadataValueAdapter":{"namespace":"io.wolfscript.metadata","title":"Optional base class for facilitating MetadataValue implementations.","description":"Optional base class for facilitating MetadataValue implementations. <p> This provides all the conversion functions for MetadataValue so that writing an implementation of MetadataValue is as simple as implementing value() and invalidate().","name":"MetadataValueAdapter","qualifiedname":"io.wolfscript.metadata.MetadataValueAdapter","type":"class","scope":"public","describe":"abstract","implements":["io.wolfscript.metadata.MetadataValue"],"constructors":[],"methods":[{"title":"asBoolean method","description":"asBoolean method","scope":"public","return":"boolean","name":"asBoolean","args":[]},{"title":"asByte method","description":"asByte method","scope":"public","return":"byte","name":"asByte","args":[]},{"title":"asDouble method","description":"asDouble method","scope":"public","return":"double","name":"asDouble","args":[]},{"title":"asFloat method","description":"asFloat method","scope":"public","return":"float","name":"asFloat","args":[]},{"title":"asInt method","description":"asInt method","scope":"public","return":"int","name":"asInt","args":[]},{"title":"asLong method","description":"asLong method","scope":"public","return":"long","name":"asLong","args":[]},{"title":"asShort method","description":"asShort method","scope":"public","return":"short","name":"asShort","args":[]},{"title":"asString method","description":"asString method","scope":"public","return":"String","name":"asString","args":[]}],"imports":["java.lang.ref.WeakReference","org.apache.commons.lang.Validate","io.wolfscript.plugin.Plugin","io.wolfscript.util.NumberConversions"],"properties":[{"name":"OwningPlugin","modifier":"readonly","args":[],"description":"OwningPlugin property","return":"io.wolfscript.plugin.Plugin","scope":"public","title":"OwningPlugin property"}]},"io.wolfscript.metadata.Metadatable":{"namespace":"io.wolfscript.metadata","title":"This interface is implemented by all objects that can provide metadata","description":"This interface is implemented by all objects that can provide metadata about themselves.","name":"Metadatable","qualifiedname":"io.wolfscript.metadata.Metadatable","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Sets a metadata value in the implementing object's metadata store.","description":"Sets a metadata value in the implementing object's metadata store.","doc":{"throws":["IllegalArgumentException If value is null, or the owning plugin is null /\n    public void setMetadata(String metadataKey, MetadataValue newMetadataValue);\n\n    /** Returns a list of previously set metadata values from the implementing object's metadata store.","IllegalArgumentException If plugin is null"],"return":["A list of values, one for each plugin that has set the requested value. /\n    public List<MetadataValue> getMetadata(String metadataKey);\n\n    /** Tests to see whether the implementing object contains the given metadata value in its metadata store.","the existence of the metadataKey within subject. /\n    public boolean hasMetadata(String metadataKey);\n\n    /** Removes the given metadata value from the implementing object's metadata store."]},"scope":"public","return":"void","name":"removeMetadata","args":[{"name":"metadataKey","type":"String","description":"A unique key to identify this metadata."},{"name":"owningPlugin","type":"io.wolfscript.plugin.Plugin","description":"This plugin's metadata value will be removed. All other values will be left untouched."}]}],"imports":["io.wolfscript.plugin.Plugin","java.util.List"],"properties":[]},"io.wolfscript.permissions.0":{"namespace":"io.wolfscript","title":"Classes dedicated to providing binary state properties to players.","description":"Classes dedicated to providing binary state properties to players.","name":"permissions","qualifiedname":"io.wolfscript.permissions.0","packagename":"io.wolfscript.permissions","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.permissions.PermissibleBase","io.wolfscript.permissions.Permission","io.wolfscript.permissions.PermissionAttachment","io.wolfscript.permissions.PermissionAttachmentInfo"],"interfaces":["io.wolfscript.permissions.Permissible","io.wolfscript.permissions.PermissionRemovedExecutor","io.wolfscript.permissions.ServerOperator"],"enums":["io.wolfscript.permissions.PermissionDefault"],"namespaces":[],"properties":[]},"io.wolfscript.permissions.Permissible":{"namespace":"io.wolfscript.permissions","title":"Represents an object that may be assigned permissions","description":"Represents an object that may be assigned permissions","name":"Permissible","qualifiedname":"io.wolfscript.permissions.Permissible","type":"interface","scope":"public","extends":["io.wolfscript.permissions.ServerOperator"],"constructors":[],"methods":[],"imports":["java.util.Set","io.wolfscript.plugin.Plugin"],"properties":[{"name":"EffectivePermissions","modifier":"readonly","args":[],"description":"Get: Checks if this object contains an override for the specified permission, by fully qualified name","doc":{"param":["name Name of the permission","perm Permission to check","name Name of the permission","perm Permission to get","plugin Plugin responsible for this attachment, may not be null or disabled","name Name of the permission to attach","value Value of the permission","plugin Plugin responsible for this attachment, may not be null or disabled","plugin Plugin responsible for this attachment, may not be null or disabled","name Name of the permission to attach","value Value of the permission","ticks Amount of ticks to automatically remove this attachment after","plugin Plugin responsible for this attachment, may not be null or disabled","ticks Amount of ticks to automatically remove this attachment after","attachment Attachment to remove"],"return":["true if the permission is set, otherwise false /\n    public boolean isPermissionSet(String name);\n\n    /** Checks if this object contains an override for the specified {@link io.wolfscript.permissions.Permission}","true if the permission is set, otherwise false /\n    public boolean isPermissionSet(Permission perm);\n\n    /** Gets the value of the specified permission, if set. <p> If a permission override is not set on this object, the default value of the permission will be returned.","Value of the permission /\n    public boolean hasPermission(String name);\n\n    /** Gets the value of the specified permission, if set. <p> If a permission override is not set on this object, the default value of the permission will be returned","Value of the permission /\n    public boolean hasPermission(Permission perm);\n\n    /** Adds a new {@link io.wolfscript.permissions.PermissionAttachment} with a single permission by name and value","The PermissionAttachment that was just created /\n    public PermissionAttachment addAttachment(Plugin plugin, String name, boolean value);\n\n    /** Adds a new empty {@link io.wolfscript.permissions.PermissionAttachment} to this object","The PermissionAttachment that was just created /\n    public PermissionAttachment addAttachment(Plugin plugin);\n\n    /** Temporarily adds a new {@link io.wolfscript.permissions.PermissionAttachment} with a single permission by name and value","The PermissionAttachment that was just created /\n    public PermissionAttachment addAttachment(Plugin plugin, String name, boolean value, int ticks);\n\n    /** Temporarily adds a new empty {@link io.wolfscript.permissions.PermissionAttachment} to this object","The PermissionAttachment that was just created /\n    public PermissionAttachment addAttachment(Plugin plugin, int ticks);\n\n    /** Removes the given {@link io.wolfscript.permissions.PermissionAttachment} from this object","Set of currently effective permissions"],"throws":["IllegalArgumentException Thrown when the specified attachment isn't part of this object /\n    public void removeAttachment(PermissionAttachment attachment);\n\n    /** Recalculates the permissions for this object, if the attachments have changed values. <p> This should very rarely need to be called from a plugin. /\n    public void recalculatePermissions();\n\n    /** Gets a set containing all of the permissions currently in effect by this object"]},"return":"Set<PermissionAttachmentInfo>","scope":"public","title":"Get: Checks if this object contains an override for the specified"}]},"io.wolfscript.permissions.PermissibleBase":{"namespace":"io.wolfscript.permissions","title":"Base Permissible for use in any Permissible object via proxy or extension","description":"Base Permissible for use in any Permissible object via proxy or extension","name":"PermissibleBase","qualifiedname":"io.wolfscript.permissions.PermissibleBase","type":"class","scope":"public","implements":["io.wolfscript.permissions.Permissible"],"constructors":[{"title":"PermissibleBase constructor","description":"PermissibleBase constructor","scope":"public","name":"PermissibleBase","args":[{"name":"opable","type":"io.wolfscript.permissions.ServerOperator","description":"opable argument"}]},{"title":"RemoveAttachmentRunnable constructor","description":"RemoveAttachmentRunnable constructor","scope":"public","name":"RemoveAttachmentRunnable","args":[{"name":"attachment","type":"io.wolfscript.permissions.PermissionAttachment","description":"attachment argument"}]}],"methods":[{"title":"addAttachment method","description":"addAttachment method","scope":"public","return":"io.wolfscript.permissions.PermissionAttachment","name":"addAttachment","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"}]},{"title":"isOp method","description":"isOp method","scope":"public","return":"boolean","name":"isOp","args":[]},{"title":"addAttachment method","description":"addAttachment method","scope":"public","return":"io.wolfscript.permissions.PermissionAttachment","name":"addAttachment","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"ticks","type":"int","description":"ticks argument"}]},{"title":"hasPermission method","description":"hasPermission method","scope":"public","return":"boolean","name":"hasPermission","args":[{"name":"inName","type":"String","description":"inName argument"}]},{"title":"hasPermission method","description":"hasPermission method","scope":"public","return":"boolean","name":"hasPermission","args":[{"name":"perm","type":"io.wolfscript.permissions.Permission","description":"perm argument"}]},{"title":"addAttachment method","description":"addAttachment method","scope":"public","return":"io.wolfscript.permissions.PermissionAttachment","name":"addAttachment","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"name","type":"String","description":"name argument"},{"name":"value","type":"boolean","description":"value argument"}]},{"title":"addAttachment method","description":"addAttachment method","scope":"public","return":"io.wolfscript.permissions.PermissionAttachment","name":"addAttachment","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"name","type":"String","description":"name argument"},{"name":"value","type":"boolean","description":"value argument"},{"name":"ticks","type":"int","description":"ticks argument"}]},{"title":"isPermissionSet method","description":"isPermissionSet method","scope":"public","return":"boolean","name":"isPermissionSet","args":[{"name":"perm","type":"io.wolfscript.permissions.Permission","description":"perm argument"}]},{"title":"isPermissionSet method","description":"isPermissionSet method","scope":"public","return":"boolean","name":"isPermissionSet","args":[{"name":"name","type":"String","description":"name argument"}]},{"title":"recalculatePermissions method","description":"recalculatePermissions method","scope":"public","return":"void","name":"recalculatePermissions","args":[]},{"title":"removeAttachment method","description":"removeAttachment method","scope":"public","return":"void","name":"removeAttachment","args":[{"name":"attachment","type":"io.wolfscript.permissions.PermissionAttachment","description":"attachment argument"}]},{"title":"run method","description":"run method","scope":"public","return":"void","name":"run","args":[]}],"imports":["java.util.HashMap","java.util.HashSet","java.util.LinkedList","java.util.List","java.util.Map","java.util.Set","java.util.logging.Level","io.wolfscript.WolfScript","io.wolfscript.plugin.Plugin"],"properties":[{"name":"EffectivePermissions","modifier":"readonly","args":[],"description":"EffectivePermissions property","return":"Set<PermissionAttachmentInfo>","scope":"public","title":"EffectivePermissions property"},{"name":"Op","modifier":"writeonly","args":[{"name":"value","type":"boolean","description":"value argument"}],"description":"Op property","return":"void","scope":"public","title":"Op property"}]},"io.wolfscript.permissions.Permission":{"namespace":"io.wolfscript.permissions","title":"Represents a unique permission that may be attached to a {@link","description":"Represents a unique permission that may be attached to a {@link io.wolfscript.permissions.Permissible}","name":"Permission","qualifiedname":"io.wolfscript.permissions.Permission","type":"class","scope":"public","constructors":[{"title":"Permission constructor","description":"Permission constructor","scope":"public","name":"Permission","args":[{"name":"name","type":"String","description":"name argument"}]},{"title":"Permission constructor","description":"Permission constructor","scope":"public","name":"Permission","args":[{"name":"name","type":"String","description":"name argument"},{"name":"description","type":"String","description":"description argument"}]},{"title":"Permission constructor","description":"Permission constructor","scope":"public","name":"Permission","args":[{"name":"name","type":"String","description":"name argument"},{"name":"defaultValue","type":"io.wolfscript.permissions.PermissionDefault","description":"defaultValue argument"}]},{"title":"Permission constructor","description":"Permission constructor","scope":"public","name":"Permission","args":[{"name":"name","type":"String","description":"name argument"},{"name":"description","type":"String","description":"description argument"},{"name":"defaultValue","type":"io.wolfscript.permissions.PermissionDefault","description":"defaultValue argument"}]},{"title":"Permission constructor","description":"Permission constructor","scope":"public","name":"Permission","args":[{"name":"name","type":"String","description":"name argument"}]},{"title":"Permission constructor","description":"Permission constructor","scope":"public","name":"Permission","args":[{"name":"name","type":"String","description":"name argument"},{"name":"description","type":"String","description":"description argument"}]},{"title":"Permission constructor","description":"Permission constructor","scope":"public","name":"Permission","args":[{"name":"name","type":"String","description":"name argument"},{"name":"defaultValue","type":"io.wolfscript.permissions.PermissionDefault","description":"defaultValue argument"}]},{"title":"Permission constructor","description":"Permission constructor","scope":"public","name":"Permission","args":[{"name":"name","type":"String","description":"name argument"},{"name":"description","type":"String","description":"description argument"},{"name":"defaultValue","type":"io.wolfscript.permissions.PermissionDefault","description":"defaultValue argument"}]}],"fields":[{"title":"DEFAULT field","description":"DEFAULT field","name":"DEFAULT","scope":"public","type":"io.wolfscript.permissions.PermissionDefault","describe":"static final"}],"methods":[{"title":"Returns the unique fully qualified name of this Permission","description":"Returns the unique fully qualified name of this Permission","doc":{"return":["Fully qualified name /\n    public String getName() {\n        return name;\n    }\n\n    /** Gets the children of this permission. <p> If you change this map in any form, you must call {@link #recalculatePermissibles()} to recalculate all {@link io.wolfscript.permissions.Permissible}s","Permission children /\n    public Map<String, Boolean> getChildren() {\n        return children;\n    }\n\n    /** Gets the default value of this permission.","Default value of this permission. /\n    public PermissionDefault getDefault() {\n        return defaultValue;\n    }\n\n    /** Sets the default value of this permission. <p> This will not be saved to disk, and is a temporary operation until the server reloads permissions. Changing this default will cause all {@link io.wolfscript.permissions.Permissible}s that contain this permission to recalculate their permissions","Brief description of this permission /\n    public String getDescription() {\n        return description;\n    }\n\n    /** Sets the description of this permission. <p> This will not be saved to disk, and is a temporary operation until the server reloads permissions.","Set containing permissibles with this permission /\n    public Set<Permissible> getPermissibles() {\n        return WolfScript.getServer().getPluginManager().getPermissionSubscriptions(name);\n    }\n\n    /** Recalculates all {@link io.wolfscript.permissions.Permissible}s that contain this permission. <p> This should be called after modifying the children, and is automatically called after modifying the default value /\n    public void recalculatePermissibles() {\n        Set<Permissible> perms = getPermissibles();\n\n        WolfScript.getServer().getPluginManager().recalculatePermissionDefaults(this);\n\n        for (Permissible p : perms) {\n            p.recalculatePermissions();\n        }\n    }\n\n    /** Adds this permission to the specified parent permission. <p> If the parent permission does not exist, it will be created and registered.","Parent permission it created or loaded /\n    public Permission addParent(String name, boolean value) {\n        PluginManager pm = WolfScript.getServer().getPluginManager();\n        String lname = name.toLowerCase();\n\n        Permission perm = pm.getPermission(lname);\n\n        if (perm == null) {\n            perm = new Permission(lname);\n            pm.addPermission(perm);\n        }\n\n        addParent(perm, value);\n\n        return perm;\n    }\n\n    /** Adds this permission to the specified parent permission.","Permission object /\n    public static List<Permission> loadPermissions(Map<?, ?> data, String error, PermissionDefault def) {\n        List<Permission> result = new ArrayList<Permission>();\n\n        for (Map.Entry<?, ?> entry : data.entrySet()) {\n            try {\n                result.add(Permission.loadPermission(entry.getKey().toString(), (Map<?, ?>) entry.getValue(), def, result));\n            } catch (Throwable ex) {\n                WolfScript.getServer().getLogger().log(Level.SEVERE, String.format(error, entry.getKey()), ex);\n            }\n        }\n\n        return result;\n    }\n\n    /** Loads a Permission from a map of data, usually used from retrieval from a yaml file. <p> The data may contain the following keys: <ul> <li>default: Boolean true or false. If not specified, false. <li>children: {@code Map<String, Boolean>} of child permissions. If not specified, empty list. <li>description: Short string containing a very small description of this description. If not specified, empty string. </ul>","Permission object /\n    public static Permission loadPermission(String name, Map<String, Object> data) {\n        return loadPermission(name, data, DEFAULT_PERMISSION, null);\n    }\n\n    /** Loads a Permission from a map of data, usually used from retrieval from a yaml file. <p> The data may contain the following keys: <ul> <li>default: Boolean true or false. If not specified, false. <li>children: {@code Map<String, Boolean>} of child permissions. If not specified, empty list. <li>description: Short string containing a very small description of this description. If not specified, empty string. </ul>","Permission object"]},"scope":"public","describe":"static","return":"io.wolfscript.permissions.Permission","name":"loadPermission","args":[{"name":"name","type":"String","description":"Name of the parent permission"},{"name":"def","type":"io.wolfscript.permissions.PermissionDefault","description":"Default permission value to use if missing"}]}],"imports":["java.util.ArrayList","java.util.LinkedHashMap","java.util.List","java.util.Map","java.util.Set","java.util.logging.Level","org.apache.commons.lang.Validate","io.wolfscript.WolfScript","io.wolfscript.plugin.PluginManager"],"properties":[]},"io.wolfscript.permissions.PermissionAttachment":{"namespace":"io.wolfscript.permissions","title":"Holds information about a permission attachment on a {@link io.wolfscript.permissions.Permissible}","description":"Holds information about a permission attachment on a {@link io.wolfscript.permissions.Permissible} object","name":"PermissionAttachment","qualifiedname":"io.wolfscript.permissions.PermissionAttachment","type":"class","scope":"public","constructors":[{"title":"PermissionAttachment constructor","description":"PermissionAttachment constructor","scope":"public","name":"PermissionAttachment","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"Permissible","type":"io.wolfscript.permissions.Permissible","description":"Permissible argument"}]}],"methods":[{"title":"Gets the plugin responsible for this attachment","description":"Gets the plugin responsible for this attachment","doc":{"return":["Plugin responsible for this permission attachment /\n    public Plugin getPlugin() {\n        return plugin;\n    }\n\n    /** Sets an object to be called for when this attachment is removed from a {@link io.wolfscript.permissions.Permissible}. May be null.","Object to be called when this is removed /\n    public PermissionRemovedExecutor getRemovalCallback() {\n        return removed;\n    }\n\n    /** Gets the Permissible that this is attached to","Permissible containing this attachment /\n    public Permissible getPermissible() {\n        return permissible;\n    }\n\n    /** Gets a copy of all set permissions and values contained within this attachment. <p> This map may be modified but will not affect the attachment, as it is a copy.","Copy of all permissions and values expressed by this attachment /\n    public Map<String, Boolean> getPermissions() {\n        return new LinkedHashMap<String, Boolean>(permissions);\n    }\n\n    /** Sets a permission to the given value, by its fully qualified name","true if the permissible was removed successfully, false if it did not exist"],"param":["ex Object to be called when this is removed /\n    public void setRemovalCallback(PermissionRemovedExecutor ex) {\n        removed = ex;\n    }\n\n    /** Gets the class that was previously set to be called when this attachment was removed from a {@link Permissible}. May be null.","name Name of the permission","value New value of the permission /\n    public void setPermission(String name, boolean value) {\n        permissions.put(name.toLowerCase(), value);\n        permissible.recalculatePermissions();\n    }\n\n    /** Sets a permission to the given value","perm Permission to set","value New value of the permission /\n    public void setPermission(Permission perm, boolean value) {\n        setPermission(perm.getName(), value);\n    }\n\n    /** Removes the specified permission from this attachment. <p> If the permission does not exist in this attachment, nothing will happen.","name Name of the permission to remove /\n    public void unsetPermission(String name) {\n        permissions.remove(name.toLowerCase());\n        permissible.recalculatePermissions();\n    }\n\n    /** Removes the specified permission from this attachment. <p> If the permission does not exist in this attachment, nothing will happen.","perm Permission to remove /\n    public void unsetPermission(Permission perm) {\n        unsetPermission(perm.getName());\n    }\n\n    /** Removes this attachment from its registered {@link Permissible}"]},"scope":"public","return":"boolean","name":"remove","args":[]}],"imports":["java.util.LinkedHashMap","java.util.Map","io.wolfscript.plugin.Plugin"],"properties":[]},"io.wolfscript.permissions.PermissionAttachmentInfo":{"namespace":"io.wolfscript.permissions","title":"Holds information on a permission and which {@link io.wolfscript.permissions.PermissionAttachment}","description":"Holds information on a permission and which {@link io.wolfscript.permissions.PermissionAttachment} provides it","name":"PermissionAttachmentInfo","qualifiedname":"io.wolfscript.permissions.PermissionAttachmentInfo","type":"class","scope":"public","constructors":[{"title":"PermissionAttachmentInfo constructor","description":"PermissionAttachmentInfo constructor","scope":"public","name":"PermissionAttachmentInfo","args":[{"name":"permissible","type":"io.wolfscript.permissions.Permissible","description":"permissible argument"},{"name":"permission","type":"String","description":"permission argument"},{"name":"attachment","type":"io.wolfscript.permissions.PermissionAttachment","description":"attachment argument"},{"name":"value","type":"boolean","description":"value argument"}]}],"methods":[],"imports":[],"properties":[{"name":"Value","modifier":"readonly","args":[],"description":"Get: Gets the permissible this is attached to","doc":{"return":["Permissible this permission is for /\n    public Permissible getPermissible() {\n        return permissible;\n    }\n\n    /** Gets the permission being set","Name of the permission /\n    public String getPermission() {\n        return permission;\n    }\n\n    /** Gets the attachment providing this permission. This may be null for default permissions (usually parent permissions).","Attachment /\n    public PermissionAttachment getAttachment() {\n        return attachment;\n    }\n\n    /** Gets the value of this permission","Value of the permission"]},"return":"boolean","scope":"public","title":"Get: Gets the permissible this is attached to"}]},"io.wolfscript.permissions.PermissionDefault":{"namespace":"io.wolfscript.permissions","title":"Represents the possible default values for permissions","description":"Represents the possible default values for permissions","name":"PermissionDefault","qualifiedname":"io.wolfscript.permissions.PermissionDefault","type":"enum","scope":"public","constructors":[],"methods":[{"title":"Calculates the value of this PermissionDefault for the given operator","description":"Calculates the value of this PermissionDefault for the given operator value","doc":{"return":["True if the default should be true, or false /\n    public boolean getValue(boolean op) {\n        switch (this) {\n        case TRUE:\n            return true;\n        case FALSE:\n            return false;\n        case OP:\n            return op;\n        case NOT_OP:\n            return !op;\n        default:\n            return false;\n        }\n    }\n\n    /** Looks up a PermissionDefault by name","Specified value, or null if not found"]},"scope":"public","describe":"static","return":"io.wolfscript.permissions.PermissionDefault","name":"getByName","args":[{"name":"name","type":"String","description":"Name of the default"}]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["java.util.HashMap","java.util.Map"],"enum":[{"code":"TRUE","value":"\"true\"","title":"TRUE PermissionDefault","description":"TRUE PermissionDefault"},{"code":"FALSE","value":"\"false\"","title":"FALSE PermissionDefault","description":"FALSE PermissionDefault"},{"code":"\"op\"","value":"","title":"\"op\" PermissionDefault","description":"\"op\" PermissionDefault"},{"code":"\"isop\"","value":"","title":"\"isop\" PermissionDefault","description":"\"isop\" PermissionDefault"},{"code":"\"operator\"","value":"","title":"\"operator\" PermissionDefault","description":"\"operator\" PermissionDefault"},{"code":"\"isoperator\"","value":"","title":"\"isoperator\" PermissionDefault","description":"\"isoperator\" PermissionDefault"},{"code":"\"admin\"","value":"","title":"\"admin\" PermissionDefault","description":"\"admin\" PermissionDefault"},{"code":"\"!op\"","value":"","title":"\"!op\" PermissionDefault","description":"\"!op\" PermissionDefault"},{"code":"\"notop\"","value":"","title":"\"notop\" PermissionDefault","description":"\"notop\" PermissionDefault"},{"code":"\"!operator\"","value":"","title":"\"!operator\" PermissionDefault","description":"\"!operator\" PermissionDefault"},{"code":"\"notoperator\"","value":"","title":"\"notoperator\" PermissionDefault","description":"\"notoperator\" PermissionDefault"},{"code":"\"!admin\"","value":"","title":"\"!admin\" PermissionDefault","description":"\"!admin\" PermissionDefault"}],"properties":[]},"io.wolfscript.permissions.PermissionRemovedExecutor":{"namespace":"io.wolfscript.permissions","title":"Represents a class which is to be notified when a {@link","description":"Represents a class which is to be notified when a {@link io.wolfscript.permissions.PermissionAttachment} is removed from a {@link io.wolfscript.permissions.Permissible}","name":"PermissionRemovedExecutor","qualifiedname":"io.wolfscript.permissions.PermissionRemovedExecutor","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Called when a {@link io.wolfscript.permissions.PermissionAttachment} is removed from a {@link","description":"Called when a {@link io.wolfscript.permissions.PermissionAttachment} is removed from a {@link io.wolfscript.permissions.Permissible}","scope":"public","return":"void","name":"attachmentRemoved","args":[{"name":"attachment","type":"io.wolfscript.permissions.PermissionAttachment","description":"Attachment which was removed"}]}],"imports":[],"properties":[]},"io.wolfscript.permissions.ServerOperator":{"namespace":"io.wolfscript.permissions","title":"Represents an object that may become a server operator, such as a {@link","description":"Represents an object that may become a server operator, such as a {@link io.wolfscript.entity.Player}","name":"ServerOperator","qualifiedname":"io.wolfscript.permissions.ServerOperator","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.entity.Player"],"properties":[{"name":"Op","modifier":"writeonly","args":[{"name":"value","type":"boolean","description":"New operator value"}],"description":"Set: Checks if this object is a server operator","doc":{"return":["true if this is an operator, otherwise false /\n    public boolean isOp();\n\n    /** Sets the operator status of this object"]},"return":"void","scope":"public","title":"Set: Checks if this object is a server operator"}]},"io.wolfscript.plugin.0":{"namespace":"io.wolfscript","title":"Classes specifically relating to loading software modules at runtime.","description":"Classes specifically relating to loading software modules at runtime.","name":"plugin","qualifiedname":"io.wolfscript.plugin.0","packagename":"io.wolfscript.plugin","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.plugin.AuthorNagException","io.wolfscript.plugin.IllegalPluginAccessException","io.wolfscript.plugin.InvalidDescriptionException","io.wolfscript.plugin.InvalidPluginException","io.wolfscript.plugin.PluginBase","io.wolfscript.plugin.PluginDescriptionFile","io.wolfscript.plugin.PluginLogger","io.wolfscript.plugin.RegisteredListener","io.wolfscript.plugin.RegisteredServiceProvider","io.wolfscript.plugin.SimplePluginManager","io.wolfscript.plugin.SimpleServicesManager","io.wolfscript.plugin.TimedRegisteredListener","io.wolfscript.plugin.UnknownDependencyException"],"interfaces":["io.wolfscript.plugin.EventExecutor","io.wolfscript.plugin.Plugin","io.wolfscript.plugin.PluginLoader","io.wolfscript.plugin.PluginManager","io.wolfscript.plugin.ServicesManager"],"enums":["io.wolfscript.plugin.Flags","io.wolfscript.plugin.PluginLoadOrder","io.wolfscript.plugin.ServicePriority"],"namespaces":["io.wolfscript.plugin.java.0","io.wolfscript.plugin.messaging.0"],"properties":[]},"io.wolfscript.plugin.AuthorNagException":{"namespace":"io.wolfscript.plugin","title":"class AuthorNagException","description":"class AuthorNagException","name":"AuthorNagException","qualifiedname":"io.wolfscript.plugin.AuthorNagException","type":"class","scope":"public","extends":["RuntimeException"],"constructors":[{"title":"Constructs a new AuthorNagException based on the given Exception","description":"Constructs a new AuthorNagException based on the given Exception","scope":"public","name":"AuthorNagException","args":[{"name":"String","type":"final","description":"String argument"}]}],"methods":[],"imports":[],"properties":[{"name":"Message","modifier":"readonly","args":[],"description":"Message property","return":"String","scope":"public","title":"Message property"}]},"io.wolfscript.plugin.EventExecutor":{"namespace":"io.wolfscript.plugin","title":"Interface which defines the class for event call backs to plugins","description":"Interface which defines the class for event call backs to plugins","name":"EventExecutor","qualifiedname":"io.wolfscript.plugin.EventExecutor","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.event.Event","io.wolfscript.event.EventException","io.wolfscript.event.Listener"],"properties":[]},"io.wolfscript.plugin.Flags":{"namespace":"io.wolfscript.plugin","title":"Represents a concept that a plugin is aware of.","description":"Represents a concept that a plugin is aware of. <p> The internal representation may be singleton, or be a parameterized instance, but must be immutable. /\npublic interface PluginAwareness {\n    /** Each entry here represents a particular plugin's awareness. These can be checked by using {@link PluginDescriptionFile#getAwareness()}.{@link Set#contains(Object) contains(flag)}.","name":"Flags","qualifiedname":"io.wolfscript.plugin.Flags","type":"enum","scope":"public","implements":["PluginAwareness"],"constructors":[],"methods":[],"imports":["java.util.Set","io.wolfscript.plugin.java.JavaPlugin"],"enum":[{"code":"UTF8","value":"","title":"This specifies that all (text) resources stored in a plugin's jar","description":"This specifies that all (text) resources stored in a plugin's jar use UTF-8 encoding.","doc":{"see":["JavaPlugin#getTextResource(String)"]}}],"properties":[]},"io.wolfscript.plugin.IllegalPluginAccessException":{"namespace":"io.wolfscript.plugin","title":"Thrown when a plugin attempts to interact with the server when it is not","description":"Thrown when a plugin attempts to interact with the server when it is not enabled","name":"IllegalPluginAccessException","qualifiedname":"io.wolfscript.plugin.IllegalPluginAccessException","type":"class","scope":"public","extends":["RuntimeException"],"constructors":[{"title":"Creates a new instance of <code>IllegalPluginAccessException</code>","description":"Creates a new instance of <code>IllegalPluginAccessException</code> without detail message. /\n    public IllegalPluginAccessException() {}\n\n    /** Constructs an instance of <code>IllegalPluginAccessException</code> with the specified detail message.","scope":"public","name":"IllegalPluginAccessException","args":[{"name":"msg","type":"String","description":"the detail message."}]}],"methods":[],"imports":[],"properties":[]},"io.wolfscript.plugin.InvalidDescriptionException":{"namespace":"io.wolfscript.plugin","title":"Thrown when attempting to load an invalid PluginDescriptionFile","description":"Thrown when attempting to load an invalid PluginDescriptionFile","name":"InvalidDescriptionException","qualifiedname":"io.wolfscript.plugin.InvalidDescriptionException","type":"class","scope":"public","extends":["Exception"],"constructors":[{"title":"Constructs a new InvalidDescriptionException based on the given","description":"Constructs a new InvalidDescriptionException based on the given Exception","doc":{"param":["message Brief message explaining the cause of the exception","cause Exception that triggered this Exception /\n    public InvalidDescriptionException(final Throwable cause, final String message) {\n        super(message, cause);\n    }\n\n    /** Constructs a new InvalidDescriptionException based on the given Exception","cause Exception that triggered this Exception /\n    public InvalidDescriptionException(final Throwable cause) {\n        super(\"Invalid plugin.yml\", cause);\n    }\n\n    /** Constructs a new InvalidDescriptionException with the given message","message Brief message explaining the cause of the exception /\n    public InvalidDescriptionException(final String message) {\n        super(message);\n    }\n\n    /** Constructs a new InvalidDescriptionException"]},"scope":"public","name":"InvalidDescriptionException","args":[]}],"methods":[],"imports":[],"properties":[]},"io.wolfscript.plugin.InvalidPluginException":{"namespace":"io.wolfscript.plugin","title":"Thrown when attempting to load an invalid Plugin file","description":"Thrown when attempting to load an invalid Plugin file","name":"InvalidPluginException","qualifiedname":"io.wolfscript.plugin.InvalidPluginException","type":"class","scope":"public","extends":["Exception"],"constructors":[{"title":"Constructs a new InvalidPluginException based on the given Exception","description":"Constructs a new InvalidPluginException based on the given Exception","scope":"public","name":"InvalidPluginException","args":[{"name":"String","type":"final","description":"String argument"}]}],"methods":[],"imports":[],"properties":[]},"io.wolfscript.plugin.Plugin":{"namespace":"io.wolfscript.plugin","title":"Represents a Plugin","description":"Represents a Plugin <p> The use of {@link io.wolfscript.plugin.PluginBase} is recommended for actual Implementation","name":"Plugin","qualifiedname":"io.wolfscript.plugin.Plugin","type":"interface","scope":"public","extends":["io.wolfscript.command.TabExecutor"],"constructors":[],"methods":[],"imports":["java.io.File","java.io.InputStream","java.util.logging.Logger","io.wolfscript.Server","io.wolfscript.command.TabExecutor","io.wolfscript.configuration.file.FileConfiguration","io.wolfscript.generator.ChunkGenerator","com.avaje.ebean.EbeanServer"],"properties":[{"name":"Name","modifier":"readonly","args":[],"description":"Get: Returns the folder that the plugin data's files are located in. The folder may not yet exist.","doc":{"return":["The folder /\n    public File getDataFolder();\n\n    /** Returns the plugin.yaml file containing the details for this plugin","Contents of the plugin.yaml file /\n    public PluginDescriptionFile getDescription();\n\n    /** Gets a {@link io.wolfscript.configuration.file.FileConfiguration} for this plugin, read through \"config.yml\" <p> If there is a default config.yml embedded in this plugin, it will be provided as a default for this Configuration.","Plugin configuration /\n    public FileConfiguration getConfig();\n\n    /** Gets an embedded resource in this plugin","File if found, otherwise null /\n    public InputStream getResource(String filename);\n\n    /** Saves the {@link io.wolfscript.configuration.file.FileConfiguration} retrievable by {@link #getConfig()}. /\n    public void saveConfig();\n\n    /** Saves the raw contents of the default config.yml file to the location retrievable by {@link #getConfig()}. If there is no default config.yml embedded in the plugin, an empty config.yml file is saved. This should fail silently if the config.yml already exists. /\n    public void saveDefaultConfig();\n\n    /** Saves the raw contents of any resource embedded with a plugin's .jar file assuming it can be found using {@link #getResource(String)}. <p> The resource is saved into the plugin's data folder using the same hierarchy as the .jar file (subdirectories are preserved).","PluginLoader that controls this plugin /\n    public PluginLoader getPluginLoader();\n\n    /** Returns the Server instance currently running this plugin","Server running this plugin /\n    public Server getServer();\n\n    /** Returns a value indicating whether or not this plugin is currently enabled","true if this plugin is enabled, otherwise false /\n    public boolean isEnabled();\n\n    /** Called when this plugin is disabled /\n    public void onDisable();\n\n    /** Called after a plugin is loaded but before it has been enabled. <p> When mulitple plugins are loaded, the onLoad() for all plugins is called before any onEnable() is called. /\n    public void onLoad();\n\n    /** Called when this plugin is enabled /\n    public void onEnable();\n\n    /** Simple boolean if we can still nag to the logs about things","boolean whether we can nag /\n    public boolean isNaggable();\n\n    /** Set naggable state","ebean server instance or null if not enabled /\n    public EbeanServer getDatabase();\n\n    /** Gets a {@link io.wolfscript.generator.ChunkGenerator} for use in a default world, as specified in the server configuration","ChunkGenerator for use in the default world generation /\n    public ChunkGenerator getDefaultWorldGenerator(String worldName, String id);\n\n    /** Returns the plugin logger associated with this server's logger. The returned logger automatically tags all log messages with the plugin's name.","Logger associated with this plugin /\n    public Logger getLogger();\n\n    /** Returns the name of the plugin. <p> This should return the bare name of the plugin and should be used for comparison.","name of the plugin"],"param":["filename Filename of the resource","resourcePath the embedded resource path to look for within the plugin's .jar file. (No preceding slash).","replace if true, the embedded resource will overwrite the contents of an existing file.","canNag is this plugin still naggable? /\n    public void setNaggable(boolean canNag);\n\n    /** Gets the {@link EbeanServer} tied to this plugin. This will only be available if enabled in the {@link PluginDescriptionFile#isDatabaseEnabled()} <p> <i>For more information on the use of <a href=\"http://www.avaje.org/\"> Avaje Ebeans ORM</a>, see <a href=\"http://www.avaje.org/ebean/documentation.html\">Avaje Ebeans Documentation</a></i> <p> <i>For an example using Ebeans ORM, see <a href=\"https://github.com/WolfScript/HomeWolfScript\">WolfScript's Homewolfscript Plugin </a></i>","worldName Name of the world that this will be applied to","id Unique ID, if any, that was specified to indicate which generator was requested"],"throws":["IllegalArgumentException if the resource path is null, empty, or points to a nonexistent resource. /\n    public void saveResource(String resourcePath, boolean replace);\n\n    /** Discards any data in {@link #getConfig()} and reloads from disk. /\n    public void reloadConfig();\n\n    /** Gets the associated PluginLoader responsible for this plugin"]},"return":"String","scope":"public","title":"Get: Returns the folder that the plugin data's files are located in. The"}]},"io.wolfscript.plugin.PluginBase":{"namespace":"io.wolfscript.plugin","title":"Represents a base {@link io.wolfscript.plugin.Plugin}","description":"Represents a base {@link io.wolfscript.plugin.Plugin} <p> Extend this class if your plugin is not a {@link io.wolfscript.plugin.java.JavaPlugin}","name":"PluginBase","qualifiedname":"io.wolfscript.plugin.PluginBase","type":"class","scope":"public","describe":"abstract","implements":["io.wolfscript.plugin.Plugin"],"constructors":[],"methods":[{"title":"equals method","description":"equals method","scope":"public","describe":"final","return":"boolean","name":"equals","args":[{"name":"obj","type":"Object","description":"obj argument"}]},{"title":"hashCode method","description":"hashCode method","scope":"public","describe":"final","return":"int","name":"hashCode","args":[]}],"imports":[],"properties":[{"name":"Name","modifier":"readonly","args":[],"describe":"final","description":"Name property","return":"String","scope":"public","title":"Name property"}]},"io.wolfscript.plugin.PluginDescriptionFile":{"namespace":"io.wolfscript.plugin","title":"This type is the runtime-container for the information in the plugin.yml.","description":"This type is the runtime-container for the information in the plugin.yml. All plugins must have a respective plugin.yml. For plugins written in java using the standard plugin loader, this file must be in the root of the jar file. <p> When WolfScript loads a plugin, it needs to know some basic information about it. It reads this information from a YAML file, 'plugin.yml'. This file consists of a set of attributes, each defined on a new line and with no indentation. <p> Every (almost* every) method corresponds with a specific entry in the plugin.yml. These are the <b>required</b> entries for every plugin.yml: <ul> <li>{@link #getName()} - <code>name</code> <li>{@link #getVersion()} - <code>version</code> <li>{@link #getMain()} - <code>main</code> </ul> <p> Failing to include any of these items will throw an exception and cause the server to ignore your plugin. <p> This is a list of the possible yaml keys, with specific details included in the respective method documentations: <table border=1> <caption>The description of the plugin.yml layout</caption> <tr> <th>Node</th> <th>Method</th> <th>Summary</th> </tr><tr> <td><code>name</code></td> <td>{@link #getName()}</td> <td>The unique name of plugin</td> </tr><tr> <td><code>version</code></td> <td>{@link #getVersion()}</td> <td>A plugin revision identifier</td> </tr><tr> <td><code>main</code></td> <td>{@link #getMain()}</td> <td>The plugin's initial class file</td> </tr><tr> <td><code>author</code><br><code>authors</code></td> <td>{@link #getAuthors()}</td> <td>The plugin contributors</td> </tr><tr> <td><code>description</code></td> <td>{@link #getDescription()}</td> <td>Human readable plugin summary</td> </tr><tr> <td><code>website</code></td> <td>{@link #getWebsite()}</td> <td>The URL to the plugin's site</td> </tr><tr> <td><code>prefix</code></td> <td>{@link #getPrefix()}</td> <td>The token to prefix plugin log entries</td> </tr><tr> <td><code>database</code></td> <td>{@link #isDatabaseEnabled()}</td> <td>Indicator to enable database support</td> </tr><tr> <td><code>load</code></td> <td>{@link #getLoad()}</td> <td>The phase of server-startup this plugin will load during</td> </tr><tr> <td><code>depend</code></td> <td>{@link #getDepend()}</td> <td>Other required plugins</td> </tr><tr> <td><code>softdepend</code></td> <td>{@link #getSoftDepend()}</td> <td>Other plugins that add functionality</td> </tr><tr> <td><code>loadbefore</code></td> <td>{@link #getLoadBefore()}</td> <td>The inverse softdepend</td> </tr><tr> <td><code>commands</code></td> <td>{@link #getCommands()}</td> <td>The commands the plugin will register</td> </tr><tr> <td><code>permissions</code></td> <td>{@link #getPermissions()}</td> <td>The permissions the plugin will register</td> </tr><tr> <td><code>default-permission</code></td> <td>{@link #getPermissionDefault()}</td> <td>The default {@link Permission#getDefault() default} permission state for defined {@link #getPermissions() permissions} the plugin will register</td> </tr><tr> <td><code>awareness</code></td> <td>{@link #getAwareness()}</td> <td>The concepts that the plugin acknowledges</td> </tr> </table> <p> A plugin.yml example:<blockquote><pre> name: Inferno version: 1.4.1 description: This plugin is so 31337. You can set yourself on fire. # We could place every author in the authors list, but chose not to for illustrative purposes # Also, having an author distinguishes that person as the project lead, and ensures their # name is displayed first author: CaptainInflamo authors: [Cogito, verrier, EvilSeph] website: http://www.curse.com/server-mods/minecraft/myplugin main: com.captaininflamo.wolfscript.inferno.Inferno database: false depend: [NewFire, FlameWire] commands: flagrate: description: Set yourself on fire. aliases: [combust_me, combustMe] permission: inferno.flagrate usage: Syntax error! Simply type /&lt;command&gt; to ignite yourself. burningdeaths: description: List how many times you have died by fire. aliases: [burning_deaths, burningDeaths] permission: inferno.burningdeaths usage: | /&lt;command&gt; [player] Example: /&lt;command&gt; - see how many times you have burned to death Example: /&lt;command&gt; CaptainIce - see how many times CaptainIce has burned to death permissions: inferno.*: description: Gives access to all Inferno commands children: inferno.flagrate: true inferno.burningdeaths: true inferno.burningdeaths.others: true inferno.flagrate: description: Allows you to ignite yourself default: true inferno.burningdeaths: description: Allows you to see how many times you have burned to death default: true inferno.burningdeaths.others: description: Allows you to see how many times others have burned to death default: op children: inferno.burningdeaths: true </pre></blockquote>","name":"PluginDescriptionFile","qualifiedname":"io.wolfscript.plugin.PluginDescriptionFile","type":"class","scope":"public","describe":"final","constructors":[],"methods":[],"imports":["java.io.InputStream","java.io.Reader","java.io.Writer","java.util.HashMap","java.util.HashSet","java.util.List","java.util.Map","java.util.Set","io.wolfscript.command.CommandExecutor","io.wolfscript.command.PluginCommand","io.wolfscript.plugin.java.JavaPlugin","io.wolfscript.permissions.Permissible","io.wolfscript.permissions.Permission","io.wolfscript.permissions.PermissionDefault","org.yaml.snakeyaml.Yaml","org.yaml.snakeyaml.constructor.AbstractConstruct","org.yaml.snakeyaml.constructor.SafeConstructor","org.yaml.snakeyaml.nodes.Node","org.yaml.snakeyaml.nodes.Tag","com.google.common.collect.ImmutableList","com.google.common.collect.ImmutableMap","com.google.common.collect.ImmutableSet"],"properties":[{"name":"RawName","modifier":"readonly","args":[],"deprecated":true,"description":"Get: Loads a PluginDescriptionFile from the specified reader","doc":{"param":["reader The reader","pluginName Name of this plugin","pluginVersion Version of this plugin","mainClass Full location of the main class of this plugin /\n    public PluginDescriptionFile(final String pluginName, final String pluginVersion, final String mainClass) {\n        name = pluginName.replace(' ', '_');\n        version = pluginVersion;\n        main = mainClass;\n    }\n\n    /** Gives the name of the plugin. This name is a unique identifier for plugins. <ul> <li>Must consist of all alphanumeric characters, underscores, hyphon, and period (a-z,A-Z,0-9, _.-). Any other character will cause the plugin.yml to fail loading. <li>Used to determine the name of the plugin's data folder. Data folders are placed in the ./plugins/ directory by default, but this behavior should not be relied on. {@link Plugin#getDataFolder()} should be used to reference the data folder. <li>It is good practice to name your jar the same as this, for example 'MyPlugin.jar'. <li>Case sensitive. <li>The is the token referenced in {@link #getDepend()}, {@link #getSoftDepend()}, and {@link #getLoadBefore()}. <li>Using spaces in the plugin's name is deprecated. </ul> <p> In the plugin.yml, this entry is named <code>name</code>. <p> Example:<blockquote><pre>name: MyPlugin</pre></blockquote>","writer Writer to output this file to /\n    public void save(Writer writer) {\n        YAML.get().dump(saveMap(), writer);\n    }\n\n    private void loadMap(Map<?, ?> map) throws InvalidDescriptionException {\n        try {\n            name = rawName = map.get(\"name\").toString();\n\n            if (!name.matches(\"^[A-Za-z0-9 _.-]+$\")) {\n                throw new InvalidDescriptionException(\"name '\" + name + \"' contains invalid characters.\");\n            }\n            name = name.replace(' ', '_');\n        } catch (NullPointerException ex) {\n            throw new InvalidDescriptionException(ex, \"name is not defined\");\n        } catch (ClassCastException ex) {\n            throw new InvalidDescriptionException(ex, \"name is of wrong type\");\n        }\n\n        try {\n            version = map.get(\"version\").toString();\n        } catch (NullPointerException ex) {\n            throw new InvalidDescriptionException(ex, \"version is not defined\");\n        } catch (ClassCastException ex) {\n            throw new InvalidDescriptionException(ex, \"version is of wrong type\");\n        }\n\n        try {\n            main = map.get(\"main\").toString();\n            if (main.startsWith(\"io.wolfscript.\")) {\n                throw new InvalidDescriptionException(\"main may not be within the io.wolfscript namespace\");\n            }\n        } catch (NullPointerException ex) {\n            throw new InvalidDescriptionException(ex, \"main is not defined\");\n        } catch (ClassCastException ex) {\n            throw new InvalidDescriptionException(ex, \"main is of wrong type\");\n        }\n\n        if (map.get(\"commands\") != null) {\n            ImmutableMap.Builder<String, Map<String, Object>> commandsBuilder = ImmutableMap.<String, Map<String, Object>>builder();\n            try {\n                for (Map.Entry<?, ?> command : ((Map<?, ?>) map.get(\"commands\")).entrySet()) {\n                    ImmutableMap.Builder<String, Object> commandBuilder = ImmutableMap.<String, Object>builder();\n                    if (command.getValue() != null) {\n                        for (Map.Entry<?, ?> commandEntry : ((Map<?, ?>) command.getValue()).entrySet()) {\n                            if (commandEntry.getValue() instanceof Iterable) {\n                                // This prevents internal alias list changes\n                                ImmutableList.Builder<Object> commandSubList = ImmutableList.<Object>builder();\n                                for (Object commandSubListItem : (Iterable<?>) commandEntry.getValue()) {\n                                    if (commandSubListItem != null) {\n                                        commandSubList.add(commandSubListItem);\n                                    }\n                                }\n                                commandBuilder.put(commandEntry.getKey().toString(), commandSubList.build());\n                            } else if (commandEntry.getValue() != null) {\n                                commandBuilder.put(commandEntry.getKey().toString(), commandEntry.getValue());\n                            }\n                        }\n                    }\n                    commandsBuilder.put(command.getKey().toString(), commandBuilder.build());\n                }\n            } catch (ClassCastException ex) {\n                throw new InvalidDescriptionException(ex, \"commands are of wrong type\");\n            }\n            commands = commandsBuilder.build();\n        }\n\n        if (map.get(\"class-loader-of\") != null) {\n            classLoaderOf = map.get(\"class-loader-of\").toString();\n        }\n\n        depend = makePluginNameList(map, \"depend\");\n        softDepend = makePluginNameList(map, \"softdepend\");\n        loadBefore = makePluginNameList(map, \"loadbefore\");\n\n        if (map.get(\"database\") != null) {\n            try {\n                database = (Boolean) map.get(\"database\");\n            } catch (ClassCastException ex) {\n                throw new InvalidDescriptionException(ex, \"database is of wrong type\");\n            }\n        }\n\n        if (map.get(\"website\") != null) {\n            website = map.get(\"website\").toString();\n        }\n\n        if (map.get(\"description\") != null) {\n            description = map.get(\"description\").toString();\n        }\n\n        if (map.get(\"load\") != null) {\n            try {\n                order = PluginLoadOrder.valueOf(((String) map.get(\"load\")).toUpperCase().replaceAll(\"\\\\W\", \"\"));\n            } catch (ClassCastException ex) {\n                throw new InvalidDescriptionException(ex, \"load is of wrong type\");\n            } catch (IllegalArgumentException ex) {\n                throw new InvalidDescriptionException(ex, \"load is not a valid choice\");\n            }\n        }\n\n        if (map.get(\"authors\") != null) {\n            ImmutableList.Builder<String> authorsBuilder = ImmutableList.<String>builder();\n            if (map.get(\"author\") != null) {\n                authorsBuilder.add(map.get(\"author\").toString());\n            }\n            try {\n                for (Object o : (Iterable<?>) map.get(\"authors\")) {\n                    authorsBuilder.add(o.toString());\n                }\n            } catch (ClassCastException ex) {\n                throw new InvalidDescriptionException(ex, \"authors are of wrong type\");\n            } catch (NullPointerException ex) {\n                throw new InvalidDescriptionException(ex, \"authors are improperly defined\");\n            }\n            authors = authorsBuilder.build();\n        } else if (map.get(\"author\") != null) {\n            authors = ImmutableList.of(map.get(\"author\").toString());\n        } else {\n            authors = ImmutableList.<String>of();\n        }\n\n        if (map.get(\"default-permission\") != null) {\n            try {\n                defaultPerm = PermissionDefault.getByName(map.get(\"default-permission\").toString());\n            } catch (ClassCastException ex) {\n                throw new InvalidDescriptionException(ex, \"default-permission is of wrong type\");\n            } catch (IllegalArgumentException ex) {\n                throw new InvalidDescriptionException(ex, \"default-permission is not a valid choice\");\n            }\n        }\n\n        if (map.get(\"awareness\") instanceof Iterable) {\n            Set<PluginAwareness> awareness = new HashSet<PluginAwareness>();\n            try {\n                for (Object o : (Iterable<?>) map.get(\"awareness\")) {\n                    awareness.add((PluginAwareness) o);\n                }\n            } catch (ClassCastException ex) {\n                throw new InvalidDescriptionException(ex, \"awareness has wrong type\");\n            }\n            this.awareness = ImmutableSet.copyOf(awareness);\n        }\n\n        try {\n            lazyPermissions = (Map<?, ?>) map.get(\"permissions\");\n        } catch (ClassCastException ex) {\n            throw new InvalidDescriptionException(ex, \"permissions are of the wrong type\");\n        }\n\n        if (map.get(\"prefix\") != null) {\n            prefix = map.get(\"prefix\").toString();\n        }\n    }\n\n    private static List<String> makePluginNameList(final Map<?, ?> map, final String key) throws InvalidDescriptionException {\n        final Object value = map.get(key);\n        if (value == null) {\n            return ImmutableList.of();\n        }\n\n        final ImmutableList.Builder<String> builder = ImmutableList.<String>builder();\n        try {\n            for (final Object entry : (Iterable<?>) value) {\n                builder.add(entry.toString().replace(' ', '_'));\n            }\n        } catch (ClassCastException ex) {\n            throw new InvalidDescriptionException(ex, key + \" is of wrong type\");\n        } catch (NullPointerException ex) {\n            throw new InvalidDescriptionException(ex, \"invalid \" + key + \" format\");\n        }\n        return builder.build();\n    }\n\n    private Map<String, Object> saveMap() {\n        Map<String, Object> map = new HashMap<String, Object>();\n\n        map.put(\"name\", name);\n        map.put(\"main\", main);\n        map.put(\"version\", version);\n        map.put(\"database\", database);\n        map.put(\"order\", order.toString());\n        map.put(\"default-permission\", defaultPerm.toString());\n\n        if (commands != null) {\n            map.put(\"command\", commands);\n        }\n        if (depend != null) {\n            map.put(\"depend\", depend);\n        }\n        if (softDepend != null) {\n            map.put(\"softdepend\", softDepend);\n        }\n        if (website != null) {\n            map.put(\"website\", website);\n        }\n        if (description != null) {\n            map.put(\"description\", description);\n        }\n\n        if (authors.size() == 1) {\n            map.put(\"author\", authors.get(0));\n        } else if (authors.size() > 1) {\n            map.put(\"authors\", authors);\n        }\n\n        if (classLoaderOf != null) {\n            map.put(\"class-loader-of\", classLoaderOf);\n        }\n\n        if (prefix != null) {\n            map.put(\"prefix\", prefix);\n        }\n\n        return map;\n    }\n\n    private Map<?,?> asMap(Object object) throws InvalidDescriptionException {\n        if (object instanceof Map) {\n            return (Map<?,?>) object;\n        }\n        throw new InvalidDescriptionException(object + \" is not properly structured.\");\n    }\n\n    /**"],"throws":["InvalidDescriptionException If the PluginDescriptionFile is invalid /\n    public PluginDescriptionFile(final Reader reader) throws InvalidDescriptionException {\n        loadMap(asMap(YAML.get().load(reader)));\n    }\n\n    /** Creates a new PluginDescriptionFile with the given detailed"],"return":["the name of the plugin /\n    public String getName() {\n        return name;\n    }\n\n    /** Gives the version of the plugin. <ul> <li>Version is an arbitrary string, however the most common format is MajorRelease.MinorRelease.Build (eg: 1.4.1). <li>Typically you will increment this every time you release a new feature or bug fix. <li>Displayed when a user types <code>/version PluginName</code> </ul> <p> In the plugin.yml, this entry is named <code>version</code>. <p> Example:<blockquote><pre>version: 1.4.1</pre></blockquote>","the version of the plugin /\n    public String getVersion() {\n        return version;\n    }\n\n    /** Gives the fully qualified name of the main class for a plugin. The format should follow the {@link ClassLoader#loadClass(String)} syntax to successfully be resolved at runtime. For most plugins, this is the class that extends {@link io.wolfscript.plugin.java.JavaPlugin}. <ul> <li>This must contain the full namespace including the class file itself. <li>If your namespace is <code>io.wolfscript.plugin</code>, and your class file is called <code>MyPlugin</code> then this must be <code>io.wolfscript.plugin.MyPlugin</code> <li>No plugin can use <code>io.wolfscript.</code> as a base package for <b>any class</b>, including the main class. </ul> <p> In the plugin.yml, this entry is named <code>main</code>. <p> Example: <blockquote><pre>main: io.wolfscript.plugin.MyPlugin</pre></blockquote>","the fully qualified main class for the plugin /\n    public String getMain() {\n        return main;\n    }\n\n    /** Gives a human-friendly description of the functionality the plugin provides. <ul> <li>The description can have multiple lines. <li>Displayed when a user types <code>/version PluginName</code> </ul> <p> In the plugin.yml, this entry is named <code>description</code>. <p> Example: <blockquote><pre>description: This plugin is so 31337. You can set yourself on fire.</pre></blockquote>","description of this plugin, or null if not specified /\n    public String getDescription() {\n        return description;\n    }\n\n    /** Gives the phase of server startup that the plugin should be loaded. <ul> <li>Possible values are in {@link io.wolfscript.plugin.PluginLoadOrder}. <li>Defaults to {@link PluginLoadOrder#POSTWORLD}. <li>Certain caveats apply to each phase. <li>When different, {@link #getDepend()}, {@link #getSoftDepend()}, and {@link #getLoadBefore()} become relative in order loaded per-phase. If a plugin loads at <code>STARTUP</code>, but a dependency loads at <code>POSTWORLD</code>, the dependency will not be loaded before the plugin is loaded. </ul> <p> In the plugin.yml, this entry is named <code>load</code>. <p> Example:<blockquote><pre>load: STARTUP</pre></blockquote>","the phase when the plugin should be loaded /\n    public PluginLoadOrder getLoad() {\n        return order;\n    }\n\n    /** Gives the list of authors for the plugin. <ul> <li>Gives credit to the developer. <li>Used in some server error messages to provide helpful feedback on who to contact when an error occurs. <li>A wolfscript.org forum handle or email address is recommended. <li>Is displayed when a user types <code>/version PluginName</code> <li><code>authors</code> must be in <a href=\"http://en.wikipedia.org/wiki/YAML#Lists\">YAML list format</a>. </ul> <p> In the plugin.yml, this has two entries, <code>author</code> and <code>authors</code>. <p> Single author example: <blockquote><pre>author: CaptainInflamo</pre></blockquote> Multiple author example: <blockquote><pre>authors: [Cogito, verrier, EvilSeph]</pre></blockquote> When both are specified, author will be the first entry in the list, so this example: <blockquote><pre>author: Grum authors: - feildmaster - amaranth</pre></blockquote> Is equivilant to this example: <pre>authors: [Grum, feildmaster, aramanth]</pre>","an immutable list of the plugin's authors /\n    public List<String> getAuthors() {\n        return authors;\n    }\n\n    /** Gives the plugin's or plugin's author's website. <ul> <li>A link to the Curse page that includes documentation and downloads is highly recommended. <li>Displayed when a user types <code>/version PluginName</code> </ul> <p> In the plugin.yml, this entry is named <code>website</code>. <p> Example: <blockquote><pre>website: http://www.curse.com/server-mods/minecraft/myplugin</pre></blockquote>","description of this plugin, or null if not specified /\n    public String getWebsite() {\n        return website;\n    }\n\n    /** Gives if the plugin uses a database. <ul> <li>Using a database is non-trivial. <li>Valid values include <code>true</code> and <code>false</code> </ul> <p> In the plugin.yml, this entry is named <code>database</code>. <p> Example: <blockquote><pre>database: false</pre></blockquote>","if this plugin requires a database","immutable list of the plugin's dependencies /\n    public List<String> getDepend() {\n        return depend;\n    }\n\n    /** Gives a list of other plugins that the plugin requires for full functionality. The {@link io.wolfscript.plugin.PluginManager} will make best effort to treat all entries here as if they were a {@link #getDepend() dependency}, but will never fail because of one of these entries. <ul> <li>Use the value in the {@link #getName()} of the target plugin to specify the dependency. <li>When an unresolvable plugin is listed, it will be ignored and does not affect load order. <li>When a circular dependency occurs (a network of plugins depending or soft-dependending each other), it will arbitrarily choose a plugin that can be resolved when ignoring soft-dependencies. <li><code>softdepend</code> must be in <a href=\"http://en.wikipedia.org/wiki/YAML#Lists\">YAML list format</a>. </ul> <p> In the plugin.yml, this entry is named <code>softdepend</code>. <p> Example: <blockquote><pre>softdepend: [OnePlugin, AnotherPlugin]</pre></blockquote>","immutable list of the plugin's preferred dependencies /\n    public List<String> getSoftDepend() {\n        return softDepend;\n    }\n\n    /** Gets the list of plugins that should consider this plugin a soft-dependency. <ul> <li>Use the value in the {@link #getName()} of the target plugin to specify the dependency. <li>The plugin should load before any other plugins listed here. <li>Specifying another plugin here is strictly equivalent to having the specified plugin's {@link #getSoftDepend()} include {@link #getName() this plugin}. <li><code>loadbefore</code> must be in <a href=\"http://en.wikipedia.org/wiki/YAML#Lists\">YAML list format</a>. </ul> <p> In the plugin.yml, this entry is named <code>loadbefore</code>. <p> Example: <blockquote><pre>loadbefore: - OnePlugin - AnotherPlugin</pre></blockquote>","immutable list of plugins that should consider this plugin a soft-dependency /\n    public List<String> getLoadBefore() {\n        return loadBefore;\n    }\n\n    /** Gives the token to prefix plugin-specific logging messages with. <ul> <li>This includes all messages using {@link Plugin#getLogger()}. <li>If not specified, the server uses the plugin's {@link #getName() name}. <li>This should clearly indicate what plugin is being logged. </ul> <p> In the plugin.yml, this entry is named <code>prefix</code>. <p> Example:<blockquote><pre>prefix: ex-why-zee</pre></blockquote>","the prefixed logging token, or null if not specified /\n    public String getPrefix() {\n        return prefix;\n    }\n\n    /** Gives the map of command-name to command-properties. Each entry in this map corresponds to a single command and the respective values are the properties of the command. Each property, <i>with the exception of aliases</i>, can be defined at runtime using methods in {@link io.wolfscript.command.PluginCommand} and are defined here only as a convenience. <table border=1> <caption>The command section's description</caption> <tr> <th>Node</th> <th>Method</th> <th>Type</th> <th>Description</th> <th>Example</th> </tr><tr> <td><code>description</code></td> <td>{@link PluginCommand#setDescription(String)}</td> <td>String</td> <td>A user-friendly description for a command. It is useful for documentation purposes as well as in-game help.</td> <td><blockquote><pre>description: Set yourself on fire</pre></blockquote></td> </tr><tr> <td><code>aliases</code></td> <td>{@link PluginCommand#setAliases(List)}</td> <td>String or <a href=\"http://en.wikipedia.org/wiki/YAML#Lists\">List</a> of strings</td> <td>Alternative command names, with special usefulness for commands that are already registered. <i>Aliases are not effective when defined at runtime,</i> so the plugin description file is the only way to have them properly defined. <p> Note: Command aliases may not have a colon in them.</td> <td>Single alias format: <blockquote><pre>aliases: combust_me</pre></blockquote> or multiple alias format: <blockquote><pre>aliases: [combust_me, combustMe]</pre></blockquote></td> </tr><tr> <td><code>permission</code></td> <td>{@link PluginCommand#setPermission(String)}</td> <td>String</td> <td>The name of the {@link io.wolfscript.permissions.Permission} required to use the command. A user without the permission will receive the specified message (see {@linkplain PluginCommand#setPermissionMessage(String) below}), or a standard one if no specific message is defined. Without the permission node, no {@link PluginCommand#setExecutor(CommandExecutor) CommandExecutor} or {@link PluginCommand#setTabCompleter(TabCompleter) TabCompleter} will be called.</td> <td><blockquote><pre>permission: inferno.flagrate</pre></blockquote></td> </tr><tr> <td><code>permission-message</code></td> <td>{@link PluginCommand#setPermissionMessage(String)}</td> <td>String</td> <td><ul> <li>Displayed to a player that attempts to use a command, but does not have the required permission. See {@link PluginCommand#getPermission() above}. <li>&lt;permission&gt; is a macro that is replaced with the permission node required to use the command. <li>Using empty quotes is a valid way to indicate nothing should be displayed to a player. </ul></td> <td><blockquote><pre>permission-message: You do not have /&lt;permission&gt;</pre></blockquote></td> </tr><tr> <td><code>usage</code></td> <td>{@link PluginCommand#setUsage(String)}</td> <td>String</td> <td>This message is displayed to a player when the {@link PluginCommand#setExecutor(CommandExecutor)} {@linkplain CommandExecutor#onCommand(CommandSender,Command,String,String[]) returns false}. &lt;command&gt; is a macro that is replaced the command issued.</td> <td><blockquote><pre>usage: Syntax error! Perhaps you meant /&lt;command&gt; PlayerName?</pre></blockquote> It is worth noting that to use a colon in a yaml, like <code>`usage: Usage: /god [player]'</code>, you need to <a href=\"http://yaml.org/spec/current.html#id2503232\">surround the message with double-quote</a>: <blockquote><pre>usage: \"Usage: /god [player]\"</pre></blockquote></td> </tr> </table> The commands are structured as a hiearchy of <a href=\"http://yaml.org/spec/current.html#id2502325\">nested mappings</a>. The primary (top-level, no intendentation) node is `<code>commands</code>', while each individual command name is indented, indicating it maps to some value (in our case, the properties of the table above). <p> Here is an example bringing together the piecemeal examples above, as well as few more definitions:<blockquote><pre> commands: flagrate: description: Set yourself on fire. aliases: [combust_me, combustMe] permission: inferno.flagrate permission-message: You do not have /&lt;permission&gt; usage: Syntax error! Perhaps you meant /&lt;command&gt; PlayerName? burningdeaths: description: List how many times you have died by fire. aliases: - burning_deaths - burningDeaths permission: inferno.burningdeaths usage: | /&lt;command&gt; [player] Example: /&lt;command&gt; - see how many times you have burned to death Example: /&lt;command&gt; CaptainIce - see how many times CaptainIce has burned to death # The next command has no description, aliases, etc. defined, but is still valid # Having an empty declaration is useful for defining the description, permission, and messages from a configuration dynamically apocalypse: </pre></blockquote> Note: Command names may not have a colon in their name.","the commands this plugin will register /\n    public Map<String, Map<String, Object>> getCommands() {\n        return commands;\n    }\n\n    /** Gives the list of permissions the plugin will register at runtime, immediately proceding enabling. The format for defining permissions is a map from permission name to properties. To represent a map without any specific property, empty <a href=\"http://yaml.org/spec/current.html#id2502702\">curly-braces</a> ( <code>&#123;&#125;</code> ) may be used (as a null value is not accepted, unlike the {@link #getCommands() commands} above). <p> A list of optional properties for permissions: <table border=1> <caption>The permission section's description</caption> <tr> <th>Node</th> <th>Description</th> <th>Example</th> </tr><tr> <td><code>description</code></td> <td>Plaintext (user-friendly) description of what the permission is for.</td> <td><blockquote><pre>description: Allows you to set yourself on fire</pre></blockquote></td> </tr><tr> <td><code>default</code></td> <td>The default state for the permission, as defined by {@link Permission#getDefault()}. If not defined, it will be set to the value of {@link PluginDescriptionFile#getPermissionDefault()}. <p> For reference:<ul> <li><code>true</code> - Represents a positive assignment to {@link Permissible permissibles}. <li><code>false</code> - Represents no assignment to {@link Permissible permissibles}. <li><code>op</code> - Represents a positive assignment to {@link Permissible#isOp() operator permissibles}. <li><code>notop</code> - Represents a positive assignment to {@link Permissible#isOp() non-operator permissibiles}. </ul></td> <td><blockquote><pre>default: true</pre></blockquote></td> </tr><tr> <td><code>children</code></td> <td>Allows other permissions to be set as a {@linkplain Permission#getChildren() relation} to the parent permission. When a parent permissions is assigned, child permissions are respectively assigned as well. <ul> <li>When a parent permission is assigned negatively, child permissions are assigned based on an inversion of their association. <li>When a parent permission is assigned positively, child permissions are assigned based on their association. </ul> <p> Child permissions may be defined in a number of ways:<ul> <li>Children may be defined as a <a href=\"http://en.wikipedia.org/wiki/YAML#Lists\">list</a> of names. Using a list will treat all children associated positively to their parent. <li>Children may be defined as a map. Each permission name maps to either a boolean (representing the association), or a nested permission definition (just as another permission). Using a nested definition treats the child as a positive association. <li>A nested permission definition must be a map of these same properties. To define a valid nested permission without defining any specific property, empty curly-braces ( <code>&#123;&#125;</code> ) must be used. <li>A nested permission may carry it's own nested permissions as children, as they may also have nested permissions, and so forth. There is no direct limit to how deep the permission tree is defined. </ul></td> <td>As a list: <blockquote><pre>children: [inferno.flagrate, inferno.burningdeaths]</pre></blockquote> Or as a mapping: <blockquote><pre>children: inferno.flagrate: true inferno.burningdeaths: true</pre></blockquote> An additional example showing basic nested values can be seen <a href=\"doc-files/permissions-example_plugin.yml\">here</a>. </td> </tr> </table> The permissions are structured as a hiearchy of <a href=\"http://yaml.org/spec/current.html#id2502325\">nested mappings</a>. The primary (top-level, no intendentation) node is `<code>permissions</code>', while each individual permission name is indented, indicating it maps to some value (in our case, the properties of the table above). <p> Here is an example using some of the properties:<blockquote><pre> permissions: inferno.*: description: Gives access to all Inferno commands children: inferno.flagrate: true inferno.burningdeaths: true inferno.flagate: description: Allows you to ignite yourself default: true inferno.burningdeaths: description: Allows you to see how many times you have burned to death default: true </pre></blockquote> Another example, with nested definitions, can be found <a href=\"doc-files/permissions-example_plugin.yml\">here</a>.","the permissions this plugin will register /\n    public List<Permission> getPermissions() {\n        if (permissions == null) {\n            if (lazyPermissions == null) {\n                permissions = ImmutableList.<Permission>of();\n            } else {\n                permissions = ImmutableList.copyOf(Permission.loadPermissions(lazyPermissions, \"Permission node '%s' in plugin description file for \" + getFullName() + \" is invalid\", defaultPerm));\n                lazyPermissions = null;\n            }\n        }\n        return permissions;\n    }\n\n    /** Gives the default {@link Permission#getDefault() default} state of {@link #getPermissions() permissions} registered for the plugin. <ul> <li>If not specified, it will be {@link PermissionDefault#OP}. <li>It is matched using {@link PermissionDefault#getByName(String)} <li>It only affects permissions that do not define the <code>default</code> node. <li>It may be any value in {@link io.wolfscript.permissions.PermissionDefault}. </ul> <p> In the plugin.yml, this entry is named <code>default-permission</code>. <p> Example:<blockquote><pre>default-permission: NOT_OP</pre></blockquote>","the default value for the plugin's permissions /\n    public PermissionDefault getPermissionDefault() {\n        return defaultPerm;\n    }\n\n    /** Gives a set of every {@link PluginAwareness} for a plugin. An awareness dictates something that a plugin developer acknowledges when the plugin is compiled. Some implementions may define extra awarenesses that are not included in the API. Any unrecognized awareness (one unsupported or in a future version) will cause a dummy object to be created instead of failing. <ul> <li>Currently only supports the enumerated values in {@link PluginAwareness.Flags}. <li>Each awareness starts the identifier with bang-at (<code>!@</code>). <li>Unrecognized (future / unimplemented) entries are quietly replaced by a generic object that implements PluginAwareness. <li>A type of awareness must be defined by the runtime and acknowledged by the API, effectively discluding any derived type from any plugin's classpath. <li><code>awareness</code> must be in <a href=\"http://en.wikipedia.org/wiki/YAML#Lists\">YAML list format</a>. </ul> <p> In the plugin.yml, this entry is named <code>awareness</code>. <p> Example:<blockquote><pre>awareness: - !@UTF8</pre></blockquote> <p> <b>Note:</b> Although unknown versions of some future awareness are gracefully substituted, previous versions of WolfScript (ones prior to the first implementation of awareness) will fail to load a plugin that defines any awareness.","a set containing every awareness for the plugin /\n    public Set<PluginAwareness> getAwareness() {\n        return awareness;\n    }\n\n    /** Returns the name of a plugin, including the version. This method is provided for convenience; it uses the {@link #getName()} and {@link #getVersion()} entries.","a descriptive name of the plugin and respective version /\n    public String getFullName() {\n        return name + \" v\" + version;\n    }\n\n    /**","unused","internal use"],"see":["Plugin#getDatabase() /\n    public boolean isDatabaseEnabled() {\n        return database;\n    }\n\n    /** Gives a list of other plugins that the plugin requires. <ul> <li>Use the value in the {@link #getName()} of the target plugin to specify the dependency. <li>If any plugin listed here is not found, your plugin will fail to load at startup. <li>If multiple plugins list each other in <code>depend</code>, creating a network with no individual plugin does not list another plugin in the <a href=https://en.wikipedia.org/wiki/Circular_dependency>network</a>, all plugins in that network will fail. <li><code>depend</code> must be in must be in <a href=\"http://en.wikipedia.org/wiki/YAML#Lists\">YAML list format</a>. </ul> <p> In the plugin.yml, this entry is named <code>depend</code>. <p> Example: <blockquote><pre>depend: - OnePlugin - AnotherPlugin</pre></blockquote>"],"deprecated":["unused /\n    @Deprecated\n    public String getClassLoaderOf() {\n        return classLoaderOf;\n    }\n\n    public void setDatabaseEnabled(boolean database) {\n        this.database = database;\n    }\n\n    /** Saves this PluginDescriptionFile to the given writer","Internal use"]},"return":"String","scope":"public","title":"Get: Loads a PluginDescriptionFile from the specified reader"}]},"io.wolfscript.plugin.PluginLoadOrder":{"namespace":"io.wolfscript.plugin","title":"Represents the order in which a plugin should be initialized and enabled","description":"Represents the order in which a plugin should be initialized and enabled","name":"PluginLoadOrder","qualifiedname":"io.wolfscript.plugin.PluginLoadOrder","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"STARTUP","value":"","title":"Indicates that the plugin will be loaded at startup","description":"Indicates that the plugin will be loaded at startup","doc":{}}],"properties":[]},"io.wolfscript.plugin.PluginLoader":{"namespace":"io.wolfscript.plugin","title":"Represents a plugin loader, which handles direct access to specific types","description":"Represents a plugin loader, which handles direct access to specific types of plugins","name":"PluginLoader","qualifiedname":"io.wolfscript.plugin.PluginLoader","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Loads the plugin contained in the specified file","description":"Loads the plugin contained in the specified file","doc":{"return":["Plugin that was contained in the specified file, or null if unsuccessful","A new PluginDescriptionFile loaded from the plugin.yml in the specified file","The filters /\n    public Pattern[] getPluginFileFilters();\n\n    /** Creates and returns registered listeners for the event classes used in this listener","The registered listeners. /\n    public Map<Class<? extends Event>, Set<RegisteredListener>> createRegisteredListeners(Listener listener, Plugin plugin);\n\n    /** Enables the specified plugin <p> Attempting to enable a plugin that is already enabled will have no effect"],"throws":["InvalidPluginException Thrown when the specified file is not a plugin","UnknownDependencyException If a required dependency could not be found /\n    public Plugin loadPlugin(File file) throws InvalidPluginException, UnknownDependencyException;\n\n    /** Loads a PluginDescriptionFile from the specified file","InvalidDescriptionException If the plugin description file could not be created /\n    public PluginDescriptionFile getPluginDescription(File file) throws InvalidDescriptionException;\n\n    /** Returns a list of all filename filters expected by this PluginLoader"]},"scope":"public","return":"void","name":"disablePlugin","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"The plugin to use when creating registered listeners"}]}],"imports":["java.io.File","java.util.Map","java.util.Set","java.util.regex.Pattern","io.wolfscript.event.Event","io.wolfscript.event.Listener"],"properties":[]},"io.wolfscript.plugin.PluginLogger":{"namespace":"io.wolfscript.plugin","title":"The PluginLogger class is a modified {@link java.util.logging.Logger} that prepends all","description":"The PluginLogger class is a modified {@link java.util.logging.Logger} that prepends all logging calls with the name of the plugin doing the logging. The API for PluginLogger is exactly the same as {@link java.util.logging.Logger}.","doc":{"see":["Logger"]},"name":"PluginLogger","qualifiedname":"io.wolfscript.plugin.PluginLogger","type":"class","scope":"public","extends":["java.util.logging.Logger"],"constructors":[{"title":"Creates a new PluginLogger that extracts the name from a plugin.","description":"Creates a new PluginLogger that extracts the name from a plugin.","scope":"public","name":"PluginLogger","args":[{"name":"context","type":"io.wolfscript.plugin.Plugin","description":"A reference to the plugin"}]}],"methods":[{"title":"log method","description":"log method","scope":"public","return":"void","name":"log","args":[{"name":"logRecord","type":"java.util.logging.LogRecord","description":"logRecord argument"}]}],"imports":["java.util.logging.Level","java.util.logging.LogRecord","java.util.logging.Logger"],"properties":[]},"io.wolfscript.plugin.PluginManager":{"namespace":"io.wolfscript.plugin","title":"Handles all plugin management from the Server","description":"Handles all plugin management from the Server","name":"PluginManager","qualifiedname":"io.wolfscript.plugin.PluginManager","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Registers the specified plugin loader","description":"Registers the specified plugin loader","doc":{"param":["loader Class name of the PluginLoader to register","name Name of the plugin to check","name Name of the plugin to check","plugin Plugin to check","file File containing the plugin to load","directory Directory to check for plugins","event Event details","listener Listener to register","plugin Plugin to register /\n    public void registerEvents(Listener listener, Plugin plugin);\n\n    /** Registers the specified executor to the given event class","event Event type to register","listener Listener to register","priority Priority to register this event at","executor EventExecutor to register","plugin Plugin to register /\n    public void registerEvent(Class<? extends Event> event, Listener listener, EventPriority priority, EventExecutor executor, Plugin plugin);\n\n    /** Registers the specified executor to the given event class","event Event type to register","listener Listener to register","priority Priority to register this event at","executor EventExecutor to register","plugin Plugin to register","ignoreCancelled Whether to pass cancelled events or not /\n    public void registerEvent(Class<? extends Event> event, Listener listener, EventPriority priority, EventExecutor executor, Plugin plugin, boolean ignoreCancelled);\n\n    /** Enables the specified plugin <p> Attempting to enable a plugin that is already enabled will have no effect","plugin Plugin to enable /\n    public void enablePlugin(Plugin plugin);\n\n    /** Disables the specified plugin <p> Attempting to disable a plugin that is not enabled will have no effect","plugin Plugin to disable /\n    public void disablePlugin(Plugin plugin);\n\n    /** Gets a {@link Permission} from its fully qualified name","name Name of the permission","perm Permission to add","perm Permission to remove /\n    public void removePermission(Permission perm);\n\n    /** Removes a {@link Permission} registration from this plugin manager. <p> If the specified permission does not exist in this plugin manager, nothing will happen. <p> Removing a permission registration will <b>not</b> remove the permission from any {@link Permissible}s that have it.","name Permission to remove /\n    public void removePermission(String name);\n\n    /** Gets the default permissions for the given op status","op Which set of default permissions to get","perm Permission to recalculate /\n    public void recalculatePermissionDefaults(Permission perm);\n\n    /** Subscribes the given Permissible for information about the requested Permission, by name. <p> If the specified Permission changes in any form, the Permissible will be asked to recalculate.","permission Permission to subscribe to","permissible Permissible subscribing /\n    public void subscribeToPermission(String permission, Permissible permissible);\n\n    /** Unsubscribes the given Permissible for information about the requested Permission, by name.","permission Permission to unsubscribe from","permissible Permissible subscribing /\n    public void unsubscribeFromPermission(String permission, Permissible permissible);\n\n    /** Gets a set containing all subscribed {@link Permissible}s to the given permission, by name","permission Permission to query for","op Default list to subscribe to","permissible Permissible subscribing /\n    public void subscribeToDefaultPerms(boolean op, Permissible permissible);\n\n    /** Unsubscribes from the given Default permissions by operator status","op Default list to unsubscribe from","permissible Permissible subscribing /\n    public void unsubscribeFromDefaultPerms(boolean op, Permissible permissible);\n\n    /** Gets a set containing all subscribed {@link Permissible}s to the given default list, by op status","op Default list to query for"],"throws":["IllegalArgumentException Thrown when the given Class is not a valid PluginLoader /\n    public void registerInterface(Class<? extends PluginLoader> loader) throws IllegalArgumentException;\n\n    /** Checks if the given plugin is loaded and returns it when applicable <p> Please note that the name of the plugin is case-sensitive","InvalidPluginException Thrown when the specified file is not a valid plugin","InvalidDescriptionException Thrown when the specified file contains an invalid description","UnknownDependencyException If a required dependency could not be resolved /\n    public Plugin loadPlugin(File file) throws InvalidPluginException, InvalidDescriptionException, UnknownDependencyException;\n\n    /** Loads the plugins contained within the specified directory","IllegalStateException Thrown when an asynchronous event is fired from synchronous code. <p> <i>Note: This is best-effort basis, and should not be used to test synchronized state. This is an indicator for flawed flow logic.</i> /\n    public void callEvent(Event event) throws IllegalStateException;\n\n    /** Registers all the events in the given listener class","IllegalArgumentException Thrown when a permission with the same name already exists /\n    public void addPermission(Permission perm);\n\n    /** Removes a {@link Permission} registration from this plugin manager. <p> If the specified permission does not exist in this plugin manager, nothing will happen. <p> Removing a permission registration will <b>not</b> remove the permission from any {@link Permissible}s that have it."],"return":["Plugin if it exists, otherwise null /\n    public Plugin getPlugin(String name);\n\n    /** Gets a list of all currently loaded plugins","Array of Plugins /\n    public Plugin[] getPlugins();\n\n    /** Checks if the given plugin is enabled or not <p> Please note that the name of the plugin is case-sensitive.","true if the plugin is enabled, otherwise false /\n    public boolean isPluginEnabled(String name);\n\n    /** Checks if the given plugin is enabled or not","true if the plugin is enabled, otherwise false /\n    public boolean isPluginEnabled(Plugin plugin);\n\n    /** Loads the plugin in the specified file <p> File must be valid according to the current enabled Plugin interfaces","The Plugin loaded, or null if it was invalid","A list of all plugins loaded /\n    public Plugin[] loadPlugins(File directory);\n\n    /** Disables all the loaded plugins /\n    public void disablePlugins();\n\n    /** Disables and removes all plugins /\n    public void clearPlugins();\n\n    /** Calls an event with the given details","Permission, or null if none /\n    public Permission getPermission(String name);\n\n    /** Adds a {@link io.wolfscript.permissions.Permission} to this plugin manager. <p> If a permission is already defined with the given name of the new permission, an exception will be thrown.","The default permissions /\n    public Set<Permission> getDefaultPermissions(boolean op);\n\n    /** Recalculates the defaults for the given {@link io.wolfscript.permissions.Permission}. <p> This will have no effect if the specified permission is not registered here.","Set containing all subscribed permissions /\n    public Set<Permissible> getPermissionSubscriptions(String permission);\n\n    /** Subscribes to the given Default permissions by operator status <p> If the specified defaults change in any form, the Permissible will be asked to recalculate.","Set containing all subscribed permissions /\n    public Set<Permissible> getDefaultPermSubscriptions(boolean op);\n\n    /** Gets a set of all registered permissions. <p> This set is a copy and will not be modified live.","Set containing all current registered permissions /\n    public Set<Permission> getPermissions();\n\n    /** Returns whether or not timing code should be used for event calls","True if event timings are to be used"]},"scope":"public","return":"boolean","name":"useTimings","args":[]}],"imports":["java.io.File","java.util.Set","io.wolfscript.event.Event","io.wolfscript.event.EventPriority","io.wolfscript.event.Listener","io.wolfscript.permissions.Permissible","io.wolfscript.permissions.Permission"],"properties":[]},"io.wolfscript.plugin.RegisteredListener":{"namespace":"io.wolfscript.plugin","title":"Stores relevant information for plugin listeners","description":"Stores relevant information for plugin listeners","name":"RegisteredListener","qualifiedname":"io.wolfscript.plugin.RegisteredListener","type":"class","scope":"public","constructors":[{"title":"RegisteredListener constructor","description":"RegisteredListener constructor","scope":"public","name":"RegisteredListener","args":[{"name":"Listener","type":"final","description":"Listener argument"},{"name":"EventExecutor","type":"final","description":"EventExecutor argument"},{"name":"EventPriority","type":"final","description":"EventPriority argument"},{"name":"Plugin","type":"final","description":"Plugin argument"},{"name":"boolean","type":"final","description":"boolean argument"}]}],"methods":[{"title":"Gets the listener for this registration","description":"Gets the listener for this registration","doc":{"return":["Registered Listener /\n    public Listener getListener() {\n        return listener;\n    }\n\n    /** Gets the plugin for this registration","Registered Plugin /\n    public Plugin getPlugin() {\n        return plugin;\n    }\n\n    /** Gets the priority for this registration","Registered Priority /\n    public EventPriority getPriority() {\n        return priority;\n    }\n\n    /** Calls the event executor","True when ignoring cancelled events"],"param":["event The event"],"throws":["EventException If an event handler throws an exception. /\n    public void callEvent(final Event event) throws EventException {\n        if (event instanceof Cancellable){\n            if (((Cancellable) event).isCancelled() && isIgnoringCancelled()){\n                return;\n            }\n        }\n        executor.execute(listener, event);\n    }\n\n     /** Whether this listener accepts cancelled events"]},"scope":"public","return":"boolean","name":"isIgnoringCancelled","args":[]}],"imports":["io.wolfscript.event.*"],"properties":[]},"io.wolfscript.plugin.RegisteredServiceProvider":{"namespace":"io.wolfscript.plugin","title":"A registered service provider.","description":"A registered service provider.","doc":{"param":["<T> Service"]},"name":"RegisteredServiceProvider","qualifiedname":"io.wolfscript.plugin.RegisteredServiceProvider","type":"class","scope":"public","implements":["Comparable<RegisteredServiceProvider<?>"],"constructors":[{"title":"RegisteredServiceProvider constructor","description":"RegisteredServiceProvider constructor","scope":"public","name":"RegisteredServiceProvider","args":[{"name":"provider","type":"T","description":"provider argument"},{"name":"priority","type":"io.wolfscript.plugin.ServicePriority","description":"priority argument"},{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"}]}],"methods":[{"title":"compareTo method","description":"compareTo method","scope":"public","return":"int","name":"compareTo","args":[]}],"imports":[],"properties":[{"name":"Plugin","modifier":"readonly","args":[],"description":"Plugin property","return":"io.wolfscript.plugin.Plugin","scope":"public","title":"Plugin property"},{"name":"Priority","modifier":"readonly","args":[],"description":"Priority property","return":"io.wolfscript.plugin.ServicePriority","scope":"public","title":"Priority property"},{"name":"Provider","modifier":"readonly","args":[],"description":"Provider property","return":"T","scope":"public","title":"Provider property"},{"name":"Service","modifier":"readonly","args":[],"description":"Service property","return":"Class<T>","scope":"public","title":"Service property"}]},"io.wolfscript.plugin.ServicePriority":{"namespace":"io.wolfscript.plugin","title":"Represents various priorities of a provider.","description":"Represents various priorities of a provider.","name":"ServicePriority","qualifiedname":"io.wolfscript.plugin.ServicePriority","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"Lowest","value":"","title":"Lowest ServicePriority","description":"Lowest ServicePriority"},{"code":"Low","value":"","title":"Low ServicePriority","description":"Low ServicePriority"},{"code":"Normal","value":"","title":"Normal ServicePriority","description":"Normal ServicePriority"},{"code":"High","value":"","title":"High ServicePriority","description":"High ServicePriority"}],"properties":[]},"io.wolfscript.plugin.ServicesManager":{"namespace":"io.wolfscript.plugin","title":"Manages services and service providers. Services are an interface","description":"Manages services and service providers. Services are an interface specifying a list of methods that a provider must implement. Providers are implementations of these services. A provider can be queried from the services manager in order to use a service (if one is available). If multiple plugins register a service, then the service with the highest priority takes precedence.","name":"ServicesManager","qualifiedname":"io.wolfscript.plugin.ServicesManager","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["java.util.Collection","java.util.List"],"properties":[{"name":"KnownServices","modifier":"readonly","args":[],"description":"Get: Register a provider of a service.","doc":{"param":["<T> Provider","service service class","provider provider to register","plugin plugin with the provider","priority priority of the provider /\n    public <T> void register(Class<T> service, T provider, Plugin plugin, ServicePriority priority);\n\n    /** Unregister all the providers registered by a particular plugin.","plugin The plugin /\n    public void unregisterAll(Plugin plugin);\n\n    /** Unregister a particular provider for a particular service.","service The service interface","provider The service provider implementation /\n    public void unregister(Class<?> service, Object provider);\n\n    /** Unregister a particular provider.","provider The service provider implementation /\n    public void unregister(Object provider);\n\n    /** Queries for a provider. This may return if no provider has been registered for a service. The highest priority provider is returned.","<T> The service interface","service The service interface","<T> The service interface","service The service interface","plugin The plugin","<T> The service interface","service The service interface"],"return":["provider or null /\n    public <T> T load(Class<T> service);\n\n    /** Queries for a provider registration. This may return if no provider has been registered for a service.","provider registration or null /\n    public <T> RegisteredServiceProvider<T> getRegistration(Class<T> service);\n\n    /** Get registrations of providers for a plugin.","provider registration or null /\n    public List<RegisteredServiceProvider<?>> getRegistrations(Plugin plugin);\n\n    /** Get registrations of providers for a service. The returned list is unmodifiable.","list of registrations /\n    public <T> Collection<RegisteredServiceProvider<T>> getRegistrations(Class<T> service);\n\n    /** Get a list of known services. A service is known if it has registered providers for it.","list of known services"]},"return":"Collection<Class<?>>","scope":"public","title":"Get: Register a provider of a service."}]},"io.wolfscript.plugin.SimplePluginManager":{"namespace":"io.wolfscript.plugin","title":"Handles all plugin management from the Server","description":"Handles all plugin management from the Server","name":"SimplePluginManager","qualifiedname":"io.wolfscript.plugin.SimplePluginManager","type":"class","scope":"public","describe":"final","implements":["io.wolfscript.plugin.PluginManager"],"constructors":[{"title":"SimplePluginManager constructor","description":"SimplePluginManager constructor","scope":"public","name":"SimplePluginManager","args":[{"name":"instance","type":"io.wolfscript.Server","description":"instance argument"},{"name":"commandMap","type":"io.wolfscript.command.SimpleCommandMap","description":"commandMap argument"}]}],"methods":[{"title":"Registers the specified plugin loader","description":"Registers the specified plugin loader","doc":{"throws":["IllegalArgumentException Thrown when the given Class is not a valid PluginLoader /\n    public void registerInterface(Class<? extends PluginLoader> loader) throws IllegalArgumentException {\n        PluginLoader instance;\n\n        if (PluginLoader.class.isAssignableFrom(loader)) {\n            Constructor<? extends PluginLoader> constructor;\n\n            try {\n                constructor = loader.getConstructor(Server.class);\n                instance = constructor.newInstance(server);\n            } catch (NoSuchMethodException ex) {\n                String className = loader.getName();\n\n                throw new IllegalArgumentException(String.format(\"Class %s does not have a public %s(Server) constructor\", className, className), ex);\n            } catch (Exception ex) {\n                throw new IllegalArgumentException(String.format(\"Unexpected exception %s while attempting to construct a new instance of %s\", ex.getClass().getName(), loader.getName()), ex);\n            }\n        } else {\n            throw new IllegalArgumentException(String.format(\"Class %s does not implement interface PluginLoader\", loader.getName()));\n        }\n\n        Pattern[] patterns = instance.getPluginFileFilters();\n\n        synchronized (this) {\n            for (Pattern pattern : patterns) {\n                fileAssociations.put(pattern, instance);\n            }\n        }\n    }\n\n    /** Loads the plugins contained within the specified directory","InvalidPluginException Thrown when the specified file is not a valid plugin","UnknownDependencyException If a required dependency could not be found /\n    public synchronized Plugin loadPlugin(File file) throws InvalidPluginException, UnknownDependencyException {\n        Validate.notNull(file, \"File cannot be null\");\n\n        checkUpdate(file);\n\n        Set<Pattern> filters = fileAssociations.keySet();\n        Plugin result = null;\n\n        for (Pattern filter : filters) {\n            String name = file.getName();\n            Matcher match = filter.matcher(name);\n\n            if (match.find()) {\n                PluginLoader loader = fileAssociations.get(filter);\n\n                result = loader.loadPlugin(file);\n            }\n        }\n\n        if (result != null) {\n            plugins.add(result);\n            lookupNames.put(result.getDescription().getName(), result);\n        }\n\n        return result;\n    }\n\n    private void checkUpdate(File file) {\n        if (updateDirectory == null || !updateDirectory.isDirectory()) {\n            return;\n        }\n\n        File updateFile = new File(updateDirectory, file.getName());\n        if (updateFile.isFile() && FileUtil.copy(updateFile, file)) {\n            updateFile.delete();\n        }\n    }\n\n    /** Checks if the given plugin is loaded and returns it when applicable <p> Please note that the name of the plugin is case-sensitive"],"return":["A list of all plugins loaded /\n    public Plugin[] loadPlugins(File directory) {\n        Validate.notNull(directory, \"Directory cannot be null\");\n        Validate.isTrue(directory.isDirectory(), \"Directory must be a directory\");\n\n        List<Plugin> result = new ArrayList<Plugin>();\n        Set<Pattern> filters = fileAssociations.keySet();\n\n        if (!(server.getUpdateFolder().equals(\"\"))) {\n            updateDirectory = new File(directory, server.getUpdateFolder());\n        }\n\n        Map<String, File> plugins = new HashMap<String, File>();\n        Set<String> loadedPlugins = new HashSet<String>();\n        Map<String, Collection<String>> dependencies = new HashMap<String, Collection<String>>();\n        Map<String, Collection<String>> softDependencies = new HashMap<String, Collection<String>>();\n\n        // This is where it figures out all possible plugins\n        for (File file : directory.listFiles()) {\n            PluginLoader loader = null;\n            for (Pattern filter : filters) {\n                Matcher match = filter.matcher(file.getName());\n                if (match.find()) {\n                    loader = fileAssociations.get(filter);\n                }\n            }\n\n            if (loader == null) continue;\n\n            PluginDescriptionFile description = null;\n            try {\n                description = loader.getPluginDescription(file);\n                String name = description.getName();\n                if (name.equalsIgnoreCase(\"wolfscript\") || name.equalsIgnoreCase(\"minecraft\") || name.equalsIgnoreCase(\"mojang\")) {\n                    server.getLogger().log(Level.SEVERE, \"Could not load '\" + file.getPath() + \"' in folder '\" + directory.getPath() + \"': Restricted Name\");\n                    continue;\n                } else if (description.rawName.indexOf(' ') != -1) {\n                    server.getLogger().warning(String.format(\n                        \"Plugin `%s' uses the space-character (0x20) in its name `%s' - this is discouraged\",\n                        description.getFullName(),\n                        description.rawName\n                        ));\n                }\n            } catch (InvalidDescriptionException ex) {\n                server.getLogger().log(Level.SEVERE, \"Could not load '\" + file.getPath() + \"' in folder '\" + directory.getPath() + \"'\", ex);\n                continue;\n            }\n\n            File replacedFile = plugins.put(description.getName(), file);\n            if (replacedFile != null) {\n                server.getLogger().severe(String.format(\n                    \"Ambiguous plugin name `%s' for files `%s' and `%s' in `%s'\",\n                    description.getName(),\n                    file.getPath(),\n                    replacedFile.getPath(),\n                    directory.getPath()\n                    ));\n            }\n\n            Collection<String> softDependencySet = description.getSoftDepend();\n            if (softDependencySet != null && !softDependencySet.isEmpty()) {\n                if (softDependencies.containsKey(description.getName())) {\n                    // Duplicates do not matter, they will be removed together if applicable\n                    softDependencies.get(description.getName()).addAll(softDependencySet);\n                } else {\n                    softDependencies.put(description.getName(), new LinkedList<String>(softDependencySet));\n                }\n            }\n\n            Collection<String> dependencySet = description.getDepend();\n            if (dependencySet != null && !dependencySet.isEmpty()) {\n                dependencies.put(description.getName(), new LinkedList<String>(dependencySet));\n            }\n\n            Collection<String> loadBeforeSet = description.getLoadBefore();\n            if (loadBeforeSet != null && !loadBeforeSet.isEmpty()) {\n                for (String loadBeforeTarget : loadBeforeSet) {\n                    if (softDependencies.containsKey(loadBeforeTarget)) {\n                        softDependencies.get(loadBeforeTarget).add(description.getName());\n                    } else {\n                        // softDependencies is never iterated, so 'ghost' plugins aren't an issue\n                        Collection<String> shortSoftDependency = new LinkedList<String>();\n                        shortSoftDependency.add(description.getName());\n                        softDependencies.put(loadBeforeTarget, shortSoftDependency);\n                    }\n                }\n            }\n        }\n\n        while (!plugins.isEmpty()) {\n            boolean missingDependency = true;\n            Iterator<String> pluginIterator = plugins.keySet().iterator();\n\n            while (pluginIterator.hasNext()) {\n                String plugin = pluginIterator.next();\n\n                if (dependencies.containsKey(plugin)) {\n                    Iterator<String> dependencyIterator = dependencies.get(plugin).iterator();\n\n                    while (dependencyIterator.hasNext()) {\n                        String dependency = dependencyIterator.next();\n\n                        // Dependency loaded\n                        if (loadedPlugins.contains(dependency)) {\n                            dependencyIterator.remove();\n\n                        // We have a dependency not found\n                        } else if (!plugins.containsKey(dependency)) {\n                            missingDependency = false;\n                            File file = plugins.get(plugin);\n                            pluginIterator.remove();\n                            softDependencies.remove(plugin);\n                            dependencies.remove(plugin);\n\n                            server.getLogger().log(\n                                Level.SEVERE,\n                                \"Could not load '\" + file.getPath() + \"' in folder '\" + directory.getPath() + \"'\",\n                                new UnknownDependencyException(dependency));\n                            break;\n                        }\n                    }\n\n                    if (dependencies.containsKey(plugin) && dependencies.get(plugin).isEmpty()) {\n                        dependencies.remove(plugin);\n                    }\n                }\n                if (softDependencies.containsKey(plugin)) {\n                    Iterator<String> softDependencyIterator = softDependencies.get(plugin).iterator();\n\n                    while (softDependencyIterator.hasNext()) {\n                        String softDependency = softDependencyIterator.next();\n\n                        // Soft depend is no longer around\n                        if (!plugins.containsKey(softDependency)) {\n                            softDependencyIterator.remove();\n                        }\n                    }\n\n                    if (softDependencies.get(plugin).isEmpty()) {\n                        softDependencies.remove(plugin);\n                    }\n                }\n                if (!(dependencies.containsKey(plugin) || softDependencies.containsKey(plugin)) && plugins.containsKey(plugin)) {\n                    // We're clear to load, no more soft or hard dependencies left\n                    File file = plugins.get(plugin);\n                    pluginIterator.remove();\n                    missingDependency = false;\n\n                    try {\n                        result.add(loadPlugin(file));\n                        loadedPlugins.add(plugin);\n                        continue;\n                    } catch (InvalidPluginException ex) {\n                        server.getLogger().log(Level.SEVERE, \"Could not load '\" + file.getPath() + \"' in folder '\" + directory.getPath() + \"'\", ex);\n                    }\n                }\n            }\n\n            if (missingDependency) {\n                // We now iterate over plugins until something loads\n                // This loop will ignore soft dependencies\n                pluginIterator = plugins.keySet().iterator();\n\n                while (pluginIterator.hasNext()) {\n                    String plugin = pluginIterator.next();\n\n                    if (!dependencies.containsKey(plugin)) {\n                        softDependencies.remove(plugin);\n                        missingDependency = false;\n                        File file = plugins.get(plugin);\n                        pluginIterator.remove();\n\n                        try {\n                            result.add(loadPlugin(file));\n                            loadedPlugins.add(plugin);\n                            break;\n                        } catch (InvalidPluginException ex) {\n                            server.getLogger().log(Level.SEVERE, \"Could not load '\" + file.getPath() + \"' in folder '\" + directory.getPath() + \"'\", ex);\n                        }\n                    }\n                }\n                // We have no plugins left without a depend\n                if (missingDependency) {\n                    softDependencies.clear();\n                    dependencies.clear();\n                    Iterator<File> failedPluginIterator = plugins.values().iterator();\n\n                    while (failedPluginIterator.hasNext()) {\n                        File file = failedPluginIterator.next();\n                        failedPluginIterator.remove();\n                        server.getLogger().log(Level.SEVERE, \"Could not load '\" + file.getPath() + \"' in folder '\" + directory.getPath() + \"': circular dependency detected\");\n                    }\n                }\n            }\n        }\n\n        return result.toArray(new Plugin[result.size()]);\n    }\n\n    /** Loads the plugin in the specified file <p> File must be valid according to the current enabled Plugin interfaces","The Plugin loaded, or null if it was invalid","Plugin if it exists, otherwise null /\n    public synchronized Plugin getPlugin(String name) {\n        return lookupNames.get(name.replace(' ', '_'));\n    }\n\n    public synchronized Plugin[] getPlugins() {\n        return plugins.toArray(new Plugin[0]);\n    }\n\n    /** Checks if the given plugin is enabled or not <p> Please note that the name of the plugin is case-sensitive.","true if the plugin is enabled, otherwise false /\n    public boolean isPluginEnabled(String name) {\n        Plugin plugin = getPlugin(name);\n\n        return isPluginEnabled(plugin);\n    }\n\n    /** Checks if the given plugin is enabled or not","true if the plugin is enabled, otherwise false /\n    public boolean isPluginEnabled(Plugin plugin) {\n        if ((plugin != null) && (plugins.contains(plugin))) {\n            return plugin.isEnabled();\n        } else {\n            return false;\n        }\n    }\n\n    public void enablePlugin(final Plugin plugin) {\n        if (!plugin.isEnabled()) {\n            List<Command> pluginCommands = PluginCommandYamlParser.parse(plugin);\n\n            if (!pluginCommands.isEmpty()) {\n                commandMap.registerAll(plugin.getDescription().getName(), pluginCommands);\n            }\n\n            try {\n                plugin.getPluginLoader().enablePlugin(plugin);\n            } catch (Throwable ex) {\n                server.getLogger().log(Level.SEVERE, \"Error occurred (in the plugin loader) while enabling \" + plugin.getDescription().getFullName() + \" (Is it up to date?)\", ex);\n            }\n\n            HandlerList.bakeAll();\n        }\n    }\n\n    public void disablePlugins() {\n        Plugin[] plugins = getPlugins();\n        for (int i = plugins.length - 1; i >= 0; i--) {\n            disablePlugin(plugins[i]);\n        }\n    }\n\n    public void disablePlugin(final Plugin plugin) {\n        if (plugin.isEnabled()) {\n            try {\n                plugin.getPluginLoader().disablePlugin(plugin);\n            } catch (Throwable ex) {\n                server.getLogger().log(Level.SEVERE, \"Error occurred (in the plugin loader) while disabling \" + plugin.getDescription().getFullName() + \" (Is it up to date?)\", ex);\n            }\n\n            try {\n                server.getScheduler().cancelTasks(plugin);\n            } catch (Throwable ex) {\n                server.getLogger().log(Level.SEVERE, \"Error occurred (in the plugin loader) while cancelling tasks for \" + plugin.getDescription().getFullName() + \" (Is it up to date?)\", ex);\n            }\n\n            try {\n                server.getServicesManager().unregisterAll(plugin);\n            } catch (Throwable ex) {\n                server.getLogger().log(Level.SEVERE, \"Error occurred (in the plugin loader) while unregistering services for \" + plugin.getDescription().getFullName() + \" (Is it up to date?)\", ex);\n            }\n\n            try {\n                HandlerList.unregisterAll(plugin);\n            } catch (Throwable ex) {\n                server.getLogger().log(Level.SEVERE, \"Error occurred (in the plugin loader) while unregistering events for \" + plugin.getDescription().getFullName() + \" (Is it up to date?)\", ex);\n            }\n\n            try {\n                server.getMessenger().unregisterIncomingPluginChannel(plugin);\n                server.getMessenger().unregisterOutgoingPluginChannel(plugin);\n            } catch(Throwable ex) {\n                server.getLogger().log(Level.SEVERE, \"Error occurred (in the plugin loader) while unregistering plugin channels for \" + plugin.getDescription().getFullName() + \" (Is it up to date?)\", ex);\n            }\n        }\n    }\n\n    public void clearPlugins() {\n        synchronized (this) {\n            disablePlugins();\n            plugins.clear();\n            lookupNames.clear();\n            HandlerList.unregisterAll();\n            fileAssociations.clear();\n            permissions.clear();\n            defaultPerms.get(true).clear();\n            defaultPerms.get(false).clear();\n        }\n    }\n\n    /** Calls an event with the given details. <p> This method only synchronizes when the event is not asynchronous."]},"scope":"public","return":"void","name":"useTimings","args":[{"name":"use","type":"boolean","description":"True if per event timing code should be used"}]}],"imports":["java.io.File","java.lang.reflect.Constructor","java.lang.reflect.Method","java.util.ArrayList","java.util.Collection","java.util.HashMap","java.util.HashSet","java.util.Iterator","java.util.LinkedHashMap","java.util.LinkedList","java.util.List","java.util.Map","java.util.Set","java.util.WeakHashMap","java.util.logging.Level","java.util.regex.Matcher","java.util.regex.Pattern","org.apache.commons.lang.Validate","io.wolfscript.Server","io.wolfscript.command.Command","io.wolfscript.command.PluginCommandYamlParser","io.wolfscript.command.SimpleCommandMap","io.wolfscript.event.Event","io.wolfscript.event.EventPriority","io.wolfscript.event.HandlerList","io.wolfscript.event.Listener","io.wolfscript.permissions.Permissible","io.wolfscript.permissions.Permission","io.wolfscript.permissions.PermissionDefault","io.wolfscript.util.FileUtil","com.google.common.collect.ImmutableSet"],"properties":[]},"io.wolfscript.plugin.SimpleServicesManager":{"namespace":"io.wolfscript.plugin","title":"A simple services manager.","description":"A simple services manager.","name":"SimpleServicesManager","qualifiedname":"io.wolfscript.plugin.SimpleServicesManager","type":"class","scope":"public","implements":["io.wolfscript.plugin.ServicesManager"],"constructors":[],"methods":[],"imports":["io.wolfscript.WolfScript","io.wolfscript.event.server.ServiceRegisterEvent","io.wolfscript.event.server.ServiceUnregisterEvent","com.google.common.collect.ImmutableList","com.google.common.collect.ImmutableSet","java.util.ArrayList","java.util.Collections","java.util.HashMap","java.util.Iterator","java.util.Map","java.util.List","java.util.NoSuchElementException","java.util.Set"],"properties":[{"name":"KnownServices","modifier":"readonly","args":[],"description":"Get: Map of providers. /\n    private final Map<Class<?>, List<RegisteredServiceProvider<?>>> providers = new HashMap<Class<?>, List<RegisteredServiceProvider<?>>>();\n\n    /** Register a provider of a service.","doc":{"param":["<T> Provider","service service class","provider provider to register","plugin plugin with the provider","priority priority of the provider /\n    public <T> void register(Class<T> service, T provider, Plugin plugin, ServicePriority priority) {\n        RegisteredServiceProvider<T> registeredProvider = null;\n        synchronized (providers) {\n            List<RegisteredServiceProvider<?>> registered = providers.get(service);\n            if (registered == null) {\n                registered = new ArrayList<RegisteredServiceProvider<?>>();\n                providers.put(service, registered);\n            }\n\n            registeredProvider = new RegisteredServiceProvider<T>(service, provider, priority, plugin);\n\n            // Insert the provider into the collection, much more efficient big O than sort\n            int position = Collections.binarySearch(registered, registeredProvider);\n            if (position < 0) {\n                registered.add(-(position + 1), registeredProvider);\n            } else {\n                registered.add(position, registeredProvider);\n            }\n\n        }\n        WolfScript.getServer().getPluginManager().callEvent(new ServiceRegisterEvent(registeredProvider));\n    }\n\n    /** Unregister all the providers registered by a particular plugin.","plugin The plugin /\n    public void unregisterAll(Plugin plugin) {\n        ArrayList<ServiceUnregisterEvent> unregisteredEvents = new ArrayList<ServiceUnregisterEvent>();\n        synchronized (providers) {\n            Iterator<Map.Entry<Class<?>, List<RegisteredServiceProvider<?>>>> it = providers.entrySet().iterator();\n\n            try {\n                while (it.hasNext()) {\n                    Map.Entry<Class<?>, List<RegisteredServiceProvider<?>>> entry = it.next();\n                    Iterator<RegisteredServiceProvider<?>> it2 = entry.getValue().iterator();\n\n                    try {\n                        // Removed entries that are from this plugin\n\n                        while (it2.hasNext()) {\n                            RegisteredServiceProvider<?> registered = it2.next();\n\n                            if (registered.getPlugin().equals(plugin)) {\n                                it2.remove();\n                                unregisteredEvents.add(new ServiceUnregisterEvent(registered));\n                            }\n                        }\n                    } catch (NoSuchElementException e) { // Why does Java suck\n                    }\n\n                    // Get rid of the empty list\n                    if (entry.getValue().size() == 0) {\n                        it.remove();\n                    }\n                }\n            } catch (NoSuchElementException e) {}\n        }\n        for (ServiceUnregisterEvent event : unregisteredEvents) {\n            WolfScript.getServer().getPluginManager().callEvent(event);\n        }\n    }\n\n    /** Unregister a particular provider for a particular service.","service The service interface","provider The service provider implementation /\n    public void unregister(Class<?> service, Object provider) {\n        ArrayList<ServiceUnregisterEvent> unregisteredEvents = new ArrayList<ServiceUnregisterEvent>();\n        synchronized (providers) {\n            Iterator<Map.Entry<Class<?>, List<RegisteredServiceProvider<?>>>> it = providers.entrySet().iterator();\n\n            try {\n                while (it.hasNext()) {\n                    Map.Entry<Class<?>, List<RegisteredServiceProvider<?>>> entry = it.next();\n\n                    // We want a particular service\n                    if (entry.getKey() != service) {\n                        continue;\n                    }\n\n                    Iterator<RegisteredServiceProvider<?>> it2 = entry.getValue().iterator();\n\n                    try {\n                        // Removed entries that are from this plugin\n\n                        while (it2.hasNext()) {\n                            RegisteredServiceProvider<?> registered = it2.next();\n\n                            if (registered.getProvider() == provider) {\n                                it2.remove();\n                                unregisteredEvents.add(new ServiceUnregisterEvent(registered));\n                            }\n                        }\n                    } catch (NoSuchElementException e) { // Why does Java suck\n                    }\n\n                    // Get rid of the empty list\n                    if (entry.getValue().size() == 0) {\n                        it.remove();\n                    }\n                }\n            } catch (NoSuchElementException e) {}\n        }\n        for (ServiceUnregisterEvent event : unregisteredEvents) {\n            WolfScript.getServer().getPluginManager().callEvent(event);\n        }\n    }\n\n    /** Unregister a particular provider.","provider The service provider implementation /\n    public void unregister(Object provider) {\n        ArrayList<ServiceUnregisterEvent> unregisteredEvents = new ArrayList<ServiceUnregisterEvent>();\n        synchronized (providers) {\n            Iterator<Map.Entry<Class<?>, List<RegisteredServiceProvider<?>>>> it = providers.entrySet().iterator();\n\n            try {\n                while (it.hasNext()) {\n                    Map.Entry<Class<?>, List<RegisteredServiceProvider<?>>> entry = it.next();\n                    Iterator<RegisteredServiceProvider<?>> it2 = entry.getValue().iterator();\n\n                    try {\n                        // Removed entries that are from this plugin\n\n                        while (it2.hasNext()) {\n                            RegisteredServiceProvider<?> registered = it2.next();\n\n                            if (registered.getProvider().equals(provider)) {\n                                it2.remove();\n                                unregisteredEvents.add(new ServiceUnregisterEvent(registered));\n                            }\n                        }\n                    } catch (NoSuchElementException e) { // Why does Java suck\n                    }\n\n                    // Get rid of the empty list\n                    if (entry.getValue().size() == 0) {\n                        it.remove();\n                    }\n                }\n            } catch (NoSuchElementException e) {}\n        }\n        for (ServiceUnregisterEvent event : unregisteredEvents) {\n            WolfScript.getServer().getPluginManager().callEvent(event);\n        }\n    }\n\n    /** Queries for a provider. This may return if no provider has been registered for a service. The highest priority provider is returned.","<T> The service interface","service The service interface","<T> The service interface","service The service interface","plugin The plugin","<T> The service interface","service The service interface"],"return":["provider or null /\n    public <T> T load(Class<T> service) {\n        synchronized (providers) {\n            List<RegisteredServiceProvider<?>> registered = providers.get(service);\n\n            if (registered == null) {\n                return null;\n            }\n\n            // This should not be null!\n            return service.cast(registered.get(0).getProvider());\n        }\n    }\n\n    /** Queries for a provider registration. This may return if no provider has been registered for a service.","provider registration or null /\n    @SuppressWarnings(\"unchecked\")\n    public <T> RegisteredServiceProvider<T> getRegistration(Class<T> service) {\n        synchronized (providers) {\n            List<RegisteredServiceProvider<?>> registered = providers.get(service);\n\n            if (registered == null) {\n                return null;\n            }\n\n            // This should not be null!\n            return (RegisteredServiceProvider<T>) registered.get(0);\n        }\n    }\n\n    /** Get registrations of providers for a plugin.","provider registration or null /\n    public List<RegisteredServiceProvider<?>> getRegistrations(Plugin plugin) {\n        ImmutableList.Builder<RegisteredServiceProvider<?>> ret = ImmutableList.<RegisteredServiceProvider<?>>builder();\n        synchronized (providers) {\n            for (List<RegisteredServiceProvider<?>> registered : providers.values()) {\n                for (RegisteredServiceProvider<?> provider : registered) {\n                    if (provider.getPlugin().equals(plugin)) {\n                        ret.add(provider);\n                    }\n                }\n            }\n        }\n        return ret.build();\n    }\n\n    /** Get registrations of providers for a service. The returned list is an unmodifiable copy.","a copy of the list of registrations /\n    @SuppressWarnings(\"unchecked\")\n    public <T> List<RegisteredServiceProvider<T>> getRegistrations(Class<T> service) {\n        ImmutableList.Builder<RegisteredServiceProvider<T>> ret;\n        synchronized (providers) {\n            List<RegisteredServiceProvider<?>> registered = providers.get(service);\n\n            if (registered == null) {\n                return ImmutableList.<RegisteredServiceProvider<T>>of();\n            }\n\n            ret = ImmutableList.<RegisteredServiceProvider<T>>builder();\n\n            for (RegisteredServiceProvider<?> provider : registered) {\n                ret.add((RegisteredServiceProvider<T>) provider);\n            }\n\n        }\n        return ret.build();\n    }\n\n    /** Get a list of known services. A service is known if it has registered providers for it.","a copy of the set of known services"]},"return":"Set<Class<?>>","scope":"public","title":"Get: Map of providers."}]},"io.wolfscript.plugin.TimedRegisteredListener":{"namespace":"io.wolfscript.plugin","title":"Extends RegisteredListener to include timing information","description":"Extends RegisteredListener to include timing information","name":"TimedRegisteredListener","qualifiedname":"io.wolfscript.plugin.TimedRegisteredListener","type":"class","scope":"public","extends":["io.wolfscript.plugin.RegisteredListener"],"constructors":[{"title":"TimedRegisteredListener constructor","description":"TimedRegisteredListener constructor","scope":"public","name":"TimedRegisteredListener","args":[{"name":"Listener","type":"final","description":"Listener argument"},{"name":"EventExecutor","type":"final","description":"EventExecutor argument"},{"name":"EventPriority","type":"final","description":"EventPriority argument"},{"name":"Plugin","type":"final","description":"Plugin argument"},{"name":"boolean","type":"final","description":"boolean argument"}]}],"methods":[{"title":"Resets the call count and total time for this listener","description":"Resets the call count and total time for this listener /\n    public void reset() {\n        count = 0;\n        totalTime = 0;\n    }\n\n    /** Gets the total times this listener has been called","doc":{"return":["Times this listener has been called /\n    public int getCount() {\n        return count;\n    }\n\n    /** Gets the total time calls to this listener have taken","Total time for all calls of this listener /\n    public long getTotalTime() {\n        return totalTime;\n    }\n\n    /** Gets the class of the events this listener handled. If it handled multiple classes of event, the closest shared superclass will be returned, such that for any event this listener has handled, <code>this.getEventClass().isAssignableFrom(event.getClass())</code> and no class <code>this.getEventClass().isAssignableFrom(clazz) {@literal && this.getEventClass() != clazz &&} event.getClass().isAssignableFrom(clazz)</code> for all handled events.","the event class handled by this RegisteredListener /\n    public Class<? extends Event> getEventClass() {\n        return eventClass;\n    }\n\n    /** Gets whether this listener has handled multiple events, such that for some two events, <code>eventA.getClass() != eventB.getClass()</code>.","true if this listener has handled multiple events"]},"scope":"public","return":"boolean","name":"hasMultiple","args":[]}],"imports":["io.wolfscript.event.Event","io.wolfscript.event.EventException","io.wolfscript.event.EventPriority","io.wolfscript.event.Listener"],"properties":[]},"io.wolfscript.plugin.UnknownDependencyException":{"namespace":"io.wolfscript.plugin","title":"Thrown when attempting to load an invalid Plugin file","description":"Thrown when attempting to load an invalid Plugin file","name":"UnknownDependencyException","qualifiedname":"io.wolfscript.plugin.UnknownDependencyException","type":"class","scope":"public","extends":["RuntimeException"],"constructors":[{"title":"Constructs a new UnknownDependencyException based on the given","description":"Constructs a new UnknownDependencyException based on the given Exception","doc":{"param":["throwable Exception that triggered this Exception /\n    public UnknownDependencyException(final Throwable throwable) {\n        super(throwable);\n    }\n\n    /** Constructs a new UnknownDependencyException with the given message","message Brief message explaining the cause of the exception /\n    public UnknownDependencyException(final String message) {\n        super(message);\n    }\n\n    /** Constructs a new UnknownDependencyException based on the given Exception","message Brief message explaining the cause of the exception","throwable Exception that triggered this Exception /\n    public UnknownDependencyException(final Throwable throwable, final String message) {\n        super(message, throwable);\n    }\n\n    /** Constructs a new UnknownDependencyException"]},"scope":"public","name":"UnknownDependencyException","args":[]}],"methods":[],"imports":[],"properties":[]},"io.wolfscript.plugin.java.0":{"namespace":"io.wolfscript.plugin","title":"Classes for handling {@link io.wolfscript.plugin.Plugin plugins} written in","description":"Classes for handling {@link io.wolfscript.plugin.Plugin plugins} written in java.","name":"java","qualifiedname":"io.wolfscript.plugin.java.0","packagename":"io.wolfscript.plugin.java","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.plugin.java.JavaPlugin","io.wolfscript.plugin.java.JavaPluginLoader"],"interfaces":[],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.plugin.java.JavaPlugin":{"namespace":"io.wolfscript.plugin.java","title":"Represents a Java plugin","description":"Represents a Java plugin","name":"JavaPlugin","qualifiedname":"io.wolfscript.plugin.java.JavaPlugin","type":"class","scope":"public","describe":"abstract","extends":["io.wolfscript.plugin.PluginBase"],"constructors":[{"title":"JavaPlugin constructor","description":"JavaPlugin constructor","scope":"public","name":"JavaPlugin","args":[]}],"methods":[],"imports":["java.io.File","java.io.FileOutputStream","java.io.IOException","java.io.InputStream","java.io.InputStreamReader","java.io.OutputStream","java.io.Reader","java.net.URL","java.net.URLConnection","java.nio.charset.Charset","java.util.ArrayList","java.util.List","java.util.logging.Level","java.util.logging.Logger","org.apache.commons.lang.Validate","io.wolfscript.Server","io.wolfscript.Warning.WarningState","io.wolfscript.command.Command","io.wolfscript.command.CommandSender","io.wolfscript.command.PluginCommand","io.wolfscript.configuration.InvalidConfigurationException","io.wolfscript.configuration.file.FileConfiguration","io.wolfscript.configuration.file.YamlConfiguration","io.wolfscript.generator.ChunkGenerator","io.wolfscript.plugin.AuthorNagException","io.wolfscript.plugin.PluginAwareness","io.wolfscript.plugin.PluginBase","io.wolfscript.plugin.PluginDescriptionFile","io.wolfscript.plugin.PluginLoader","io.wolfscript.plugin.PluginLogger","com.avaje.ebean.EbeanServer","com.avaje.ebean.EbeanServerFactory","com.avaje.ebean.config.DataSourceConfig","com.avaje.ebean.config.ServerConfig","com.avaje.ebeaninternal.api.SpiEbeanServer","com.avaje.ebeaninternal.server.ddl.DdlGenerator","com.google.common.base.Charsets","com.google.common.io.ByteStreams"],"properties":[{"name":"ProvidingPlugin","modifier":"readonly","args":[],"describe":"static","description":"ProvidingPlugin property","doc":{"deprecated":["This method is intended for unit testing purposes when the other {@linkplain #JavaPlugin(JavaPluginLoader, PluginDescriptionFile, File, File) constructor} cannot be used. <p> Its existence may be temporary.","This method is legacy and will be removed - it must be replaced by the specially provided constructor(s). /\n    @Deprecated\n    protected final void initialize(PluginLoader loader, Server server, PluginDescriptionFile description, File dataFolder, File file, ClassLoader classLoader) {\n        if (server.getWarningState() == WarningState.OFF) {\n            return;\n        }\n        getLogger().log(Level.WARNING, getClass().getName() + \" is already initialized\", server.getWarningState() == WarningState.DEFAULT ? null : new AuthorNagException(\"Explicit initialization\"));\n    }\n\n    final void init(PluginLoader loader, Server server, PluginDescriptionFile description, File dataFolder, File file, ClassLoader classLoader) {\n        this.loader = loader;\n        this.server = server;\n        this.file = file;\n        this.description = description;\n        this.dataFolder = dataFolder;\n        this.classLoader = classLoader;\n        this.configFile = new File(dataFolder, \"config.yml\");\n        this.logger = new PluginLogger(this);\n\n        if (description.isDatabaseEnabled()) {\n            ServerConfig db = new ServerConfig();\n\n            db.setDefaultServer(false);\n            db.setRegister(false);\n            db.setClasses(getDatabaseClasses());\n            db.setName(description.getName());\n            server.configureDbConfig(db);\n\n            DataSourceConfig ds = db.getDataSourceConfig();\n\n            ds.setUrl(replaceDatabaseString(ds.getUrl()));\n            dataFolder.mkdirs();\n\n            ClassLoader previous = Thread.currentThread().getContextClassLoader();\n\n            Thread.currentThread().setContextClassLoader(classLoader);\n            ebean = EbeanServerFactory.create(db);\n            Thread.currentThread().setContextClassLoader(previous);\n        }\n    }\n\n    /** Provides a list of all classes that should be persisted in the database","This method cannot return false, as {@link io.wolfscript.plugin.java.JavaPlugin} is now initialized in the constructor. /\n    @Deprecated\n    public final boolean isInitialized() {\n        return true;\n    }\n\n    /** {@inheritDoc} /\n    @Override\n    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {\n        return false;\n    }\n\n    /** {@inheritDoc} /\n    @Override\n    public List<String> onTabComplete(CommandSender sender, Command command, String alias, String[] args) {\n        return null;\n    }\n\n    /** Gets the command with the given name, specific to this plugin. Commands need to be registered in the {@link PluginDescriptionFile#getCommands() PluginDescriptionFile} to exist at runtime."],"return":["The folder. /\n    @Override\n    public final File getDataFolder() {\n        return dataFolder;\n    }\n\n    /** Gets the associated PluginLoader responsible for this plugin","PluginLoader that controls this plugin /\n    @Override\n    public final PluginLoader getPluginLoader() {\n        return loader;\n    }\n\n    /** Returns the Server instance currently running this plugin","Server running this plugin /\n    @Override\n    public final Server getServer() {\n        return server;\n    }\n\n    /** Returns a value indicating whether or not this plugin is currently enabled","true if this plugin is enabled, otherwise false /\n    @Override\n    public final boolean isEnabled() {\n        return isEnabled;\n    }\n\n    /** Returns the file which contains this plugin","File containing this plugin /\n    protected File getFile() {\n        return file;\n    }\n\n    /** Returns the plugin.yaml file containing the details for this plugin","Contents of the plugin.yaml file /\n    @Override\n    public final PluginDescriptionFile getDescription() {\n        return description;\n    }\n\n    @Override\n    public FileConfiguration getConfig() {\n        if (newConfig == null) {\n            reloadConfig();\n        }\n        return newConfig;\n    }\n\n    /** Provides a reader for a text file located inside the jar. The behavior of this method adheres to {@link PluginAwareness.Flags#UTF8}, or if not defined, uses UTF8 if {@link FileConfiguration#UTF8_OVERRIDE} is specified, or system default otherwise.","null if {@link #getResource(String)} returns null","ClassLoader holding this plugin /\n    protected final ClassLoader getClassLoader() {\n        return classLoader;\n    }\n\n    /** Sets the enabled state of this plugin","List of Classes that are Ebeans /\n    public List<Class<?>> getDatabaseClasses() {\n        return new ArrayList<Class<?>>();\n    }\n\n    private String replaceDatabaseString(String input) {\n        input = input.replaceAll(\"\\\\{DIR\\\\}\", dataFolder.getPath().replaceAll(\"\\\\\\\\\", \"/\") + \"/\");\n        input = input.replaceAll(\"\\\\{NAME\\\\}\", description.getName().replaceAll(\"[^\\\\w_-]\", \"\"));\n        return input;\n    }\n\n    /** Gets the initialization status of this plugin","true if this plugin is initialized, otherwise false","the plugin command if found, otherwise null /\n    public PluginCommand getCommand(String name) {\n        String alias = name.toLowerCase();\n        PluginCommand command = getServer().getPluginCommand(alias);\n\n        if (command == null || command.getPlugin() != this) {\n            command = getServer().getPluginCommand(description.getName().toLowerCase() + \":\" + alias);\n        }\n\n        if (command != null && command.getPlugin() == this) {\n            return command;\n        } else {\n            return null;\n        }\n    }\n\n    @Override\n    public void onLoad() {}\n\n    @Override\n    public void onDisable() {}\n\n    @Override\n    public void onEnable() {}\n\n    @Override\n    public ChunkGenerator getDefaultWorldGenerator(String worldName, String id) {\n        return null;\n    }\n\n    @Override\n    public final boolean isNaggable() {\n        return naggable;\n    }\n\n    @Override\n    public final void setNaggable(boolean canNag) {\n        this.naggable = canNag;\n    }\n\n    @Override\n    public EbeanServer getDatabase() {\n        return ebean;\n    }\n\n    protected void installDDL() {\n        SpiEbeanServer serv = (SpiEbeanServer) getDatabase();\n        DdlGenerator gen = serv.getDdlGenerator();\n\n        gen.runScript(false, gen.generateCreateDdl());\n    }\n\n    protected void removeDDL() {\n        SpiEbeanServer serv = (SpiEbeanServer) getDatabase();\n        DdlGenerator gen = serv.getDdlGenerator();\n\n        gen.runScript(true, gen.generateDropDdl());\n    }\n\n    @Override\n    public final Logger getLogger() {\n        return logger;\n    }\n\n    @Override\n    public String toString() {\n        return description.getFullName();\n    }\n\n    /** This method provides fast access to the plugin that has {@link #getProvidingPlugin(Class) provided} the given plugin class, which is usually the plugin that implemented it. <p> An exception to this would be if plugin's jar that contained the class does not extend the class, where the intended plugin would have resided in a different jar / classloader.","the plugin that provides and implements said class","the plugin that provided the class"],"throws":["IllegalArgumentException if file is null","IllegalArgumentException if clazz is null","IllegalArgumentException if clazz does not extend {@link JavaPlugin}","IllegalStateException if clazz was not provided by a plugin, for example, if called with <code>JavaPlugin.getPlugin(JavaPlugin.class)</code>","IllegalStateException if called from the static initializer for given JavaPlugin","ClassCastException if plugin that provided the class does not extend the class /\n    public static <T extends JavaPlugin> T getPlugin(Class<T> clazz) {\n        Validate.notNull(clazz, \"Null class cannot have a plugin\");\n        if (!JavaPlugin.class.isAssignableFrom(clazz)) {\n            throw new IllegalArgumentException(clazz + \" does not extend \" + JavaPlugin.class);\n        }\n        final ClassLoader cl = clazz.getClassLoader();\n        if (!(cl instanceof PluginClassLoader)) {\n            throw new IllegalArgumentException(clazz + \" is not initialized by \" + PluginClassLoader.class);\n        }\n        JavaPlugin plugin = ((PluginClassLoader) cl).plugin;\n        if (plugin == null) {\n            throw new IllegalStateException(\"Cannot get plugin for \" + clazz + \" from a static initializer\");\n        }\n        return clazz.cast(plugin);\n    }\n\n    /** This method provides fast access to the plugin that has provided the given class.","IllegalArgumentException if the class is not provided by a JavaPlugin","IllegalArgumentException if class is null","IllegalStateException if called from the static initializer for given JavaPlugin"],"see":["ClassLoader#getResourceAsStream(String) /\n    @SuppressWarnings(\"deprecation\")\n    protected final Reader getTextResource(String file) {\n        final InputStream in = getResource(file);\n\n        return in == null ? null : new InputStreamReader(in, isStrictlyUTF8() || FileConfiguration.UTF8_OVERRIDE ? Charsets.UTF_8 : Charset.defaultCharset());\n    }\n\n    @SuppressWarnings(\"deprecation\")\n    @Override\n    public void reloadConfig() {\n        newConfig = YamlConfiguration.loadConfiguration(configFile);\n\n        final InputStream defConfigStream = getResource(\"config.yml\");\n        if (defConfigStream == null) {\n            return;\n        }\n\n        final YamlConfiguration defConfig;\n        if (isStrictlyUTF8() || FileConfiguration.UTF8_OVERRIDE) {\n            defConfig = YamlConfiguration.loadConfiguration(new InputStreamReader(defConfigStream, Charsets.UTF_8));\n        } else {\n            final byte[] contents;\n            defConfig = new YamlConfiguration();\n            try {\n                contents = ByteStreams.toByteArray(defConfigStream);\n            } catch (final IOException e) {\n                getLogger().log(Level.SEVERE, \"Unexpected failure reading config.yml\", e);\n                return;\n            }\n\n            final String text = new String(contents, Charset.defaultCharset());\n            if (!text.equals(new String(contents, Charsets.UTF_8))) {\n                getLogger().warning(\"Default system encoding may have misread config.yml from plugin jar\");\n            }\n\n            try {\n                defConfig.loadFromString(text);\n            } catch (final InvalidConfigurationException e) {\n                getLogger().log(Level.SEVERE, \"Cannot load configuration from jar\", e);\n            }\n        }\n\n        newConfig.setDefaults(defConfig);\n    }\n\n    private boolean isStrictlyUTF8() {\n        return getDescription().getAwareness().contains(PluginAwareness.Flags.UTF8);\n    }\n\n    @Override\n    public void saveConfig() {\n        try {\n            getConfig().save(configFile);\n        } catch (IOException ex) {\n            logger.log(Level.SEVERE, \"Could not save config to \" + configFile, ex);\n        }\n    }\n\n    @Override\n    public void saveDefaultConfig() {\n        if (!configFile.exists()) {\n            saveResource(\"config.yml\", false);\n        }\n    }\n\n    @Override\n    public void saveResource(String resourcePath, boolean replace) {\n        if (resourcePath == null || resourcePath.equals(\"\")) {\n            throw new IllegalArgumentException(\"ResourcePath cannot be null or empty\");\n        }\n\n        resourcePath = resourcePath.replace('\\\\', '/');\n        InputStream in = getResource(resourcePath);\n        if (in == null) {\n            throw new IllegalArgumentException(\"The embedded resource '\" + resourcePath + \"' cannot be found in \" + file);\n        }\n\n        File outFile = new File(dataFolder, resourcePath);\n        int lastIndex = resourcePath.lastIndexOf('/');\n        File outDir = new File(dataFolder, resourcePath.substring(0, lastIndex >= 0 ? lastIndex : 0));\n\n        if (!outDir.exists()) {\n            outDir.mkdirs();\n        }\n\n        try {\n            if (!outFile.exists() || replace) {\n                OutputStream out = new FileOutputStream(outFile);\n                byte[] buf = new byte[1024];\n                int len;\n                while ((len = in.read(buf)) > 0) {\n                    out.write(buf, 0, len);\n                }\n                out.close();\n                in.close();\n            } else {\n                logger.log(Level.WARNING, \"Could not save \" + outFile.getName() + \" to \" + outFile + \" because \" + outFile.getName() + \" already exists.\");\n            }\n        } catch (IOException ex) {\n            logger.log(Level.SEVERE, \"Could not save \" + outFile.getName() + \" to \" + outFile, ex);\n        }\n    }\n\n    @Override\n    public InputStream getResource(String filename) {\n        if (filename == null) {\n            throw new IllegalArgumentException(\"Filename cannot be null\");\n        }\n\n        try {\n            URL url = getClassLoader().getResource(filename);\n\n            if (url == null) {\n                return null;\n            }\n\n            URLConnection connection = url.openConnection();\n            connection.setUseCaches(false);\n            return connection.getInputStream();\n        } catch (IOException ex) {\n            return null;\n        }\n    }\n\n    /** Returns the ClassLoader which holds this plugin"]},"return":"io.wolfscript.plugin.java.JavaPlugin","scope":"public","title":"ProvidingPlugin property"}]},"io.wolfscript.plugin.java.JavaPluginLoader":{"namespace":"io.wolfscript.plugin.java","title":"Represents a Java plugin loader, allowing plugins in the form of .jar","description":"Represents a Java plugin loader, allowing plugins in the form of .jar","name":"JavaPluginLoader","qualifiedname":"io.wolfscript.plugin.java.JavaPluginLoader","type":"class","scope":"public","describe":"final","implements":["io.wolfscript.plugin.PluginLoader"],"constructors":[{"title":"This class was not meant to be constructed explicitly","description":"This class was not meant to be constructed explicitly","scope":"public","name":"JavaPluginLoader","deprecated":true,"args":[{"name":"instance","type":"io.wolfscript.Server","description":"the server instance"}]}],"methods":[{"title":"disablePlugin method","description":"disablePlugin method","scope":"public","return":"void","name":"disablePlugin","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"}]},{"title":"enablePlugin method","description":"enablePlugin method","scope":"public","return":"void","name":"enablePlugin","args":[{"name":"Plugin","type":"final","description":"Plugin argument"}]}],"imports":["java.io.File","java.io.FileNotFoundException","java.io.IOException","java.io.InputStream","java.lang.reflect.InvocationTargetException","java.lang.reflect.Method","java.util.Arrays","java.util.HashMap","java.util.HashSet","java.util.LinkedHashMap","java.util.Map","java.util.Set","java.util.jar.JarEntry","java.util.jar.JarFile","java.util.logging.Level","java.util.regex.Pattern","org.apache.commons.lang.Validate","io.wolfscript.Server","io.wolfscript.Warning","io.wolfscript.Warning.WarningState","io.wolfscript.configuration.serialization.ConfigurationSerializable","io.wolfscript.configuration.serialization.ConfigurationSerialization","io.wolfscript.event.Event","io.wolfscript.event.EventException","io.wolfscript.event.EventHandler","io.wolfscript.event.Listener","io.wolfscript.event.server.PluginDisableEvent","io.wolfscript.event.server.PluginEnableEvent","io.wolfscript.plugin.AuthorNagException","io.wolfscript.plugin.EventExecutor","io.wolfscript.plugin.InvalidDescriptionException","io.wolfscript.plugin.InvalidPluginException","io.wolfscript.plugin.Plugin","io.wolfscript.plugin.PluginDescriptionFile","io.wolfscript.plugin.PluginLoader","io.wolfscript.plugin.RegisteredListener","io.wolfscript.plugin.TimedRegisteredListener","io.wolfscript.plugin.UnknownDependencyException","org.yaml.snakeyaml.error.YAMLException"],"properties":[{"name":"PluginFileFilters","modifier":"readonly","args":[],"description":"PluginFileFilters property","return":"Pattern[]","scope":"public","title":"PluginFileFilters property"}]},"io.wolfscript.plugin.messaging.0":{"namespace":"io.wolfscript.plugin","title":"Classes dedicated to specialized plugin to client protocols.","description":"Classes dedicated to specialized plugin to client protocols.","name":"messaging","qualifiedname":"io.wolfscript.plugin.messaging.0","packagename":"io.wolfscript.plugin.messaging","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.plugin.messaging.ChannelNameTooLongException","io.wolfscript.plugin.messaging.ChannelNotRegisteredException","io.wolfscript.plugin.messaging.MessageTooLargeException","io.wolfscript.plugin.messaging.PluginMessageListenerRegistration","io.wolfscript.plugin.messaging.ReservedChannelException","io.wolfscript.plugin.messaging.StandardMessenger"],"interfaces":["io.wolfscript.plugin.messaging.Messenger","io.wolfscript.plugin.messaging.PluginMessageListener","io.wolfscript.plugin.messaging.PluginMessageRecipient"],"enums":["io.wolfscript.plugin.messaging.PluginChannelDirection"],"namespaces":[],"properties":[]},"io.wolfscript.plugin.messaging.ChannelNameTooLongException":{"namespace":"io.wolfscript.plugin.messaging","title":"Thrown if a Plugin Channel is too long.","description":"Thrown if a Plugin Channel is too long.","name":"ChannelNameTooLongException","qualifiedname":"io.wolfscript.plugin.messaging.ChannelNameTooLongException","type":"class","scope":"public","extends":["RuntimeException"],"constructors":[{"title":"ChannelNameTooLongException constructor","description":"ChannelNameTooLongException constructor","scope":"public","name":"ChannelNameTooLongException","args":[]},{"title":"ChannelNameTooLongException constructor","description":"ChannelNameTooLongException constructor","scope":"public","name":"ChannelNameTooLongException","args":[{"name":"channel","type":"String","description":"channel argument"}]}],"methods":[],"imports":[],"properties":[]},"io.wolfscript.plugin.messaging.ChannelNotRegisteredException":{"namespace":"io.wolfscript.plugin.messaging","title":"Thrown if a Plugin attempts to send a message on an unregistered channel.","description":"Thrown if a Plugin attempts to send a message on an unregistered channel.","name":"ChannelNotRegisteredException","qualifiedname":"io.wolfscript.plugin.messaging.ChannelNotRegisteredException","type":"class","scope":"public","extends":["RuntimeException"],"constructors":[{"title":"ChannelNotRegisteredException constructor","description":"ChannelNotRegisteredException constructor","scope":"public","name":"ChannelNotRegisteredException","args":[]},{"title":"ChannelNotRegisteredException constructor","description":"ChannelNotRegisteredException constructor","scope":"public","name":"ChannelNotRegisteredException","args":[{"name":"channel","type":"String","description":"channel argument"}]}],"methods":[],"imports":[],"properties":[]},"io.wolfscript.plugin.messaging.MessageTooLargeException":{"namespace":"io.wolfscript.plugin.messaging","title":"Thrown if a Plugin Message is sent that is too large to be sent.","description":"Thrown if a Plugin Message is sent that is too large to be sent.","name":"MessageTooLargeException","qualifiedname":"io.wolfscript.plugin.messaging.MessageTooLargeException","type":"class","scope":"public","extends":["RuntimeException"],"constructors":[{"title":"MessageTooLargeException constructor","description":"MessageTooLargeException constructor","scope":"public","name":"MessageTooLargeException","args":[]},{"title":"MessageTooLargeException constructor","description":"MessageTooLargeException constructor","scope":"public","name":"MessageTooLargeException","args":[]},{"title":"MessageTooLargeException constructor","description":"MessageTooLargeException constructor","scope":"public","name":"MessageTooLargeException","args":[{"name":"length","type":"int","description":"length argument"}]},{"title":"MessageTooLargeException constructor","description":"MessageTooLargeException constructor","scope":"public","name":"MessageTooLargeException","args":[{"name":"msg","type":"String","description":"msg argument"}]}],"methods":[],"imports":[],"properties":[]},"io.wolfscript.plugin.messaging.Messenger":{"namespace":"io.wolfscript.plugin.messaging","title":"A class responsible for managing the registrations of plugin channels and","description":"A class responsible for managing the registrations of plugin channels and their listeners.","name":"Messenger","qualifiedname":"io.wolfscript.plugin.messaging.Messenger","type":"interface","scope":"public","constructors":[],"fields":[{"title":"Represents the largest size that an individual Plugin Message may be.","description":"Represents the largest size that an individual Plugin Message may be. /\n    public static final int MAX_MESSAGE_SIZE = 32766;\n\n    /** Represents the largest size that a Plugin Channel may be.","doc":{},"name":"MAX","scope":"public","type":"int","describe":"static final"}],"methods":[{"title":"Represents the largest size that an individual Plugin Message may be.","description":"Represents the largest size that an individual Plugin Message may be. /\n    public static final int MAX_MESSAGE_SIZE = 32766;\n\n    /** Represents the largest size that a Plugin Channel may be. /\n    public static final int MAX_CHANNEL_SIZE = 20;\n\n    /** Checks if the specified channel is a reserved name.","doc":{"return":["True if the channel is reserved, otherwise false.","The resulting registration that was made as a result of this method.","List of all registered outgoing plugin channels. /\n    public Set<String> getOutgoingChannels();\n\n    /** Gets a set containing all the outgoing plugin channels that the specified plugin is registered to.","List of all registered outgoing plugin channels that a plugin is registered to.","List of all registered incoming plugin channels. /\n    public Set<String> getIncomingChannels();\n\n    /** Gets a set containing all the incoming plugin channels that the specified plugin is registered for.","List of all registered incoming plugin channels that the plugin is registered for.","List of all registrations that the plugin has.","List of all registrations that are on the channel.","List of all registrations that the plugin has.","True if the registration is valid, otherwise false. /\n    public boolean isRegistrationValid(PluginMessageListenerRegistration registration);\n\n    /** Checks if the specified plugin has registered to receive incoming messages through the requested channel.","True if the channel is registered, else false. /\n    public boolean isIncomingChannelRegistered(Plugin plugin, String channel);\n\n    /** Checks if the specified plugin has registered to send outgoing messages through the requested channel.","True if the channel is registered, else false. /\n    public boolean isOutgoingChannelRegistered(Plugin plugin, String channel);\n\n    /** Dispatches the specified incoming message to any registered listeners."],"throws":["IllegalArgumentException Thrown if channel is null. /\n    public boolean isReservedChannel(String channel);\n\n    /** Registers the specific plugin to the requested outgoing plugin channel, allowing it to send messages through that channel to any clients.","IllegalArgumentException Thrown if plugin or channel is null. /\n    public void registerOutgoingPluginChannel(Plugin plugin, String channel);\n\n    /** Unregisters the specific plugin from the requested outgoing plugin channel, no longer allowing it to send messages through that channel to any clients.","IllegalArgumentException Thrown if plugin or channel is null. /\n    public void unregisterOutgoingPluginChannel(Plugin plugin, String channel);\n\n    /** Unregisters the specific plugin from all outgoing plugin channels, no longer allowing it to send any plugin messages.","IllegalArgumentException Thrown if plugin is null. /\n    public void unregisterOutgoingPluginChannel(Plugin plugin);\n\n    /** Registers the specific plugin for listening on the requested incoming plugin channel, allowing it to act upon any plugin messages.","IllegalArgumentException Thrown if plugin, channel or listener is null, or the listener is already registered for this channel. /\n    public PluginMessageListenerRegistration registerIncomingPluginChannel(Plugin plugin, String channel, PluginMessageListener listener);\n\n    /** Unregisters the specific plugin's listener from listening on the requested incoming plugin channel, no longer allowing it to act upon any plugin messages.","IllegalArgumentException Thrown if plugin, channel or listener is null. /\n    public void unregisterIncomingPluginChannel(Plugin plugin, String channel, PluginMessageListener listener);\n\n    /** Unregisters the specific plugin from listening on the requested incoming plugin channel, no longer allowing it to act upon any plugin messages.","IllegalArgumentException Thrown if plugin or channel is null. /\n    public void unregisterIncomingPluginChannel(Plugin plugin, String channel);\n\n    /** Unregisters the specific plugin from listening on all plugin channels through all listeners.","IllegalArgumentException Thrown if plugin is null. /\n    public void unregisterIncomingPluginChannel(Plugin plugin);\n\n    /** Gets a set containing all the outgoing plugin channels.","IllegalArgumentException Thrown if plugin is null. /\n    public Set<String> getOutgoingChannels(Plugin plugin);\n\n    /** Gets a set containing all the incoming plugin channels.","IllegalArgumentException Thrown if plugin is null. /\n    public Set<String> getIncomingChannels(Plugin plugin);\n\n    /** Gets a set containing all the incoming plugin channel registrations that the specified plugin has.","IllegalArgumentException Thrown if plugin is null. /\n    public Set<PluginMessageListenerRegistration> getIncomingChannelRegistrations(Plugin plugin);\n\n    /** Gets a set containing all the incoming plugin channel registrations that are on the requested channel.","IllegalArgumentException Thrown if channel is null. /\n    public Set<PluginMessageListenerRegistration> getIncomingChannelRegistrations(String channel);\n\n    /** Gets a set containing all the incoming plugin channel registrations that the specified plugin has on the requested channel.","IllegalArgumentException Thrown if plugin or channel is null. /\n    public Set<PluginMessageListenerRegistration> getIncomingChannelRegistrations(Plugin plugin, String channel);\n\n    /** Checks if the specified plugin message listener registration is valid. <p> A registration is considered valid if it has not be unregistered and that the plugin is still enabled."]},"scope":"public","return":"void","name":"dispatchIncomingMessage","args":[{"name":"source","type":"io.wolfscript.entity.Player","description":"Source of the message."},{"name":"channel","type":"String","description":"Channel name to check."}]}],"imports":["java.util.Set","io.wolfscript.entity.Player","io.wolfscript.plugin.Plugin"],"properties":[]},"io.wolfscript.plugin.messaging.PluginChannelDirection":{"namespace":"io.wolfscript.plugin.messaging","title":"Represents the different directions a plugin channel may go.","description":"Represents the different directions a plugin channel may go.","name":"PluginChannelDirection","qualifiedname":"io.wolfscript.plugin.messaging.PluginChannelDirection","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"INCOMING","value":"","title":"The plugin channel is being sent to the server from a client.","description":"The plugin channel is being sent to the server from a client.","doc":{}}],"properties":[]},"io.wolfscript.plugin.messaging.PluginMessageListener":{"namespace":"io.wolfscript.plugin.messaging","title":"A listener for a specific Plugin Channel, which will receive notifications","description":"A listener for a specific Plugin Channel, which will receive notifications of messages sent from a client.","name":"PluginMessageListener","qualifiedname":"io.wolfscript.plugin.messaging.PluginMessageListener","type":"interface","scope":"public","constructors":[],"methods":[{"title":"A method that will be thrown when a PluginMessageSource sends a plugin","description":"A method that will be thrown when a PluginMessageSource sends a plugin message on a registered channel.","scope":"public","return":"void","name":"onPluginMessageReceived","args":[{"name":"channel","type":"String","description":"Channel that the message was sent through."},{"name":"player","type":"io.wolfscript.entity.Player","description":"Source of the message."}]}],"imports":["io.wolfscript.entity.Player"],"properties":[]},"io.wolfscript.plugin.messaging.PluginMessageListenerRegistration":{"namespace":"io.wolfscript.plugin.messaging","title":"Contains information about a {@link io.wolfscript.plugin.Plugin}s registration to a plugin","description":"Contains information about a {@link io.wolfscript.plugin.Plugin}s registration to a plugin channel.","name":"PluginMessageListenerRegistration","qualifiedname":"io.wolfscript.plugin.messaging.PluginMessageListenerRegistration","type":"class","scope":"public","describe":"final","constructors":[{"title":"PluginMessageListenerRegistration constructor","description":"PluginMessageListenerRegistration constructor","scope":"public","name":"PluginMessageListenerRegistration","args":[{"name":"messenger","type":"io.wolfscript.plugin.messaging.Messenger","description":"messenger argument"},{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"channel","type":"String","description":"channel argument"},{"name":"listener","type":"io.wolfscript.plugin.messaging.PluginMessageListener","description":"listener argument"}]}],"methods":[{"title":"equals method","description":"equals method","scope":"public","return":"boolean","name":"equals","args":[{"name":"obj","type":"Object","description":"obj argument"}]},{"title":"hashCode method","description":"hashCode method","scope":"public","return":"int","name":"hashCode","args":[]},{"title":"Gets the plugin channel that this registration is about.","description":"Gets the plugin channel that this registration is about.","doc":{"return":["Plugin channel. /\n    public String getChannel() {\n        return channel;\n    }\n\n    /** Gets the registered listener described by this registration.","Registered listener. /\n    public PluginMessageListener getListener() {\n        return listener;\n    }\n\n    /** Gets the plugin that this registration is for.","Registered plugin. /\n    public Plugin getPlugin() {\n        return plugin;\n    }\n\n    /** Checks if this registration is still valid.","True if this registration is still valid, otherwise false."]},"scope":"public","return":"boolean","name":"isValid","args":[]}],"imports":["io.wolfscript.plugin.Plugin"],"properties":[]},"io.wolfscript.plugin.messaging.PluginMessageRecipient":{"namespace":"io.wolfscript.plugin.messaging","title":"Represents a possible recipient for a Plugin Message.","description":"Represents a possible recipient for a Plugin Message.","name":"PluginMessageRecipient","qualifiedname":"io.wolfscript.plugin.messaging.PluginMessageRecipient","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["java.util.Set","io.wolfscript.plugin.Plugin"],"properties":[{"name":"ListeningPluginChannels","modifier":"readonly","args":[],"description":"Get: Sends this recipient a Plugin Message on the specified outgoing channel. <p> The message may not be larger than {@link Messenger#MAX_MESSAGE_SIZE} bytes, and the plugin must be registered to send messages on the specified channel.","doc":{"param":["source The plugin that sent this message.","channel The channel to send this message on.","message The raw message to send."],"throws":["IllegalArgumentException Thrown if the source plugin is disabled.","IllegalArgumentException Thrown if source, channel or message is null.","MessageTooLargeException Thrown if the message is too big.","ChannelNotRegisteredException Thrown if the channel is not registered for this plugin. /\n    public void sendPluginMessage(Plugin source, String channel, byte[] message);\n\n    /** Gets a set containing all the Plugin Channels that this client is listening on."],"return":["Set containing all the channels that this client may accept."]},"return":"Set<String>","scope":"public","title":"Get: Sends this recipient a Plugin Message on the specified outgoing"}]},"io.wolfscript.plugin.messaging.ReservedChannelException":{"namespace":"io.wolfscript.plugin.messaging","title":"Thrown if a plugin attempts to register for a reserved channel (such as","description":"Thrown if a plugin attempts to register for a reserved channel (such as \"REGISTER\")","name":"ReservedChannelException","qualifiedname":"io.wolfscript.plugin.messaging.ReservedChannelException","type":"class","scope":"public","extends":["RuntimeException"],"constructors":[{"title":"ReservedChannelException constructor","description":"ReservedChannelException constructor","scope":"public","name":"ReservedChannelException","args":[]},{"title":"ReservedChannelException constructor","description":"ReservedChannelException constructor","scope":"public","name":"ReservedChannelException","args":[{"name":"name","type":"String","description":"name argument"}]}],"methods":[],"imports":[],"properties":[]},"io.wolfscript.plugin.messaging.StandardMessenger":{"namespace":"io.wolfscript.plugin.messaging","title":"Standard implementation to {@link io.wolfscript.plugin.messaging.Messenger}","description":"Standard implementation to {@link io.wolfscript.plugin.messaging.Messenger}","name":"StandardMessenger","qualifiedname":"io.wolfscript.plugin.messaging.StandardMessenger","type":"class","scope":"public","implements":["io.wolfscript.plugin.messaging.Messenger"],"constructors":[],"methods":[{"title":"isReservedChannel method","description":"isReservedChannel method","scope":"public","return":"boolean","name":"isReservedChannel","args":[{"name":"channel","type":"String","description":"channel argument"}]},{"title":"dispatchIncomingMessage method","description":"dispatchIncomingMessage method","scope":"public","return":"void","name":"dispatchIncomingMessage","args":[{"name":"source","type":"io.wolfscript.entity.Player","description":"source argument"},{"name":"channel","type":"String","description":"channel argument"}]},{"title":"isOutgoingChannelRegistered method","description":"isOutgoingChannelRegistered method","scope":"public","return":"boolean","name":"isOutgoingChannelRegistered","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"channel","type":"String","description":"channel argument"}]},{"title":"isIncomingChannelRegistered method","description":"isIncomingChannelRegistered method","scope":"public","return":"boolean","name":"isIncomingChannelRegistered","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"channel","type":"String","description":"channel argument"}]},{"title":"isRegistrationValid method","description":"isRegistrationValid method","scope":"public","return":"boolean","name":"isRegistrationValid","args":[{"name":"registration","type":"io.wolfscript.plugin.messaging.PluginMessageListenerRegistration","description":"registration argument"}]},{"title":"getIncomingChannelRegistrations method","description":"getIncomingChannelRegistrations method","scope":"public","return":"Set<PluginMessageListenerRegistration>","name":"getIncomingChannelRegistrations","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"channel","type":"String","description":"channel argument"}]},{"title":"getIncomingChannelRegistrations method","description":"getIncomingChannelRegistrations method","scope":"public","return":"Set<PluginMessageListenerRegistration>","name":"getIncomingChannelRegistrations","args":[{"name":"channel","type":"String","description":"channel argument"}]},{"title":"getOutgoingChannels method","description":"getOutgoingChannels method","scope":"public","return":"Set<String>","name":"getOutgoingChannels","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"}]},{"title":"getIncomingChannelRegistrations method","description":"getIncomingChannelRegistrations method","scope":"public","return":"Set<PluginMessageListenerRegistration>","name":"getIncomingChannelRegistrations","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"}]},{"title":"getIncomingChannels method","description":"getIncomingChannels method","scope":"public","return":"Set<String>","name":"getIncomingChannels","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"}]},{"title":"registerIncomingPluginChannel method","description":"registerIncomingPluginChannel method","scope":"public","return":"io.wolfscript.plugin.messaging.PluginMessageListenerRegistration","name":"registerIncomingPluginChannel","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"channel","type":"String","description":"channel argument"},{"name":"listener","type":"io.wolfscript.plugin.messaging.PluginMessageListener","description":"listener argument"}]},{"title":"registerOutgoingPluginChannel method","description":"registerOutgoingPluginChannel method","scope":"public","return":"void","name":"registerOutgoingPluginChannel","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"channel","type":"String","description":"channel argument"}]},{"title":"unregisterIncomingPluginChannel method","description":"unregisterIncomingPluginChannel method","scope":"public","return":"void","name":"unregisterIncomingPluginChannel","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"}]},{"title":"unregisterIncomingPluginChannel method","description":"unregisterIncomingPluginChannel method","scope":"public","return":"void","name":"unregisterIncomingPluginChannel","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"channel","type":"String","description":"channel argument"}]},{"title":"unregisterIncomingPluginChannel method","description":"unregisterIncomingPluginChannel method","scope":"public","return":"void","name":"unregisterIncomingPluginChannel","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"channel","type":"String","description":"channel argument"},{"name":"listener","type":"io.wolfscript.plugin.messaging.PluginMessageListener","description":"listener argument"}]},{"title":"unregisterOutgoingPluginChannel method","description":"unregisterOutgoingPluginChannel method","scope":"public","return":"void","name":"unregisterOutgoingPluginChannel","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"}]},{"title":"unregisterOutgoingPluginChannel method","description":"unregisterOutgoingPluginChannel method","scope":"public","return":"void","name":"unregisterOutgoingPluginChannel","args":[{"name":"plugin","type":"io.wolfscript.plugin.Plugin","description":"plugin argument"},{"name":"channel","type":"String","description":"channel argument"}]},{"title":"Validates a Plugin Channel name.","description":"Validates a Plugin Channel name.","doc":{"throws":["IllegalArgumentException Thrown if the source plugin is disabled.","IllegalArgumentException Thrown if source, channel or message is null.","MessageTooLargeException Thrown if the message is too big.","ChannelNameTooLongException Thrown if the channel name is too long.","ChannelNotRegisteredException Thrown if the channel is not registered for this plugin."]},"scope":"public","describe":"static","return":"void","name":"validatePluginMessage","args":[{"name":"messenger","type":"io.wolfscript.plugin.messaging.Messenger","description":"Messenger to use for validation."},{"name":"source","type":"io.wolfscript.plugin.Plugin","description":"Source plugin of the Message."},{"name":"channel","type":"String","description":"Channel name to validate. /\n    public static void validateChannel(String channel) {\n        if (channel == null) {\n            throw new IllegalArgumentException(\"Channel cannot be null\");\n        }\n        if (channel.length() > Messenger.MAX_CHANNEL_SIZE) {\n            throw new ChannelNameTooLongException(channel);\n        }\n    }\n\n    /** Validates the input of a Plugin Message, ensuring the arguments are all valid."}]}],"imports":["com.google.common.collect.ImmutableSet","com.google.common.collect.ImmutableSet.Builder","java.util.HashMap","java.util.HashSet","java.util.Map","java.util.Set","io.wolfscript.entity.Player","io.wolfscript.plugin.Plugin"],"properties":[{"name":"IncomingChannels","modifier":"readonly","args":[],"description":"IncomingChannels property","return":"Set<String>","scope":"public","title":"IncomingChannels property"},{"name":"OutgoingChannels","modifier":"readonly","args":[],"description":"OutgoingChannels property","return":"Set<String>","scope":"public","title":"OutgoingChannels property"}]},"io.wolfscript.potion.0":{"namespace":"io.wolfscript","title":"Classes to represent various {@link io.wolfscript.Material#POTION potion}","description":"Classes to represent various {@link io.wolfscript.Material#POTION potion} properties and manipulation.","name":"potion","qualifiedname":"io.wolfscript.potion.0","packagename":"io.wolfscript.potion","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.potion.Potion","io.wolfscript.potion.PotionEffect","io.wolfscript.potion.PotionEffectType","io.wolfscript.potion.PotionEffectTypeWrapper"],"interfaces":["io.wolfscript.potion.PotionBrewer"],"enums":["io.wolfscript.potion.PotionType"],"namespaces":[],"properties":[]},"io.wolfscript.potion.Potion":{"namespace":"io.wolfscript.potion","title":"Represents a minecraft potion","description":"Represents a minecraft potion","name":"Potion","qualifiedname":"io.wolfscript.potion.Potion","type":"class","scope":"public","constructors":[],"methods":[],"imports":["java.util.Collection","org.apache.commons.lang.Validate","io.wolfscript.Material","io.wolfscript.entity.LivingEntity","io.wolfscript.inventory.ItemStack","com.google.common.collect.ImmutableList"],"properties":[{"name":"NameId","modifier":"readonly","args":[],"deprecated":true,"description":"Get: Construct a new potion of the given type. Unless the type is {@link PotionType#WATER}, it will be level one, without extended duration. Don't use this constructor to create a no-effect potion other than water bottle.","doc":{"param":["type The potion type","type the type of the potion","tier the tier of the potion","type the type of the potion","tier the tier of the potion","splash whether the potion is a splash potion","type the type of the potion","tier the tier of the potion","splash whether the potion is a splash potion","extended whether the potion has an extended duration","type The type of potion.","level The potion's level. /\n    public Potion(PotionType type, int level) {\n        this(type);\n        Validate.notNull(type, \"Type cannot be null\");\n        Validate.isTrue(type != PotionType.WATER, \"Water bottles don't have a level!\");\n        Validate.isTrue(level > 0 && level < 3, \"Level must be 1 or 2\");\n        this.level = level;\n    }\n\n    /** Create a new potion of the given type and level.","type The type of potion.","level The potion's level.","splash Whether it is a splash potion.","type The type of potion.","level The potion's level.","splash Whether it is a splash potion.","extended Whether it has an extended duration.","name The name index (0-63) /\n    public Potion(int name) {\n        this(PotionType.getByDamageValue(name & POTION_BIT));\n        this.name = name & NAME_BIT;\n        if ((name & POTION_BIT) == 0) {\n            // If it's 0 it would've become PotionType.WATER, but it should actually be mundane potion\n            this.type = null;\n        }\n    }\n\n    /** Chain this to the constructor to make the potion a splash potion.","to The itemstack to apply to /\n    public void apply(ItemStack to) {\n        Validate.notNull(to, \"itemstack cannot be null\");\n        Validate.isTrue(to.getType() == Material.POTION, \"given itemstack is not a potion\");\n        to.setDurability(toDamageValue());\n    }\n\n    /** Applies the effects that would be applied by this potion to the given {@link LivingEntity}.","to The entity to apply the effects to /\n    public void apply(LivingEntity to) {\n        Validate.notNull(to, \"entity cannot be null\");\n        to.addPotionEffects(getEffects());\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (obj == null || getClass() != obj.getClass()) {\n            return false;\n        }\n        Potion other = (Potion) obj;\n        return extended == other.extended && splash == other.splash && level == other.level && type == other.type;\n    }\n\n    /** Returns a collection of {@link PotionEffect}s that this {@link Potion} would confer upon a {@link LivingEntity}.","isExtended Whether the potion should have extended duration /\n    public void setHasExtendedDuration(boolean isExtended) {\n        Validate.isTrue(type == null || !type.isInstant(), \"Instant potions cannot be extended\");\n        extended = isExtended;\n    }\n\n    /** Sets whether this potion is a splash potion. Splash potions can be thrown for a radius effect.","isSplash Whether this is a splash potion /\n    public void setSplash(boolean isSplash) {\n        splash = isSplash;\n    }\n\n    /** Sets the {@link Tier} of this potion.","tier The new tier of this potion","type The new type of this potion /\n    public void setType(PotionType type) {\n        this.type = type;\n    }\n\n    /** Sets the level of this potion.","level The new level of this potion /\n    public void setLevel(int level) {\n        Validate.notNull(this.type, \"No-effect potions don't have a level.\");\n        int max = type.getMaxLevel();\n        Validate.isTrue(level > 0 && level <= max, \"Level must be \" + (max == 1 ? \"\" : \"between 1 and \") + max + \" for this potion\");\n        this.level = level;\n    }\n\n    /** Converts this potion to a valid potion damage short, usable for potion item stacks.","amount The amount of the ItemStack","damage the damage value","other The new PotionBrewer /\n    public static void setPotionBrewer(PotionBrewer other) {\n        if (brewer != null)\n            throw new IllegalArgumentException(\"brewer can only be set internally\");\n        brewer = other;\n    }\n\n    /**"],"see":["#Potion(int) /\n    public Potion(PotionType type) {\n        this.type = type;\n        if (type != null) {\n            this.name = type.getDamageValue();\n        }\n        if (type == null || type == PotionType.WATER) {\n            this.level = 0;\n        }\n    }\n\n    /**","LivingEntity#addPotionEffects(Collection)","PotionBrewer#getEffectsFromDamage(int)","Potion#toDamageValue()"],"deprecated":["In favour of {@link #Potion(PotionType, int)} /    \n    @Deprecated\n    public Potion(PotionType type, Tier tier) {\n        this(type, tier == Tier.TWO ? 2 : 1);\n        Validate.notNull(type, \"Type cannot be null\");\n    }\n\n    /**","In favour of {@link #Potion(PotionType, int, boolean)} /\n    @Deprecated\n    public Potion(PotionType type, Tier tier, boolean splash) {\n        this(type, tier == Tier.TWO ? 2 : 1, splash);\n    }\n\n    /**","In favour of {@link #Potion(PotionType, int, boolean, boolean)} /\n    @Deprecated\n    public Potion(PotionType type, Tier tier, boolean splash, boolean extended) {\n        this(type, tier, splash);\n        this.extended = extended;\n    }\n\n    /** Create a new potion of the given type and level.","In favour of using {@link #Potion(PotionType)} with {@link #splash()}. /\n    @Deprecated\n    public Potion(PotionType type, int level, boolean splash) {\n        this(type, level);\n        this.splash = splash;\n    }\n\n    /** Create a new potion of the given type and level.","In favour of using {@link #Potion(PotionType)} with {@link #extend()} and possibly {@link #splash()}. /\n    @Deprecated\n    public Potion(PotionType type, int level, boolean splash, boolean extended) {\n        this(type, level, splash);\n        this.extended = extended;\n    }\n\n    /** Create a potion with a specific name.","In favour of {@link #setLevel(int)} /\n    @Deprecated\n    public void setTier(Tier tier) {\n        Validate.notNull(tier, \"tier cannot be null\");\n        this.level = (tier == Tier.TWO ? 2 : 1);\n    }\n\n    /** Sets the {@link io.wolfscript.potion.PotionType} of this potion.","Magic value /\n    @Deprecated\n    public short toDamageValue() {\n        short damage;\n        if (type == PotionType.WATER) {\n            return 0;\n        } else if (type == null) {\n            // Without this, mundanePotion.toDamageValue() would return 0\n            damage = (short) (name == 0 ? 8192 : name);\n        } else {\n            damage = (short) (level - 1);\n            damage <<= TIER_SHIFT;\n            damage |= (short) type.getDamageValue();\n        }\n        if (splash) {\n            damage |= SPLASH_BIT;\n        }\n        if (extended) {\n            damage |= EXTENDED_BIT;\n        }\n        return damage;\n    }\n\n    /** Converts this potion to an {@link io.wolfscript.inventory.ItemStack} with the specified amount and a correct damage value.","Magic value /\n    @Deprecated\n    public static Potion fromDamage(int damage) {\n        PotionType type = PotionType.getByDamageValue(damage & POTION_BIT);\n        Potion potion;\n        if (type == null || type == PotionType.WATER) {\n            potion = new Potion(damage & NAME_BIT);\n        } else {\n            int level = (damage & TIER_BIT) >> TIER_SHIFT;\n            level++;\n            potion = new Potion(type, level);\n        }\n        if ((damage & SPLASH_BIT) > 0) {\n            potion = potion.splash();\n        }\n        if ((damage & EXTENDED_BIT) > 0) {\n            potion = potion.extend();\n        }\n        return potion;\n    }\n\n    public static Potion fromItemStack(ItemStack item) {\n        Validate.notNull(item, \"item cannot be null\");\n        if (item.getType() != Material.POTION)\n            throw new IllegalArgumentException(\"item is not a potion\");\n        return fromDamage(item.getDurability());\n    }\n\n    /** Returns an instance of {@link io.wolfscript.potion.PotionBrewer}.","Magic value"],"return":["The potion. /\n    public Potion splash() {\n        setSplash(true);\n        return this;\n    }\n\n    /** Chain this to the constructor to extend the potion's duration.","The potion. /\n    public Potion extend() {\n        setHasExtendedDuration(true);\n        return this;\n    }\n\n    /** Applies the effects of this potion to the given {@link io.wolfscript.inventory.ItemStack}. The ItemStack must be a potion.","The effects that this potion applies /\n    public Collection<PotionEffect> getEffects() {\n        if (type == null) return ImmutableList.<PotionEffect>of();\n        return getBrewer().getEffectsFromDamage(toDamageValue());\n    }\n\n    /** Returns the level of this potion.","The level of this potion /\n    public int getLevel() {\n        return level;\n    }\n\n    /** Returns the {@link Tier} of this potion.","The tier of this potion /\n    @Deprecated\n    public Tier getTier() {\n        return level == 2 ? Tier.TWO : Tier.ONE;\n    }\n\n    /** Returns the {@link io.wolfscript.potion.PotionType} of this potion.","The type of this potion /\n    public PotionType getType() {\n        return type;\n    }\n\n    /** Returns whether this potion has an extended duration.","Whether this potion has extended duration /\n    public boolean hasExtendedDuration() {\n        return extended;\n    }\n\n    @Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = prime + level;\n        result = prime result + (extended ? 1231 : 1237);\n        result = prime result + (splash ? 1231 : 1237);\n        result = prime result + ((type == null) ? 0 : type.hashCode());\n        return result;\n    }\n\n    /** Returns whether this potion is a splash potion.","Whether this is a splash potion /\n    public boolean isSplash() {\n        return splash;\n    }\n\n    /** Set whether this potion has extended duration. This will cause the potion to have roughly 8/3 more duration than a regular potion.","The damage value of this potion","The created ItemStack /\n    public ItemStack toItemStack(int amount) {\n        return new ItemStack(Material.POTION, amount, toDamageValue());\n    }\n\n    @Deprecated\n    public enum Tier {\n        ONE(0),\n        TWO(0x20);\n\n        private int damageBit;\n\n        Tier(int bit) {\n            damageBit = bit;\n        }\n\n        public int getDamageBit() {\n            return damageBit;\n        }\n\n        public static Tier getByDamageBit(int damageBit) {\n            for (Tier tier : Tier.values()) {\n                if (tier.damageBit == damageBit)\n                    return tier;\n            }\n            return null;\n        }\n    }\n\n    private static PotionBrewer brewer;\n\n    private static final int EXTENDED_BIT = 0x40;\n    private static final int POTION_BIT = 0xF;\n    private static final int SPLASH_BIT = 0x4000;\n    private static final int TIER_BIT = 0x20;\n    private static final int TIER_SHIFT = 5;\n    private static final int NAME_BIT = 0x3F;\n\n    /**","the produced potion","An instance of PotionBrewer /\n    public static PotionBrewer getBrewer() {\n        return brewer;\n    }\n\n    /** Sets the current instance of {@link io.wolfscript.potion.PotionBrewer}. Generally not to be used from within a plugin.","the name id"]},"return":"int","scope":"public","title":"Get: Construct a new potion of the given type. Unless the type is {@link"}]},"io.wolfscript.potion.PotionBrewer":{"namespace":"io.wolfscript.potion","title":"Represents a brewer that can create {@link io.wolfscript.potion.PotionEffect}s.","description":"Represents a brewer that can create {@link io.wolfscript.potion.PotionEffect}s.","name":"PotionBrewer","qualifiedname":"io.wolfscript.potion.PotionBrewer","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Creates a {@link io.wolfscript.potion.PotionEffect} from the given {@link io.wolfscript.potion.PotionEffectType},","description":"Creates a {@link io.wolfscript.potion.PotionEffect} from the given {@link io.wolfscript.potion.PotionEffectType}, applying duration modifiers and checks.","doc":{"return":["The resulting potion effect /\n    public PotionEffect createEffect(PotionEffectType potion, int duration, int amplifier);\n\n    /** Returns a collection of {@link io.wolfscript.potion.PotionEffect} that would be applied from a potion with the given data value.","The list of effects"],"deprecated":["Magic value"]},"scope":"public","return":"Collection<PotionEffect>","name":"getEffectsFromDamage","deprecated":true,"args":[{"name":"damage","type":"int","description":"The data value of the potion"}]}],"imports":["java.util.Collection"],"properties":[]},"io.wolfscript.potion.PotionEffect":{"namespace":"io.wolfscript.potion","title":"Represents a potion effect, that can be added to a {@link io.wolfscript.entity.LivingEntity}. A","description":"Represents a potion effect, that can be added to a {@link io.wolfscript.entity.LivingEntity}. A potion effect has a duration that it will last for, an amplifier that will enhance its effects, and a {@link io.wolfscript.potion.PotionEffectType}, that represents its effect on an entity.","name":"PotionEffect","qualifiedname":"io.wolfscript.potion.PotionEffect","type":"class","scope":"public","implements":["io.wolfscript.configuration.serialization.ConfigurationSerializable"],"constructors":[],"methods":[{"title":"Creates a potion effect.","description":"Creates a potion effect.","doc":{"param":["type effect type","duration measured in ticks, see {@link PotionEffect#getDuration()}","amplifier the amplifier, see {@link PotionEffect#getAmplifier()}","ambient the ambient status, see {@link PotionEffect#isAmbient()}","particles the particle status, see {@link PotionEffect#hasParticles()} /\n    public PotionEffect(PotionEffectType type, int duration, int amplifier, boolean ambient, boolean particles){\n        Validate.notNull(type, \"effect type cannot be null\");\n        this.type = type;\n        this.duration = duration;\n        this.amplifier = amplifier;\n        this.ambient = ambient;\n        this.particles = particles;\n    }\n\n    /** Creates a potion effect. Assumes that particles are visible","type effect type","duration measured in ticks, see {@link PotionEffect#getDuration()}","amplifier the amplifier, see {@link PotionEffect#getAmplifier()}","ambient the ambient status, see {@link PotionEffect#isAmbient()} /\n    public PotionEffect(PotionEffectType type, int duration, int amplifier, boolean ambient) {\n        this(type, duration, amplifier, ambient, true);\n    }\n\n    /** Creates a potion effect. Assumes ambient is true.","type Effect type","duration measured in ticks","amplifier the amplifier for the effect","map the map to deserialize from /\n    public PotionEffect(Map<String, Object> map) {\n        this(getEffectType(map), getInt(map, DURATION), getInt(map, AMPLIFIER), getBool(map, AMBIENT, false), getBool(map, PARTICLES, true));\n    }\n\n    private static PotionEffectType getEffectType(Map<?,?> map) {\n        int type = getInt(map, TYPE);\n        PotionEffectType effect = PotionEffectType.getById(type);\n        if (effect != null) {\n            return effect;\n        }\n        throw new NoSuchElementException(map + \" does not contain \" + TYPE);\n    }\n\n    private static int getInt(Map<?,?> map, Object key) {\n        Object num = map.get(key);\n        if (num instanceof Integer) {\n            return (Integer) num;\n        }\n        throw new NoSuchElementException(map + \" does not contain \" + key);\n    }\n\n    private static boolean getBool(Map<?,?> map, Object key, boolean def) {\n        Object bool = map.get(key);\n        if (bool instanceof Boolean) {\n            return (Boolean) bool;\n        }\n        return def;\n    }\n\n    public Map<String, Object> serialize() {\n        return ImmutableMap.<String, Object>of(\n            TYPE, type.getId(),\n            DURATION, duration,\n            AMPLIFIER, amplifier,\n            AMBIENT, ambient,\n            PARTICLES, particles\n        );\n    }\n\n    /** Attempts to add the effect represented by this object to the given {@link LivingEntity}.","entity The entity to add this effect to"],"see":["PotionEffect#PotionEffect(PotionEffectType, int, int, boolean) /\n    public PotionEffect(PotionEffectType type, int duration, int amplifier) {\n        this(type, duration, amplifier, true);\n    }\n\n    /** Constructor for deserialization.","LivingEntity#addPotionEffect(PotionEffect)"],"return":["Whether the effect could be added /\n    public boolean apply(LivingEntity entity) {\n        return entity.addPotionEffect(this);\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (!(obj instanceof PotionEffect)) {\n            return false;\n        }\n        PotionEffect that = (PotionEffect) obj;\n        return this.type.equals(that.type) && this.ambient == that.ambient && this.amplifier == that.amplifier && this.duration == that.duration && this.particles == that.particles;\n    }\n\n    /** Returns the amplifier of this effect. A higher amplifier means the potion effect happens more often over its duration and in some cases has more effect on its target.","The effect amplifier /\n    public int getAmplifier() {\n        return amplifier;\n    }\n\n    /** Returns the duration (in ticks) that this effect will run for when applied to a {@link io.wolfscript.entity.LivingEntity}.","The duration of the effect /\n    public int getDuration() {\n        return duration;\n    }\n\n    /** Returns the {@link io.wolfscript.potion.PotionEffectType} of this effect.","The potion type of this effect /\n    public PotionEffectType getType() {\n        return type;\n    }\n\n    /** Makes potion effect produce more, translucent, particles.","if this effect is ambient /\n    public boolean isAmbient() {\n        return ambient;\n    }\n\n    /**","whether this effect has particles or not"]},"scope":"public","return":"boolean","name":"hasParticles","args":[]},{"title":"hashCode method","description":"hashCode method","scope":"public","return":"int","name":"hashCode","args":[]},{"title":"toString method","description":"toString method","scope":"public","return":"String","name":"toString","args":[]}],"imports":["java.util.Map","java.util.NoSuchElementException","org.apache.commons.lang.Validate","io.wolfscript.configuration.serialization.ConfigurationSerializable","io.wolfscript.configuration.serialization.SerializableAs","io.wolfscript.entity.LivingEntity","com.google.common.collect.ImmutableMap"],"properties":[]},"io.wolfscript.potion.PotionEffectType":{"namespace":"io.wolfscript.potion","title":"Represents a type of potion and its effect on an entity.","description":"Represents a type of potion and its effect on an entity.","name":"PotionEffectType","qualifiedname":"io.wolfscript.potion.PotionEffectType","type":"class","scope":"public","describe":"abstract","constructors":[],"fields":[{"title":"Increases movement speed.","description":"Increases movement speed. /\n    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n\n    /** Decreases movement speed. /\n    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n\n    /** Increases dig speed. /\n    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n\n    /** Decreases dig speed. /\n    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n\n    /** Increases damage dealt. /\n    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n\n    /** Heals an entity. /\n    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n\n    /** Hurts an entity. /\n    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n\n    /** Increases jump height. /\n    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n\n    /** Warps vision on the client. /\n    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n\n    /** Regenerates health. /\n    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n\n    /** Decreases damage dealt to an entity. /\n    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n\n    /** Stops fire damage. /\n    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n\n    /** Allows breathing underwater. /\n    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n\n    /** Grants invisibility. /\n    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14);\n\n    /** Blinds an entity. /\n    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n\n    /** Allows an entity to see in the dark. /\n    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16);\n\n    /** Increases hunger. /\n    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n\n    /** Decreases damage dealt by an entity. /\n    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n\n    /** Deals damage to an entity over time. /\n    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n\n    /** Deals damage to an entity over time and gives the health to the shooter. /\n    public static final PotionEffectType WITHER = new PotionEffectTypeWrapper(20);\n\n    /** Increases the maximum health of an entity. /\n    public static final PotionEffectType HEALTH_BOOST = new PotionEffectTypeWrapper(21);\n\n    /** Increases the maximum health of an entity with health that cannot be regenerated, but is refilled every 30 seconds. /\n    public static final PotionEffectType ABSORPTION = new PotionEffectTypeWrapper(22);\n\n    /** Increases the food level of an entity each tick.","doc":{},"name":"SATURATION","scope":"public","type":"io.wolfscript.potion.PotionEffectType","describe":"static final"}],"methods":[{"title":"Increases movement speed.","description":"Increases movement speed. /\n    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n\n    /** Decreases movement speed. /\n    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n\n    /** Increases dig speed. /\n    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n\n    /** Decreases dig speed. /\n    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n\n    /** Increases damage dealt. /\n    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n\n    /** Heals an entity. /\n    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n\n    /** Hurts an entity. /\n    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n\n    /** Increases jump height. /\n    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n\n    /** Warps vision on the client. /\n    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n\n    /** Regenerates health. /\n    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n\n    /** Decreases damage dealt to an entity. /\n    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n\n    /** Stops fire damage. /\n    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n\n    /** Allows breathing underwater. /\n    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n\n    /** Grants invisibility. /\n    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14);\n\n    /** Blinds an entity. /\n    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n\n    /** Allows an entity to see in the dark. /\n    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16);\n\n    /** Increases hunger. /\n    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n\n    /** Decreases damage dealt by an entity. /\n    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n\n    /** Deals damage to an entity over time. /\n    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n\n    /** Deals damage to an entity over time and gives the health to the shooter. /\n    public static final PotionEffectType WITHER = new PotionEffectTypeWrapper(20);\n\n    /** Increases the maximum health of an entity. /\n    public static final PotionEffectType HEALTH_BOOST = new PotionEffectTypeWrapper(21);\n\n    /** Increases the maximum health of an entity with health that cannot be regenerated, but is refilled every 30 seconds. /\n    public static final PotionEffectType ABSORPTION = new PotionEffectTypeWrapper(22);\n\n    /** Increases the food level of an entity each tick. /\n    public static final PotionEffectType SATURATION = new PotionEffectTypeWrapper(23);\n\n    private final int id;\n\n    protected PotionEffectType(int id) {\n        this.id = id;\n    }\n\n    /** Creates a PotionEffect from this PotionEffectType, applying duration modifiers and checks.","doc":{"see":["PotionBrewer#createEffect(PotionEffectType, int, int)"],"param":["duration time in ticks","amplifier the effect's amplifier","id Unique ID to fetch","name Name of PotionEffectType to fetch","type PotionType to register /\n    public static void registerPotionEffectType(PotionEffectType type) {\n        if (byId[type.id] != null || byName.containsKey(type.getName().toLowerCase())) {\n            throw new IllegalArgumentException(\"Cannot set already-set type\");\n        } else if (!acceptingNew) {\n            throw new IllegalStateException(\n                    \"No longer accepting new potion effect types (can only be done by the server implementation)\");\n        }\n\n        byId[type.id] = type;\n        byName.put(type.getName().toLowerCase(), type);\n    }\n\n    /** Stops accepting any effect type registrations. /\n    public static void stopAcceptingRegistrations() {\n        acceptingNew = false;\n    }\n\n    /** Returns an array of all the registered {@link PotionEffectType}s."],"return":["a resulting potion effect /\n    public PotionEffect createEffect(int duration, int amplifier) {\n        return Potion.getBrewer().createEffect(this, duration, amplifier);\n    }\n\n    /** Returns the duration modifier applied to effects of this type.","duration modifier /\n    public abstract double getDurationModifier();\n\n    /** Returns the unique ID of this type.","Unique ID","The name of this effect type /\n    public abstract String getName();\n\n    /** Returns whether the effect of this type happens once, immediately.","whether this type is normally instant /\n    public abstract boolean isInstant();\n\n    @Override\n    public boolean equals(Object obj) {\n        if (obj == null) {\n            return false;\n        }\n        if (!(obj instanceof PotionEffectType)) {\n            return false;\n        }\n        final PotionEffectType other = (PotionEffectType) obj;\n        if (this.id != other.id) {\n            return false;\n        }\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        return id;\n    }\n\n    @Override\n    public String toString() {\n        return \"PotionEffectType[\" + id + \", \" + getName() + \"]\";\n    }\n\n    private static final PotionEffectType[] byId = new PotionEffectType[24];\n    private static final Map<String, PotionEffectType> byName = new HashMap<String, PotionEffectType>();\n    // will break on updates.\n    private static boolean acceptingNew = true;\n\n    /** Gets the effect type specified by the unique id.","Resulting type, or null if not found.","Resulting PotionEffectType, or null if not found. /\n    public static PotionEffectType getByName(String name) {\n        Validate.notNull(name, \"name cannot be null\");\n        return byName.get(name.toLowerCase());\n    }\n\n    /** Registers an effect type with the given object. <p> Generally not to be used from within a plugin.","Array of types."],"deprecated":["Magic value /\n    @Deprecated\n    public int getId() {\n        return id;\n    }\n\n    /** Returns the name of this effect type.","Magic value /\n    @Deprecated\n    public static PotionEffectType getById(int id) {\n        if (id >= byId.length || id < 0)\n            return null;\n        return byId[id];\n    }\n\n    /** Gets the effect type specified by the given name."]},"scope":"public","describe":"static","return":"PotionEffectType[]","name":"values","args":[]}],"imports":["java.util.HashMap","java.util.Map","org.apache.commons.lang.Validate"],"properties":[]},"io.wolfscript.potion.PotionEffectTypeWrapper":{"namespace":"io.wolfscript.potion","title":"class PotionEffectTypeWrapper","description":"class PotionEffectTypeWrapper","name":"PotionEffectTypeWrapper","qualifiedname":"io.wolfscript.potion.PotionEffectTypeWrapper","type":"class","scope":"public","extends":["io.wolfscript.potion.PotionEffectType"],"constructors":[],"methods":[{"title":"isInstant method","description":"isInstant method","scope":"public","return":"boolean","name":"isInstant","args":[]}],"imports":[],"properties":[{"name":"DurationModifier","modifier":"readonly","args":[],"description":"DurationModifier property","return":"double","scope":"public","title":"DurationModifier property"},{"name":"Name","modifier":"readonly","args":[],"description":"Name property","return":"String","scope":"public","title":"Name property"},{"name":"Type","modifier":"readonly","args":[],"description":"Get: Get the potion type bound to this wrapper.","doc":{"return":["The potion effect type"]},"return":"io.wolfscript.potion.PotionEffectType","scope":"public","title":"Get: Get the potion type bound to this wrapper."}]},"io.wolfscript.potion.PotionType":{"namespace":"io.wolfscript.potion","title":"enum PotionType","description":"enum PotionType","name":"PotionType","qualifiedname":"io.wolfscript.potion.PotionType","type":"enum","scope":"public","constructors":[],"methods":[{"title":"getByDamageValue method","description":"getByDamageValue method","doc":{"return":["the damage value","the matching potion type or null"],"deprecated":["Magic value /\n    @Deprecated\n    public int getDamageValue() {\n        return damageValue;\n    }\n\n    public int getMaxLevel() {\n        return maxLevel;\n    }\n\n    public boolean isInstant() {\n        return effect == null ? true : effect.isInstant();\n    }\n\n    /**","Magic value"]},"scope":"public","describe":"static","return":"io.wolfscript.potion.PotionType","name":"getByDamageValue","deprecated":true,"args":[{"name":"damage","type":"int","description":"the damage value"}]},{"title":"getByEffect method","description":"getByEffect method","scope":"public","describe":"static","return":"io.wolfscript.potion.PotionType","name":"getByEffect","args":[{"name":"effectType","type":"io.wolfscript.potion.PotionEffectType","description":"effectType argument"}]}],"imports":[],"enum":[{"code":"0","value":"","title":"0 PotionType","description":"0 PotionType"},{"code":"null","value":"","title":"null PotionType","description":"null PotionType"},{"code":"1","value":"","title":"1 PotionType","description":"1 PotionType"},{"code":"PotionEffectType.REGENERATION","value":"","title":"PotionEffectType.REGENERATION PotionType","description":"PotionEffectType.REGENERATION PotionType"},{"code":"2","value":"","title":"2 PotionType","description":"2 PotionType"},{"code":"PotionEffectType.SPEED","value":"","title":"PotionEffectType.SPEED PotionType","description":"PotionEffectType.SPEED PotionType"},{"code":"3","value":"","title":"3 PotionType","description":"3 PotionType"},{"code":"PotionEffectType.FIRE_RESISTANCE","value":"","title":"PotionEffectType.FIRE_RESISTANCE PotionType","description":"PotionEffectType.FIRE_RESISTANCE PotionType"},{"code":"4","value":"","title":"4 PotionType","description":"4 PotionType"},{"code":"PotionEffectType.POISON","value":"","title":"PotionEffectType.POISON PotionType","description":"PotionEffectType.POISON PotionType"},{"code":"5","value":"","title":"5 PotionType","description":"5 PotionType"},{"code":"PotionEffectType.HEAL","value":"","title":"PotionEffectType.HEAL PotionType","description":"PotionEffectType.HEAL PotionType"},{"code":"6","value":"","title":"6 PotionType","description":"6 PotionType"},{"code":"PotionEffectType.NIGHT_VISION","value":"","title":"PotionEffectType.NIGHT_VISION PotionType","description":"PotionEffectType.NIGHT_VISION PotionType"},{"code":"8","value":"","title":"8 PotionType","description":"8 PotionType"},{"code":"PotionEffectType.WEAKNESS","value":"","title":"PotionEffectType.WEAKNESS PotionType","description":"PotionEffectType.WEAKNESS PotionType"},{"code":"9","value":"","title":"9 PotionType","description":"9 PotionType"},{"code":"PotionEffectType.INCREASE_DAMAGE","value":"","title":"PotionEffectType.INCREASE_DAMAGE PotionType","description":"PotionEffectType.INCREASE_DAMAGE PotionType"},{"code":"10","value":"","title":"10 PotionType","description":"10 PotionType"},{"code":"PotionEffectType.SLOW","value":"","title":"PotionEffectType.SLOW PotionType","description":"PotionEffectType.SLOW PotionType"},{"code":"11","value":"","title":"11 PotionType","description":"11 PotionType"},{"code":"PotionEffectType.JUMP","value":"","title":"PotionEffectType.JUMP PotionType","description":"PotionEffectType.JUMP PotionType"},{"code":"12","value":"","title":"12 PotionType","description":"12 PotionType"},{"code":"PotionEffectType.HARM","value":"","title":"PotionEffectType.HARM PotionType","description":"PotionEffectType.HARM PotionType"},{"code":"13","value":"","title":"13 PotionType","description":"13 PotionType"},{"code":"PotionEffectType.WATER_BREATHING","value":"","title":"PotionEffectType.WATER_BREATHING PotionType","description":"PotionEffectType.WATER_BREATHING PotionType"},{"code":"14","value":"","title":"14 PotionType","description":"14 PotionType"},{"code":"PotionEffectType.INVISIBILITY","value":"","title":"PotionEffectType.INVISIBILITY PotionType","description":"PotionEffectType.INVISIBILITY PotionType"}],"properties":[{"name":"EffectType","modifier":"readonly","args":[],"description":"EffectType property","return":"io.wolfscript.potion.PotionEffectType","scope":"public","title":"EffectType property"}]},"io.wolfscript.projectiles.0":{"namespace":"io.wolfscript","title":"Classes to represent the source of a projectile","description":"Classes to represent the source of a projectile","name":"projectiles","qualifiedname":"io.wolfscript.projectiles.0","packagename":"io.wolfscript.projectiles","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":[],"interfaces":["io.wolfscript.projectiles.BlockProjectileSource","io.wolfscript.projectiles.ProjectileSource"],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.projectiles.BlockProjectileSource":{"namespace":"io.wolfscript.projectiles","title":"interface BlockProjectileSource","description":"interface BlockProjectileSource","name":"BlockProjectileSource","qualifiedname":"io.wolfscript.projectiles.BlockProjectileSource","type":"interface","scope":"public","extends":["io.wolfscript.projectiles.ProjectileSource"],"constructors":[],"methods":[],"imports":["io.wolfscript.block.Block"],"properties":[{"name":"Block","modifier":"readonly","args":[],"description":"Get: Gets the block this projectile source belongs to.","doc":{"return":["Block for the projectile source"]},"return":"io.wolfscript.block.Block","scope":"public","title":"Get: Gets the block this projectile source belongs to."}]},"io.wolfscript.projectiles.ProjectileSource":{"namespace":"io.wolfscript.projectiles","title":"Represents a valid source of a projectile.","description":"Represents a valid source of a projectile.","name":"ProjectileSource","qualifiedname":"io.wolfscript.projectiles.ProjectileSource","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.entity.Projectile","io.wolfscript.util.Vector"],"properties":[]},"io.wolfscript.scheduler.0":{"namespace":"io.wolfscript","title":"Classes dedicated to letting {@link io.wolfscript.plugin.Plugin plugins} run","description":"Classes dedicated to letting {@link io.wolfscript.plugin.Plugin plugins} run code at specific time intervals, including thread safety.","name":"scheduler","qualifiedname":"io.wolfscript.scheduler.0","packagename":"io.wolfscript.scheduler","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.scheduler.WolfScriptRunnable"],"interfaces":["io.wolfscript.scheduler.WolfScriptScheduler","io.wolfscript.scheduler.WolfScriptTask","io.wolfscript.scheduler.WolfScriptWorker"],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.scheduler.WolfScriptRunnable":{"namespace":"io.wolfscript.scheduler","title":"This class is provided as an easy way to handle scheduling tasks.","description":"This class is provided as an easy way to handle scheduling tasks.","name":"WolfScriptRunnable","qualifiedname":"io.wolfscript.scheduler.WolfScriptRunnable","type":"class","scope":"public","describe":"abstract","implements":["Runnable"],"constructors":[],"methods":[],"imports":["io.wolfscript.WolfScript","io.wolfscript.plugin.Plugin"],"properties":[]},"io.wolfscript.scheduler.WolfScriptScheduler":{"namespace":"io.wolfscript.scheduler","title":"interface WolfScriptScheduler","description":"interface WolfScriptScheduler","name":"WolfScriptScheduler","qualifiedname":"io.wolfscript.scheduler.WolfScriptScheduler","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.plugin.Plugin","java.util.concurrent.Callable","java.util.concurrent.Future","java.util.List"],"properties":[{"name":"PendingTasks","modifier":"readonly","args":[],"description":"Get: Schedules a once off task to occur after a delay. <p> This task will be executed by the main server thread.","doc":{"param":["plugin Plugin that owns the task","task Task to be executed","delay Delay in server ticks before executing task","plugin Plugin that owns the task","task Task to be executed","delay Delay in server ticks before executing task","plugin Plugin that owns the task","task Task to be executed","plugin Plugin that owns the task","task Task to be executed","plugin Plugin that owns the task","task Task to be executed","delay Delay in server ticks before executing first repeat","period Period in server ticks of the task","plugin Plugin that owns the task","task Task to be executed","delay Delay in server ticks before executing first repeat","period Period in server ticks of the task","plugin Plugin that owns the task","task Task to be executed","delay Delay in server ticks before executing task","plugin Plugin that owns the task","task Task to be executed","plugin Plugin that owns the task","task Task to be executed","delay Delay in server ticks before executing first repeat","period Period in server ticks of the task","<T> The callable's return type","plugin Plugin that owns the task","task Task to be executed","taskId Id number of task to be removed /\n    public void cancelTask(int taskId);\n\n    /** Removes all tasks associated with a particular plugin from the scheduler.","plugin Owner of tasks to be removed /\n    public void cancelTasks(Plugin plugin);\n\n    /** Removes all tasks from the scheduler. /\n    public void cancelAllTasks();\n\n    /** Check if the task currently running. <p> A repeating task might not be running currently, but will be running in the future. A task that has finished, and does not repeat, will not be running ever again. <p> Explicitly, a task is running if there exists a thread for it, and that thread is alive.","taskId The task to check. <p>","taskId The task to check. <p>"],"return":["Task id number (-1 if scheduling failed) /\n    public int scheduleSyncDelayedTask(Plugin plugin, Runnable task, long delay);\n\n    /**","Task id number (-1 if scheduling failed) /\n    @Deprecated\n    public int scheduleSyncDelayedTask(Plugin plugin, WolfScriptRunnable task, long delay);\n\n    /** Schedules a once off task to occur as soon as possible. <p> This task will be executed by the main server thread.","Task id number (-1 if scheduling failed) /\n    public int scheduleSyncDelayedTask(Plugin plugin, Runnable task);\n\n    /**","Task id number (-1 if scheduling failed) /\n    @Deprecated\n    public int scheduleSyncDelayedTask(Plugin plugin, WolfScriptRunnable task);\n\n    /** Schedules a repeating task. <p> This task will be executed by the main server thread.","Task id number (-1 if scheduling failed) /\n    public int scheduleSyncRepeatingTask(Plugin plugin, Runnable task, long delay, long period);\n\n    /**","Task id number (-1 if scheduling failed) /\n    @Deprecated\n    public int scheduleSyncRepeatingTask(Plugin plugin, WolfScriptRunnable task, long delay, long period);\n\n    /** <b>Asynchronous tasks should never access any API in WolfScript. Great care should be taken to assure the thread-safety of asynchronous tasks.</b> <p> Schedules a once off task to occur after a delay. This task will be executed by a thread managed by the scheduler.","Task id number (-1 if scheduling failed)","Task id number (-1 if scheduling failed)","Task id number (-1 if scheduling failed)","Future Future object related to the task /\n    public <T> Future<T> callSyncMethod(Plugin plugin, Callable<T> task);\n\n    /** Removes task from scheduler.","If the task is currently running. /\n    public boolean isCurrentlyRunning(int taskId);\n\n    /** Check if the task queued to be run later. <p> If a repeating task is currently running, it might not be queued now but could be in the future. A task that is not queued, and not running, will not be queued again.","If the task is queued to be run. /\n    public boolean isQueued(int taskId);\n\n    /** Returns a list of all active workers. <p> This list contains asynch tasks that are being executed by separate threads.","Active workers /\n    public List<WolfScriptWorker> getActiveWorkers();\n\n    /** Returns a list of all pending tasks. The ordering of the tasks is not related to their order of execution.","Active workers"],"deprecated":["Use {@link WolfScriptRunnable#runTaskLater(Plugin, long)}","Use {@link WolfScriptRunnable#runTask(Plugin)}","Use {@link WolfScriptRunnable#runTaskTimer(Plugin, long, long)}","This name is misleading, as it does not schedule \"a sync\" task, but rather, \"an async\" task /\n    @Deprecated\n    public int scheduleAsyncDelayedTask(Plugin plugin, Runnable task, long delay);\n\n    /** <b>Asynchronous tasks should never access any API in WolfScript. Great care should be taken to assure the thread-safety of asynchronous tasks.</b> <p> Schedules a once off task to occur as soon as possible. This task will be executed by a thread managed by the scheduler.","This name is misleading, as it does not schedule \"a sync\" task, but rather, \"an async\" task /\n    @Deprecated\n    public int scheduleAsyncDelayedTask(Plugin plugin, Runnable task);\n\n    /** <b>Asynchronous tasks should never access any API in WolfScript. Great care should be taken to assure the thread-safety of asynchronous tasks.</b> <p> Schedules a repeating task. This task will be executed by a thread managed by the scheduler.","This name is misleading, as it does not schedule \"a sync\" task, but rather, \"an async\" task /\n    @Deprecated\n    public int scheduleAsyncRepeatingTask(Plugin plugin, Runnable task, long delay, long period);\n\n    /** Calls a method on the main thread and returns a Future object. This task will be executed by the main server thread. <ul> <li>Note: The Future.get() methods must NOT be called from the main thread. <li>Note2: There is at least an average of 10ms latency until the isDone() method returns true. </ul>"]},"return":"List<WolfScriptTask>","scope":"public","title":"Get: Schedules a once off task to occur after a delay."}]},"io.wolfscript.scheduler.WolfScriptTask":{"namespace":"io.wolfscript.scheduler","title":"Represents a task being executed by the scheduler","description":"Represents a task being executed by the scheduler","name":"WolfScriptTask","qualifiedname":"io.wolfscript.scheduler.WolfScriptTask","type":"interface","scope":"public","constructors":[],"methods":[{"title":"Returns the taskId for the task.","description":"Returns the taskId for the task.","doc":{"return":["Task id number /\n    public int getTaskId();\n\n    /** Returns the Plugin that owns this task.","The Plugin that owns the task /\n    public Plugin getOwner();\n\n    /** Returns true if the Task is a sync task.","true if the task is run by main thread /\n    public boolean isSync();\n\n    /** Will attempt to cancel this task."]},"scope":"public","return":"void","name":"cancel","args":[]}],"imports":["io.wolfscript.plugin.Plugin"],"properties":[]},"io.wolfscript.scheduler.WolfScriptWorker":{"namespace":"io.wolfscript.scheduler","title":"Represents a worker thread for the scheduler. This gives information about","description":"Represents a worker thread for the scheduler. This gives information about the Thread object for the task, owner of the task and the taskId. <p> Workers are used to execute async tasks.","name":"WolfScriptWorker","qualifiedname":"io.wolfscript.scheduler.WolfScriptWorker","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.plugin.Plugin"],"properties":[{"name":"Thread","modifier":"readonly","args":[],"description":"Get: Returns the taskId for the task being executed by this worker.","doc":{"return":["Task id number /\n    public int getTaskId();\n\n    /** Returns the Plugin that owns this task.","The Plugin that owns the task /\n    public Plugin getOwner();\n\n    /** Returns the thread for the worker.","The Thread object for the worker"]},"return":"Thread","scope":"public","title":"Get: Returns the taskId for the task being executed by this worker."}]},"io.wolfscript.scoreboard.0":{"namespace":"io.wolfscript","title":"Interfaces used to manage the client side score display system.","description":"Interfaces used to manage the client side score display system.","name":"scoreboard","qualifiedname":"io.wolfscript.scoreboard.0","packagename":"io.wolfscript.scoreboard","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.scoreboard.Criterias"],"interfaces":["io.wolfscript.scoreboard.Objective","io.wolfscript.scoreboard.Score","io.wolfscript.scoreboard.Scoreboard","io.wolfscript.scoreboard.ScoreboardManager","io.wolfscript.scoreboard.Team"],"enums":["io.wolfscript.scoreboard.DisplaySlot","io.wolfscript.scoreboard.NameTagVisibility"],"namespaces":[],"properties":[]},"io.wolfscript.scoreboard.Criterias":{"namespace":"io.wolfscript.scoreboard","title":"Criteria names which trigger an objective to be modified by actions in-game","description":"Criteria names which trigger an objective to be modified by actions in-game","name":"Criterias","qualifiedname":"io.wolfscript.scoreboard.Criterias","type":"class","scope":"public","constructors":[],"fields":[{"title":"HEALTH field","description":"HEALTH field","name":"HEALTH","scope":"public","type":"String","describe":"static final"},{"title":"PLAYER field","description":"PLAYER field","name":"PLAYER","scope":"public","type":"String","describe":"static final"},{"title":"TOTAL field","description":"TOTAL field","name":"TOTAL","scope":"public","type":"String","describe":"static final"},{"title":"DEATHS field","description":"DEATHS field","name":"DEATHS","scope":"public","type":"String","describe":"static final"}],"methods":[],"imports":[],"properties":[]},"io.wolfscript.scoreboard.DisplaySlot":{"namespace":"io.wolfscript.scoreboard","title":"Locations for displaying objectives to the player","description":"Locations for displaying objectives to the player","name":"DisplaySlot","qualifiedname":"io.wolfscript.scoreboard.DisplaySlot","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"BELOW_NAME","value":"","title":"BELOW_NAME DisplaySlot","description":"BELOW_NAME DisplaySlot"},{"code":"PLAYER_LIST","value":"","title":"PLAYER_LIST DisplaySlot","description":"PLAYER_LIST DisplaySlot"},{"code":"SIDEBAR","value":"","title":"SIDEBAR DisplaySlot","description":"SIDEBAR DisplaySlot"}],"properties":[]},"io.wolfscript.scoreboard.NameTagVisibility":{"namespace":"io.wolfscript.scoreboard","title":"enum NameTagVisibility","description":"enum NameTagVisibility","name":"NameTagVisibility","qualifiedname":"io.wolfscript.scoreboard.NameTagVisibility","type":"enum","scope":"public","constructors":[],"methods":[],"imports":[],"enum":[{"code":"HIDE_FOR_OWN_TEAM","value":"","title":"Always show the player's nametag.","description":"Always show the player's nametag. /\n    ALWAYS,\n    /** Never show the player's nametag. /\n    NEVER,\n    /** Show the player's nametag only to his own team members. /\n    HIDE_FOR_OTHER_TEAMS,\n    /** Show the player's nametag only to members of other teams.","doc":{}}],"properties":[]},"io.wolfscript.scoreboard.Objective":{"namespace":"io.wolfscript.scoreboard","title":"An objective on a scoreboard that can show scores specific to entries. This","description":"An objective on a scoreboard that can show scores specific to entries. This objective is only relevant to the display of the associated {@link #getScoreboard() scoreboard}.","name":"Objective","qualifiedname":"io.wolfscript.scoreboard.Objective","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.OfflinePlayer"],"properties":[]},"io.wolfscript.scoreboard.Score":{"namespace":"io.wolfscript.scoreboard","title":"A score entry for an {@link #getEntry() entry} on an {@link","description":"A score entry for an {@link #getEntry() entry} on an {@link #getObjective() objective}. Changing this will not affect any other objective or scoreboard.","name":"Score","qualifiedname":"io.wolfscript.scoreboard.Score","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.OfflinePlayer"],"properties":[]},"io.wolfscript.scoreboard.Scoreboard":{"namespace":"io.wolfscript.scoreboard","title":"A scoreboard","description":"A scoreboard","name":"Scoreboard","qualifiedname":"io.wolfscript.scoreboard.Scoreboard","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["java.util.Set","io.wolfscript.OfflinePlayer"],"properties":[]},"io.wolfscript.scoreboard.ScoreboardManager":{"namespace":"io.wolfscript.scoreboard","title":"Manager of Scoreboards","description":"Manager of Scoreboards","name":"ScoreboardManager","qualifiedname":"io.wolfscript.scoreboard.ScoreboardManager","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["java.lang.ref.WeakReference"],"properties":[]},"io.wolfscript.scoreboard.Team":{"namespace":"io.wolfscript.scoreboard","title":"A team on a scoreboard that has a common display theme and other","description":"A team on a scoreboard that has a common display theme and other properties. This team is only relevant to the display of the associated {@link #getScoreboard() scoreboard}.","name":"Team","qualifiedname":"io.wolfscript.scoreboard.Team","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["java.util.Set","io.wolfscript.OfflinePlayer","io.wolfscript.potion.PotionEffectType"],"properties":[]},"io.wolfscript.util.0":{"namespace":"io.wolfscript","title":"Multi and single purpose classes to facilitate various programmatic","description":"Multi and single purpose classes to facilitate various programmatic concepts.","name":"util","qualifiedname":"io.wolfscript.util.0","packagename":"io.wolfscript.util","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.util.BlockIterator","io.wolfscript.util.BlockVector","io.wolfscript.util.ChatPaginator","io.wolfscript.util.EulerAngle","io.wolfscript.util.FileUtil","io.wolfscript.util.Java15Compat","io.wolfscript.util.NumberConversions","io.wolfscript.util.StringUtil"],"interfaces":["io.wolfscript.util.CachedServerIcon"],"enums":[],"namespaces":["io.wolfscript.util.io.0","io.wolfscript.util.noise.0","io.wolfscript.util.permissions.0"],"properties":[]},"io.wolfscript.util.BlockIterator":{"namespace":"io.wolfscript.util","title":"This class performs ray tracing and iterates along blocks on a line","description":"This class performs ray tracing and iterates along blocks on a line","name":"BlockIterator","qualifiedname":"io.wolfscript.util.BlockIterator","type":"class","scope":"public","implements":["Iterator<Block"],"constructors":[],"methods":[{"title":"Constructs the BlockIterator","description":"Constructs the BlockIterator","doc":{"param":["world The world to use for tracing","start A Vector giving the initial location for the trace","direction A Vector pointing in the direction for the trace","yOffset The trace begins vertically offset from the start vector by this value","maxDistance This is the maximum distance in blocks for the trace. Setting this value above 140 may lead to problems with unloaded chunks. A value of 0 indicates no limit /\n    public BlockIterator(World world, Vector start, Vector direction, double yOffset, int maxDistance) {\n        this.world = world;\n        this.maxDistance = maxDistance;\n\n        Vector startClone = start.clone();\n\n        startClone.setY(startClone.getY() + yOffset);\n\n        currentDistance = 0;\n\n        double mainDirection = 0;\n        double secondDirection = 0;\n        double thirdDirection = 0;\n\n        double mainPosition = 0;\n        double secondPosition = 0;\n        double thirdPosition = 0;\n\n        Block startBlock = this.world.getBlockAt(floor(startClone.getX()), floor(startClone.getY()), floor(startClone.getZ()));\n\n        if (getXLength(direction) > mainDirection) {\n            mainFace = getXFace(direction);\n            mainDirection = getXLength(direction);\n            mainPosition = getXPosition(direction, startClone, startBlock);\n\n            secondFace = getYFace(direction);\n            secondDirection = getYLength(direction);\n            secondPosition = getYPosition(direction, startClone, startBlock);\n\n            thirdFace = getZFace(direction);\n            thirdDirection = getZLength(direction);\n            thirdPosition = getZPosition(direction, startClone, startBlock);\n        }\n        if (getYLength(direction) > mainDirection) {\n            mainFace = getYFace(direction);\n            mainDirection = getYLength(direction);\n            mainPosition = getYPosition(direction, startClone, startBlock);\n\n            secondFace = getZFace(direction);\n            secondDirection = getZLength(direction);\n            secondPosition = getZPosition(direction, startClone, startBlock);\n\n            thirdFace = getXFace(direction);\n            thirdDirection = getXLength(direction);\n            thirdPosition = getXPosition(direction, startClone, startBlock);\n        }\n        if (getZLength(direction) > mainDirection) {\n            mainFace = getZFace(direction);\n            mainDirection = getZLength(direction);\n            mainPosition = getZPosition(direction, startClone, startBlock);\n\n            secondFace = getXFace(direction);\n            secondDirection = getXLength(direction);\n            secondPosition = getXPosition(direction, startClone, startBlock);\n\n            thirdFace = getYFace(direction);\n            thirdDirection = getYLength(direction);\n            thirdPosition = getYPosition(direction, startClone, startBlock);\n        }\n\n        // trace line backwards to find intercept with plane perpendicular to the main axis\n\n        double d = mainPosition / mainDirection; // how far to hit face behind\n        double secondd = secondPosition - secondDirection d;\n        double thirdd = thirdPosition - thirdDirection d;\n\n        // Guarantee that the ray will pass though the start block.\n        // It is possible that it would miss due to rounding\n        // This should only move the ray by 1 grid position\n        secondError = floor(secondd gridSize);\n        secondStep = round(secondDirection / mainDirection gridSize);\n        thirdError = floor(thirdd gridSize);\n        thirdStep = round(thirdDirection / mainDirection gridSize);\n\n        if (secondError + secondStep <= 0) {\n            secondError = -secondStep + 1;\n        }\n\n        if (thirdError + thirdStep <= 0) {\n            thirdError = -thirdStep + 1;\n        }\n\n        Block lastBlock;\n\n        lastBlock = startBlock.getRelative(mainFace.getOppositeFace());\n\n        if (secondError < 0) {\n            secondError += gridSize;\n            lastBlock = lastBlock.getRelative(secondFace.getOppositeFace());\n        }\n\n        if (thirdError < 0) {\n            thirdError += gridSize;\n            lastBlock = lastBlock.getRelative(thirdFace.getOppositeFace());\n        }\n\n        // This means that when the variables are positive, it means that the coord=1 boundary has been crossed\n        secondError -= gridSize;\n        thirdError -= gridSize;\n\n        blockQueue[0] = lastBlock;\n        currentBlock = -1;\n\n        scan();\n\n        boolean startBlockFound = false;\n\n        for (int cnt = currentBlock; cnt >= 0; cnt--) {\n            if (blockEquals(blockQueue[cnt], startBlock)) {\n                currentBlock = cnt;\n                startBlockFound = true;\n                break;\n            }\n        }\n\n        if (!startBlockFound) {\n            throw new IllegalStateException(\"Start block missed in BlockIterator\");\n        }\n\n        // Calculate the number of planes passed to give max distance\n        maxDistanceInt = round(maxDistance / (Math.sqrt(mainDirection mainDirection + secondDirection secondDirection + thirdDirection thirdDirection) / mainDirection));\n\n    }\n\n    private boolean blockEquals(Block a, Block b) {\n        return a.getX() == b.getX() && a.getY() == b.getY() && a.getZ() == b.getZ();\n    }\n\n    private BlockFace getXFace(Vector direction) {\n        return ((direction.getX() > 0) ? BlockFace.EAST : BlockFace.WEST);\n    }\n\n    private BlockFace getYFace(Vector direction) {\n        return ((direction.getY() > 0) ? BlockFace.UP : BlockFace.DOWN);\n    }\n\n    private BlockFace getZFace(Vector direction) {\n        return ((direction.getZ() > 0) ? BlockFace.SOUTH : BlockFace.NORTH);\n    }\n\n    private double getXLength(Vector direction) {\n        return Math.abs(direction.getX());\n    }\n\n    private double getYLength(Vector direction) {\n        return Math.abs(direction.getY());\n    }\n\n    private double getZLength(Vector direction) {\n        return Math.abs(direction.getZ());\n    }\n\n    private double getPosition(double direction, double position, int blockPosition) {\n        return direction > 0 ? (position - blockPosition) : (blockPosition + 1 - position);\n    }\n\n    private double getXPosition(Vector direction, Vector position, Block block) {\n        return getPosition(direction.getX(), position.getX(), block.getX());\n    }\n\n    private double getYPosition(Vector direction, Vector position, Block block) {\n        return getPosition(direction.getY(), position.getY(), block.getY());\n    }\n\n    private double getZPosition(Vector direction, Vector position, Block block) {\n        return getPosition(direction.getZ(), position.getZ(), block.getZ());\n    }\n\n    /** Constructs the BlockIterator","loc The location for the start of the ray trace","yOffset The trace begins vertically offset from the start vector by this value","maxDistance This is the maximum distance in blocks for the trace. Setting this value above 140 may lead to problems with unloaded chunks. A value of 0 indicates no limit /\n    public BlockIterator(Location loc, double yOffset, int maxDistance) {\n        this(loc.getWorld(), loc.toVector(), loc.getDirection(), yOffset, maxDistance);\n    }\n\n    /** Constructs the BlockIterator.","loc The location for the start of the ray trace","yOffset The trace begins vertically offset from the start vector by this value /\n\n    public BlockIterator(Location loc, double yOffset) {\n        this(loc.getWorld(), loc.toVector(), loc.getDirection(), yOffset, 0);\n    }\n\n    /** Constructs the BlockIterator.","loc The location for the start of the ray trace /\n\n    public BlockIterator(Location loc) {\n        this(loc, 0D);\n    }\n\n    /** Constructs the BlockIterator.","entity Information from the entity is used to set up the trace","maxDistance This is the maximum distance in blocks for the trace. Setting this value above 140 may lead to problems with unloaded chunks. A value of 0 indicates no limit /\n\n    public BlockIterator(LivingEntity entity, int maxDistance) {\n        this(entity.getLocation(), entity.getEyeHeight(), maxDistance);\n    }\n\n    /** Constructs the BlockIterator.","entity Information from the entity is used to set up the trace /\n\n    public BlockIterator(LivingEntity entity) {\n        this(entity, 0);\n    }\n\n    /** Returns true if the iteration has more elements /\n\n    public boolean hasNext() {\n        scan();\n        return currentBlock != -1;\n    }\n\n    /** Returns the next Block in the trace"],"return":["the next Block in the trace"]},"scope":"public","return":"io.wolfscript.block.Block","name":"next","args":[]},{"title":"remove method","description":"remove method","scope":"public","return":"void","name":"remove","args":[]}],"imports":["io.wolfscript.util.NumberConversions.*","io.wolfscript.World","io.wolfscript.Location","io.wolfscript.block.Block","io.wolfscript.block.BlockFace","io.wolfscript.entity.LivingEntity","java.util.Iterator","java.util.NoSuchElementException"],"properties":[]},"io.wolfscript.util.BlockVector":{"namespace":"io.wolfscript.util","title":"A vector with a hash function that floors the X, Y, Z components, a la","description":"A vector with a hash function that floors the X, Y, Z components, a la BlockVector in WorldEdit. BlockVectors can be used in hash sets and hash maps. Be aware that BlockVectors are mutable, but it is important that BlockVectors are never changed once put into a hash set or hash map.","name":"BlockVector","qualifiedname":"io.wolfscript.util.BlockVector","type":"class","scope":"public","extends":["Vector"],"constructors":[],"methods":[{"title":"Construct the vector with all components as 0.","description":"Construct the vector with all components as 0. /\n    public BlockVector() {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n    }\n\n    /** Construct the vector with another vector.","doc":{"param":["vec The other vector. /\n    public BlockVector(Vector vec) {\n        this.x = vec.getX();\n        this.y = vec.getY();\n        this.z = vec.getZ();\n    }\n\n    /** Construct the vector with provided integer components.","x X component","y Y component","z Z component /\n    public BlockVector(int x, int y, int z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    /** Construct the vector with provided double components.","x X component","y Y component","z Z component /\n    public BlockVector(double x, double y, double z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    /** Construct the vector with provided float components.","x X component","y Y component","z Z component /\n    public BlockVector(float x, float y, float z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    /** Checks if another object is equivalent.","obj The other object"],"return":["whether the other object is equivalent /\n    @Override\n    public boolean equals(Object obj) {\n        if (!(obj instanceof BlockVector)) {\n            return false;\n        }\n        BlockVector other = (BlockVector) obj;\n\n        return (int) other.getX() == (int) this.x && (int) other.getY() == (int) this.y && (int) other.getZ() == (int) this.z;\n\n    }\n\n    /** Returns a hash code for this vector.","hash code /\n    @Override\n    public int hashCode() {\n        return (Integer.valueOf((int) x).hashCode() >> 13) ^ (Integer.valueOf((int) y).hashCode() >> 7) ^ Integer.valueOf((int) z).hashCode();\n    }\n\n    /** Get a new block vector.","vector"]},"scope":"public","return":"io.wolfscript.util.BlockVector","name":"clone","args":[]},{"title":"deserialize method","description":"deserialize method","scope":"public","describe":"static","return":"io.wolfscript.util.BlockVector","name":"deserialize","args":[]}],"imports":["java.util.Map","io.wolfscript.configuration.serialization.SerializableAs"],"properties":[]},"io.wolfscript.util.CachedServerIcon":{"namespace":"io.wolfscript.util","title":"This is a cached version of a server-icon. It's internal representation","description":"This is a cached version of a server-icon. It's internal representation and implementation is undefined.","doc":{"see":["Server#getServerIcon()","Server#loadServerIcon(java.awt.image.BufferedImage)","Server#loadServerIcon(java.io.File)","ServerListPingEvent#setServerIcon(CachedServerIcon)"]},"name":"CachedServerIcon","qualifiedname":"io.wolfscript.util.CachedServerIcon","type":"interface","scope":"public","constructors":[],"methods":[],"imports":["io.wolfscript.Server","io.wolfscript.event.server.ServerListPingEvent"],"properties":[]},"io.wolfscript.util.ChatPaginator":{"namespace":"io.wolfscript.util","title":"The ChatPaginator takes a raw string of arbitrary length and breaks it down","description":"The ChatPaginator takes a raw string of arbitrary length and breaks it down into an array of strings appropriate for displaying on the Minecraft player console.","name":"ChatPaginator","qualifiedname":"io.wolfscript.util.ChatPaginator","type":"class","scope":"public","constructors":[{"title":"ChatPage constructor","description":"ChatPage constructor","scope":"public","name":"ChatPage","args":[{"name":"pageNumber","type":"int","description":"pageNumber argument"},{"name":"totalPages","type":"int","description":"totalPages argument"}]}],"fields":[{"title":"GUARANTEED field","description":"GUARANTEED field","name":"GUARANTEED","scope":"public","type":"int","describe":"static final"},{"title":"AVERAGE field","description":"AVERAGE field","name":"AVERAGE","scope":"public","type":"int","describe":"static final"},{"title":"UNBOUNDED field","description":"UNBOUNDED field","name":"UNBOUNDED","scope":"public","type":"int","describe":"static final"},{"title":"OPEN field","description":"OPEN field","name":"OPEN","scope":"public","type":"int","describe":"static final"},{"title":"CLOSED field","description":"CLOSED field","name":"CLOSED","scope":"public","type":"int","describe":"static final"},{"title":"UNBOUNDED field","description":"UNBOUNDED field","name":"UNBOUNDED","scope":"public","type":"int","describe":"static final"}],"methods":[{"title":"Breaks a raw string up into pages using the default width and height.","description":"Breaks a raw string up into pages using the default width and height.","doc":{"return":["A single chat page. /\n    public static ChatPage paginate(String unpaginatedString, int pageNumber) {\n        return  paginate(unpaginatedString, pageNumber, GUARANTEED_NO_WRAP_CHAT_PAGE_WIDTH, CLOSED_CHAT_PAGE_HEIGHT);\n    }\n\n    /** Breaks a raw string up into pages using a provided width and height.","A single chat page. /\n    public static ChatPage paginate(String unpaginatedString, int pageNumber, int lineLength, int pageHeight) {\n        String[] lines = wordWrap(unpaginatedString, lineLength);\n\n        int totalPages = lines.length / pageHeight + (lines.length % pageHeight == 0 ? 0 : 1);\n        int actualPageNumber = pageNumber <= totalPages ? pageNumber : totalPages;\n\n        int from = (actualPageNumber - 1) pageHeight;\n        int to = from + pageHeight <= lines.length  ? from + pageHeight : lines.length;\n        String[] selectedLines = Java15Compat.Arrays_copyOfRange(lines, from, to);\n\n        return new ChatPage(selectedLines, actualPageNumber, totalPages);\n    }\n\n    /** Breaks a raw string up into a series of lines. Words are wrapped using spaces as decimeters and the newline character is respected.","An array of word-wrapped lines."]},"scope":"public","describe":"static","return":"String[]","name":"wordWrap","args":[{"name":"rawString","type":"String","description":"The raw string to break."},{"name":"lineLength","type":"int","description":"The desired width of a chat line."}]}],"imports":["io.wolfscript.ChatColor","java.util.LinkedList","java.util.List"],"properties":[{"name":"Lines","modifier":"readonly","args":[],"description":"Lines property","return":"String[]","scope":"public","title":"Lines property"},{"name":"PageNumber","modifier":"readonly","args":[],"description":"PageNumber property","return":"int","scope":"public","title":"PageNumber property"},{"name":"TotalPages","modifier":"readonly","args":[],"description":"TotalPages property","return":"int","scope":"public","title":"TotalPages property"}]},"io.wolfscript.util.EulerAngle":{"namespace":"io.wolfscript.util","title":"EulerAngle is used to represent 3 angles, one for each","description":"EulerAngle is used to represent 3 angles, one for each axis (x, y, z). The angles are in radians","name":"EulerAngle","qualifiedname":"io.wolfscript.util.EulerAngle","type":"class","scope":"public","constructors":[],"fields":[{"title":"A EulerAngle with every axis set to 0","description":"A EulerAngle with every axis set to 0","doc":{},"name":"ZERO","scope":"public","type":"io.wolfscript.util.EulerAngle","describe":"static final"}],"methods":[{"title":"equals method","description":"equals method","scope":"public","return":"boolean","name":"equals","args":[{"name":"o","type":"Object","description":"o argument"}]},{"title":"hashCode method","description":"hashCode method","scope":"public","return":"int","name":"hashCode","args":[]},{"title":"A EulerAngle with every axis set to 0","description":"A EulerAngle with every axis set to 0 /\n    public static final EulerAngle ZERO = new EulerAngle(0, 0, 0);\n\n    private final double x;\n    private final double y;\n    private final double z;\n\n    /** Creates a EularAngle with each axis set to the passed angle in radians","doc":{"return":["the angle in radians /\n    public double getX() {\n        return x;\n    }\n\n    /** Returns the angle on the y axis in radians","the angle in radians /\n    public double getY() {\n        return y;\n    }\n\n    /** Returns the angle on the z axis in radians","the angle in radians /\n    public double getZ() {\n        return z;\n    }\n\n    /** Return a EulerAngle which is the result of changing the x axis to the passed angle","the resultant EulerAngle /\n    public EulerAngle setX(double x) {\n        return new EulerAngle(x, y, z);\n    }\n\n    /** Return a EulerAngle which is the result of changing the y axis to the passed angle","the resultant EulerAngle /\n    public EulerAngle setY(double y) {\n        return new EulerAngle(x, y, z);\n    }\n\n    /** Return a EulerAngle which is the result of changing the z axis to the passed angle","the resultant EulerAngle /\n    public EulerAngle setZ(double z) {\n        return new EulerAngle(x, y, z);\n    }\n\n    /** Creates a new EulerAngle which is the result of adding the x, y, z components to this EulerAngle","the resultant EulerAngle /\n    public EulerAngle add(double x, double y, double z) {\n        return new EulerAngle(\n                this.x + x,\n                this.y + y,\n                this.z + z\n        );\n    }\n\n    /** Creates a new EulerAngle which is the result of subtracting the x, y, z components to this EulerAngle","the resultant EulerAngle"]},"scope":"public","return":"io.wolfscript.util.EulerAngle","name":"subtract","args":[{"name":"x","type":"double","description":"the angle for the x axis in radians"},{"name":"y","type":"double","description":"the angle for the x axis in radians"},{"name":"z","type":"double","description":"the angle for the x axis in radians /\n    public EulerAngle(double x, double y, double z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    /** Returns the angle on the x axis in radians"}]}],"imports":[],"properties":[]},"io.wolfscript.util.FileUtil":{"namespace":"io.wolfscript.util","title":"Class containing file utilities","description":"Class containing file utilities","name":"FileUtil","qualifiedname":"io.wolfscript.util.FileUtil","type":"class","scope":"public","constructors":[],"methods":[{"title":"This method copies one file to another location","description":"This method copies one file to another location","doc":{"return":["true on success"]},"scope":"public","describe":"static","return":"boolean","name":"copy","args":[{"name":"inFile","type":"java.io.File","description":"the source filename"},{"name":"outFile","type":"java.io.File","description":"the target filename"}]}],"imports":["java.nio.channels.FileChannel","java.io.File","java.io.FileInputStream","java.io.FileOutputStream","java.io.IOException"],"properties":[]},"io.wolfscript.util.Java15Compat":{"namespace":"io.wolfscript.util","title":"class Java15Compat","description":"class Java15Compat","name":"Java15Compat","qualifiedname":"io.wolfscript.util.Java15Compat","type":"class","scope":"public","constructors":[],"methods":[],"imports":["java.lang.reflect.Array"],"properties":[]},"io.wolfscript.util.NumberConversions":{"namespace":"io.wolfscript.util","title":"Utils for casting number types to other number types","description":"Utils for casting number types to other number types","name":"NumberConversions","qualifiedname":"io.wolfscript.util.NumberConversions","type":"class","scope":"public","describe":"final","constructors":[],"methods":[{"title":"toLong method","description":"toLong method","scope":"public","describe":"static","return":"long","name":"toLong","args":[{"name":"object","type":"Object","description":"object argument"}]},{"title":"checkFinite method","description":"checkFinite method","scope":"public","describe":"static","return":"void","name":"checkFinite","args":[{"name":"d","type":"float","description":"d argument"},{"name":"message","type":"String","description":"message argument"}]},{"title":"checkFinite method","description":"checkFinite method","scope":"public","describe":"static","return":"void","name":"checkFinite","args":[{"name":"d","type":"double","description":"d argument"},{"name":"message","type":"String","description":"message argument"}]},{"title":"ceil method","description":"ceil method","scope":"public","describe":"static","return":"int","name":"ceil","args":[{"name":"double","type":"final","description":"double argument"}]},{"title":"floor method","description":"floor method","scope":"public","describe":"static","return":"int","name":"floor","args":[{"name":"num","type":"double","description":"num argument"}]},{"title":"isFinite method","description":"isFinite method","scope":"public","describe":"static","return":"boolean","name":"isFinite","args":[{"name":"d","type":"double","description":"d argument"}]},{"title":"isFinite method","description":"isFinite method","scope":"public","describe":"static","return":"boolean","name":"isFinite","args":[{"name":"f","type":"float","description":"f argument"}]},{"title":"round method","description":"round method","scope":"public","describe":"static","return":"int","name":"round","args":[{"name":"num","type":"double","description":"num argument"}]},{"title":"square method","description":"square method","scope":"public","describe":"static","return":"double","name":"square","args":[{"name":"num","type":"double","description":"num argument"}]},{"title":"toByte method","description":"toByte method","scope":"public","describe":"static","return":"byte","name":"toByte","args":[{"name":"object","type":"Object","description":"object argument"}]},{"title":"toDouble method","description":"toDouble method","scope":"public","describe":"static","return":"double","name":"toDouble","args":[{"name":"object","type":"Object","description":"object argument"}]},{"title":"toFloat method","description":"toFloat method","scope":"public","describe":"static","return":"float","name":"toFloat","args":[{"name":"object","type":"Object","description":"object argument"}]},{"title":"toInt method","description":"toInt method","scope":"public","describe":"static","return":"int","name":"toInt","args":[{"name":"object","type":"Object","description":"object argument"}]},{"title":"toShort method","description":"toShort method","scope":"public","describe":"static","return":"short","name":"toShort","args":[{"name":"object","type":"Object","description":"object argument"}]}],"imports":[],"properties":[]},"io.wolfscript.util.StringUtil":{"namespace":"io.wolfscript.util","title":"class StringUtil","description":"class StringUtil","name":"StringUtil","qualifiedname":"io.wolfscript.util.StringUtil","type":"class","scope":"public","constructors":[],"methods":[],"imports":["java.util.Collection","org.apache.commons.lang.Validate"],"properties":[]},"io.wolfscript.util.io.0":{"namespace":"io.wolfscript.util","title":"Classes used to facilitate stream processing for specific WolfScript concepts.","description":"Classes used to facilitate stream processing for specific WolfScript concepts.","name":"io","qualifiedname":"io.wolfscript.util.io.0","packagename":"io.wolfscript.util.io","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.util.io.WolfScriptObjectInputStream","io.wolfscript.util.io.WolfScriptObjectOutputStream"],"interfaces":[],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.util.io.WolfScriptObjectInputStream":{"namespace":"io.wolfscript.util.io","title":"This class is designed to be used in conjunction with the {@link","description":"This class is designed to be used in conjunction with the {@link io.wolfscript.configuration.serialization.ConfigurationSerializable} API. It translates objects back to their original implementation after being serialized by {@link io.wolfscript.util.io.WolfScriptObjectInputStream}. <p> Behavior of implementations extending this class is not guaranteed across future versions.","name":"WolfScriptObjectInputStream","qualifiedname":"io.wolfscript.util.io.WolfScriptObjectInputStream","type":"class","scope":"public","extends":["java.io.ObjectInputStream"],"constructors":[],"methods":[],"imports":["java.io.IOException","java.io.InputStream","java.io.ObjectInputStream","io.wolfscript.configuration.serialization.ConfigurationSerializable","io.wolfscript.configuration.serialization.ConfigurationSerialization"],"properties":[]},"io.wolfscript.util.io.WolfScriptObjectOutputStream":{"namespace":"io.wolfscript.util.io","title":"This class is designed to be used in conjunction with the {@link","description":"This class is designed to be used in conjunction with the {@link io.wolfscript.configuration.serialization.ConfigurationSerializable} API. It translates objects to an internal implementation for later deserialization using {@link io.wolfscript.util.io.WolfScriptObjectInputStream}. <p> Behavior of implementations extending this class is not guaranteed across future versions.","name":"WolfScriptObjectOutputStream","qualifiedname":"io.wolfscript.util.io.WolfScriptObjectOutputStream","type":"class","scope":"public","extends":["java.io.ObjectOutputStream"],"constructors":[],"methods":[],"imports":["java.io.IOException","java.io.ObjectOutputStream","java.io.OutputStream","java.io.Serializable","io.wolfscript.configuration.serialization.ConfigurationSerializable"],"properties":[]},"io.wolfscript.util.noise.0":{"namespace":"io.wolfscript.util","title":"Classes dedicated to facilitating deterministic noise.","description":"Classes dedicated to facilitating deterministic noise.","name":"noise","qualifiedname":"io.wolfscript.util.noise.0","packagename":"io.wolfscript.util.noise","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.util.noise.NoiseGenerator","io.wolfscript.util.noise.OctaveGenerator","io.wolfscript.util.noise.PerlinNoiseGenerator","io.wolfscript.util.noise.PerlinOctaveGenerator","io.wolfscript.util.noise.SimplexNoiseGenerator","io.wolfscript.util.noise.SimplexOctaveGenerator"],"interfaces":[],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.util.noise.NoiseGenerator":{"namespace":"io.wolfscript.util.noise","title":"Base class for all noise generators","description":"Base class for all noise generators","name":"NoiseGenerator","qualifiedname":"io.wolfscript.util.noise.NoiseGenerator","type":"class","scope":"public","describe":"abstract","constructors":[],"methods":[{"title":"Speedy floor, faster than (int)Math.floor(x)","description":"Speedy floor, faster than (int)Math.floor(x)","doc":{"return":["Floored value /\n    public static int floor(double x) {\n        return x >= 0 ? (int) x : (int) x - 1;\n    }\n\n    protected static double fade(double x) {\n        return x x x (x (x 6 - 15) + 10);\n    }\n\n    protected static double lerp(double x, double y, double z) {\n        return y + x (z - y);\n    }\n\n    protected static double grad(int hash, double x, double y, double z) {\n        hash &= 15;\n        double u = hash < 8 ? x : y;\n        double v = hash < 4 ? y : hash == 12 || hash == 14 ? x : z;\n        return ((hash & 1) == 0 ? u : -u) + ((hash & 2) == 0 ? v : -v);\n    }\n\n    /** Computes and returns the 1D noise for the given coordinate in 1D space","Noise at given location, from range -1 to 1 /\n    public double noise(double x) {\n        return noise(x, 0, 0);\n    }\n\n    /** Computes and returns the 2D noise for the given coordinates in 2D space","Noise at given location, from range -1 to 1 /\n    public double noise(double x, double y) {\n        return noise(x, y, 0);\n    }\n\n    /** Computes and returns the 3D noise for the given coordinates in 3D space","Noise at given location, from range -1 to 1 /\n    public abstract double noise(double x, double y, double z);\n\n    /** Generates noise for the 1D coordinates using the specified number of octaves and parameters","Resulting noise /\n    public double noise(double x, int octaves, double frequency, double amplitude) {\n        return noise(x, 0, 0, octaves, frequency, amplitude);\n    }\n\n    /** Generates noise for the 1D coordinates using the specified number of octaves and parameters","Resulting noise /\n    public double noise(double x, int octaves, double frequency, double amplitude, boolean normalized) {\n        return noise(x, 0, 0, octaves, frequency, amplitude, normalized);\n    }\n\n    /** Generates noise for the 2D coordinates using the specified number of octaves and parameters","Resulting noise /\n    public double noise(double x, double y, int octaves, double frequency, double amplitude) {\n        return noise(x, y, 0, octaves, frequency, amplitude);\n    }\n\n    /** Generates noise for the 2D coordinates using the specified number of octaves and parameters","Resulting noise /\n    public double noise(double x, double y, int octaves, double frequency, double amplitude, boolean normalized) {\n        return noise(x, y, 0, octaves, frequency, amplitude, normalized);\n    }\n\n    /** Generates noise for the 3D coordinates using the specified number of octaves and parameters","Resulting noise /\n    public double noise(double x, double y, double z, int octaves, double frequency, double amplitude) {\n        return noise(x, y, z, octaves, frequency, amplitude, false);\n    }\n\n    /** Generates noise for the 3D coordinates using the specified number of octaves and parameters","Resulting noise"]},"scope":"public","return":"double","name":"noise","args":[{"name":"x","type":"double","description":"Value to floor"},{"name":"y","type":"double","description":"Y coordinate"},{"name":"z","type":"double","description":"Z coordinate"},{"name":"octaves","type":"int","description":"Number of octaves to use"},{"name":"frequency","type":"double","description":"How much to alter the frequency by each octave"},{"name":"amplitude","type":"double","description":"How much to alter the amplitude by each octave"},{"name":"normalized","type":"boolean","description":"If true, normalize the value to [-1, 1]"}]}],"imports":[],"properties":[]},"io.wolfscript.util.noise.OctaveGenerator":{"namespace":"io.wolfscript.util.noise","title":"Creates noise using unbiased octaves","description":"Creates noise using unbiased octaves","name":"OctaveGenerator","qualifiedname":"io.wolfscript.util.noise.OctaveGenerator","type":"class","scope":"public","describe":"abstract","constructors":[],"methods":[{"title":"Sets the scale used for all coordinates passed to this generator.","description":"Sets the scale used for all coordinates passed to this generator. <p> This is the equivalent to setting each coordinate to the specified value.","doc":{"return":["X scale /\n    public double getXScale() {\n        return xScale;\n    }\n\n    /** Sets the scale used for each X-coordinates passed","Y scale /\n    public double getYScale() {\n        return yScale;\n    }\n\n    /** Sets the scale used for each Y-coordinates passed","Z scale /\n    public double getZScale() {\n        return zScale;\n    }\n\n    /** Sets the scale used for each Z-coordinates passed","Clone of the individual octaves /\n    public NoiseGenerator[] getOctaves() {\n        return octaves.clone();\n    }\n\n    /** Generates noise for the 1D coordinates using the specified number of octaves and parameters","Resulting noise /\n    public double noise(double x, double frequency, double amplitude) {\n        return noise(x, 0, 0, frequency, amplitude);\n    }\n\n    /** Generates noise for the 1D coordinates using the specified number of octaves and parameters","Resulting noise /\n    public double noise(double x, double frequency, double amplitude, boolean normalized) {\n        return noise(x, 0, 0, frequency, amplitude, normalized);\n    }\n\n    /** Generates noise for the 2D coordinates using the specified number of octaves and parameters","Resulting noise /\n    public double noise(double x, double y, double frequency, double amplitude) {\n        return noise(x, y, 0, frequency, amplitude);\n    }\n\n    /** Generates noise for the 2D coordinates using the specified number of octaves and parameters","Resulting noise /\n    public double noise(double x, double y, double frequency, double amplitude, boolean normalized) {\n        return noise(x, y, 0, frequency, amplitude, normalized);\n    }\n\n    /** Generates noise for the 3D coordinates using the specified number of octaves and parameters","Resulting noise /\n    public double noise(double x, double y, double z, double frequency, double amplitude) {\n        return noise(x, y, z, frequency, amplitude, false);\n    }\n\n    /** Generates noise for the 3D coordinates using the specified number of octaves and parameters","Resulting noise"]},"scope":"public","return":"double","name":"noise","args":[{"name":"x","type":"double","description":"X-coordinate"},{"name":"y","type":"double","description":"Y-coordinate"},{"name":"z","type":"double","description":"Z-coordinate"},{"name":"frequency","type":"double","description":"How much to alter the frequency by each octave"},{"name":"amplitude","type":"double","description":"How much to alter the amplitude by each octave"},{"name":"normalized","type":"boolean","description":"If true, normalize the value to [-1, 1]"}]}],"imports":[],"properties":[]},"io.wolfscript.util.noise.PerlinNoiseGenerator":{"namespace":"io.wolfscript.util.noise","title":"Generates noise using the \"classic\" perlin generator","description":"Generates noise using the \"classic\" perlin generator","doc":{"see":["SimplexNoiseGenerator \"Improved\" and faster version with slighly different results"]},"name":"PerlinNoiseGenerator","qualifiedname":"io.wolfscript.util.noise.PerlinNoiseGenerator","type":"class","scope":"public","extends":["io.wolfscript.util.noise.NoiseGenerator"],"constructors":[],"methods":[{"title":"Creates a seeded perlin noise generator for the given world","description":"Creates a seeded perlin noise generator for the given world","doc":{"return":["Noise at given location, from range -1 to 1 /\n    public static double getNoise(double x) {\n        return instance.noise(x);\n    }\n\n    /** Computes and returns the 2D unseeded perlin noise for the given coordinates in 2D space","Noise at given location, from range -1 to 1 /\n    public static double getNoise(double x, double y) {\n        return instance.noise(x, y);\n    }\n\n    /** Computes and returns the 3D unseeded perlin noise for the given coordinates in 3D space","Noise at given location, from range -1 to 1 /\n    public static double getNoise(double x, double y, double z) {\n        return instance.noise(x, y, z);\n    }\n\n    /** Gets the singleton unseeded instance of this generator","Singleton /\n    public static PerlinNoiseGenerator getInstance() {\n        return instance;\n    }\n\n    @Override\n    public double noise(double x, double y, double z) {\n        x += offsetX;\n        y += offsetY;\n        z += offsetZ;\n\n        int floorX = floor(x);\n        int floorY = floor(y);\n        int floorZ = floor(z);\n\n        // Find unit cube containing the point\n        int X = floorX & 255;\n        int Y = floorY & 255;\n        int Z = floorZ & 255;\n\n        // Get relative xyz coordinates of the point within the cube\n        x -= floorX;\n        y -= floorY;\n        z -= floorZ;\n\n        // Compute fade curves for xyz\n        double fX = fade(x);\n        double fY = fade(y);\n        double fZ = fade(z);\n\n        // Hash coordinates of the cube corners\n        int A = perm[X] + Y;\n        int AA = perm[A] + Z;\n        int AB = perm[A + 1] + Z;\n        int B = perm[X + 1] + Y;\n        int BA = perm[B] + Z;\n        int BB = perm[B + 1] + Z;\n\n        return lerp(fZ, lerp(fY, lerp(fX, grad(perm[AA], x, y, z),\n                        grad(perm[BA], x - 1, y, z)),\n                    lerp(fX, grad(perm[AB], x, y - 1, z),\n                        grad(perm[BB], x - 1, y - 1, z))),\n                lerp(fY, lerp(fX, grad(perm[AA + 1], x, y, z - 1),\n                        grad(perm[BA + 1], x - 1, y, z - 1)),\n                    lerp(fX, grad(perm[AB + 1], x, y - 1, z - 1),\n                        grad(perm[BB + 1], x - 1, y - 1, z - 1))));\n    }\n\n    /** Generates noise for the 1D coordinates using the specified number of octaves and parameters","Resulting noise /\n    public static double getNoise(double x, int octaves, double frequency, double amplitude) {\n        return instance.noise(x, octaves, frequency, amplitude);\n    }\n\n    /** Generates noise for the 2D coordinates using the specified number of octaves and parameters","Resulting noise /\n    public static double getNoise(double x, double y, int octaves, double frequency, double amplitude) {\n        return instance.noise(x, y, octaves, frequency, amplitude);\n    }\n\n    /** Generates noise for the 3D coordinates using the specified number of octaves and parameters","Resulting noise"]},"scope":"public","describe":"static","return":"double","name":"getNoise","args":[{"name":"x","type":"double","description":"X coordinate"},{"name":"y","type":"double","description":"Y coordinate"},{"name":"z","type":"double","description":"Z coordinate"},{"name":"octaves","type":"int","description":"Number of octaves to use"},{"name":"frequency","type":"double","description":"How much to alter the frequency by each octave"},{"name":"amplitude","type":"double","description":"How much to alter the amplitude by each octave"}]}],"imports":["java.util.Random","io.wolfscript.World"],"properties":[]},"io.wolfscript.util.noise.PerlinOctaveGenerator":{"namespace":"io.wolfscript.util.noise","title":"Creates perlin noise through unbiased octaves","description":"Creates perlin noise through unbiased octaves","name":"PerlinOctaveGenerator","qualifiedname":"io.wolfscript.util.noise.PerlinOctaveGenerator","type":"class","scope":"public","extends":["io.wolfscript.util.noise.OctaveGenerator"],"constructors":[{"title":"Creates a perlin octave generator for the given world","description":"Creates a perlin octave generator for the given world","scope":"public","name":"PerlinOctaveGenerator","args":[{"name":"rand","type":"java.util.Random","description":"Random object to construct this generator for"},{"name":"octaves","type":"int","description":"Amount of octaves to create /\n    public PerlinOctaveGenerator(World world, int octaves) {\n        this(new Random(world.getSeed()), octaves);\n    }\n\n    /** Creates a perlin octave generator for the given world"}]}],"methods":[],"imports":["java.util.Random","io.wolfscript.World"],"properties":[]},"io.wolfscript.util.noise.SimplexNoiseGenerator":{"namespace":"io.wolfscript.util.noise","title":"Generates simplex-based noise.","description":"Generates simplex-based noise. <p> This is a modified version of the freely published version in the paper by Stefan Gustavson at <a href=\"http://staffwww.itn.liu.se/~stegu/simplexnoise/simplexnoise.pdf\"> http://staffwww.itn.liu.se/~stegu/simplexnoise/simplexnoise.pdf</a>","name":"SimplexNoiseGenerator","qualifiedname":"io.wolfscript.util.noise.SimplexNoiseGenerator","type":"class","scope":"public","extends":["io.wolfscript.util.noise.PerlinNoiseGenerator"],"constructors":[],"methods":[],"imports":["java.util.Random","io.wolfscript.World"],"properties":[{"name":"Instance","modifier":"readonly","args":[],"describe":"static","description":"Get: Creates a seeded simplex noise generator for the given world","doc":{"param":["world World to construct this generator for /\n    public SimplexNoiseGenerator(World world) {\n        this(new Random(world.getSeed()));\n    }\n\n    /** Creates a seeded simplex noise generator for the given seed","seed Seed to construct this generator for /\n    public SimplexNoiseGenerator(long seed) {\n        this(new Random(seed));\n    }\n\n    /** Creates a seeded simplex noise generator with the given Random","rand Random to construct with /\n    public SimplexNoiseGenerator(Random rand) {\n        super(rand);\n        offsetW = rand.nextDouble() 256;\n    }\n\n    protected static double dot(int g[], double x, double y) {\n        return g[0] x + g[1] y;\n    }\n\n    protected static double dot(int g[], double x, double y, double z) {\n        return g[0] x + g[1] y + g[2] z;\n    }\n\n    protected static double dot(int g[], double x, double y, double z, double w) {\n        return g[0] x + g[1] y + g[2] z + g[3] w;\n    }\n\n    /** Computes and returns the 1D unseeded simplex noise for the given coordinates in 1D space","xin X coordinate","xin X coordinate","yin Y coordinate","xin X coordinate","yin Y coordinate","zin Z coordinate","x X coordinate","y Y coordinate","z Z coordinate","w W coordinate","x X coordinate","y Y coordinate","z Z coordinate","w W coordinate"],"return":["Noise at given location, from range -1 to 1 /\n    public static double getNoise(double xin) {\n        return instance.noise(xin);\n    }\n\n    /** Computes and returns the 2D unseeded simplex noise for the given coordinates in 2D space","Noise at given location, from range -1 to 1 /\n    public static double getNoise(double xin, double yin) {\n        return instance.noise(xin, yin);\n    }\n\n    /** Computes and returns the 3D unseeded simplex noise for the given coordinates in 3D space","Noise at given location, from range -1 to 1 /\n    public static double getNoise(double xin, double yin, double zin) {\n        return instance.noise(xin, yin, zin);\n    }\n\n    /** Computes and returns the 4D simplex noise for the given coordinates in 4D space","Noise at given location, from range -1 to 1 /\n    public static double getNoise(double x, double y, double z, double w) {\n        return instance.noise(x, y, z, w);\n    }\n\n    @Override\n    public double noise(double xin, double yin, double zin) {\n        xin += offsetX;\n        yin += offsetY;\n        zin += offsetZ;\n\n        double n0, n1, n2, n3; // Noise contributions from the four corners\n\n        // Skew the input space to determine which simplex cell we're in\n        double s = (xin + yin + zin) F3; // Very nice and simple skew factor for 3D\n        int i = floor(xin + s);\n        int j = floor(yin + s);\n        int k = floor(zin + s);\n        double t = (i + j + k) G3;\n        double X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n        double Y0 = j - t;\n        double Z0 = k - t;\n        double x0 = xin - X0; // The x,y,z distances from the cell origin\n        double y0 = yin - Y0;\n        double z0 = zin - Z0;\n\n        // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n\n        // Determine which simplex we are in.\n        int i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n        int i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n        if (x0 >= y0) {\n            if (y0 >= z0) {\n                i1 = 1;\n                j1 = 0;\n                k1 = 0;\n                i2 = 1;\n                j2 = 1;\n                k2 = 0;\n            } // X Y Z order\n            else if (x0 >= z0) {\n                i1 = 1;\n                j1 = 0;\n                k1 = 0;\n                i2 = 1;\n                j2 = 0;\n                k2 = 1;\n            } // X Z Y order\n            else {\n                i1 = 0;\n                j1 = 0;\n                k1 = 1;\n                i2 = 1;\n                j2 = 0;\n                k2 = 1;\n            } // Z X Y order\n        } else { // x0<y0\n            if (y0 < z0) {\n                i1 = 0;\n                j1 = 0;\n                k1 = 1;\n                i2 = 0;\n                j2 = 1;\n                k2 = 1;\n            } // Z Y X order\n            else if (x0 < z0) {\n                i1 = 0;\n                j1 = 1;\n                k1 = 0;\n                i2 = 0;\n                j2 = 1;\n                k2 = 1;\n            } // Y Z X order\n            else {\n                i1 = 0;\n                j1 = 1;\n                k1 = 0;\n                i2 = 1;\n                j2 = 1;\n                k2 = 0;\n            } // Y X Z order\n        }\n\n        // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n        // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n        // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n        // c = 1/6.\n        double x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n        double y1 = y0 - j1 + G3;\n        double z1 = z0 - k1 + G3;\n        double x2 = x0 - i2 + 2.0 G3; // Offsets for third corner in (x,y,z) coords\n        double y2 = y0 - j2 + 2.0 G3;\n        double z2 = z0 - k2 + 2.0 G3;\n        double x3 = x0 - 1.0 + 3.0 G3; // Offsets for last corner in (x,y,z) coords\n        double y3 = y0 - 1.0 + 3.0 G3;\n        double z3 = z0 - 1.0 + 3.0 G3;\n\n        // Work out the hashed gradient indices of the four simplex corners\n        int ii = i & 255;\n        int jj = j & 255;\n        int kk = k & 255;\n        int gi0 = perm[ii + perm[jj + perm[kk]]] % 12;\n        int gi1 = perm[ii + i1 + perm[jj + j1 + perm[kk + k1]]] % 12;\n        int gi2 = perm[ii + i2 + perm[jj + j2 + perm[kk + k2]]] % 12;\n        int gi3 = perm[ii + 1 + perm[jj + 1 + perm[kk + 1]]] % 12;\n\n        // Calculate the contribution from the four corners\n        double t0 = 0.6 - x0 x0 - y0 y0 - z0 z0;\n        if (t0 < 0) {\n            n0 = 0.0;\n        } else {\n            t0 = t0;\n            n0 = t0 t0 dot(grad3[gi0], x0, y0, z0);\n        }\n\n        double t1 = 0.6 - x1 x1 - y1 y1 - z1 z1;\n        if (t1 < 0) {\n            n1 = 0.0;\n        } else {\n            t1 = t1;\n            n1 = t1 t1 dot(grad3[gi1], x1, y1, z1);\n        }\n\n        double t2 = 0.6 - x2 x2 - y2 y2 - z2 z2;\n        if (t2 < 0) {\n            n2 = 0.0;\n        } else {\n            t2 = t2;\n            n2 = t2 t2 dot(grad3[gi2], x2, y2, z2);\n        }\n\n        double t3 = 0.6 - x3 x3 - y3 y3 - z3 z3;\n        if (t3 < 0) {\n            n3 = 0.0;\n        } else {\n            t3 = t3;\n            n3 = t3 t3 dot(grad3[gi3], x3, y3, z3);\n        }\n\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to stay just inside [-1,1]\n        return 32.0 (n0 + n1 + n2 + n3);\n    }\n\n    @Override\n    public double noise(double xin, double yin) {\n        xin += offsetX;\n        yin += offsetY;\n\n        double n0, n1, n2; // Noise contributions from the three corners\n\n        // Skew the input space to determine which simplex cell we're in\n        double s = (xin + yin) F2; // Hairy factor for 2D\n        int i = floor(xin + s);\n        int j = floor(yin + s);\n        double t = (i + j) G2;\n        double X0 = i - t; // Unskew the cell origin back to (x,y) space\n        double Y0 = j - t;\n        double x0 = xin - X0; // The x,y distances from the cell origin\n        double y0 = yin - Y0;\n\n        // For the 2D case, the simplex shape is an equilateral triangle.\n\n        // Determine which simplex we are in.\n        int i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n        else {\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n\n        double x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        double y1 = y0 - j1 + G2;\n        double x2 = x0 + G22; // Offsets for last corner in (x,y) unskewed coords\n        double y2 = y0 + G22;\n\n        // Work out the hashed gradient indices of the three simplex corners\n        int ii = i & 255;\n        int jj = j & 255;\n        int gi0 = perm[ii + perm[jj]] % 12;\n        int gi1 = perm[ii + i1 + perm[jj + j1]] % 12;\n        int gi2 = perm[ii + 1 + perm[jj + 1]] % 12;\n\n        // Calculate the contribution from the three corners\n        double t0 = 0.5 - x0 x0 - y0 y0;\n        if (t0 < 0) {\n            n0 = 0.0;\n        } else {\n            t0 = t0;\n            n0 = t0 t0 dot(grad3[gi0], x0, y0); // (x,y) of grad3 used for 2D gradient\n        }\n\n        double t1 = 0.5 - x1 x1 - y1 y1;\n        if (t1 < 0) {\n            n1 = 0.0;\n        } else {\n            t1 = t1;\n            n1 = t1 t1 dot(grad3[gi1], x1, y1);\n        }\n\n        double t2 = 0.5 - x2 x2 - y2 y2;\n        if (t2 < 0) {\n            n2 = 0.0;\n        } else {\n            t2 = t2;\n            n2 = t2 t2 dot(grad3[gi2], x2, y2);\n        }\n\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70.0 (n0 + n1 + n2);\n    }\n\n    /** Computes and returns the 4D simplex noise for the given coordinates in 4D space","Noise at given location, from range -1 to 1 /\n    public double noise(double x, double y, double z, double w) {\n        x += offsetX;\n        y += offsetY;\n        z += offsetZ;\n        w += offsetW;\n\n        double n0, n1, n2, n3, n4; // Noise contributions from the five corners\n\n        // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n        double s = (x + y + z + w) F4; // Factor for 4D skewing\n        int i = floor(x + s);\n        int j = floor(y + s);\n        int k = floor(z + s);\n        int l = floor(w + s);\n\n        double t = (i + j + k + l) G4; // Factor for 4D unskewing\n        double X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n        double Y0 = j - t;\n        double Z0 = k - t;\n        double W0 = l - t;\n        double x0 = x - X0; // The x,y,z,w distances from the cell origin\n        double y0 = y - Y0;\n        double z0 = z - Z0;\n        double w0 = w - W0;\n\n        // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n        // To find out which of the 24 possible simplices we're in, we need to\n        // determine the magnitude ordering of x0, y0, z0 and w0.\n        // The method below is a good way of finding the ordering of x,y,z,w and\n        // then find the correct traversal order for the simplex we’re in.\n        // First, six pair-wise comparisons are performed between each possible pair\n        // of the four coordinates, and the results are used to add up binary bits\n        // for an integer index.\n        int c1 = (x0 > y0) ? 32 : 0;\n        int c2 = (x0 > z0) ? 16 : 0;\n        int c3 = (y0 > z0) ? 8 : 0;\n        int c4 = (x0 > w0) ? 4 : 0;\n        int c5 = (y0 > w0) ? 2 : 0;\n        int c6 = (z0 > w0) ? 1 : 0;\n        int c = c1 + c2 + c3 + c4 + c5 + c6;\n        int i1, j1, k1, l1; // The integer offsets for the second simplex corner\n        int i2, j2, k2, l2; // The integer offsets for the third simplex corner\n        int i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n\n        // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n        // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n        // impossible. Only the 24 indices which have non-zero entries make any sense.\n        // We use a thresholding to set the coordinates in turn from the largest magnitude.\n\n        // The number 3 in the \"simplex\" array is at the position of the largest coordinate.\n        i1 = simplex[c][0] >= 3 ? 1 : 0;\n        j1 = simplex[c][1] >= 3 ? 1 : 0;\n        k1 = simplex[c][2] >= 3 ? 1 : 0;\n        l1 = simplex[c][3] >= 3 ? 1 : 0;\n\n        // The number 2 in the \"simplex\" array is at the second largest coordinate.\n        i2 = simplex[c][0] >= 2 ? 1 : 0;\n        j2 = simplex[c][1] >= 2 ? 1 : 0;\n        k2 = simplex[c][2] >= 2 ? 1 : 0;\n        l2 = simplex[c][3] >= 2 ? 1 : 0;\n\n        // The number 1 in the \"simplex\" array is at the second smallest coordinate.\n        i3 = simplex[c][0] >= 1 ? 1 : 0;\n        j3 = simplex[c][1] >= 1 ? 1 : 0;\n        k3 = simplex[c][2] >= 1 ? 1 : 0;\n        l3 = simplex[c][3] >= 1 ? 1 : 0;\n\n        // The fifth corner has all coordinate offsets = 1, so no need to look that up.\n\n        double x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n        double y1 = y0 - j1 + G4;\n        double z1 = z0 - k1 + G4;\n        double w1 = w0 - l1 + G4;\n\n        double x2 = x0 - i2 + G42; // Offsets for third corner in (x,y,z,w) coords\n        double y2 = y0 - j2 + G42;\n        double z2 = z0 - k2 + G42;\n        double w2 = w0 - l2 + G42;\n\n        double x3 = x0 - i3 + G43; // Offsets for fourth corner in (x,y,z,w) coords\n        double y3 = y0 - j3 + G43;\n        double z3 = z0 - k3 + G43;\n        double w3 = w0 - l3 + G43;\n\n        double x4 = x0 + G44; // Offsets for last corner in (x,y,z,w) coords\n        double y4 = y0 + G44;\n        double z4 = z0 + G44;\n        double w4 = w0 + G44;\n\n        // Work out the hashed gradient indices of the five simplex corners\n        int ii = i & 255;\n        int jj = j & 255;\n        int kk = k & 255;\n        int ll = l & 255;\n\n        int gi0 = perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32;\n        int gi1 = perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32;\n        int gi2 = perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32;\n        int gi3 = perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32;\n        int gi4 = perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32;\n\n        // Calculate the contribution from the five corners\n        double t0 = 0.6 - x0 x0 - y0 y0 - z0 z0 - w0 w0;\n        if (t0 < 0) {\n            n0 = 0.0;\n        } else {\n            t0 = t0;\n            n0 = t0 t0 dot(grad4[gi0], x0, y0, z0, w0);\n        }\n\n        double t1 = 0.6 - x1 x1 - y1 y1 - z1 z1 - w1 w1;\n        if (t1 < 0) {\n            n1 = 0.0;\n        } else {\n            t1 = t1;\n            n1 = t1 t1 dot(grad4[gi1], x1, y1, z1, w1);\n        }\n\n        double t2 = 0.6 - x2 x2 - y2 y2 - z2 z2 - w2 w2;\n        if (t2 < 0) {\n            n2 = 0.0;\n        } else {\n            t2 = t2;\n            n2 = t2 t2 dot(grad4[gi2], x2, y2, z2, w2);\n        }\n\n        double t3 = 0.6 - x3 x3 - y3 y3 - z3 z3 - w3 w3;\n        if (t3 < 0) {\n            n3 = 0.0;\n        } else {\n            t3 = t3;\n            n3 = t3 t3 dot(grad4[gi3], x3, y3, z3, w3);\n        }\n\n        double t4 = 0.6 - x4 x4 - y4 y4 - z4 z4 - w4 w4;\n        if (t4 < 0) {\n            n4 = 0.0;\n        } else {\n            t4 = t4;\n            n4 = t4 t4 dot(grad4[gi4], x4, y4, z4, w4);\n        }\n\n        // Sum up and scale the result to cover the range [-1,1]\n        return 27.0 (n0 + n1 + n2 + n3 + n4);\n    }\n\n    /** Gets the singleton unseeded instance of this generator","Singleton"]},"return":"io.wolfscript.util.noise.SimplexNoiseGenerator","scope":"public","title":"Get: Creates a seeded simplex noise generator for the given world"}]},"io.wolfscript.util.noise.SimplexOctaveGenerator":{"namespace":"io.wolfscript.util.noise","title":"Creates simplex noise through unbiased octaves","description":"Creates simplex noise through unbiased octaves","name":"SimplexOctaveGenerator","qualifiedname":"io.wolfscript.util.noise.SimplexOctaveGenerator","type":"class","scope":"public","extends":["io.wolfscript.util.noise.OctaveGenerator"],"constructors":[],"methods":[{"title":"Creates a simplex octave generator for the given world","description":"Creates a simplex octave generator for the given world","doc":{"return":["W scale /\n    public double getWScale() {\n        return wScale;\n    }\n\n    /** Sets the scale used for each W-coordinates passed","Resulting noise /\n    public double noise(double x, double y, double z, double w, double frequency, double amplitude) {\n        return noise(x, y, z, w, frequency, amplitude, false);\n    }\n\n    /** Generates noise for the 3D coordinates using the specified number of octaves and parameters","Resulting noise"]},"scope":"public","return":"double","name":"noise","args":[{"name":"x","type":"double","description":"X-coordinate"},{"name":"y","type":"double","description":"Y-coordinate"},{"name":"z","type":"double","description":"Z-coordinate"},{"name":"w","type":"double","description":"W-coordinate"},{"name":"frequency","type":"double","description":"How much to alter the frequency by each octave"},{"name":"amplitude","type":"double","description":"How much to alter the amplitude by each octave"},{"name":"normalized","type":"boolean","description":"If true, normalize the value to [-1, 1]"}]}],"imports":["java.util.Random","io.wolfscript.World"],"properties":[]},"io.wolfscript.util.permissions.0":{"namespace":"io.wolfscript.util","title":"Static methods for miscellaneous {@link io.wolfscript.permissions.Permission","description":"Static methods for miscellaneous {@link io.wolfscript.permissions.Permission permission} functionality.","name":"permissions","qualifiedname":"io.wolfscript.util.permissions.0","packagename":"io.wolfscript.util.permissions","type":"namespace","constructors":[],"methods":[],"imports":[],"classes":["io.wolfscript.util.permissions.BroadcastPermissions","io.wolfscript.util.permissions.CommandPermissions","io.wolfscript.util.permissions.DefaultPermissions"],"interfaces":[],"enums":[],"namespaces":[],"properties":[]},"io.wolfscript.util.permissions.BroadcastPermissions":{"namespace":"io.wolfscript.util.permissions","title":"class BroadcastPermissions","description":"class BroadcastPermissions","name":"BroadcastPermissions","qualifiedname":"io.wolfscript.util.permissions.BroadcastPermissions","type":"class","scope":"public","describe":"final","constructors":[],"methods":[{"title":"registerPermissions method","description":"registerPermissions method","scope":"public","describe":"static","return":"io.wolfscript.permissions.Permission","name":"registerPermissions","args":[{"name":"parent","type":"io.wolfscript.permissions.Permission","description":"parent argument"}]}],"imports":["io.wolfscript.permissions.Permission","io.wolfscript.permissions.PermissionDefault"],"properties":[]},"io.wolfscript.util.permissions.CommandPermissions":{"namespace":"io.wolfscript.util.permissions","title":"class CommandPermissions","description":"class CommandPermissions","name":"CommandPermissions","qualifiedname":"io.wolfscript.util.permissions.CommandPermissions","type":"class","scope":"public","describe":"final","constructors":[],"methods":[{"title":"registerPermissions method","description":"registerPermissions method","scope":"public","describe":"static","return":"io.wolfscript.permissions.Permission","name":"registerPermissions","args":[{"name":"parent","type":"io.wolfscript.permissions.Permission","description":"parent argument"}]}],"imports":["io.wolfscript.permissions.Permission","io.wolfscript.permissions.PermissionDefault"],"properties":[]},"io.wolfscript.util.permissions.DefaultPermissions":{"namespace":"io.wolfscript.util.permissions","title":"class DefaultPermissions","description":"class DefaultPermissions","name":"DefaultPermissions","qualifiedname":"io.wolfscript.util.permissions.DefaultPermissions","type":"class","scope":"public","describe":"final","constructors":[],"methods":[{"title":"registerCorePermissions method","description":"registerCorePermissions method","scope":"public","describe":"static","return":"void","name":"registerCorePermissions","args":[]},{"title":"registerPermission method","description":"registerPermission method","scope":"public","describe":"static","return":"io.wolfscript.permissions.Permission","name":"registerPermission","args":[{"name":"perm","type":"io.wolfscript.permissions.Permission","description":"perm argument"}]},{"title":"registerPermission method","description":"registerPermission method","scope":"public","describe":"static","return":"io.wolfscript.permissions.Permission","name":"registerPermission","args":[{"name":"perm","type":"io.wolfscript.permissions.Permission","description":"perm argument"},{"name":"withLegacy","type":"boolean","description":"withLegacy argument"}]},{"title":"registerPermission method","description":"registerPermission method","scope":"public","describe":"static","return":"io.wolfscript.permissions.Permission","name":"registerPermission","args":[{"name":"perm","type":"io.wolfscript.permissions.Permission","description":"perm argument"},{"name":"parent","type":"io.wolfscript.permissions.Permission","description":"parent argument"}]},{"title":"registerPermission method","description":"registerPermission method","scope":"public","describe":"static","return":"io.wolfscript.permissions.Permission","name":"registerPermission","args":[{"name":"name","type":"String","description":"name argument"},{"name":"desc","type":"String","description":"desc argument"}]},{"title":"registerPermission method","description":"registerPermission method","scope":"public","describe":"static","return":"io.wolfscript.permissions.Permission","name":"registerPermission","args":[{"name":"name","type":"String","description":"name argument"},{"name":"desc","type":"String","description":"desc argument"},{"name":"parent","type":"io.wolfscript.permissions.Permission","description":"parent argument"}]},{"title":"registerPermission method","description":"registerPermission method","scope":"public","describe":"static","return":"io.wolfscript.permissions.Permission","name":"registerPermission","args":[{"name":"name","type":"String","description":"name argument"},{"name":"desc","type":"String","description":"desc argument"},{"name":"def","type":"io.wolfscript.permissions.PermissionDefault","description":"def argument"}]},{"title":"registerPermission method","description":"registerPermission method","scope":"public","describe":"static","return":"io.wolfscript.permissions.Permission","name":"registerPermission","args":[{"name":"name","type":"String","description":"name argument"},{"name":"desc","type":"String","description":"desc argument"},{"name":"def","type":"io.wolfscript.permissions.PermissionDefault","description":"def argument"},{"name":"parent","type":"io.wolfscript.permissions.Permission","description":"parent argument"}]},{"title":"registerPermission method","description":"registerPermission method","scope":"public","describe":"static","return":"io.wolfscript.permissions.Permission","name":"registerPermission","args":[{"name":"name","type":"String","description":"name argument"},{"name":"desc","type":"String","description":"desc argument"},{"name":"def","type":"io.wolfscript.permissions.PermissionDefault","description":"def argument"}]},{"title":"registerPermission method","description":"registerPermission method","scope":"public","describe":"static","return":"io.wolfscript.permissions.Permission","name":"registerPermission","args":[{"name":"name","type":"String","description":"name argument"},{"name":"desc","type":"String","description":"desc argument"},{"name":"def","type":"io.wolfscript.permissions.PermissionDefault","description":"def argument"},{"name":"parent","type":"io.wolfscript.permissions.Permission","description":"parent argument"}]}],"imports":["java.util.Map","io.wolfscript.WolfScript","io.wolfscript.permissions.Permission","io.wolfscript.permissions.PermissionDefault"],"properties":[]}}